// GUN DEFINITIONS

const combineStats = function (arr) {
  try {
    // Build a blank array of the appropiate length
    let data = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
    arr.forEach(function (component) {
      for (let i = 0; i < data.length; i++) {
        data[i] = data[i] * component[i];
      }
    });
    return {
      reload: data[0],
      recoil: data[1],
      shudder: data[2],
      size: data[3],
      health: data[4],
      damage: data[5],
      pen: data[6],
      speed: data[7],
      maxSpeed: data[8],
      range: data[9],
      density: data[10],
      spray: data[11],
      resist: data[12],
    };
  } catch (err) {
    console.log(err);
    console.log(JSON.stringify(arr));
  }
};
const skillSet = (() => {
  let config = require("../config.js");
  let skcnv = {
    rld: 0,
    pen: 1,
    str: 2,
    dam: 3,
    spd: 4,//bbbbeans

    shi: 5,
    atk: 6,
    hlt: 7,
    rgn: 8,
    mob: 9,
  };
  return (args) => {
    let skills = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    for (let s in args) {
      if (!args.hasOwnProperty(s)) continue;
      skills[skcnv[s]] = Math.round(config.MAX_SKILL * args[s]);
    }
    return skills;
  };
})();
//Gun Stats
const g = {
  // Gun info here
  bases: [2, 1, 1, 1, 1, 2, 1, 0.8, 1, 1, 1, 1, 1],
  trap: [36, 1, 0.1, 0.6, 0.85, 1.15, 0.25, 5, 1, 1.2, 1, 15, 3],
  barricade: [40, 1, 0.1, 0.6, 0.65, 0.75, 1, 5, 1, 1, 1, 15, 3],
  drone: [70, 0.25, 0.1, 0.6, 1.25, 2, 1, 2, 1, 1, 1, 0.1, 1.15],
  sunchip: [200, 0.25, 0.1, 0.8, 1.2, 1.2, 1.75, 1, 1, 1, 0.8, 1, 1],
  redrone: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  factory: [90, 1, 0.1, 0.8, 1.25, 1.15, 1, 1.75, 1, 1, 1, 0.1, 1],
  spawner: [90, 0.5, 0.1, 0.7, 1.7, 1, 1.75, 2, 1.2, 1, 1, 0.1, 0.8],
  basic: [18, 1.4, 0.1, 1, 1, 1, 1, 4.5, 1, 1, 1, 15, 1],
  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
  blank: [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1],
  heal: [0.8, 1, 1, 1, 1, -1, 1, 0.5, 1, 1, 1, 1, 1],
  sanctuary: [2.5, 1, 1, 1, 4, 6, 1, 0.9, 1, 0.75, 1, 1, 1],
  spam: [1.1, 1, 1, 1.05, 1, 1.1, 1, 0.9, 0.7, 1, 1, 1, 1.05],
  minion: [1.25, 1, 2, 1, 0.45, 0.45, 1.5, 1, 1, 0.75, 1, 2, 1],
  single: [1.1, 1, 1, 1, 1.05, 1, 1.05, 1.1, 1, 1, 1, 1, 1],
  sniper: [1.5, 1, 0.25, 1, 1.1, 1.1, 1.1, 1.5, 1.5, 1, 1.3, 0.2, 1.15],
  rifle: [1, 0.8, 1.5, 0.8, 0.85, 1.15, 1, 1, 1, 1, 1, 1.2, 1],
  assass: [2, 1, 0.25, 1, 1.5, 1, 1.15, 1.18, 1.18, 1, 1.3, 1, 1.3],
  hunter: [2, 0.7, 1, 0.95, 1, 0.9, 1, 1.1, 0.8, 1, 1.2, 1, 1.15],
  crossbow: [2, 0.4, 1, 0.95, 0.8, 0.8, 0.9, 1, 1, 1, 1, 0.3, 1],
  crossbow2: [2, 0.4, 1, 0.95, 1.1, 1.1, 1.2, 1.3, 1, 1, 1, 0.3, 1],
  hunter2: [1, 1, 1, 0.9, 2, 0.5, 1.5, 1, 1, 1, 1.2, 1, 1.1],
  preda: [1.5, 1, 1, 0.8, 1.5, 0.9, 1.2, 0.9, 0.9, 1, 1, 1, 1],
  snake: [0.4, 1, 4, 1, 1.5, 0.9, 1.2, 0.2, 0.35, 1, 3, 6, 0.5],
  sidewind: [1.5, 2, 1, 1, 1.5, 1.5, 1.2, 0.15, 0.5, 1, 1, 1, 1],
  snakeskin: [0.6, 1, 2, 1, 0.5, 0.5, 1, 1, 0.2, 0.4, 1, 5, 1],
  mach: [0.5, 2.5, 1.7, 1, 0.65, 0.7, 1.1, 1, 0.8, 1, 1, 2.5, 1],
  blaster: [1, 1.2, 1.25, 1.1, 1.5, 1, 0.6, 0.8, 0.33, 0.6, 0.5, 1.5, 0.8],
  chain: [1.25, 1.33, 0.8, 1, 0.8, 1, 1.1, 1.25, 1.25, 1.1, 1.25, 0.5, 1.1],
  mini: [1.25, 0.6, 1, 0.8, 0.65, 0.65, 1.3, 1.33, 1, 1, 1.25, 0.5, 1.1],
  stream: [1.1, 0.6, 1, 1, 0.8, 0.75, 1, 1.24, 1, 1, 1, 1, 1],
  shotgun: [6.5, 0.5, 1, 0.5, 0.5, 0.6, 1.25, 2, 0.6, 1, 1.2, 1.5, 1],
  flank: [0.9, 1.2, 1, 1, 1.02, 0.9, 0.9, 1, 0.85, 1, 1.2, 1, 1],
  tri: [1, 0.9, 1, 1, 1, 1, 1, 0.8, 0.8, 0.6, 1, 1, 1],
  trifront: [1, 0.2, 1, 1, 1, 1.1, 1.1, 1.3, 1.1, 1.5, 1, 1, 1],
  thruster: [1, 2.25, 2, 1, 0.75, 0.75, 0.7, 1, 1, 1, 1, 0.5, 0.7],
  auto: /*pure*/ [
    1.8, 0.75, 0.5, 0.8, 0.9, 0.6, 1.2, 1.1, 1, 0.8, 1.3, 1, 1.25,
  ],
  five: [1.15, 1, 1, 1, 0.85, 1, 1, 1.05, 1.05, 1.1, 2, 1, 1],
  autosnipe: [1, 1, 1, 1.4, 2, 1, 1, 1, 1, 1, 1, 1, 1],
  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
  pound: [2.25, 1.6, 1, 1, 1.75, 1.5, 1.25, 0.85, 0.8, 1.05, 1.5, 1, 1.15],
  missile: [1.5, 1.25, 1, 1, 1.25, 1, 1.25, 0.85, 0.8, 1.25, 1.5, 1, 1.15],
  destroy: [2.5, 3, 0.5, 1, 1.25, 1.15, 1.5, 0.8, 0.5, 1.1, 2, 1, 3],
  launcherbullet: [4, 0.8, 0.2, 0.8, 1.2, 1.5, 1.2, 0.1, 0.5, 1, 1, 0.5, 1],
  rocket: [1, 1.3, 1, 1, 0.2, 0.3, 0.2, 1.3, 1.3, 1, 1, 6, 1],
  twisterbullet: [5, 0.8, 0.2, 0.8, 1.5, 1.5, 1.2, 0.45, 0.5, 1.5, 1, 0.5, 1],
  anni: [0.85, 1.33, 1, 1.1, 1.25, 1.1, 1.05, 1, 1, 1, 1, 1, 1],
  bang: [6.5, 0.1, 1, 1, 999, 1, 1, 0.5, 1, 0.75, 1, 1, 1],
  hive: [1.5, 0.8, 1, 0.8, 0.7, 0.3, 1, 1, 0.6, 1, 1, 1, 1],
  arty: [1.2, 0.7, 1, 0.9, 1, 1, 1, 1.15, 1.1, 1, 1.5, 1, 1],
  mortar: [1.2, 1, 1, 1, 1.1, 1, 1, 0.8, 0.8, 1, 1, 1, 1],
  spreadmain: [3 / 4, 0.25, 0.5, 1, 0.5, 1, 1, 20 / 17, 4 / 3, 1, 1, 1, 1],
  spread: [1, 1, 0.8, 1, 1.1, 1.1, 1, 0.85, 0.85, 1, 1, 0.25, 1],
  skim: [1.33, 0.8, 0.8, 0.9, 1.3, 1.3, 1.6, 0.3, 0.3, 1, 1, 1, 1.1],
  twin: [1, 1, 0.9, 1, 1, 1.15, 0.9, 0.9, 1, 1, 1, 1.2, 1],
  bent: [1.1, 1, 0.8, 1, 1.25, 1, 0.8, 1, 1, 1, 0.8, 0.5, 1],
  triple: [1.2, 0.667, 0.9, 1, 1, 1, 1, 1, 1, 1, 1.1, 0.9, 0.95],
  cyclone: [1.25, 0.25, 1.3, 1.2, 2, 0.85, 1.5, 1.5, 1.2, 1, 1.5, 1.5, 1.2],
  dual: [4, 1, 0.8, 1, 1.5, 1.25, 1, 1.3, 1.1, 1, 1, 1, 1.25],
  double: [1, 1, 1, 1, 1, 0.9, 1, 1, 1, 1, 1, 1, 1],
  hewn: [1.25, 1.5, 1, 1, 0.9, 0.85, 1, 1, 0.9, 1, 1, 1, 1],
  puregunner: [
    1, 0.25, 1.5, 1.2, 1.35, 0.65, 1.25, 1.1, 0.65, 1, 1.5, 1.5, 1.2,
  ],
  machgun: [0.66, 0.25, 2, 1, 0.25, 1.25, 0.75, 0.8, 0.8, 1, 1, 2.5, 1],
  gunner: [1.25, 0.25, 1.5, 1.1, 0.8, 0.4, 1.35, 0.9, 0.8, 1, 1.5, 1.5, 1.2],
  bounce: [7.5, 65, 1, 1, 0.01, 0.01, 1, 0.01, 0.01, 0.01, 1, 1, 1],
  nail: [0.75, 2.5, 1, 0.8, 0.85, 1.5, 1.1, 1, 1, 1, 2, 1, 1],
  fast: [1, 1, 1, 1, 1, 1, 1, 1.2, 1, 1, 1, 1, 1],
  turret: [2, 1, 1, 1, 0.8, 0.6, 0.7, 1, 1, 1, 0.1, 1, 1],
  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
  bee: [1.25, 1, 1, 1.15, 1.25, 1.15, 1.5, 1, 1, 1, 1, 1, 1],
       swarm: [22.5, 0.25, 0.05, 0.4, 0.55, 0.55, 0.5, 4, 1, 1.25, 1, 5, 1],
     carrier: [1.35, 1, 1, 1, 1, 1, 1, 1.3, 1.7, 1.2, 0.6, 1, 1],
  battleShip: [1, 1, 1, 1, 1.25, 1.15, 1, 1, 0.85, 1, 1, 1, 1.1],
  hexatrap: [0.85, 1, 1, 1, 0.9, 0.9, 1, 0.8, 1, 0.85, 1, 1, 1],
  block: [
    1.3, 2.25, 0.1, 1.75, 1.25, 1.25, 1.25, 1.5, 1.5, 1.05, 0.25, 1, 1.75,
  ],
  construct: [1.4, 1.5, 1, 0.9, 1.25, 1.25, 1.25, 0.95, 1.1, 1, 1, 1, 1],
  boomerang: [1, 1, 1, 0.8, 1, 1, 1, 1, 1, 1.55, 1, 1, 1],
  over: [1.25, 1, 1, 0.85, 1, 1, 1, 1, 0.9, 1, 2, 1, 1],
  meta: [1.333, 1, 1, 1, 1, 0.667, 1, 1, 1, 1, 1, 1, 1],
  weak: [2, 1, 1, 1, 0.6, 0.6, 0.8, 0.5, 0.7, 0.25, 0.3, 1, 1],
  cheese: [1.8, 15, 1, 1.9, 3, 2.5, 1.5, 0.6, 0.6, 1, 1, 1, 1],
  babyfactory: [1.5, 1, 1, 1, 1, 1, 1, 1, 1.35, 1, 1, 1, 1],
  halfrecoil: [1, 0.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  morerecoil: [1, 1.15, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  muchmorerecoil: [1, 1.35, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  lotsmorrecoil: [1, 1.8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  tonsmorrecoil: [1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  doublereload: [0.25, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  morereload: [0.75, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  halfreload: [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  lessreload: [1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  threequartersrof: [1.333, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  morespeed: [1, 1, 1, 1, 1, 1, 1, 1.3, 1.3, 1, 1, 1, 1],
  bitlessspeed: [1, 1, 1, 1, 1, 1, 1, 0.93, 0.93, 1, 1, 1, 1],
  slow: [1, 1, 1, 1, 1, 1, 1, 0.7, 0.7, 1, 1, 1, 1],
  halfspeed: [1, 1, 1, 1, 1, 1, 1, 0.5, 0.5, 1, 1, 1, 1],
  notdense: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.1, 1, 1],
  halfrange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1],
  debuf: [1, 1, 1, 1, 0.65, 0.65, 1, 1, 1, 1, 1, 1, 1],
  fake: [1, 1, 1, 0.00001, 0.0001, 1, 1, 0.00001, 2, 0, 1, 1, 1],
  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
  op: [0.5, 1.3, 1, 1, 4, 4, 4, 3, 2, 1, 5, 2, 1],
  celestialSkim: [1.33, 0.8, 0.8, 0.9, 1.35, 0.8, 5, 0.3, 0.3, 4, 1, 1, 1.1],
  eternalSkim: [2, 0.8, 0.8, 0.4, 1.35, 2.1, 7, 0.3, 0.3, 2, 1, 1, 1.1],
  rightbang: [6.5, 0.1, 1, 1, 999, 1, 1, 0.5, 1, 0.75, 1, 1, 1],
  protectorswarm: [
    8, 0.000001, 1, 1.55, 10, 0.5, 1.2, 0.8, 1.1, 0.7, 180, 1, 10,
  ],
  morestrong: [1, 1, 1, 1, 1.4, 1.4, 1, 1, 1, 1, 1, 1, 1],
  lowpower: [1, 1, 2, 1, 0.5, 0.5, 0.7, 1, 1, 1, 1, 0.5, 0.7],
  power: [1, 1, 0.6, 1, 1, 1, 1.25, 2, 1.7, 1, 2, 0.5, 1.5],
  hghpower: [1, 1, 0.2, 1.4, 1.5, 1.5, 1.3, 1, 1, 1, 1, 1.5, 1.3],
  /*/     RELOAD   RECOIL   SHUDDER   SIZE   HEALTH   DAMAGE   PEN   SPEED   MAX  RANGE   DENSITY   SPRAY  RESIST /*/

  roadblock: [
    1, 1, 1, 2, 999999999, 1.25, 999999999, 0, 0, 999999999, 999999999, 1,
    999999999,
  ],
  uberStats: [1, 1, 1, 1, 99, 99, 99, 1, 1, 1, 1, 1, 1],
  uberSize: [1, 1, 1, 99, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  uberReload: [0.01, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  uberRecoil: [1, 99, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  uberShudder: [1, 1, 99, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  uberHealth: [1, 1, 1, 1, 99, 1, 1, 1, 1, 1, 1, 1, 1],
  uberDamage: [1, 1, 1, 1, 1, 99, 1, 1, 1, 1, 1, 1, 1],
  uberPenetration: [1, 1, 1, 1, 1, 1, 99, 1, 1, 1, 1, 1, 1],
  uberSpeed: [1, 1, 1, 1, 1, 1, 1, 99, 1, 1, 1, 1, 1],
  uberMax: [1, 1, 1, 1, 1, 1, 1, 1, 99, 1, 1, 1, 1],
  uberRange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 99, 1, 1, 1],
  uberDensity: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 99, 1, 1],
  uberSpray: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 99, 1],
  uberResistance: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 99],
  superStats: [0.1, 1, 1, 1, 2.5, 2.5, 2.5, 1, 1, 1, 1, 1, 1],
  superSize: [1, 1, 1, 2.5, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  superReload: [2.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  superRecoil: [1, 2.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  superShudder: [1, 1, 2.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  superHealth: [1, 1, 1, 1, 2.5, 1, 1, 1, 1, 1, 1, 1, 1],
  superDamage: [1, 1, 1, 1, 1, 2.5, 1, 1, 1, 1, 1, 1, 1],
  superPenetration: [1, 1, 1, 1, 1, 1, 2.5, 1, 1, 1, 1, 1, 1],
  superSpeed: [1, 1, 1, 1, 1, 1, 1, 2.5, 1, 1, 1, 1, 1],
  superMax: [1, 1, 1, 1, 1, 1, 1, 1, 2.5, 1, 1, 1, 1],
  superRange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 2.5, 1, 1, 1],
  superDensity: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2.5, 1, 1],
  superSpray: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2.5, 1],
  superResistance: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2.5],
  doubleStats: [0.5, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1],
  doubleSize: [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  doubleReload: [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  doubleRecoil: [1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  doubleShudder: [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  doubleHealth: [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1],
  doubleDamage: [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1],
  doublePenetration: [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1],
  doubleSpeed: [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1],
  doubleMax: [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1],
  doubleRange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1],
  doubleDensity: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1],
  doubleSpray: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1],
  doubleResistance: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],

  mediumStats: [0.2, 1, 1, 1, 1.75, 1.75, 1.75, 1, 1, 1, 1, 1, 1],
  mediumSize: [1, 1, 1, 1.75, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  mediumReload: [1.75, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  mediumRecoil: [1, 1.75, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  mediumShudder: [1, 1, 1.75, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  mediumHealth: [1, 1, 1, 1, 1.75, 1, 1, 1, 1, 1, 1, 1, 1],
  mediumDamage: [1, 1, 1, 1, 1, 1.75, 1, 1, 1, 1, 1, 1, 1],
  mediumPenetration: [1, 1, 1, 1, 1, 1, 1.75, 1, 1, 1, 1, 1, 1],
  mediumSpeed: [1, 1, 1, 1, 1, 1, 1, 1.75, 1, 1, 1, 1, 1],
  mediumMax: [1, 1, 1, 1, 1, 1, 1, 1, 1.75, 1, 1, 1, 1],
  mediumRange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1.75, 1, 1, 1],
  mediumDensity: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.75, 1, 1],
  mediumSpray: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.75, 1],
  mediumResistance: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.75],

  greaterStats: [0.25, 1, 1, 1, 1.5, 1.5, 1.5, 1, 1, 1, 1, 1, 1],
  greaterSize: [1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  greaterReload: [1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  greaterRecoil: [1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  greaterShudder: [1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  greaterHealth: [1, 1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1],
  greaterDamage: [1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1],
  greaterPenetration: [1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1],
  greaterSpeed: [1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1, 1],
  greaterMax: [1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1],
  greaterRange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1],
  greaterDensity: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1],
  greaterSpray: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1],
  greaterResistance: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5],
  greateStats: [0.25, 1, 1, 1, 1.5, 1.5, 1.5, 1, 1, 1, 1, 1, 1],
  greateSize: [1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  greateReload: [1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  greateRecoil: [1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  greateShudder: [1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  greateHealth: [1, 1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1],
  greateDamage: [1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1],
  bitmoreStats: [0.175, 1, 1, 1, 1.25, 1.25, 1.25, 1, 1, 1, 1, 1, 1],
  bitmoreSize: [1, 1, 1, 1.25, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  bitmoreReload: [1.25, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  bitmoreRecoil: [1, 1.25, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  bitmoreShudder: [1, 1, 1.25, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  bitmoreHealth: [1, 1, 1, 1, 1.25, 1, 1, 1, 1, 1, 1, 1, 1],
  bitmoreDamage: [1, 1, 1, 1, 1, 1.25, 1, 1, 1, 1, 1, 1, 1],
  bitmorePenetration: [1, 1, 1, 1, 1, 1, 1.25, 1, 1, 1, 1, 1, 1],
  bitmoreSpeed: [1, 1, 1, 1, 1, 1, 1, 1.25, 1, 1, 1, 1, 1],
  bitmoreMax: [1, 1, 1, 1, 1, 1, 1, 1, 1.25, 1, 1, 1, 1],
  bitmoreRange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1.25, 1, 1, 1],
  bitmoreDensity: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.25, 1, 1],
  bitmoreSpray: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.25, 1],
  bitmoreResistance: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.25],
  greatePenetration: [1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1],
  greateSpeed: [1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1, 1],
  greateMax: [1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1, 1],
  greateRange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1, 1],
  greateDensity: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1, 1],
  greateSpray: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 1],
  greateResistance: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5],
  bitLessStats: [1.25, 1, 1, 1, 0.9, 0.9, 0.9, 1, 1, 1, 1, 1, 1],
bitLessSize: [1, 1, 1, 0.9, 1, 1, 1, 1, 1, 1, 1, 1, 1],
bitLessReload: [0.9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
bitLessRecoil: [1, 0.9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
bitLessShudder: [1, 1, 0.9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
bitLessHealth: [1, 1, 1, 1, 0.9, 1, 1, 1, 1, 1, 1, 1, 1],
bitLessDamage: [1, 1, 1, 1, 1, 0.9, 1, 1, 1, 1, 1, 1, 1],
bitLessPenetration: [1, 1, 1, 1, 1, 1, 0.9, 1, 1, 1, 1, 1, 1],
bitLessSpeed: [1, 1, 1, 1, 1, 1, 1, 0.9, 1, 1, 1, 1, 1],
bitLessMax: [1, 1, 1, 1, 1, 1, 1, 1, 0.9, 1, 1, 1, 1],
bitLessRange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 0.9, 1, 1, 1],
bitLessDensity: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.9, 1, 1],
bitLessSpray: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.9, 1],
bitLessResistance: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.9],

  lesserStats: [1.25, 1, 1, 1, 0.75, 0.75, 0.75, 1, 1, 1, 1, 1, 1],
  lesserSize: [1, 1, 1, 0.75, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  lesserReload: [0.75, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  lesserRecoil: [1, 0.75, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  lesserShudder: [1, 1, 0.75, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  lesserHealth: [1, 1, 1, 1, 0.75, 1, 1, 1, 1, 1, 1, 1, 1],
  lesserDamage: [1, 1, 1, 1, 1, 0.75, 1, 1, 1, 1, 1, 1, 1],
  lesserPenetration: [1, 1, 1, 1, 1, 1, 0.75, 1, 1, 1, 1, 1, 1],
  lesserSpeed: [1, 1, 1, 1, 1, 1, 1, 0.75, 1, 1, 1, 1, 1],
  lesserMax: [1, 1, 1, 1, 1, 1, 1, 1, 0.75, 1, 1, 1, 1],
  lesserRange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 0.75, 1, 1, 1],
  lesserDensity: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.75, 1, 1],
  lesserSpray: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.75, 1],
  lesserResistance: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.75],
  halfStats: [2, 1, 1, 1, 0.5, 0.5, 0.5, 1, 1, 1, 1, 1, 1],
  halfSize: [1, 1, 1, 0.5, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  halfReload: [0.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  halfRecoil: [1, 0.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  halfShudder: [1, 1, 0.5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  halfHealth: [1, 1, 1, 1, 0.5, 1, 1, 1, 1, 1, 1, 1, 1],
  halfDamage: [1, 1, 1, 1, 1, 0.5, 1, 1, 1, 1, 1, 1, 1],
  halfPenetration: [1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1, 1, 1, 1],
  halfSpeed: [1, 1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1, 1, 1],
  halfMax: [1, 1, 1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1, 1],
  halfRange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1],
  halfDensity: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.5, 1, 1],
  halfSpray: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.5, 1],
  halfResistance: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.5],
  minorStats: [1.75, 1, 1, 1, 0.25, 0.25, 0.25, 1, 1, 1, 1, 1, 1],
  minorSize: [1, 1, 1, 0.25, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  minorReload: [0.25, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  minorRecoil: [1, 0.25, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  minorShudder: [1, 1, 0.25, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  minorHealth: [1, 1, 1, 1, 0.25, 1, 1, 1, 1, 1, 1, 1, 1],
  minorDamage: [1, 1, 1, 1, 1, 0.25, 1, 1, 1, 1, 1, 1, 1],
  minorPenetration: [1, 1, 1, 1, 1, 1, 0.25, 1, 1, 1, 1, 1, 1],
  minorSpeed: [1, 1, 1, 1, 1, 1, 1, 0.25, 1, 1, 1, 1, 1],
  minorMax: [1, 1, 1, 1, 1, 1, 1, 1, 0.25, 1, 1, 1, 1],
  minorRange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 0.25, 1, 1, 1],
  minorDensity: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.25, 1, 1],
  minorSpray: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.25, 1],
  minorResistance: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.25],
  weakRange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 0.0025, 1, 1, 1],
  //extra//
  NoRecoil: [1, 0.000000000000000000001, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  lowpower: [1, 1, 2, 1, 0.5, 0.5, 0.7, 1, 1, 1, 1, 0.5, 0.7],
  notdense: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.1, 1, 1],
  halfrange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1],
  lessrange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 0.75, 1, 1, 1],
  bitlessrange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 0.93, 1, 1, 1],
  doublerange: [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1],
  atmosphere: [100, 0.001, 0.001, 1, 1, 3, 1, 0.001, 1, 1, 1, 1, 1],
  size500: [1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  size200: [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  size150: [1, 1, 1, 1.5, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  size120: [1, 1, 1, 1.2, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  size1000: [1, 1, 1, 10, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  size300: [1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  size400: [1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  size90: [1, 1, 1, 0.9, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  size80: [1, 1, 1, 0.8, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  size60: [1, 1, 1, 0.6, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  blade: [0.4, 1, 1, 1, 1, 1, 1, 0.0001, 0.1, 0.1, 1, 1, 1],
  micro: [1, 1, 1, 0.4, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  small: [1, 1, 1, 0.8, 1, 1, 1, 1, 1, 1, 1, 1, 1],
  OMEGADamage: [
    1, 1, 1, 1, 1,
    100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    1, 1, 1, 1, 1, 1, 1,
  ],
  OMEGAeverything: [
    100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    1,
    100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    0,
    100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
  ],
  oneTimeUse: [
    99999999999999999999999999999999999, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
};
// Define an 'exclude' method to remove elements
Array.prototype.exclude = function (excludeItems) {
  return this.filter((item) => !excludeItems.includes(item));
};

const dfltskl = 9;
const dreadskl = 14;
const bladeskl = 10;

// NAMES
const statnames = {
  smasher: 1,
  drone: 2,
  necro: 3,
  swarm: 4,
  trap: 5,
  generic: 6,
  blade: 7,
};
const gunCalcNames = {
  default: 0,
  bullet: 1,
  drone: 2,
  swarm: 3,
  fixedReload: 4,
  thruster: 5,
  sustained: 6,
  necro: 7,
  trap: 8,
};

// ENTITY DEFINITIONS

exports.genericEntity = {
  NAME: "",
  LABEL: "Unknown Entity",
  TYPE: "unknown",
  DAMAGE_CLASS: 0, // 0: def, 1: food, 2: tanks, 3: obstacles
  DANGER: 0,
  VALUE: 0,
  LAYER: 1,
  SHAPE: 0,
  COLOR: 16,
  RANDOM: false,
  INDEPENDENT: false,
  CONTROLLERS: ["doNothing"],
  HAS_NO_MASTER: false,
  MOTION_TYPE: "glide", // motor, swarm, chase
  FACING_TYPE: "toTarget", // turnWithSpeed, withMotion, looseWithMotion, toTarget, looseToTarget
  DRAW_HEALTH: false,
  DRAW_SELF: true,
  DAMAGE_EFFECTS: true,
  RATEFFECTS: true,
  MOTION_EFFECTS: true,
  INTANGIBLE: false,
  ACCEPTS_SCORE: true,
  GIVE_KILL_MESSAGE: false,
  CAN_GO_OUTSIDE_ROOM: false,
  HITS_OWN_TYPE: "push", // hard, repel, never, hardWithBuffer
  DIE_AT_LOW_SPEED: false,
  DIE_AT_RANGE: false,
  SHOOT_ON_DEATH: false,
  CLEAR_ON_MASTER_UPGRADE: false,
  PERSISTS_AFTER_DEATH: false,
  VARIES_IN_SIZE: false,
  HEALTH_WITH_LEVEL: true,
  CAN_BE_ON_LEADERBOARD: true,
  HAS_NO_RECOIL: false,
  AUTO_UPGRADE: "none",
  BUFF_VS_FOOD: false,
  CRAVES_ATTENTION: false,
  NECRO: false,
  UPGRADES_TIER_0: [],
  UPGRADES_TIER_1: [],
  UPGRADES_TIER_2: [],
  UPGRADES_TIER_3: [],
  UPGRADES_TIER_4: [],
  UPGRADES_TIER_5: [],
  UPGRADES_TIER_6: [],
  UPGRADES_TIER_7: [],
  UPGRADES_TIER_8: [],
  UPGRADES_TIER_9: [],
  UPGRADES_TIER_10: [],
  UPGRADES_TIER_11: [],
  UPGRADES_TIER_12: [],
  UPGRADES_TIER_13: [],
  UPGRADES_TIER_14: [],
  UPGRADES_TIER_15: [],
  UPGRADES_TIER_GOD: [],
  SKILL: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  LEVEL: 0,
  SKILL_CAP: [
    dfltskl,
    dfltskl,
    dfltskl,
    dfltskl,
    dfltskl,
    dfltskl,
    dfltskl,
    dfltskl,
    dfltskl,
    dfltskl,
  ],
  GUNS: [],
  MAX_CHILDREN: 0,
  BODY: {
    ACCELERATION: 1,
    SPEED: 0,
    HEALTH: 1,
    RESIST: 1,
    SHIELD: 0,
    REGEN: 0,
    DAMAGE: 1,
    PENETRATION: 1,

    RANGE: 0,
    FOV: 1,
    DENSITY: 1,
    STEALTH: 1,
    PUSHABILITY: 4,
    HETERO: 2,
  },
  FOOD: {
    LEVEL: -1,
  },
};
const base = {
  ACCEL: 1.75,
  SPEED: 5,
  HEALTH: 25,
  DAMAGE: 2,
  RESIST: 1,
  PENETRATION: 1.75,
  SHIELD: 0.5,
  REGEN: 0.0025,
  FOV: 1,
  DENSITY: 5,
};
exports.genericTank = {
  LABEL: "Unknown Class",
  TYPE: "tank",
  DAMAGE_CLASS: 2,
  LAYER: 5,
  TARGETABLE: true,
  DANGER: 7,
  MOTION_TYPE: "motor",
  FACING_TYPE: "toTarget",
  SIZE: 12,
  ALLOW_PLATE: true,
  MAX_CHILDREN: 0,
  DAMAGE_EFFECTS: false,
  HITS_OWN_TYPE: "polyrepel",
  BODY: {
    // def
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED,
    HEALTH: base.HEALTH,
    DAMAGE: base.DAMAGE,
    PENETRATION: base.PENETRATION,
    SHIELD: base.SHIELD,
    REGEN: base.REGEN,
    FOV: base.FOV,
    DENSITY: base.DENSITY,
    PUSHABILITY: 3,
    HETERO: 3,
  },
  GUNS: [],
  TURRETS: [],
  GIVE_KILL_MESSAGE: true,
  DRAW_HEALTH: true,
};
exports.genericHeliTank = {
  LABEL: "Unknown Class",
  TYPE: "tank",
  DAMAGE_CLASS: 2,
  TARGETABLE: true,
  DANGER: 7,
  MOTION_TYPE: "drift",
  LAYER: 60,
  FACING_TYPE: "toTarget",
  COPY_LAYER: true,
  COPY_COLLISION: true,
  IGNORE_COLLISION: true,
  SIZE: 12,
  ALLOW_PLATE: true,
  MAX_CHILDREN: 0,
  DAMAGE_EFFECTS: false,
  HITS_OWN_TYPE: "polyrepel",
  BODY: {
    // def
    ACCELERATION: base.ACCEL * 0.85,
    SPEED: base.SPEED * 1.15,
    HEALTH: base.HEALTH / 1.5,
    DAMAGE: base.DAMAGE,
    PENETRATION: base.PENETRATION,
    SHIELD: base.SHIELD * 1.15,
    REGEN: base.REGEN,
    FOV: base.FOV,
    DENSITY: base.DENSITY,
    PUSHABILITY: 2,
    HETERO: 3,
  },
  GUNS: [],
  TURRETS: [],
  GIVE_KILL_MESSAGE: true,
  DRAW_HEALTH: true,
};
//Custom Entity Definitions
exports.Honored = {
  LABEL: "Honored Class",
  TYPE: "tank",
  DAMAGE_CLASS: 2,
  LAYER: 5,
  TARGETABLE: true,
  DANGER: 7,
  MOTION_TYPE: "motor",
  FACING_TYPE: "toTarget",
  SIZE: 17,
  ALLOW_PLATE: true,
  COLOR: 32,
  SHAPE: 6,
  MAX_CHILDREN: 0,
  DAMAGE_EFFECTS: false,
  HITS_OWN_TYPE: "polyrepel",
  BODY: {
    // def
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED,
    HEALTH: base.HEALTH * 15,
    DAMAGE: base.DAMAGE * 2,
    PENETRATION: base.PENETRATION * 2,
    SHIELD: base.SHIELD * 2,
    REGEN: base.REGEN * 2,
    FOV: base.FOV * 1.5,
    DENSITY: base.DENSITY * 2,
    PUSHABILITY: 2,
    HETERO: 3,
  },
  GUNS: [],
  TURRETS: [],
  GIVE_KILL_MESSAGE: true,
  DRAW_HEALTH: true,
};
exports.genericDefiner = {
  LABEL: "Unknown Class",
  TYPE: "tank",
  DAMAGE_CLASS: 2,
  LAYER: 5,
  TARGETABLE: true,
  DANGER: 7,
  MOTION_TYPE: "motor",
  FACING_TYPE: "toTarget",
  SIZE: 14,
  ALLOW_PLATE: true,
  MAX_CHILDREN: 0,
  DAMAGE_EFFECTS: false,
  HITS_OWN_TYPE: "polyrepel",
  BODY: {
    // def
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED * 0.9,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 2,
    PENETRATION: base.PENETRATION * 2,
    SHIELD: base.SHIELD * 2,
    REGEN: base.REGEN * 2,
    FOV: base.FOV * 1.5,
    DENSITY: base.DENSITY * 2,
    PUSHABILITY: 3,
    HETERO: 3,
  },
  GUNS: [],
  TURRETS: [],
  GIVE_KILL_MESSAGE: true,
  DRAW_HEALTH: true,
};
exports.genericRenewed = {
  LABEL: "Unknown Class",
  TYPE: "tank",
  DAMAGE_CLASS: 2,
  TARGETABLE: true,
  DANGER: 7,
  MOTION_TYPE: "motor",
  FACING_TYPE: "toTarget",
  SIZE: 17,
  MAX_CHILDREN: 0,
  DAMAGE_EFFECTS: false,
  HITS_OWN_TYPE: "polyrepel",
  BODY: {
    // def
    ACCELERATION: base.ACCEL * 0.8,
    SPEED: base.SPEED * 0.5,
    HEALTH: base.HEALTH * 2.5,
    DAMAGE: base.DAMAGE * 1.2,
    PENETRATION: base.PENETRATION,
    SHIELD: base.SHIELD,
    REGEN: base.REGEN,
    FOV: base.FOV,
    DENSITY: base.DENSITY,
    PUSHABILITY: 0,
    HETERO: 3,
  },
  GUNS: [],
  TURRETS: [],
  GIVE_KILL_MESSAGE: true,
  DRAW_HEALTH: true,
};
exports.genericSwarmProtector = {
  LABEL: "Unknown Swarm Protector",
  TYPE: "tank",
  SHAPE: 4,
  DAMAGE_CLASS: 2,
  TARGETABLE: true,
  COLOR: 13,
  DANGER: 7,
  MOTION_TYPE: "motor",
  FACING_TYPE: "toTarget",
  SIZE: 14,
  MAX_CHILDREN: 0,
  DAMAGE_EFFECTS: false,
  HITS_OWN_TYPE: "polyrepel",
  BODY: {
    // def
    ACCELERATION: base.ACCEL * 0.8,
    SPEED: base.SPEED * 0.8,
    HEALTH: base.HEALTH * 1.5,
    DAMAGE: base.DAMAGE,
    PENETRATION: base.PENETRATION,
    SHIELD: base.SHIELD * 0.5,
    REGEN: base.REGEN * 2,
    FOV: base.FOV * 1.2,
    DENSITY: base.DENSITY * 1.6,
    PUSHABILITY: 1.5,
    HETERO: 3,
  },
  GUNS: [],
  TURRETS: [],
  GIVE_KILL_MESSAGE: true,
  DRAW_HEALTH: true,
};
exports.genericSwarmKeeper = {
  LABEL: "Unknown Swarm Keeper",
  TYPE: "tank",
  SHAPE: 3,
  DAMAGE_CLASS: 2,
  TARGETABLE: true,
  COLOR: 2,
  DANGER: 7,
  MOTION_TYPE: "motor",
  FACING_TYPE: "toTarget",
  SIZE: 14,
  MAX_CHILDREN: 0,
  DAMAGE_EFFECTS: false,
  HITS_OWN_TYPE: "polyrepel",
  BODY: {
    // def
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED * 1.8,
    HEALTH: base.HEALTH * 0.8,
    DAMAGE: base.DAMAGE * 1.5,
    PENETRATION: base.PENETRATION,
    SHIELD: base.SHIELD * 0.5,
    REGEN: base.REGEN,
    FOV: base.FOV,
    DENSITY: base.DENSITY * 0.7,
    PUSHABILITY: 3.5,
    HETERO: 3,
  },
  GUNS: [],
  TURRETS: [],
  GIVE_KILL_MESSAGE: true,
  DRAW_HEALTH: true,
};
//Custom Polygons
exports.truncatedIcosahedron = {
  PARENT: [exports.genericTank],
  COLOR: 17,
  SHAPE: [
    [-0.15, -1],
    [0, -1.5],
    [0.5, 0],
    [0, 1.5],
    [-0.15, 1],
    [-0.25, 0.5],
    [-0.275, 0],
    [-0.25, -0.5],
  ],
};
exports.ballDecore = {
  PARENT: [exports.genericTank],
  COLOR: 17,
  SHAPE: 5,
  ACCEPTS_SCORE: false,
  GUNS: [
    {
      POSITION: [20, 0.1, 1, 10, 0, (360 / 5) * 1, 0],
    },
    {
      POSITION: [20, 0.1, 1, 10, 0, (360 / 5) * 2, 0],
    },
    {
      POSITION: [20, 0.1, 1, 10, 0, (360 / 5) * 3, 0],
    },
    {
      POSITION: [20, 0.1, 1, 10, 0, (360 / 5) * 4, 0],
    },
    {
      POSITION: [20, 0.1, 1, 10, 0, (360 / 5) * 5, 0],
    },
  ],
  TURRETS: [
    {
      //  SIZE     X       Y     ANGLE    ARC
      POSITION: [12, -30, 0, (360 / 5) * 1 + 360 / 5 / 2, 0, 1],
      TYPE: [exports.truncatedIcosahedron, { INDEPENDENT: false, COLOR: 17 }],
    },
    {
      //  SIZE     X       Y     ANGLE    ARC
      POSITION: [12, -30, 0, (360 / 5) * 2 + 360 / 5 / 2, 0, 1],
      TYPE: [exports.truncatedIcosahedron, { INDEPENDENT: false, COLOR: 17 }],
    },
    {
      //  SIZE     X       Y     ANGLE    ARC
      POSITION: [12, -30, 0, (360 / 5) * 3 + 360 / 5 / 2, 0, 1],
      TYPE: [exports.truncatedIcosahedron, { INDEPENDENT: false, COLOR: 17 }],
    },
    {
      //  SIZE     X       Y     ANGLE    ARC
      POSITION: [12, -30, 0, (360 / 5) * 4 + 360 / 5 / 2, 0, 1],
      TYPE: [exports.truncatedIcosahedron, { INDEPENDENT: false, COLOR: 17 }],
    },
    {
      //  SIZE     X       Y     ANGLE    ARC
      POSITION: [12, -30, 0, (360 / 5) * 5 + 360 / 5 / 2, 0, 1],
      TYPE: [exports.truncatedIcosahedron, { INDEPENDENT: false, COLOR: 17 }],
    },
  ],
};
exports.ball = {
  PARENT: [exports.genericTank],
  LABEL: "Ball",
  IS_BOSS: true,
  GIVE_KILL_MESSAGE: false,
  DANGER: 8,
  LEVEL: 45,
  SIZE: 16,
  FACING_TYPE: "turnWithSpeed",
  ACCEPTS_SCORE: false,
  CAN_BE_ON_LEADERBOARD: false,
  ALWAYS_EXISTS: true,
  BODY: {
    PUSHABILITY: 20,
    SHIELD: 10000,
    REGEN: 1000,
    HEALTH: 10000,
    DAMAGE: 30,
    RESIST: 1,
    PENETRATION: 3.5,
    DENSITY: 1,
    FOV: 3,
    ACCELERATION: 2,
    SPEED: 8,
  },
  MOTION_TYPE: "drift",
  COLOR: 6,
  TARGETABLE: true,
  DRAW_HEALTH: false,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [6, 0, 0, 0, 360, 1],
      TYPE: [exports.ballDecore, { INDEPENDENT: false, COLOR: 17 }],
    },
  ],
};
//AI Defenitions
exports.enemy = {
  PARENT: [exports.genericTank],
  IS_ENEMY: true,
  SIZE: 10,
  DANGER: 7,
  GIVE_KILL_MESSAGE: true,
  AI_TARGET: "leastDeadly",
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0, //bullet damage
    pen: 0, //bullet penetration
    str: 0, //bullet health
    atk: 0, //bullet speed
    spd: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  TARGETABLE: true,
  HITS_OWN_TYPE: "polyrepel",
  DRAW_HEALTH: true,
};
exports.meleeEnemy = {
  PARENT: [exports.enemy],
  CONTROLLERS: ["nearestDifferentMaster", "mapTargetToGoal"],
  AI: { NO_LEAD: true },
  MOTION_TYPE: "motor",
  FACING_TYPE: "smoothWithMotion",
  //ORBIT_DISTANCE: 0,
};
exports.rangedEnemy = {
  PARENT: [exports.enemy],
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  MOTION_TYPE: "motor",
  FACING_TYPE: "smoothToTarget",
};
exports.boss = {
  PARENT: [exports.enemy],
  IS_ENEMY: false,
  IS_BOSS: true,
  LAYER: 8,
  VALUE: 100000,
  DANGER: 9,
  SIZE: 20,
  GIVE_KILL_MESSAGE: true,
  BODY: {
    PENETRATION: 5,
  },
  ORBIT_DISTANCE: 250,
  AI_TARGET: "mostDeadly",
};
exports.meleeBoss = {
  PARENT: [exports.meleeEnemy, exports.boss],
};
exports.rangedBoss = {
  PARENT: [exports.rangedEnemy, exports.boss],
};
exports.food = {
  TYPE: "food",
  DAMAGE_CLASS: 1,
  LAYER: 6,
  VALUE: 9,
  CONTROLLERS: ["moveInCircles"],
  HITS_OWN_TYPE: "polyrepel",
  MOTION_TYPE: "drift",
  FACING_TYPE: "turnWithSpeed",
  VARIES_IN_SIZE: true,
  NO_REGEN: true,
  SPECIAL_EFFECT: "none",
  BODY: {
    STEALTH: 30,
    PUSHABILITY: 3.5,
    REGEN: 0,
  },
  DRAW_HEALTH: true,
  DAMAGE_EFFECTS: false,
  RATEFFECTS: false,
  HEALTH_WITH_LEVEL: false,
};

const basePolygonDamage = 1;
const basePolygonHealth = 2;
let smshskl = 12; //13;
const wepHealthFactor = 1;
const wepDamageFactor = 1;
//Bosses and Enemies
exports.neutralBoss = {
  PARENT: [exports.boss],
  TYPE: "neutralBoss",
  SIZE: 20,
  BODY: {
    FOV: 1.2,
    SPEED: 0.55,
    HEALTH: 300,
    SHIELD: base.SHIELD,
    REGEN: 0.05,
    DAMAGE: 9,
  },
  SKILL: skillSet({
    rld: 0.4, //reload
    dam: 0.8, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.9, //bullet health
    atk: 0, //bullet speed
    spd: 0.7, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BROADCAST_MESSAGE: "A visitor has left!",
};

exports.neutralMeleeBoss = {
  PARENT: [exports.meleeBoss, exports.neutralBoss],
};
exports.neutralRangedBoss = {
  PARENT: [exports.rangedBoss, exports.neutralBoss],
};
exports.fallenBoss = {
  PARENT: [exports.boss],
  TYPE: "fallenBoss",
  FACING_TYPE: "looseToTarget",
  VALUE: 150000,
  SIZE: 24,
  COLOR: 18,
  BODY: {
    FOV: 1.2,
    SPEED: 0.55,
    HEALTH: 750,
    SHIELD: base.SHIELD,
    REGEN: 0,
    DAMAGE: 7.5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.9, //bullet damage
    pen: 1, //bullet penetration
    str: 1.3, //bullet health
    atk: 0, //bullet speed
    spd: 0.4, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BROADCAST_MESSAGE: "An undead has been destroyed!",
};
exports.fallenMeleeBoss = {
  PARENT: [exports.meleeBoss, exports.fallenBoss],
};
exports.fallenRangedBoss = {
  PARENT: [exports.rangedBoss, exports.fallenBoss],
};
exports.highlordBoss = {
  PARENT: [exports.boss],
  TYPE: "highlordBoss",
  SIZE: 25,
  COLOR: 7,
  REGEN_TYPE: "shieldOnly",
  BODY: {
    FOV: 1.2,
    SPEED: 0.25,
    HEALTH: 400,
    SHIELD: base.SHIELD * 2,
    REGEN: 0.05,
    DAMAGE: 7.5,
  },
  SKILL: skillSet({
    rld: 0.7, //reload
    dam: 0.6, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.3, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BROADCAST_MESSAGE: "A mechanical boss has been broken!",
};
exports.highlordRangedBoss = {
  PARENT: [exports.rangedBoss, exports.highlordBoss],
};
exports.highlordEnemy = {
  PARENT: [exports.enemy],
  TYPE: "highlordEnemy",
  SIZE: 8,
  SHAPE: 8,
  COLOR: 7,
  REGEN_TYPE: "shieldOnly",
  BODY: {
    FOV: 1.2,
    SPEED: 3.25,
    HEALTH: 30,
    SHIELD: base.SHIELD * 2,
    REGEN: 0.05,
    DAMAGE: 7.5,
  },
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 0.4, //bullet damage
    pen: 0.4, //bullet penetration
    str: 0.4, //bullet health
    atk: 0, //bullet speed
    spd: 0.1, //body damage
    hlt: 0, //max health
    shi: 0.1, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
};
exports.guardianBoss = {
  PARENT: [exports.boss],
  TYPE: "guardianBoss",
  SIZE: 20,
  SKILL: skillSet({
    rld: 0.7, //reload
    dam: 0.5, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.2, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BROADCAST_MESSAGE: "A rebel boss has been defeated!",
};
exports.strongGuardianBoss = {
  PARENT: [exports.boss],
  TYPE: "guardianBoss",
  SIZE: 20,
  SKILL: skillSet({
    rld: 0.9, //reload
    dam: 0.5, //bullet damage
    pen: 0.9, //bullet penetration
    str: 0.9, //bullet health
    atk: 0, //body damage
    spd: 0.4, //bullet speed
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0.4, //movement speed
  }),
  BROADCAST_MESSAGE: "A rebel boss has been defeated!",
};
exports.guardianRangedBoss = {
  PARENT: [exports.rangedBoss, exports.guardianBoss],
};
exports.strongGuardianRangedBoss = {
  PARENT: [exports.rangedBoss, exports.strongGuardianBoss],
};
exports.voidlordBoss = {
  PARENT: [exports.boss],
  TYPE: "voidlordBoss",
  SIZE: 20,
  COLOR: 19,
  BODY: {
    FOV: 1.2,
    SPEED: 2,
    HEALTH: 500,
    SHIELD: base.SHIELD,
    REGEN: 0.5,
    DAMAGE: 8,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.8, //bullet damage
    pen: 0.7, //bullet penetration
    str: 1, //bullet health
    atk: 0, //bullet speed
    spd: 1, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BROADCAST_MESSAGE: "A rip in reality seals back up!",
};
exports.voidlordMeleeBoss = {
  PARENT: [exports.meleeBoss, exports.voidlordBoss],
};
exports.voidlordRangedBoss = {
  PARENT: [exports.rangedBoss, exports.voidlordBoss],
};
exports.aetherialBoss = {
  PARENT: [exports.boss],
  TYPE: "aetherianBoss",
  SIZE: 20,
  COLOR: 19,
  BODY: {
    FOV: 1.2,
    SPEED: 2,
    HEALTH: 5000,
    SHIELD: base.SHIELD,
    REGEN: 0.5,
    DAMAGE: 8,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.8, //bullet damage
    pen: 0.7, //bullet penetration
    str: 1, //bullet health
    atk: 0, //bullet speed
    spd: 1, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BROADCAST_MESSAGE: "A rip in reality seals back up!",
};
exports.aetherialMeleeBoss = {
  PARENT: [exports.meleeBoss, exports.voidlordBoss],
};
exports.aetherialRangedBoss = {
  PARENT: [exports.rangedBoss, exports.voidlordBoss],
};
//Bullet
exports.bullet = {
  LABEL: "Bullet",
  IS_PROJECTILE: true,
  TYPE: "bullet",
  ACCEPTS_SCORE: false,
  BODY: {
    PENETRATION: 0.75,
    SPEED: 3.75,
    RANGE: 90,
    DENSITY: 1.55,
    REGEN: -1,
    HEALTH: 0.175 * wepHealthFactor,
    DAMAGE: 2 * wepDamageFactor,
    PUSHABILITY: 1,
  },
  FACING_TYPE: "smoothWithMotion",
  CAN_GO_OUTSIDE_ROOM: true,
  HITS_OWN_TYPE: "never",
  // DIE_AT_LOW_SPEED: true,
  DIE_AT_RANGE: true,
};
//Special Entities
exports.autoPentagonGun = {
  PARENT: [exports.genericTank],
  SHAPE: 5,
  COLOR: 14,
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  INDEPENDENT: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.auto, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.genericSwarmSentinel = {
  LABEL: "Unknown Swarm Sentinel",
  TYPE: "tank",
  SHAPE: 5,
  DAMAGE_CLASS: 2,
  TARGETABLE: true,
  COLOR: 14,
  DANGER: 7,
  MOTION_TYPE: "motor",
  FACING_TYPE: "toTarget",
  SIZE: 14,
  MAX_CHILDREN: 0,
  DAMAGE_EFFECTS: false,
  HITS_OWN_TYPE: "polyrepel",
  BODY: {
    // def
    ACCELERATION: base.ACCEL * 0.8,
    SPEED: base.SPEED * 1.2,
    HEALTH: base.HEALTH * 0.8,
    DAMAGE: base.DAMAGE * 0.8,
    PENETRATION: base.PENETRATION * 0.8,
    SHIELD: base.SHIELD * 6,
    REGEN: base.REGEN * 0.8,
    FOV: base.FOV * 1.5,
    DENSITY: base.DENSITY * 0.5,
    PUSHABILITY: 0.85,
    HETERO: 3,
  },
  GUNS: [],
  TURRETS: [],
  GIVE_KILL_MESSAGE: true,
  DRAW_HEALTH: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 180, 360, 1],
      TYPE: [exports.autoPentagonGun],
    },
  ],
};
//Aura Symbols
exports.healerSymbol = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: [
    [0.3, -0.3],
    [1, -0.3],
    [1, 0.3],
    [0.3, 0.3],
    [0.3, 1],
    [-0.3, 1],
    [-0.3, 0.3],
    [-1, 0.3],
    [-1, -0.3],
    [-0.3, -0.3],
    [-0.3, -1],
    [0.3, -1],
  ],
  CONTROLLERS: ["onlyAcceptInArc"],
  COLOR: 32,
};
exports.healersphereSymbol = {
  PARENT: [exports.healerSymbol],
  CONTROLLERS: ["spin"],
  INDEPENDENT: true,
};
exports.repairSymbol = {
  PARENT: [exports.healerSymbol],
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  COLOR: 39,
};
exports.acidicFieldSymbol = {
  PARENT: [exports.genericTank],
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  INDEPENDENT: true,
  COLOR: 16,
  SHAPE: [
    [-0.598, -0.7796],
    [-0.3817, -0.9053],
    [0.9688, -0.1275],
    [0.97, 0.125],
    [-0.3732, 0.9116],
    [-0.593, 0.785],
  ],
};
exports.damageAuraSymbol = {
  PARENT: [exports.genericTank],
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  INDEPENDENT: true,
  COLOR: 0,
  SHAPE: [
    [-0.598, -0.7796],
    [-0.3817, -0.9053],
    [0.9688, -0.1275],
    [0.97, 0.125],
    [-0.3732, 0.9116],
    [-0.593, 0.785],
  ],
};
exports.droneAuraSymbol = {
  PARENT: [exports.genericTank],
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  INDEPENDENT: true,
  COLOR: 12,
  SHAPE: [
    [-0.598, -0.7796],
    [-0.3817, -0.9053],
    [0.9688, -0.1275],
    [0.97, 0.125],
    [-0.3732, 0.9116],
    [-0.593, 0.785],
  ],
};
exports.mettaSymbol = {
  PARENT: [exports.genericTank],
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  INDEPENDENT: true,
  COLOR: 30,
  SHAPE: [
    [-0.598, -0.7796],
    [-0.3817, -0.9053],
    [0.9688, -0.1275],
    [0.97, 0.125],
    [-0.3732, 0.9116],
    [-0.593, 0.785],
  ],
};
exports.mettaSymbol2 = {
  PARENT: [exports.genericTank],
  CONTROLLERS: ["spin"],
  SPIN_RATE: 0.085,
  INDEPENDENT: true,
  COLOR: 30,
  SHAPE: [
    [-0.598, -0.7796],
    [-0.3817, -0.9053],
    [0.9688, -0.1275],
    [0.97, 0.125],
    [-0.3732, 0.9116],
    [-0.593, 0.785],
  ],
};
exports.acidicFieldColor = {
  PARENT: [exports.genericTank],
  INDEPENDENT: true,
  COLOR: 11,
  SHAPE: 8,
};
exports.damageAuraColor = {
  PARENT: [exports.genericTank],
  INDEPENDENT: true,
  COLOR: 0,
  SHAPE: 0,
};
//Aura Colors
exports.PentaAuraColor = {
  PARENT: [exports.genericTank],
  INDEPENDENT: true,
  COLOR: 14,
  SHAPE: 5,
};
exports.healAuraColor = {
  PARENT: [exports.genericTank],
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  INDEPENDENT: true,
  COLOR: 12,
  SHAPE: 0,
};
exports.repairAuraColor = {
  PARENT: [exports.genericTank],
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  INDEPENDENT: true,
  COLOR: 39,
  SHAPE: 0,
};
exports.metta1AuraColor = {
  PARENT: [exports.genericTank],
  INDEPENDENT: true,
  COLOR: 30,
  SHAPE: 0,
};
exports.metta2AuraColor = {
  PARENT: [exports.genericTank],
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  INDEPENDENT: true,
  COLOR: 14,
  SHAPE: 0,
};
exports.metta3AuraColor = {
  PARENT: [exports.genericTank],
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  INDEPENDENT: true,
  COLOR: 4,
  SHAPE: 0,
};
//Polygon Symbols
exports.policeSquareSymbol1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 4,
  CONTROLLERS: ["onlyAcceptInArc"],
  COLOR: 22,
};
exports.redsquar = {
  PARENT: [exports.policeSquareSymbol],
  COLOR: 32,
};
exports.policeSquareSymbol2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 4,
  CONTROLLERS: ["onlyAcceptInArc"],
  COLOR: 24,
};
exports.policeTriangleSymbol1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: [
    [-1, -1],
    [0.4, -1],
    [1, 0],
    [0.4, 1],
    [-1, 1],
  ],
  CONTROLLERS: ["onlyAcceptInArc"],
  COLOR: 22,
};
exports.policeTriangleSymbol2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: [
    [-1, -0],
    [-0.4, -1],
    [1, -1],
    [1, 1],
    [-0.4, 1],
  ],
  CONTROLLERS: ["onlyAcceptInArc"],
  COLOR: 24,
};
//Tank Symbols
exports.grenadierSymbol = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 7,
  CONTROLLERS: ["onlyAcceptInArc"],
  COLOR: 16,
};
exports.breakerSymbol = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: -5,
  CONTROLLERS: ["onlyAcceptInArc"],
  COLOR: 16,
};
exports.bursterSymbol = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: -6,
  CONTROLLERS: ["onlyAcceptInArc"],
  COLOR: 16,
};
exports.driveSymbol = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 4,
  CONTROLLERS: ["onlyAcceptInArc"],
  COLOR: 16,
};
exports.whirlSymbol = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 0,
  CONTROLLERS: ["onlyAcceptInArc"],
  COLOR: 16,
};
exports.superDriveSymbol = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 5,
  CONTROLLERS: ["onlyAcceptInArc"],
  COLOR: 16,
};
exports.assemblerSymbol = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: -4,
  CONTROLLERS: ["onlyAcceptInArc"],
  COLOR: 17,
};
exports.flingSymbol = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: -3,
  CONTROLLERS: ["onlyAcceptInArc"],
  COLOR: 16,
};
exports.slingSymbol = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: -4,
  CONTROLLERS: ["onlyAcceptInArc"],
  COLOR: 16,
};
exports.starBody = {
  LABEL: "",
  CONTROLLERS: ["spin"],
  COLOR: 9,
  SHAPE: [
    [-0.4, 1],
    [-0.25, 0.25],
    [-1, 0.4],
    [-1.5, 0],
    [-1, -0.4],
    [-0.25, -0.25],
    [-0.4, -1],
    [0, -1.5],
    [0.4, -1],
    [0.25, -0.25],
    [1, -0.4],
    [1.5, 0],
    [1, 0.4],
    [0.25, 0.25],
    [0.4, 1],
    [0, 1.5],
  ],
  INDEPENDENT: true,
};
exports.starBody2 = {
  LABEL: "",
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  COLOR: 9,
  SHAPE: [
    [-0.4, 1],
    [-0.25, 0.25],
    [-1, 0.4],
    [-1.5, 0],
    [-1, -0.4],
    [-0.25, -0.25],
    [-0.4, -1],
    [0, -1.5],
    [0.4, -1],
    [0.25, -0.25],
    [1, -0.4],
    [1.5, 0],
    [1, 0.4],
    [0.25, 0.25],
    [0.4, 1],
    [0, 1.5],
  ],
  INDEPENDENT: true,
};
exports.starBody3 = {
  LABEL: "",
  CONTROLLERS: ["spin"],
  COLOR: 9,
  SHAPE: [
    [-0.4, 1],
    [-0.15, 0.15],
    [-1, 0.4],
    [-0.5, 0],
    [-1, -0.4],
    [-0.15, -0.15],
    [-0.4, -1],
    [0, -0.5],
    [0.4, -1],
    [0.16, -0.15],
    [1, -0.4],
    [0.5, 0],
    [1, 0.4],
    [0.15, 0.15],
    [0.4, 1],
    [0, 0.5],
  ],
  INDEPENDENT: true,
};
exports.shelledBody = {
  LABEL: "",
  CONTROLLERS: ["spin"],
  COLOR: 9,
  SHAPE: [
    [0.2, -1.2],
    [1, -0.7],
    [1.2, 0],
    [1, 0.7],
    [0.2, 1.2],
  ],
  INDEPENDENT: true,
};
//Definer saws
exports.pentagonBody = {
  LABEL: "",
  COLOR: 9,
  SHAPE: 5,
  INDEPENDENT: true,
};
exports.pentagonBody2 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: 5,
  INDEPENDENT: true,
};
exports.pentagonBody3 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: -5,
  INDEPENDENT: true,
};
exports.pentagonBody3 = {
  LABEL: "",
  COLOR: 9,
  CONTROLLERS: ["spin"],
  SHAPE: 5,
  INDEPENDENT: true,
};
exports.mechanicalVoidBody1 = {
  LABEL: "",
  COLOR: 19,
  SHAPE: [
    [0.354, -0.61],
    [0.774, -1.02],
    [-0.786, -0.83],
    [-1.14, -0.166],
    [-0.35, -0.546],
  ],
  INDEPENDENT: true,
};
exports.mechanicalVoidBody2 = {
  LABEL: "",
  COLOR: 19,
  SHAPE: [
    [0.354, 0.61],
    [0.774, 1.02],
    [-0.786, 0.83],
    [-1.14, 0.166],
    [-0.35, 0.546],
  ],
  INDEPENDENT: true,
};
exports.ultimateMechanicalBody1 = {
  LABEL: "",
  COLOR: 7,
  SHAPE: [
    [0.354, -0.61],
    [0.774, -1.02],
    [-0.786, -0.83],
    [-1.14, -0.166],
    [-0.35, -0.546],
  ],
  INDEPENDENT: true,
};
exports.ultimateMechanicalBody2 = {
  LABEL: "",
  COLOR: 7,
  SHAPE: [
    [0.354, 0.61],
    [0.774, 1.02],
    [-0.786, 0.83],
    [-1.14, 0.166],
    [-0.35, 0.546],
  ],
  INDEPENDENT: true,
};
exports.ultimateMechanicalBody3 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: [
    [1, -0.5],
    [1, 0.5],
    [0.2, 0.2],
    [-1.5, 0],
    [0.2, -0.2],
  ],
  INDEPENDENT: true,
};
exports.ultimateMechanicalBody4 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: [
    [1, -0.5],
    [1, 0.5],
    [-0.6, 0.8],
    [-1.5, 0],
    [-0.6, -0.8],
  ],
  INDEPENDENT: true,
};
exports.shrineBody = {
  LABEL: "",
  CONTROLLERS: ["spin"],
  SHAPE: [
    [1, -0],
    [0, -1],
    [-1, 1],
  ],
  INDEPENDENT: true,
};
exports.crystalBody = {
  LABEL: "",
  COLOR: 9,
  SHAPE: -3,
  INDEPENDENT: true,
};
exports.propeller1 = {
  LABEL: "",
  FACING_TYPE: "turnWithSpeed",
  CONTROLLERS: ["spin"],
  SPIN_RATE: -3,
  INDEPENDENT: true,
  AI: { NO_LEAD: true },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [50, 10, 0, 0, 0, 120, 0],
    },
    {
      POSITION: [50, 10, 0, 0, 0, -120, 0],
    },
    {
      POSITION: [50, 10, 0, 0, 0, 0, 0],
    },
  ],
};
exports.propeller2 = {
  LABEL: "",
  FACING_TYPE: "turnWithSpeed",
  CONTROLLERS: ["spin"],
  SPIN_RATE: 5,
  INDEPENDENT: true,
  AI: { NO_LEAD: true },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [50, 10, 0, 0, 0, 120, 0],
    },
    {
      POSITION: [50, 10, 0, 0, 0, -120, 0],
    },
    {
      POSITION: [50, 10, 0, 0, 0, 0, 0],
    },
  ],
};
exports.cubedSpinningSaw1 = {
  LABEL: "",
  FACING_TYPE: "turnWithSpeed",
  CONTROLLERS: ["spin"],
  SPIN_RATE: -3,
  COLOR: 9,
  SHAPE: 4,
  INDEPENDENT: true,
  AI: { NO_LEAD: true },
};
exports.cubedSpinningSaw2 = {
  LABEL: "",
  FACING_TYPE: "turnWithSpeed",
  CONTROLLERS: ["spin"],
  SPIN_RATE: 3,
  COLOR: 9,
  SHAPE: 4,
  INDEPENDENT: true,
  AI: { NO_LEAD: true },
};
exports.pentagonSpinningSaw1 = {
  LABEL: "",
  FACING_TYPE: "turnWithSpeed",
  CONTROLLERS: ["spin"],
  SPIN_RATE: -3,
  COLOR: 9,
  SHAPE: 5,
  INDEPENDENT: true,
  AI: { NO_LEAD: true },
};
exports.pentagonSpinningSaw2 = {
  LABEL: "",
  FACING_TYPE: "turnWithSpeed",
  CONTROLLERS: ["spin"],
  SPIN_RATE: 3,
  COLOR: 9,
  SHAPE: 5,
  INDEPENDENT: true,
  AI: { NO_LEAD: true },
};
exports.stfellasHandBlade1 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: [
    [0.8, 1.2],
    [0.8, 0],
    [0.16, 0],
    [1, -0.5],
    [1.56, -1.3],
    [0.3, -2.15],
    [0.8, -1.2],
    [0.8, 0],
    [0.16, 0],
    [1, 0.5],
    [1.56, 1.3],
    [0.3, 2.15],
  ],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 4, 0, -7, -7, 180, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [10, 4, 0, -9, -9, 180, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [10, 4, 0, -11, -11, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.thruster]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.stfellasHandBlade2 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: [
    [0.8, 1.2],
    [0.8, 0],
    [0.16, 0],
    [1, -0.5],
    [1.56, -1.3],
    [0.3, -2.15],
    [0.8, -1.2],
    [0.8, 0],
    [0.16, 0],
    [1, 0.5],
    [1.56, 1.3],
    [0.3, 2.15],
  ],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 4, 0, -7, 7, 180, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [10, 4, 0, -9, 9, 180, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [10, 4, 0, -11, 11, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.thruster]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.stfellasHandBlade3 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: [
    [0.8, 1.2],
    [0.8, 0],
    [0.2, 0],
    [1, -0.2],
    [1.3, -0.7],
    [2.5, -0.7],
    [0.8, -1.2],
    [0.8, 0],
    [0.2, 0],
    [1, 0.2],
    [1.3, 0.7],
    [2.5, 0.7],
  ],
  INDEPENDENT: true,
};
exports.pentaSpawnerStatue = {
  PARENT: [exports.genericTank],
  LABEL: "",
  COLOR: 14,
  SHAPE: 5,
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 13.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [1.2, 15.5, 1, 14.8, 0, 0, 0],
    },
    {
      POSITION: [3.5, 15.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.wallBarrier = {
  LABEL: "",
  COLOR: 500,
  SHAPE: 4,
  INDEPENDENT: true,
};
exports.smasherBody = {
  LABEL: "",
  CONTROLLERS: ["spin"],
  COLOR: 9,
  SHAPE: 6,
  INDEPENDENT: true,
};
exports.octagonShell = {
  LABEL: "",
  FACING_TYPE: "autospin",
  COLOR: 9,
  SHAPE: 8,
  INDEPENDENT: true,
};
exports.citadelShell = {
  LABEL: "",
  FACING_TYPE: "autospin",
  COLOR: 9,
  SHAPE: 6,
  INDEPENDENT: true,
};
exports.flagshipShell = {
  PARENT: [exports.citadelShell],
  SHAPE: 7,
    SPIN_RATE: 0.035,
}

exports.mettaBody = {
  LABEL: "",
  CONTROLLERS: ["spin"],
  COLOR: 8,
  SHAPE: 6,
  INDEPENDENT: true,
};
exports.baltylaBlade1 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: [
    [1.81, -0.92],
    [2.34, -1.05],
    [3.12, -0.39],
    [2.59, 0.08],
    [1.42, 0.01],
    [2.44, -0.47],
    [-0.54, -1.35],
  ],
  INDEPENDENT: true,
};
exports.baltylaBlade2 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: [
    [1.81, 0.92],
    [2.34, 1.05],
    [3.12, 0.39],
    [2.59, -0.08],
    [1.42, -0.01],
    [2.44, 0.47],
    [-0.54, 1.35],
  ],
  INDEPENDENT: true,
};
exports.tryiBlade1 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: [
    [2.05, 1.35],
    [2.34, 1.05],
    [2.96, 1.134],
    [2.66, -0.16],
    [1.42, -0.01],
    [2.03, 0.62],
    [1.346, 1.466],
  ],
  INDEPENDENT: true,
};
exports.tryiBlade2 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: [
    [2.05, -1.35],
    [2.34, -1.05],
    [2.96, -1.134],
    [2.66, 0.16],
    [1.42, 0.01],
    [2.03, -0.62],
    [1.346, -1.466],
  ],
  INDEPENDENT: true,
};
exports.pendekotHandBlade1 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: [
    [-0.5, 0],
    [-1, -0.5],
    [-2, -0],
    [-1, 0.5],
  ],
  INDEPENDENT: true,
};
exports.pendekotHandBlade2 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: [
    [1, -0],
    [1.5, -2],
    [-0, 0],
    [1.5, 2],
  ],
  INDEPENDENT: true,
};
exports.flameEffect = {
  PARENT: [exports.genericTank],
  LABEL: "Fire Effect",
  IGNORE_COLLISION: true,
  COLOR: 33,
  TYPE: "none",
  CONTROLLERS: ["onlyAcceptInArc"],
  ALPHA: 0.25,
  DANGER: -1,
  BODY: {
    DAMAGE: 0,
    RANGE: 10,
    ACCELERATION: base.ACCEL * 0.7,
    SPEED: base.SPEED * 0.9,
    FOV: base.FOV * 1.25,
  },
  DRAW_HEALTH: false,
  DIE_AT_RANGE: true,
  GIVE_KILL_MESSAGE: false,
  HITS_ITS_OWN_TYPE: "never",
};
//Definer Shrines
exports.eggDefinerStatue = {
  SHAPE: 0,
  COLOR: 6,
  CONTROLLERS: ["spin"],
};
exports.squareDefinerStatue = {
  SHAPE: 4,
  COLOR: 6,
  CONTROLLERS: ["spin"],
};
exports.triangleDefinerStatue = {
  SHAPE: 3,
  COLOR: 6,
  CONTROLLERS: ["spin"],
};
exports.pentagonDefinerStatue = {
  SHAPE: 5,
  COLOR: 6,
  CONTROLLERS: ["spin"],
};
exports.hexagonDefinerStatue = {
  COLOR: 6,
  SHAPE: 6,
  CONTROLLERS: ["spin"],
};
exports.hexagonDefinerCasing = {
  PARENT: [exports.genericTank],
  LABEL: "Definer Casing",
  SHAPE: 0,
  SIZE: 15,
  LEVEL: 45,
  COLOR: 100,
  BODY: {
    HEALTH: 10000,
    SHIELD: 10000,
    REGEN: 1000,
    PUSHABILITY: 0,
    ACCELERATION: 0,
    SPEED: 0,
  },
  DRAW_HEALTH: false,
  SIZE: 22,
  VALUE: 100000,
  CAN_BE_ON_LEADERBOARD: false,
  DANGER: 6,
  FIXED_POSITION: true,
  TURRETS: [
    {
      POSITION: [13, 0, 0, 0, 0, 1],
      TYPE: exports.hexagonDefinerStatue,
    },
  ],
};
exports.pentagonDefinerCasing = {
  PARENT: [exports.hexagonDefinerCasing],
  TURRETS: [
    {
      POSITION: [13, 0, 0, 0, 0, 1],
      TYPE: exports.pentagonDefinerStatue,
    },
  ],
};
exports.triangleDefinerCasing = {
  PARENT: [exports.hexagonDefinerCasing],
  TURRETS: [
    {
      POSITION: [10, 0, 0, 0, 0, 1],
      TYPE: exports.triangleDefinerStatue,
    },
  ],
};
exports.squareDefinerCasing = {
  PARENT: [exports.hexagonDefinerCasing],
  TURRETS: [
    {
      POSITION: [13, 0, 0, 0, 0, 1],
      TYPE: exports.squareDefinerStatue,
    },
  ],
};
exports.eggDefinerCasing = {
  PARENT: [exports.hexagonDefinerCasing],
  TURRETS: [
    {
      POSITION: [13, 0, 0, 0, 0, 1],
      TYPE: exports.eggDefinerStatue,
    },
  ],
};
//Saws
exports.smasherBody2 = {
  LABEL: "",
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.5555,
  COLOR: 9,
  SHAPE: 6,
  INDEPENDENT: true,
};
exports.smasherBody3 = {
  LABEL: "",
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.5,
  COLOR: 9,
  SHAPE: 6,
  INDEPENDENT: true,

  ALPHA: 0.1,
  INVISIBLE: [0.09, 0.04],
};
exports.smasherBody4 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: 6,
  INDEPENDENT: true,
};
exports.EggShell = {
  LABEL: "",
  COLOR: 9,
  SHAPE: 12,
  INDEPENDENT: true,
};
exports.HighlordSaw = {
  LABEL: "",
  COLOR: 9,
  SHAPE: 8,
};
exports.splinterBody = {
  LABEL: "",
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  COLOR: 9,
  SHAPE: -3,
  INDEPENDENT: true,
};
exports.splinterBody2 = {
  LABEL: "",
  CONTROLLERS: ["spin"],
  SPIN_RATE: 0.085,
  COLOR: 9,
  SHAPE: -3,
  INDEPENDENT: true,
};
exports.spikeBody = {
  LABEL: "",
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  COLOR: 9,
  SHAPE: 3,
  INDEPENDENT: true,
};
exports.spikeBody1 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: 3,
  INDEPENDENT: true,
  CONTROLLERS: ["spin"],
};
exports.spikeBody2 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: 3,
  INDEPENDENT: true,
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.1,
};
exports.spikeBody3 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: 3,
  INDEPENDENT: true,
};
exports.megaSmasherBody = {
  LABEL: "",
  CONTROLLERS: ["spin"],
  COLOR: 9,
  SHAPE: 6,
  INDEPENDENT: true,
};
exports.dominatorBody = {
  LABEL: "",
  CONTROLLERS: ["dontTurn"],
  COLOR: 9,
  SHAPE: 6,
  INDEPENDENT: true,
};
exports.dominationBody = {
  LABEL: "",
  COLOR: 9,
  SHAPE: 0,
  INDEPENDENT: true,
  CONTROLLERS: ["dontTurn"],
};
//After Images
exports.afterImage = {
  PARENT: [exports.genericTank],
  LABEL: "After-Image",
  IGNORE_COLLISION: true,
  TYPE: "none",
  CONTROLLERS: ["onlyAcceptInArc"],
  ALPHA: 0.25,
  DANGER: -1,
  BODY: {
    DAMAGE: 0,
    RANGE: 10,
    ACCELERATION: base.ACCEL * 0.7,
    SPEED: base.SPEED * 0.9,
    FOV: base.FOV * 1.25,
  },
  DRAW_HEALTH: false,
  DIE_AT_RANGE: true,
  GIVE_KILL_MESSAGE: false,
  HITS_OWN_TYPE: "never",
  GUNS: [],
  TURRETS: [],
};
exports.reaperAfterImage = {
  PARENT: [exports.afterImage],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       CY     ANGLE   DELAY */
      POSITION: [13, 3, 1, 0, -8, -7, 0.6],
    },
    {
      POSITION: [13, 3, 1, 0, 8, 7, 0.8],
    },
    {
      POSITION: [17, 3, 1, 0, -6, -7, 0.2],
    },
    {
      POSITION: [17, 3, 1, 0, 6, 7, 0.4],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [21, 12, 1, 0, 0, 0, 0.25],
    },
  ],
};

exports.oracleAfterImage = {
  PARENT: [exports.afterImage],
  GUNS: [
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [17, 3, 1, 0, -6, -7, 0.2],
  },
  {
    POSITION: [17, 3, 1, 0, 6, 7, 0.6],
  },
  {
    POSITION: [14, 3, 1, 0, 6, 7, 0.75],
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [14, 3, 1, 0, -6, -7, 0.25],
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [13, 3, 1, 0, -8, -7, 0.4],
  },
  {
    POSITION: [13, 3, 1, 0, 8, 7, 0.8],
  },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
    },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [7, 7.5, 0.6, 7, 4, 0, 0],
  },
  {
    POSITION: [7, 7.5, 0.6, 7, -4, 0, 0.5],
  },
  ],
};
exports.voidRanarAfterImage = {
  PARENT: [exports.afterImage],
  TURRETS: [
    {
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [20.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody2,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 8.5, 0.6, 2, 6, 25, 0.5],
    },
    {
      POSITION: [10, 8.5, 0.6, 2, -6, -25, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 8.5, 0.6, 5, 6, 0, 0],
    },
    {
      POSITION: [10, 8.5, 0.6, 5, -6, 0, 0.5],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 14.55, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [21, 14.55, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [21, 14.55, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [20, 9, 1, 0, -4, 152.5, 0.5],
    },
    {
      POSITION: [20, 9, 1, 0, 4, -152.5, 0.5],
    },
    {
      POSITION: [19, 8, 1, 0, 0, -157.5, 0.5],
    },
    {
      POSITION: [19, 8, 1, 0, 0, 157.5, 0.5],
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
    },
    {
      POSITION: [22, 11, 1, 0, 0, -180, 0.5],
    },
  ],
};
exports.abyssalThrasherAfterImage = {
  PARENT: [exports.afterImage],
  TURRETS: [
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody3],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.spikeBody],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.spikeBody3],
    },
  ],
};
//Eyes
exports.eye1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 0,
  SIZE: 1,
  COLOR: 18,
};
exports.eye2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 0,
  SIZE: 1,
  COLOR: 19,
};
exports.eye3 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 0,
  SIZE: 1,
  COLOR: 9,
};
exports.eye4 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 0,
  SIZE: 1,
  COLOR: 8,
};
exports.goodEye = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: -2,
  SIZE: 1,
  COLOR: 8,
  TURRETS: [
    {
      POSITION: [4.5, 0, 0, 0, 360, 1],
      TYPE: [exports.eye1],
    },
    {
      POSITION: [2, 0, 0, 0, 360, 1],
      TYPE: [exports.eye2],
    },
  ],
};
exports.evilEye = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: -2,
  SIZE: 1,
  COLOR: 19,
  TURRETS: [
    {
      POSITION: [4.5, 0, 0, 0, 360, 1],
      TYPE: [exports.eye3],
    },
    {
      POSITION: [2, 0, 0, 0, 360, 1],
      TYPE: [exports.eye4],
    },
  ],
};
//Custom Shape Colors
exports.grayCircle = {
  LABEL: "",
  COLOR: 16,
  SHAPE: 0,
};
exports.blackCircle = {
  LABEL: "",
  COLOR: 9,
  SHAPE: 0,
};
exports.whiteCircle = {
  LABEL: "",
  COLOR: 8,
  SHAPE: 0,
};
exports.yellowSquare = {
  LABEL: "",
  COLOR: 13,
  SHAPE: 4,
};
exports.orangeTriangle = {
  LABEL: "",
  COLOR: 2,
  SHAPE: 3,
};
exports.purplePentagon = {
  LABEL: "",
  COLOR: 14,
  SHAPE: 5,
};
exports.magentaHexagon = {
  LABEL: "",
  COLOR: 15,
  SHAPE: 6,
};
exports.pinkTriangle = {
  PARENT: [exports.triangle],
  COLOR: 5,
  SHAPE: 3,
};
exports.shellsquare = {
  PARENT: [exports.square,],
  COLOR: 9,
  SHAPE: 4,
};
//SWARM DRONES
exports.swarmDrone = {
  IS_PROJECTILE: true,
  LABEL: "Swarm Drone",
  TYPE: "swarm",
  ACCEPTS_SCORE: false,
  SHAPE: 3,
  MOTION_TYPE: "swarm",
  FACING_TYPE: "smoothWithMotion",
  CONTROLLERS: ["nearestDifferentMaster", "mapTargetToGoal"],
  CRAVES_ATTENTION: true,
  BODY: {
    ACCELERATION: 3,
    PENETRATION: 1.25,
    HEALTH: 0.35 * wepHealthFactor,
    DAMAGE: 1.5 * wepDamageFactor,
    SPEED: 4.5,
    REGEN: -1,
    RESIST: 1.6,
    RANGE: 225,
    DENSITY: 2,
    PUSHABILITY: 1,
    FOV: 1.5,
  },
  HITS_OWN_TYPE: "never",
  DIE_AT_RANGE: true,
  BUFF_VS_FOOD: true,
};
exports.eggSwarmDrone = {
  PARENT: [exports.swarmDrone],
  SHAPE: 0,
};
exports.hollowDigonColor = {
  PARENT: [exports.genericTank],
  INDEPENDENT: true,
  COLOR: 6,
  SHAPE: [
    [1, 0],
    [0, -0.5],
    [-1, 0],
    [0, 0.5],
  ],
};
exports.hollowDigon = {
  PARENT: [exports.genericTank],
  TYPE: "atmosphere",
  COLOR: 6,
  SHAPE: [
    [1, 0],
    [0, -0.5],
    [-1, 0],
    [0, 0.5],
  ],
  LAYER: 2,
  INVISIBLE: [0.1],
  CONTROLLERS: ["teleportToMaster"],
  DAMAGE_EFFECTS: false,
  DIE_AT_RANGE: false,
  IGNORE_COLLISION: true,
  ALPHA: 0.25,
  COLOR: 6,
  CLEAR_ON_MASTER_UPGRADE: true,
  CAN_GO_OUTSIDE_ROOM: true,
  DRAW_HEALTH: false,
  BODY: {
    REGEN: 100000,
    HEALTH: 1000000000000000000000000000000,
    DENSITY: 0.1,
    DAMAGE: 0,
    SPEED: 0,
    FOV: 0,
    PUSHABILITY: 0,
  },
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 0, 1],
      TYPE: [exports.hollowDigonColor, { COLOR: 6 }],
    },
  ],
};
exports.whiteDigon = {
  COLOR: 6,
  SHAPE: -2,
};
exports.hollowDigonSpawner = {
  PARENT: [exports.genericTank],
  ALPHA: 0,
  SHAPE: -2,
  COLOR: 6,
  MAX_CHILDREN: 1,
  GUNS: [
    {
      POSITION: [0, 20, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.atmosphere,
          g.uberHealth,
          g.minorDamage,
          g.minorDamage,
        ]),
        TYPE: [exports.hollowDigon, { COLOR: 6 }],
        MAX_CHILDREN: 1,
        AUTOFIRE: true,
      },
    },
  ],
};
exports.baltylaMagicMissile = {
  PARENT: [exports.swarmDrone],
  SHAPE: 1,
  LAYER: 4,
  COLOR: 6,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 90, 0, 1],
      TYPE: [
        exports.hollowDigonSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 90, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.superSize,
                ]),
                TYPE: [exports.hollowDigon, { COLOR: 6 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [24, 0, 0, 90, 0, 1],
      TYPE: [
        exports.hollowDigonSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 90, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.superSize,
                ]),
                TYPE: [exports.hollowDigon, { COLOR: 6 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [26, 0, 0, 90, 0, 1],
      TYPE: [
        exports.hollowDigonSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 90, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.superSize,
                ]),
                TYPE: [exports.hollowDigon, { COLOR: 6 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [28, 0, 0, 90, 0, 1],
      TYPE: [
        exports.hollowDigonSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 90, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.superSize,
                ]),
                TYPE: [exports.hollowDigon, { COLOR: 6 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [30, 0, 0, 90, 0, 1],
      TYPE: [
        exports.hollowDigonSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 90, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.superSize,
                ]),
                TYPE: [exports.hollowDigon, { COLOR: 6 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [32, 0, 0, 90, 0, 1],
      TYPE: [
        exports.hollowDigonSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 90, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.superSize,
                ]),
                TYPE: [exports.hollowDigon, { COLOR: 6 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [34, 0, 0, 90, 0, 1],
      TYPE: [
        exports.hollowDigonSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 90, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.superSize,
                ]),
                TYPE: [exports.hollowDigon, { COLOR: 6 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [36, 0, 0, 90, 0, 1],
      TYPE: [
        exports.hollowDigonSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 90, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.superSize,
                ]),
                TYPE: [exports.hollowDigon, { COLOR: 6 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [38, 0, 0, 90, 0, 1],
      TYPE: [
        exports.hollowDigonSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 90, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.superSize,
                ]),
                TYPE: [exports.hollowDigon, { COLOR: 6 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [40, 0, 0, 90, 0, 1],
      TYPE: [
        exports.hollowDigonSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 90, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.superSize,
                ]),
                TYPE: [exports.hollowDigon, { COLOR: 6 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [42, 0, 0, 90, 0, 1],
      TYPE: [
        exports.hollowDigonSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 90, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.superSize,
                ]),
                TYPE: [exports.hollowDigon, { COLOR: 6 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [20, 0, 0, 90, 0, 1],
      TYPE: exports.whiteDigon,
    },
  ],
};
exports.swarmDigon = {
  PARENT: [exports.swarmDrone],
  SHAPE: 1,
  COLOR: 6,
  BODY: {
    SPEED: 10,
  },
  TURRETS: [
    {
      POSITION: [20, 0, 0, 90, 0, 1],
      TYPE: exports.whiteDigon,
    },
  ],
};
exports.bulletDigon = {
  PARENT: [exports.bullet],
  SHAPE: 1,
  COLOR: 6,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 90, 0, 1],
      TYPE: exports.whiteDigon,
    },
  ],
};
exports.beeDrone = {
  PARENT: [exports.swarmDrone],
  LABEL: "Bee",
  PERSISTS_AFTER_DEATH: true,

  SHAPE: 4,
  INDEPENDENT: true,
  HITS_OWN_TYPE: "hardWithBuffer",
  BODY: {
    DENSITY: 2.75,
  },
};
(exports.hexaBeeDrone = {
  PARENT: [exports.beeDrone],
  SHAPE: 6,
}),
(exports.uncontrolledBeeDrone = {
  PARENT: [exports.beeDrone],
  AI: { FARMER: true },
  INDEPENDENT: true,
}),
(exports.hexaBee = {
  PARENT: [exports.beeDrone],
  AI: { FARMER: true },
  SHAPE: 6,
  INDEPENDENT: true,
}),
(exports.uncontrolledSwarmDrone = {
    PARENT: [exports.swarmDrone],
    AI: { FARMER: true },
    INDEPENDENT: true,
  });
exports.crasherSwarmDrone = {
  PARENT: [exports.swarmDrone],
  LABEL: "Crasher Swarm Drone",
  VARIES_IN_SIZE: true,
  COLOR: 5,
  HITS_OWN_TYPE: "hard",
};
exports.betacrasherSwarmDrone = {
  PARENT: [exports.swarmDrone],
  LABEL: "Crasher Swarm Drone",
  VARIES_IN_SIZE: true,
  COLOR: 5,
  HITS_OWN_TYPE: "hard",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 0, 1],
      TYPE: exports.pinkTriangle,
    },
  ],
};
exports.alphacrasherSwarmDrone = {
  PARENT: [exports.swarmDrone],
  LABEL: "Crasher Swarm Drone",
  VARIES_IN_SIZE: true,
  COLOR: 5,
  HITS_OWN_TYPE: "hard",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 0, 1],
      TYPE: exports.pinkTriangle,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [6.5, 0, 0, 45, 180, 1],
      TYPE: exports.pinkTriangle,
    },
  ],
};

//DRONES
exports.drone = {
  LABEL: "Drone",
  IS_PROJECTILE: true,
  TYPE: "drone",
  ACCEPTS_SCORE: false,
  DANGER: 2,
  CONTROL_RANGE: 0,
  SHAPE: 3,
  MOTION_TYPE: "chase",
  FACING_TYPE: "smoothToTarget",
  CONTROLLERS: [
    "nearestDifferentMaster",
    "canRepel",
    "mapTargetToGoal",
    "hangOutNearMaster",
  ],
  AI: { BLIND: true },
  BODY: {
    PENETRATION: 1,
    PUSHABILITY: 3.5,
    ACCELERATION: 0.05,
    HEALTH: 0.4 * wepHealthFactor,
    REGEN: -1,
    DAMAGE: 1.25 * wepDamageFactor,
    SPEED: 3.8,
    REGEN: 0,
    RANGE: 200,
    DENSITY: 4,
    RESIST: 1,
    FOV: 0.8,
  },
  HITS_OWN_TYPE: "hard",
  DRAW_HEALTH: false,
  CLEAR_ON_MASTER_UPGRADE: true,
  BUFF_VS_FOOD: true,
};
exports.kamikaze = {
  PARENT: [exports.drone],
  SHAPE: [[0.187,-1.593],[0.4,-0.31],[1.013,-0.17],[0.993,0.21],[0.41,0.22],[0.207,1.62],[-0.167,1.77],[-0.22,0.227],[-1.98,0.087],[-2.22,0.57],[-2.416,0.575],[-2.216,0.016],[-2.41,-0.58],[-2.216,-0.58],[-2.01,-0.08],[-0.214,-0.19],[-0.11,-1.8]],

  BODY: {
    PENETRATION: 1,
    PUSHABILITY: 3.5,
    ACCELERATION: 0.5,
    HEALTH: 0.4 * wepHealthFactor,
    REGEN: -1,
    DAMAGE: 1.25 * wepDamageFactor,
    SPEED: 5,
    REGEN: 0,
    RANGE: 200,
    DENSITY: 10,
    RESIST: 1,
    FOV: 0.8,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 2.5, 1, 0, 11.25, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6, 2.5, 1, 0, -11.25, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [8, 2.5, 1, 0, 6.75, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [8, 2.5, 1, 0, -6.75, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,]),
        TYPE: exports.bullet,
      },
    },
  ]
}
exports.lightDrone = {PARENT: [exports.drone], BODY: {
    PENETRATION: 1,
    PUSHABILITY: 0,
    ACCELERATION: 0.5,
    HEALTH: 0.4 * wepHealthFactor,
    REGEN: -1,
    DAMAGE: 1.25 * wepDamageFactor,
    SPEED: 3.8,
    REGEN: 0,
    RANGE: 200,
    DENSITY: 0.001,
    RESIST: 1,
    FOV: 0.8,
  },  HITS_OWN_TYPE: "hardWithBuffer",
}
exports.mothershipDrone = {
  PARENT: [exports.drone],
  CONTROLLERS: [
    "nearestDifferentMaster",

    "mapTargetToGoal",
    "hangOutNearMaster",
  ],
  AI: { FARMER: true },
  INDEPENDENT: false,
};
exports.autoSmasherOrbTurret = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.25,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.power,
          g.superStats,
          g.greaterStats,
          g.lesserSpeed,
          g.greaterReload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.power,
          g.superStats,
          g.greaterStats,
          g.lesserSpeed,
          g.greaterReload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.autoSmasherOrb = {
  PARENT: [exports.drone],
  TYPE: "trap",
  SHAPE: 0,
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapTargetToGoal",
    "hangOutNearMaster",
  ],
  AI: { FARMER: true },
  WALL_IMMUNITY: true,
  INDEPENDENT: false,
  SPECIAL_EFFECT: "push",
  REPEL: 0.25,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.autoSmasherOrbTurret,
    },
  ],
};
exports.smasherOrb = {
  PARENT: [exports.drone],
  TYPE: "trap",
  SHAPE: 0,
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapTargetToGoal",
    "hangOutNearMaster",
  ],
  AI: { FARMER: true },
  WALL_IMMUNITY: true,
  INDEPENDENT: false,
  SPECIAL_EFFECT: "push",
  REPEL: 0.25,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
};
exports.landmineOrb = {
  PARENT: [exports.smasherOrb],
  TYPE: "trap",
  INVISIBLE: [0.09, 0.03],
  SHAPE: 0,
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapTargetToGoal",
    "hangOutNearMaster",
  ],
  AI: { FARMER: true },
  WALL_IMMUNITY: true,
  INDEPENDENT: false,
  SPECIAL_EFFECT: "push",
  REPEL: 0.25,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 30, 360, 0],
      TYPE: exports.smasherBody2,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
};
exports.spikeOrb = {
  PARENT: [exports.smasherOrb],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
  ],
};
exports.powerOrb = {
  PARENT: [exports.smasherOrb],
 TURRETS: [],
 // CONNECTED_DAMAGE: true,
 // DAMAGE_MULTIPLIER: 0.75,
  };
exports.starOrb = {
  PARENT: [exports.drone],
  TYPE: "trap",
  IGNORE_COLLISION: true,
  SHAPE: 0,
  CONTROLLERS: [
    "nearestDifferentMaster",

    "mapTargetToGoal",
    "hangOutNearMaster",
  ],
  AI: { FARMER: true },
  INDEPENDENT: false,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.starBody,
    },
  ],
};
exports.uncontrolledMothershipDrone = {
  PARENT: [exports.mothershipDrone],
  INDEPENDENT: true,
};
exports.EggshipDrone = {
  PARENT: [exports.mothershipDrone],
  SHAPE: 0,
};
exports.uncontrolledEggshipDrone = {
  PARENT: [exports.mothershipDrone],
  INDEPENDENT: true,
  SHAPE: 0,
};
exports.squareDrone = {
  PARENT: [exports.drone],
  LABEL: "Square",
  TARGETABLE: true,
  SHAPE: 4,
  SIZE: 10,
  COLOR: 13,
  VARIES_IN_SIZE: true,
  FACING_TYPE: "turnWithSpeed",
  INTANGIBLE: false,
  WALL_IMMUNITY: true,
  BODY: {
    PENETRATION: 0.95,
    DENSITY: 10,
  },
};
exports.triangleDrone = {
  PARENT: [exports.squareDrone],
  LABEL: "Triangle",
  SHAPE: 3,
  COLOR: 9,
};
exports.stealthedSquareDrone = {
  PARENT: [exports.squareDrone],
  LABEL: "Square",
  ALPHA: 0.15,
};
exports.stealthedTriangleDrone = {
  PARENT: [exports.triangleDrone],
  LABEL: "Triangle",
  ALPHA: 0.15,
};
exports.pentagonDrone = {
  PARENT: [exports.squareDrone],
  LABEL: "Pentagon",
  SHAPE: 5,
  COLOR: 14,
};
exports.hexagonDrone = {
  PARENT: [exports.pentagonDrone],
  LABEL: "Hexagon",
  SHAPE: 6,
  BODY: {
    SHIELD: 1,
  },
};
exports.septagonDrone = {
  PARENT: [exports.pentagonDrone],
  LABEL: "Septagon",
  GROWTH_FACTOR: 9,
  DRAW_HEALTH: true,
  SHAPE: 7,
  BODY: {
    SHIELD: 3,
  },
};
exports.buzzDrone = {
  PARENT: [exports.drone],
  LABEL: "Drone",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 10, 1.4, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.minion, g.doubleSize]),
        TYPE: exports.uncontrolledBeeDrone,
      },
    },
  ],
};
//Necro Drones
exports.sunchip = {
  PARENT: [exports.drone],
  FOOD: {
    LEVEL: -1,
  },
  SHAPE: 4,
  NECRO: true,
  HITS_OWN_TYPE: "hard", //kinky, i like it
  BODY: {
    HEALTH: 0.85 * wepHealthFactor,
    PUSHABILITY: 5,
    DENSITY: 8,
    FOV: 0.5,
    ACCELERATION: 0.09,
    SPEED: 2,
  },
  AI: {
    BLIND: true,
    FARMER: true,
  },
};
exports.sterileSunchip = {
  PARENT: [exports.sunchip],
  BODY: {
    HEALTH: 0.5 * wepHealthFactor,
    PUSHABILITY: 5,
    DENSITY: 4,
    DAMAGE: 0.85 * wepDamageFactor,
    FOV: 0.5,
    ACCELERATION: 0.09, //clean sunchip??? wowzers
    SPEED: 1.9,
  },
  NECRO: false,
};
exports.sterileEggChip = {
  PARENT: [exports.sterileSunchip],
  SHAPE: 0,
};
exports.gemChip = {
  PARENT: [exports.sunchip],
  WALL_IMMUNITY: true,
  COLOR: 0,
  SHAPE: 6,
};
exports.eggChip = {
  PARENT: [exports.sunchip],
  SHAPE: 0,
};
exports.triangleChip = {
  PARENT: [exports.sunchip],
  SHAPE: 3,
};
exports.sterileTriangleChip = {
  PARENT: [exports.sterileSunchip],

  SHAPE: 3,
};
exports.sterilePentagonChip = {
  PARENT: [exports.sterileSunchip],

  SHAPE: 5,
};
exports.pentagonChip = {
  PARENT: [exports.sunchip],
  SHAPE: 5,
};
exports.phasingHexagonChip = {
  PARENT: [exports.sunchip],
  WALL_IMMUNITY: true,
  SHAPE: 6,
};
exports.hexagonChip = {
  PARENT: [exports.sunchip],
  GROWTH_FACTOR: 3,
  WALL_IMMUNITY: true,
  SHAPE: 6,
  DRAW_HEALTH: true,
};
exports.sterileHexagonChip = {
  PARENT: [exports.sterileSunchip],
  GROWTH_FACTOR: 3,
  WALL_IMMUNITY: true,
  SHAPE: 6,
};
exports.sterileSeptagonChip = {
  PARENT: [exports.sterileSunchip],
  WALL_IMMUNITY: true,
  SHAPE: 7,
};
exports.uncontrolledSunchip = {
  PARENT: [exports.sunchip],
  AI: {
    BLIND: true,
    FARMER: true,
  },
  INDEPENDENT: true,
};
exports.greenSunchip = {
  PARENT: [exports.drone],
  SHAPE: 4,
  COLOR: 1,
};
exports.shinySunchip = {
  PARENT: [exports.sunchip],
  LABEL: "Shiny Sunchip",
  COLOR: 1,
  BODY: {
    HEALTH: 1.25,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 0, 1],
      TYPE: exports.greenSunchip,
    },
  ],
};
exports.stealthedSunchip = {
  PARENT: [exports.sunchip],
  FOOD: {
    LEVEL: -1,
  },
  SHAPE: 4,
  NECRO: true,
  HITS_OWN_TYPE: "hard",
  INVISIBLE: [0.09, 0.03],
  BODY: {
    FOV: 0.5,
    ACCELERATION: 0.05,
    SPEED: 1.9,
  },
  AI: {
    BLIND: true,
    FARMER: true,
  },
};
//TRAPS
exports.trap = {
  LABEL: "Trap",
  IS_PROJECTILE: true,
  TYPE: "trap",
  ACCEPTS_SCORE: false,
  SHAPE: -3,
  MOTION_TYPE: "glide", // def
  FACING_TYPE: "turnWithSpeed",
  HITS_OWN_TYPE: "repel",
  DIE_AT_RANGE: true,
  BODY: {
    HEALTH: 0.5 * wepHealthFactor,
    DAMAGE: 1.25 * wepDamageFactor,
    RANGE: 450,
    DENSITY: 1.5,
    PENETRATION: 1,
    RESIST: 2.5,
    SPEED: 0,
  },
};
exports.repairTrap = {
  LABEL: "Trap",
  IS_PROJECTILE: true,
  TYPE: "trap",
  ACCEPTS_SCORE: false,
  SHAPE: -3,
  MOTION_TYPE: "glide", // def
  FACING_TYPE: "turnWithSpeed",
  REPAIR_EFFECT: true,
  DIE_AT_RANGE: true,
  BODY: {
    HEALTH: 0.5 * wepHealthFactor,
    DAMAGE: 1.25 * wepDamageFactor,
    RANGE: 450,
    DENSITY: 1.5,
    PENETRATION: 1,
    RESIST: 2.5,
    SPEED: 0,
  },
};
exports.healTrap = {
  LABEL: "Trap",
  IS_PROJECTILE: true,
  TYPE: "trap",
  ACCEPTS_SCORE: false,
  SHAPE: -3,
  MOTION_TYPE: "glide", // def
  FACING_TYPE: "turnWithSpeed",
  HEAL_EFFECT: true,
  HITS_OWN_TYPE: "repel",
  DIE_AT_RANGE: true,
  BODY: {
    HEALTH: 0.5 * wepHealthFactor,
    DAMAGE: 1.25 * wepDamageFactor,
    RANGE: 450,
    DENSITY: 1.5,
    PENETRATION: 1,
    RESIST: 2.5,
    SPEED: 0,
  },
};
exports.breakerTrap = {
  PARENT: [exports.trap],
  LABEL: "Trap",
  DEATH_THROES: "breakerBurst",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.breakerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.bursterTrap = {
  PARENT: [exports.trap],
  LABEL: "Trap",//buster
  DEATH_THROES: "bursterBurst",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.breakerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.ogbursterTrap = {
  PARENT: [exports.trap],
  LABEL: "Trap",
  DEATH_THROES: "ogbursterBurst",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.breakerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
//Blocks
exports.unsetBlock = {
  LABEL: "Block",
  PARENT: [exports.trap],
  SPECIAL_EFFECT: "block",
  SHAPE: -4,
  MOTION_TYPE: "motor",
  BODY: {
    SPEED: 1.2,
    PENETRATION: 0.85,
    DENSITY: 4.5,
    PENETRATION: 1.15,
  },
};
exports.setBlock = {
  LABEL: "Block",
  PARENT: [exports.trap],
  SPECIAL_EFFECT: "block",
  SHAPE: -4,
  MOTION_TYPE: "motor",
  // MOTION_TYPE: "glide",
  CONTROLLERS: ["goToMasterTarget"],
  BODY: {
    SPEED: 1.2,
    DENSITY: 5.5,
    PENETRATION: 1.15,

    PUSHABILITY: 1,
  },
};
exports.assemblent = {
  LABEL: "Assemblent",
  PARENT: [exports.trap],
  SPECIAL_EFFECT: "block",
  SHAPE: -4,
  MOTION_TYPE: "motor",
  // MOTION_TYPE: "glide",
  CONTROLLERS: ["goToMasterTarget"],
  BODY: {
    SPEED: 1.2,
    DENSITY: 5.5,
    PENETRATION: 1.15,

    PUSHABILITY: 1,
  },
  HITS_OWN_TYPE: "merge",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [4, 0, 0, 0, 360, 1],
      TYPE: [exports.assemblerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.wreckerSetBlock = {
  PARENT: [exports.setBlock],
  LABEL: "Block",
  DEATH_THROES: "breakerBurst",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.breakerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
//Boomerands
exports.boomerang = {
  LABEL: "Boomerang",
  PARENT: [exports.trap],
  SPECIAL_EFFECT: "block",
  HITS_OWN_TYPE: "polyrepel",
  CONTROLLERS: ["boomerang"],
  MOTION_TYPE: "motor",
  HITS_OWN_TYPE: "never",
  SHAPE: -5,
  BODY: {
    SPEED: 1.15,
    RANGE: 260,
    DENSITY: 5.5,
    PENETRATION: 1.15,
    PUSHABILITY: 1,
  },
};
//Auras
exports.damageAura = {
  PARENT: [exports.bullet],
  LABEL: "Aura",
  TYPE: "atmosphere",
  CONTROLLERS: ["teleportToMaster"],
  DIE_AT_RANGE: true,
  ALPHA: 0.25,
  IS_PROJECTILE: false,
  COLOR: 0,
  CLEAR_ON_MASTER_UPGRADE: true,
  CAN_GO_OUTSIDE_ROOM: true,
  LAYER: 0,
  DIE_AT_RANGE: true,
  BODY: {
    REGEN: 1000,
    RANGE: 1000,
    DAMAGE: 0.5,
    HEALTH: 10000,
    PENETRATION: 99999,
    DENSITY: 1,
    PUSHABILITY: 0,
    SPEED: 0,
  },
  DISABLE_DAMAGE: true,
  //SPECIAL_EFFECT: "push",
  //REPEL: 1,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 1],
      TYPE: [exports.damageAuraColor, { COLOR: 0 }],
    },
  ],
};
exports.healAura = {
  PARENT: [exports.damageAura],
  HEAL_EFFECT: true,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 1],
      TYPE: [exports.healAuraColor, { COLOR: 12 }],
    },
  ],
};
exports.PentaAura = {
  PARENT: [exports.damageAura],
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 1],
      TYPE: [exports.PentaAuraColor, { COLOR: 12 }],
    },
  ],
};
exports.repairAura = {
  PARENT: [exports.damageAura],
  REPAIR_EFFECT: true,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 1],
      TYPE: [exports.repairAuraColor, { COLOR: 39 }],
    },
  ],
};
exports.metta1 = {
  PARENT: [exports.bullet],
  LABEL: "Aura",
  TYPE: "atmosphere",
  CONTROLLERS: ["teleportToMaster"],
  DIE_AT_RANGE: false,
  ALPHA: 0.25,
  IS_PROJECTILE: false,
  COLOR: 30,
  CLEAR_ON_MASTER_UPGRADE: true,
  CAN_GO_OUTSIDE_ROOM: true,
  LAYER: 0,
  BODY: {
    REGEN: 1000,
    DAMAGE: 0.5,
    HEALTH: 10000,
    PENETRATION: 99999,
    DENSITY: 1,
    PUSHABILITY: 0,
    SPEED: 0,
  },
  DISABLE_DAMAGE: true,
  //SPECIAL_EFFECT: "push",
  //REPEL: 1,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 1],
      TYPE: [exports.metta1AuraColor, { COLOR: 0 }],
    },
  ],
};
exports.metta2 = {
  PARENT: [exports.metta1],
  HEAL_EFFECT: true,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 1],
      TYPE: [exports.metta2AuraColor, { COLOR: 12 }],
    },
  ],
};
exports.metta3 = {
  PARENT: [exports.metta1],
  REPAIR_EFFECT: true,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 1],
      TYPE: [exports.metta3AuraColor, { COLOR: 39 }],
    },
  ],
};
exports.acidicField = {
  PARENT: [exports.bullet],
  LABEL: "Aura",
  TYPE: "atmosphere",
  CONTROLLERS: ["teleportToMaster"],
  DIE_AT_RANGE: false,
  ALPHA: 0.25,
  IS_PROJECTILE: false,
  COLOR: 0,
  CLEAR_ON_MASTER_UPGRADE: true,
  CAN_GO_OUTSIDE_ROOM: true,
  LAYER: 0,
  BODY: {
    REGEN: 1000,
    DAMAGE: 0.35,
    HEALTH: 10000,
    PENETRATION: 99999,
    DENSITY: 1,
    PUSHABILITY: 0,
    SPEED: 0,
  },
  SPECIAL_EFFECT: "push",
  REPEL: 1,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 1],
      TYPE: [exports.acidicFieldColor, { COLOR: 0 }],
    },
  ],
};
exports.damageAuraProjectile = {
  PARENT: [exports.bullet],
  LABEL: "Aura",
  TYPE: "atmosphere",
  VARIES_IN_SIZE: true,
  DIE_AT_RANGE: false,
  ALPHA: 0.35,
  COLOR: 0,
  MOTION_TYPE: "glide",
  CLEAR_ON_MASTER_UPGRADE: true,
  CAN_GO_OUTSIDE_ROOM: true,
  BODY: {
    REGEN: 100000,
    DAMAGE: 0.5,
    HEALTH: 1000000,
    PENETRATION: 99999,
    DENSITY: 2.5,
    PUSHABILITY: 0,
    SPEED: 0,
  },
};
exports.acidicFieldSpawner = {
  PARENT: [exports.genericTank],
  ALPHA: 0,
  SHAPE: 0,
  MAX_CHILDREN: 1,
  GUNS: [
    {
      POSITION: [0, 20, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.atmosphere, g.size120, g.size120]),
        TYPE: [exports.acidicField, { COLOR: 0 }],
        MAX_CHILDREN: 1,
        AUTOFIRE: true,
      },
    },
  ],
};
exports.damageAuraSpawner = {
  PARENT: [exports.genericTank],
  ALPHA: 0,
  SHAPE: 0,
  COLOR: 10,
  MAX_CHILDREN: 1,
  GUNS: [
    {
      POSITION: [0, 20, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.atmosphere, g.size120, g.size120]),
        TYPE: [exports.damageAura, { COLOR: 0 }],
        MAX_CHILDREN: 1,
        AUTOFIRE: true,
      },
    },
  ],
};
exports.healAuraSpawner = {
  PARENT: [exports.damageAuraSpawner],
  HEAL_EFFECT: true,
  GUNS: [
    {
      POSITION: [0, 20, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.atmosphere, g.size500, g.size200]),
        TYPE: [exports.healAura, { COLOR: 32 }],
        MAX_CHILDREN: 1,
        AUTOFIRE: true,
      },
    },
  ],
};
exports.repairAuraSpawner = {
  PARENT: [exports.damageAuraSpawner],
  REPAIR_EFFECT: true,
  GUNS: [
    {
      POSITION: [0, 20, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.atmosphere, g.size500, g.size200]),
        TYPE: [exports.repairAura, { COLOR: 39 }],
        MAX_CHILDREN: 1,
        AUTOFIRE: true,
      },
    },
  ],
};
exports.metta1AuraSpawner = {
  PARENT: [exports.genericTank],
  ALPHA: 0,
  SHAPE: 0,
  MAX_CHILDREN: 1,
  GUNS: [
    {
      POSITION: [0, 20, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.atmosphere, g.size120, g.size120]),
        TYPE: [exports.metta1, { COLOR: 0 }],
        MAX_CHILDREN: 1,
        AUTOFIRE: true,
      },
    },
  ],
};
exports.metta2AuraSpawner = {
  PARENT: [exports.metta1AuraSpawner],
  HEAL_EFFECT: true,
  GUNS: [
    {
      POSITION: [0, 20, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.atmosphere, g.size500, g.size200]),
        TYPE: [exports.metta2, { COLOR: 32 }],
        MAX_CHILDREN: 1,
        AUTOFIRE: true,
      },
    },
  ],
};
exports.metta3AuraSpawner = {
  PARENT: [exports.metta1AuraSpawner],
  REPAIR_EFFECT: true,
  GUNS: [
    {
      POSITION: [0, 20, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.atmosphere, g.size500, g.size200]),
        TYPE: [exports.metta3, { COLOR: 39 }],
        MAX_CHILDREN: 1,
        AUTOFIRE: true,
      },
    },
  ],
};
//BULLETS
exports.acceleratingBullet = {
  PARENT: [exports.bullet],
  MOTION_TYPE: "accel",
};
exports.arenaBullet = {
  PARENT: [exports.bullet],
  IGNORE_COLLISION: true,
};
exports.healerBullet = {
  PARENT: [exports.bullet],
  HEAL_EFFECT: true,
};
exports.repairBullet = {
  PARENT: [exports.bullet],
  REPAIR_EFFECT: true,
};
exports.smasherBullet = {
  PARENT: [exports.bullet],
  TURRETS: [
    {
      POSITION: [25, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
};
//TURRETS
exports.autoTurret = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.25,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.power,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.machineTurret = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.25,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 10, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.power,
          g.mach,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.penTurret = {
  PARENT: [exports.autoTurret],
  BODY: {
    FOV: 1.45,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.superReload]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.superReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ]
};
exports.weakAutoPentagonGun = {
  PARENT: [exports.autoPentagonGun],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.auto]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.autoBasicTurret = {
  PARENT: [exports.autoTurret],
  LABEL: "",
  RELOAD: base.RELOAD * 0.55,
  BODY: {

    FOV: 1.25,
  },
  COLOR: 16,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [28, 13, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.barracudarifle = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 3.25,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 4.5, 1, 0, 3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.rifle, g.doubleHealth, g.doublePenetration, g.greaterDamage, g.bitmoreSpeed]),
        TYPE: exports.bullet,
      }
    },
    {
      POSITION: [20, 4.5, 1, 0, -3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.rifle, g.doubleHealth, g.doublePenetration, g.greaterDamage, g.bitmoreSpeed]),
        TYPE: exports.bullet,
      }
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.rifle, g.doubleHealth, g.doublePenetration, g.greaterDamage, g.bitmoreSpeed]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.creationrifle = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 3.25,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 4.5, 1, 0, 3.7, 0, 1 / 3],
    },
    {
      POSITION: [20, 4.5, 1, 0, -3.7, 0, 1 / 3],
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.rifle, g.auto, g.flank,]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 10, 0.7, -2.5, 0, 140, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed, g.auto, g.flank, g.halfDamage,]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [16, 10, 0.7, -2.5, 0, -140, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed, g.auto, g.flank, g.halfDamage,]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [16, 10, 0.7, 0.5, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed, g.auto, g.flank, g.halfDamage,]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [16, 10, 0.7, 0.5, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed, g.auto, g.flank, g.halfDamage,]),
        TYPE: exports.swarmDrone,
      },
    },

  ],
};
exports.barracudatriple = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 2.25,
  },
  COLOR: 5,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  GUNS: [


    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 0, 25, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.sniper]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 0, -25, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.sniper]),
        TYPE: exports.bullet,
      },
    },
      {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18.5, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.sniper,]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.seraphimTriplet = {
  PARENT: [exports.barracudatriple],
  COLOR: 16,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 0, 25, 0.666],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.greaterReload, g.halfStats]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 0, -25, 0.666],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.greaterReload, g.halfStats]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 5, 1, 0, 0, 12.5, 0.333],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.greaterReload, g.halfStats]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 5, 1, 0, 0, -12.5, 0.333],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.greaterReload, g.halfStats]),
        TYPE: exports.bullet,
      },
    },
      {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18.5, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.greaterReload, g.halfStats]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.autoWarkTurret = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.25,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  GUNS: [
    {
      POSITION: [15, 8, 1, 0, 5.5, 5, 0],
    },
    {
      POSITION: [3, 8, 1.7, 14, 5.5, 5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 8, 1, 0, -5.5, -5, 0.5],
    },
    {
      POSITION: [3, 8, 1.7, 14, -5.5, -5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.healingPillboxTurret = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  INDEPENDENT: true,
  CONTROLLERS: ["alwaysFire", "spin"],
  AI: { NO_LEAD: true },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.minorSpeed]),
        TYPE: exports.healerBullet,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [21, 10, 1, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.minorSpeed]),
        TYPE: exports.healerBullet,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 120, 0],
    },
    {
      POSITION: [21, 10, 1, 0, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.minorSpeed]),
        TYPE: exports.healerBullet,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, -120, 0],
    },
  ],
};
exports.strongAutoTurret = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.gunner,
          g.power,
          g.greaterHealth,
          g.superReload,
          g.greaterReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.autoBeeTurret = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.superReload,
          g.greaterReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.autoBee = {
  PARENT: [exports.beeDrone],
  TURRETS: [
    {
      POSITION: [12, 0, 0, 0, 0, 1],
      TYPE: exports.autoBeeTurret,
    },
  ],
};
exports.assaulterTurret = {
  PARENT: [exports.autoTurret],
  LABEL: "Assaulter",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7.5, 5.5, 0.6, 5, 7, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.lesserStats]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7.5, 5.5, 0.6, 5, -7, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.lesserStats]),
        TYPE: exports.uncontrolledSwarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 2, 1, 0, -2.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 2, 1, 0, 2.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 11, 1, 0, 0, 0, 0],
    },
  ],
};
exports.cruiserTurret1 = {
  PARENT: [exports.autoTurret],
  INDEPENDENT: false,
  GUNS: [
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.lesserHealth, g.lesserDamage]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.cruiserTurret2 = {
  PARENT: [exports.autoTurret],
  INDEPENDENT: false,
  GUNS: [
    {
      POSITION: [7, 7.5, 0.6, 7, 4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.lesserHealth, g.lesserDamage]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.lesserHealth, g.lesserDamage]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.cruiserTurret3 = {
  PARENT: [exports.autoTurret],
  INDEPENDENT: false,
  GUNS: [
    {
      POSITION: [9, 7.5, 0.6, 7, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.lesserHealth, g.lesserDamage]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.lesserHealth, g.lesserDamage]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.lesserHealth, g.lesserDamage]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.crossbowTurret = {
  PARENT: [exports.autoTurret],
  LABEL: "Crossbow",
  HAS_NO_RECOIL: true,
  INDEPENDENT: false,
  COLOR: 19,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.225,
  },
  GUNS: [
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [9, 3.5, 1, 4, -2, -32, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [9, 3.5, 1, 4, 2, 32, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [15.5, 3.5, 1, 0, -2.3, -19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [15.5, 3.5, 1, 0, 2.3, 19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, 3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, -3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.sniper, g.rifle]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.rogueEternalCrossbowTurret = {
  PARENT: [exports.autoTurret],
  LABEL: "Crossbow",
  COLOR: 10,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.225,
  },
  GUNS: [
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [9, 3.5, 1, 4, -2, -32, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [9, 3.5, 1, 4, 2, 32, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [15.5, 3.5, 1, 0, -2.3, -19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [15.5, 3.5, 1, 0, 2.3, 19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, 3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, -3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.sniper, g.rifle]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.rogueLiberatorRangerTurret = {
  PARENT: [exports.autoTurret],
  LABEL: "Ranger",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.5,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.5,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [32, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.assass, g.greaterStats, g.superReload]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 8.5, -1.6, 8, 0, 0, 0],
    },
  ],
};
exports.rogueLiberatorQuinSniperTurret = {
  PARENT: [exports.autoTurret],//this isnt a crossbow, this is a quintuplet
  LABEL: "Quin-Sniper",
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.225,
  },
  GUNS: [
    {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 4.5, 1, 0, 5, 0, 3 / 3],//oh
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserStats]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [12, 4.5, 1, 0, -5, 0, 3 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserStats]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [16, 4.5, 1, 0, 4, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserStats]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [16, 4.5, 1, 0, -4, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserStats]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, 3, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserStats]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, -3, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserStats]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.sniper, g.rifle, g.lesserStats]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.idleAutoTurret = {
  PARENT: [exports.autoTurret],
  CONTROLLERS: ["Dominator"],
};

exports.squareAutoTurret = {
  PARENT: [exports.autoTurret],
  SHAPE: 4,
};
exports.machine3Turret = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  COLOR: 16,
  SHAPE: 4,
  LABEL: "",
  CONTROLLERS: ["nearestDifferentMaster"],
  GUNS: [
    {
      POSITION: [12, 10, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.halfStats, g.mach]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.breakerAutoTurret = {
  PARENT: [exports.autoTurret],
  SHAPE: -5,
};
exports.smasherOrbGenerator = {
PARENT: [exports.genericTank],
  LABEL: "",
  CONTROLLERS: ["spin"],
  //SPIN_RATE: -0.5555,
  COLOR: 9,
  SHAPE: 6,
  INDEPENDENT: true,
  GUNS: [
        
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.greaterStats,
                  g.lesserDamage,
                 // g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
            
            ],
        };
exports.colliderDriveTurret = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.25,
  },
  SHAPE: 6,
  COLOR: 9,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.power,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.driveSmasherOrb = {
  PARENT: [exports.drone],
  TYPE: "trap",
  SHAPE: 0,
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapTargetToGoal",
    "hangOutNearMaster",
  ],
  AI: { FARMER: true },
  WALL_IMMUNITY: true,
  INDEPENDENT: false,
  SPECIAL_EFFECT: "push",
  REPEL: 0.25,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.colliderDriveTurret,
    },
  ],
};
exports.driveOrbGenerator = {
PARENT: [exports.genericTank],
  LABEL: "",
  CONTROLLERS: ["spin"],
  //SPIN_RATE: -0.5555,
  ALPHA: 0,
  COLOR: 9,
  SHAPE: 6,
  INDEPENDENT: true,
  GUNS: [
        
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.greaterStats,
                  g.lesserDamage,
                 // g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.driveSmasherOrb,
                  {
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
            
            ],
        };
exports.growerOrbGenerator = {
PARENT: [exports.genericTank],
  LABEL: "",
  CONTROLLERS: ["spin"],
  //SPIN_RATE: -0.5555,
  GROWTH_FACTOR: 5,
  COLOR: 9,
  SHAPE: 6,
  INDEPENDENT: true,
  GUNS: [
        
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.greaterStats,
                  g.lesserDamage,
                  g.doubleHealth,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
  GROWTH_FACTOR: 2,
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
            
            ],
        };
exports.powerOrbGenerator = {
PARENT: [exports.smasherOrbGenerator],
  SHAPE: 6,
  GUNS: [
        
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superSize,
                  g.greaterSize,
                  //g.greaterStats,
                  g.superHealth,
                  g.greaterReload,
                  g.greaterDamage,
                  g.superHealth,
                  g.superHealth,
                  g.superHealth,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.powerOrb,
                  {
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
            
            ],
        };
exports.dualCollident = {
  PARENT: [exports.genericTank],
  TYPE: "attachment",
  SHAPE: 1,
  FACING_TYPE: "autospin",
  CONTROLLERS: ["teleportToMaster"],
  ACCEPTS_SCORE: false,
  GIVE_KILL_MESSAGE: false,
  CONNECTED_TRAITS: [
    "skill.score",
    ],
  DIE_AT_RANGE: true,
  SPIN_RATE: 0.075,
  BODY: {
    HEALTH: 99999,
    RANGE: 1000,
    DAMAGE: 0,
    PENETRATION: 999,//deadly amount of penetration this baby has in it
    },
    DRAW_HEALTH: false,
  CLEAR_ON_MASTER_UPGRADE: true,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 0, 360, 1],
      TYPE: [exports.smasherOrbGenerator],
     },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, -55, 0, 360, 1],
      TYPE: [exports.smasherOrbGenerator],
     },
       ],
         };
exports.dualcollidentB = {
  PARENT: [exports.dualCollident],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [25, 0, 82.5, 0, 360, 1],
      TYPE: [exports.smasherOrbGenerator],
     },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [25, 0, -82.5, 0, 360, 1],
      TYPE: [exports.smasherOrbGenerator],
     },
       ],
  
}
exports.dualcollidentB2 = {
  PARENT: [exports.dualCollident],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [25, 0, 92.5, 0, 360, 1],
      TYPE: [exports.smasherOrbGenerator],
     },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [25, 0, -92.5, 0, 360, 1],
      TYPE: [exports.smasherOrbGenerator],
     },
       ],
  
}
exports.dualcollidentB3 = {
  PARENT: [exports.dualCollident],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [25, 0, 102.5, 0, 360, 1],
      TYPE: [exports.smasherOrbGenerator],
     },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [25, 0, -102.5, 0, 360, 1],
      TYPE: [exports.smasherOrbGenerator],
     },
       ],
  
}
exports.dualcollidentS = {
  PARENT: [exports.dualCollident],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 27.5, 0, 360, 1],
      TYPE: [exports.smasherOrbGenerator],
     },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, -27.5, 0, 360, 1],
      TYPE: [exports.smasherOrbGenerator],
     },
       ],
  
}
exports.trioCollident = {
  PARENT: [exports.dualCollident],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 0, 360, 1],
      TYPE: [exports.smasherOrbGenerator],
     },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 120, 360, 1],
      TYPE: [exports.smasherOrbGenerator],
     },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 240, 360, 1],
      TYPE: [exports.smasherOrbGenerator],
     },
       ],
         };
exports.driveCollident = {
  PARENT: [exports.dualCollident],
    ALPHA: 0,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 0, 360, 1],
      TYPE: [exports.driveOrbGenerator],
     },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 120, 360, 1],
      TYPE: [exports.driveOrbGenerator],
     },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 240, 360, 1],
      TYPE: [exports.driveOrbGenerator],
     },
       ],
         };
exports.growCollident = {
  PARENT: [exports.dualCollident],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 0, 360, 1],
      TYPE: [exports.growerOrbGenerator],
     },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 120, 360, 1],
      TYPE: [exports.growerOrbGenerator],
     },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 240, 360, 1],
      TYPE: [exports.growerOrbGenerator],
     },
       ],
         };
exports.ascendantCollident = {
  PARENT: [exports.dualCollident],
  SHAPE: 0,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 0, 360, 1],
      TYPE: [exports.powerOrbGenerator],
     },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 120, 360, 1],
      TYPE: [exports.powerOrbGenerator],
     },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 240, 360, 1],
      TYPE: [exports.powerOrbGenerator],
     },
       ],
  };
exports.auto3Turret = {
  PARENT: [exports.autoTurret],
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.auto]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.healer3Turret = {
  PARENT: [exports.autoTurret],
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  AI_TARGET: "healAllies",
  INDEPENDENT: false,
  TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [12, 0, 0, 0, 360, 1],
        TYPE: [exports.redsquar],
      },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.auto, g.halfSpeed]),
        TYPE: exports.healerBullet,
      },
    },
  ],
};
//Missiles
exports.sentinelMissile1 = {
  PARENT: [exports.bullet],
  LABEL: "Missile",
  INDEPENDENT: true,
  BODY: {
    RANGE: 120,
    DENSITY: 3,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

      POSITION: [12, 10, 0, 0, 0, 180, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.superDamage,
          g.superDamage,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, -2, 130, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.superDamage,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 2, 230, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.superDamage,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.skimmerPentagonTurret = {
  PARENT: [exports.autoTurret],
  SHAPE: 5,
  COLOR: 14,
  BODY: {
    FOV: 7.5,
  },
  GUNS: [
    {
      POSITION: [20, 10, 1, , 0, , 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 13, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.power,
          g.superDamage,
          g.greaterHealth,
          g.doubleReload,
        ]),
        TYPE: exports.sentinelMissile1,
      },
    },
  ],
};
exports.crossbowPentagonTurret = {
  PARENT: [exports.autoTurret],
  SHAPE: 5,
  COLOR: 14,
  BODY: {
    FOV: 7.5,
  },
  GUNS: [
    {
      POSITION: [15.5, 3.5, 1, 0, -2.3, -19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15.5, 3.5, 1, 0, 2.3, 19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, 3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, -3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.rifle]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.strongAuto3Turret = {
  PARENT: [exports.autoTurret],
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.auto, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.mechanistTurret = {
  PARENT: [exports.autoTurret],
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: [
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.auto, g.pound, g.destroy, g.doubleDensity, g.doubleDensity, g.doubleSpeed, g.doubleSpeed, g.lesserReload]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.crackShotTurret = {
  PARENT: [exports.auto3Turret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 8, 1, 0, -3, -10, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 3, 10, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 2.5, 1, 0, 2, 5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.greaterDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 2.5, 1, 0, -2, -5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.greaterDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.eldurkturret = {
  PARENT: [exports.autoTurret],
  LABEL: "Eater",
  DANGER: 7,
  GUNS: [],
  TURRETS: [
    {
      POSITION: [11, 8, 0, 50, 210, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, -50, 210, 0],
      TYPE: exports.auto3Turret,
    },
  ],
};
exports.crack3 = {
  PARENT: [exports.genericTank],
  LABEL: "Crack Shot-3",
  DANGER: 7,
  COLOR: 1,
  FACING_TYPE: "autospin",
  CONTROLLERS: ["spin"],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.crackShotTurret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.crackShotTurret,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.crackShotTurret,
    },
  ],
};
exports.fleetBody = {
  PARENT: [exports.autoTurret],
  SHAPE: 3,
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: ["canRepel", "mapAltToFire", "nearestDifferentMaster"],
  INDEPENDENT: false,
  GUNS: [
    {
      POSITION: [12.5, 6, 1, 0, 5, 180, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 6, 1, 0, -5, 180, 0],
    },
    {
      POSITION: [2, 6, 1.4, 12, 5, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.thruster]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [2, 6, 1.4, 12, -5, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.thruster]),
        TYPE: exports.trap,
      },
    },
  ],
};
exports.hexaAutoRing = {
  PARENT: [exports.genericTank],
  TYPE: "attachment",
  FACING_TYPE: "autospin",
  CONTROLLERS: ["teleportToMaster"],
  ACCEPTS_SCORE: false,
  GIVE_KILL_MESSAGE: false,
  CONNECTED_TRAITS: [
    "skill.score",
    ],
    SHAPE: 1,
  DIE_AT_RANGE: true,
  SPIN_RATE: 0.005,
  BODY: {
    HEALTH: 99999,
    RANGE: 1000,
    DAMAGE: 0,
    PENETRATION: 999,//deadly amount of penetration this baby has in it
    },
    DRAW_HEALTH: false,
  CLEAR_ON_MASTER_UPGRADE: true,
  INDEPENDENT: true,
  TURRETS: [
    {
      POSITION: [2.25, 11, 0, 0, 360, 1],
      TYPE: exports.autoTurret,
    },
    {
      POSITION: [2.25, 11, 0, 60, 360, 1],
      TYPE: exports.autoTurret,
    },
    {
      POSITION: [2.25, 11, 0, 120, 360, 1],
      TYPE: exports.autoTurret,
    },
    {
      POSITION: [2.25, 11, 0, 180, 360, 1],
      TYPE: exports.autoTurret,
    },
    {
      POSITION: [2.25, 11, 0, 240, 360, 1],
      TYPE: exports.autoTurret,
    },
    {
      POSITION: [2.25, 11, 0, 300, 360, 1],
      TYPE: exports.autoTurret,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 12, 1, 9, 0, 30, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, 90, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, 150, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, -150, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, -90, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, -30, 0],
    },
  ],
};
exports.strongHexaAutoRing = {
  PARENT: [exports.hexaAutoRing],
  LABEL: "",
  SHAPE: 1,
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  INDEPENDENT: false,
  TURRETS: [
    {
      POSITION: [2.25, 11, 0, 0, 360, 1],
      TYPE: exports.mechanistTurret,

    },
    {
      POSITION: [2.25, 11, 0, 60, 360, 1],
      TYPE: exports.mechanistTurret,
    },
    {
      POSITION: [2.25, 11, 0, 120, 360, 1],
      TYPE: exports.mechanistTurret,
    },
    {
      POSITION: [2.25, 11, 0, 180, 360, 1],
      TYPE: exports.mechanistTurret,
    },
    {
      POSITION: [2.25, 11, 0, 240, 360, 1],
      TYPE: exports.mechanistTurret,
    },
    {
      POSITION: [2.25, 11, 0, 300, 360, 1],
      TYPE: exports.mechanistTurret,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 12, 1, 9, 0, 30, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, 90, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, 150, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, -150, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, -90, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, -30, 0],
    },
  ],
};
exports.SeraphimRing = {
  PARENT: [exports.hexaAutoRing],
  LABEL: "",
  SHAPE: 1,
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  INDEPENDENT: false,
  TURRETS: [
    {
      POSITION: [2.25, 11, 0, 22.5, 360, 1],
      TYPE: exports.seraphimTriplet,
    },
    {
      POSITION: [2.25, 11, 0, 67.5, 360, 1],
      TYPE: exports.seraphimTriplet,
    },
    {
      POSITION: [2.25, 11, 0, 112.5, 360, 1],
      TYPE: exports.seraphimTriplet,
    },
    {
      POSITION: [2.25, 11, 0, 157.5, 360, 1],
      TYPE: exports.seraphimTriplet,
    },
    {
      POSITION: [2.25, 11, 0, 202.5, 360, 1],
      TYPE: exports.seraphimTriplet,
    },
    {
      POSITION: [2.25, 11, 0, 247.5, 360, 1],
      TYPE: exports.seraphimTriplet,
    },
    {
      POSITION: [2.25, 11, 0, 292.5, 360, 1],
      TYPE: exports.seraphimTriplet,
    },
    {
      POSITION: [2.25, 11, 0, 337.5, 360, 1],
      TYPE: exports.seraphimTriplet,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 10, 1, 10, 0, 0, 0],
    },
    {
      POSITION: [1, 10, 1, 10, 0, -90, 0],
    },
    {
      POSITION: [1, 10, 1, 10, 0, 90, 0],
    },
    {
      POSITION: [1, 10, 1, 10, 0, 180, 0],
    },
    {
      POSITION: [1, 10, 1, 10, 0, -45, 0],
    },
    {
      POSITION: [1, 10, 1, 10, 0, 45, 0],
    },
    {
      POSITION: [1, 10, 1, 10, 0, -135, 0],
    },
    {
      POSITION: [1, 10, 1, 10, 0, 135, 0],
    },
  ],
};
exports.reverseSeraphimRing = {
  PARENT: [exports.SeraphimRing],
  SPIN_RATE: -0.05,
  };
exports.barricadeTurret = {
  PARENT: [exports.auto3Turret],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  HAS_NO_RECOIL: true,
  BODY: {
    FOV: 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [6, 7, 1.35, 19.6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.halfDamage,
          g.halfHealth,
          g.halfReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4.5, 7, 1.35, 16.6, 0, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.halfDamage,
          g.halfHealth,
          g.halfReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3.2, 7, 1.35, 13.6, 0, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.halfDamage,
          g.halfHealth,
          g.halfReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.trapTurret2 = {
  PARENT: [exports.auto3Turret],
  DANGER: 7,
  LABEL: "Barricade",
  STAT_NAMES: statnames.trap,
  BODY: {
    FOV: 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

      POSITION: [17, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.8, 17, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.mechanicalTurret = {
  PARENT: [exports.autoTurret],
  HAS_NO_RECOIL: true,
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 13, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.flank, g.auto]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.mechanicalTrapTurret = {
  PARENT: [exports.autoTurret],
  HAS_NO_RECOIL: true,
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 11, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 11, 1.6, 19.6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.lesserDamage]),
        TYPE: exports.trap,
      },
    },
  ],
};
exports.mechanicalBarricadeTurret = {
  PARENT: [exports.autoTurret],
  HAS_NO_RECOIL: true,
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [25, 11, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 11, 1.6, 24.6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [4, 11, 1.6, 13.6, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
      },
    },
  ],
};
exports.mechanicalBuilderTurret = {
  PARENT: [exports.autoTurret],
  HAS_NO_RECOIL: true,
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 12, 1.2, 19.6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.setBlock,
      },
    },
  ],
};
exports.mechanicalMachineGunTurret = {
  PARENT: [exports.mechanicalTurret],
  INDEPENDENT: false,
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      POSITION: [20, 10, 1.4, 3, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.doubleReload]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.mechanicalGunnerTurret = {
  PARENT: [exports.autoTurret],
  HAS_NO_RECOIL: true,
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 2, 1, 0, -2.5, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 2, 1, 0, 2.5, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 2, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5.5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.mechanicalSwarmTurret1 = {
  PARENT: [exports.autoTurret],
  HAS_NO_RECOIL: true,
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 13, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.flank, g.auto]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 8, 0.7, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.flank, g.auto]),
        TYPE: exports.swarmDrone,
      },
    },
  ],
};
exports.mechanicalSwarmTurret2 = {
  PARENT: [exports.autoTurret],
  HAS_NO_RECOIL: true,
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 13, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.flank, g.auto]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 8, 0.7, 0, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.flank, g.auto]),
        TYPE: exports.swarmDrone,
      },
    },
  ],
};
exports.mechanicalBeeTurret = {
  PARENT: [exports.auto3Turret],
  HAS_NO_RECOIL: true,
  LABEL: "",
  SHAPE: 6,
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 13, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.flank, g.auto]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, -60, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.beeTurret = {
  PARENT: [exports.auto3Turret],
  LABEL: "",
  SHAPE: 6,
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 9.5, 1, 7, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.auto]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, -60, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.auto4Turret = {
  PARENT: [exports.auto3Turret],

  BODY: {
    FOV: 2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 4, 1, 0, -3.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.auto,
          g.greaterDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 4, 1, 0, 3.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.auto,
          g.greaterDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.freyja4Turret = {
  PARENT: [exports.auto3Turret],

  BODY: {
    FOV: 2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 4, 1, 0, -3.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.greaterDamage,
          g.doubleHealth,
          g.mediumSpeed
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 4, 1, 0, 3.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.greaterDamage,
          g.doubleHealth,
          g.mediumSpeed
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.miniEliteGunnerTurret = {
  PARENT: [exports.auto4Turret],
  BODY: {
    FOV: 2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 4, 1, 0, -3.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.power,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 4, 1, 0, 3.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.bigAuto4Turret = {
  PARENT: [exports.auto3Turret],
  COLOR: 5,
  INDEPENDENT: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 5, 1, 0, -4.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.triple]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 5, 1, 0, 4.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.triple]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.triple]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.squaredtriplet = {
  PARENT: [exports.auto3Turret],
  COLOR: 16,
  INDEPENDENT: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 5, 1, 0, -4.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.triple, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 5, 1, 0, 4.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.triple, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.triple, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.autoBounce = {
  PARENT: [exports.autoTurret],

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 1, 1, 0, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.bounce, g.greaterReload]),
        TYPE: [exports.bullet, { ALPHA: 0 }],
      },
    },
  ],
};
exports.noviceTurret = {
  PARENT: [exports.genericTank],
  INDEPENDENT: false,
  CONTROLLERS: [],
  SHAPE: 0,
  BODY: {
    FOV: 3,
  },
  HAS_NO_RECOIL: true,
  GUNS: [
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [19, 8, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.greaterDamage, g.halfStats]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [5.5, 4, -1.8, 6.5, 0, 0, 0],
  },
  ],
};
exports.adeptTurret = {
  PARENT: [exports.genericTank],
  INDEPENDENT: false,
  CONTROLLERS: [],
  SHAPE: 0,
  BODY: {
    FOV: 3,
  },
  HAS_NO_RECOIL: true,
  GUNS: [
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [19, 8, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.doubleDamage, g.halfStats]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [6, 5, -1.8, 6.5, 0, 0, 0],
  },
  ],
};
exports.bounce = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 1, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.bounce, g.doubleReload]),
        TYPE: [exports.bullet, { ALPHA: 0 }],
      },
    },
  ],
};
exports.bang = {
  PARENT: [exports.genericTank],
  SHAPE: 3,
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  MAX_CHILDREN: 1,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 1, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.bang,
          g.uberHealth,
          g.uberDensity,
          g.minorSpeed,
          g.minorSpeed,
          g.minorSpeed,
          g.superPenetration,
        ]),
        TYPE: [
          exports.bullet,
          {
            IGNORE_COLLISION: true,
            MOTION_TYPE: "growth",
            SPECIAL_EFFECT: "push",
            REPEL: 0.5,
            INTANGIBLE: true,
          },
        ],
      },
    },
  ],
};
exports.bangAlt = {
  PARENT: [exports.genericTank],
  SHAPE: 3,
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  MAX_CHILDREN: 1,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 1, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.bang,
          g.uberHealth,
          g.uberDensity,
          g.minorSpeed,
          g.minorSpeed,
          g.minorSpeed,
          g.superPenetration,
        ]),
        TYPE: [
          exports.bullet,
          {
            IGNORE_COLLISION: true,
            MOTION_TYPE: "growth",
            SPECIAL_EFFECT: "push",
            REPEL: 0.5,
            INTANGIBLE: true,
          },
        ],
        ALT_FIRE: true,
      },
    },
  ],
};
exports.bigBang = {
  PARENT: [exports.genericTank],
  SHAPE: 3,
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.085,
  MAX_CHILDREN: 1,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 1, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.bang,
          g.superRange,
          g.superRange,
          g.uberHealth,
          g.uberDensity,
          g.superDamage,
          g.superReload,
          g.minorSpeed,
          g.minorSpeed,
          g.minorSpeed,
          g.superPenetration,
        ]),
        TYPE: [
          exports.bullet,
          {
            IGNORE_COLLISION: true,
            MOTION_TYPE: "growth",
            SPECIAL_EFFECT: "push",
            REPEL: 0.5,
            INTANGIBLE: true,
          },
        ],
      },
    },
  ],
};
exports.bangBang = {
  PARENT: [exports.genericTank],
  SHAPE: 3,
  CONTROLLERS: ["spin"],
  SPIN_RATE: -0.85,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 1, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.bang,
          g.uberHealth,
          g.uberDensity,
          g.superDamage,
          g.minorSpeed,
          g.minorSpeed,
          g.minorSpeed,
          g.superPenetration,
          g.uberReload,
        ]),
        TYPE: [
          exports.bullet,
          {
            IGNORE_COLLISION: true,
            MOTION_TYPE: "growth",
            SPECIAL_EFFECT: "push",
            REPEL: 0.5,
            INTANGIBLE: true,
          },
        ],
      },
    },
  ],
};
exports.lesserAutoTurret = {
  PARENT: [exports.autoTurret],
  LABEL: "Turret",
  BODY: {
    FOV: 1.65,
  },
  GUNS: [
    {
      POSITION: [22, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minion,
          g.greaterHealth,
          g.lesserDamage,
          g.doubleReload,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
      },
    },
  ],
};
exports.weakAutoTurret = {
  PARENT: [exports.autoTurret],
  LABEL: "Turret",
  BODY: {
    FOV: 1.65,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minion,
          g.superReload,
          g.lesserDamage,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
      },
    },
  ],
};
exports.miniCelestialTrapTurret = {
  PARENT: [exports.autoTurret],
  LABEL: "",
  SIZE: 12,
  SHAPE: 0,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 14, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 14, 1.8, 16, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.superHealth,
          g.greaterSize,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
        AUTOFIRE: true,
      },
    },
  ],
};
exports.celestialTrapTurret = {
  PARENT: [exports.autoTurret],
  LABEL: "",
  SIZE: 12,
  SHAPE: 0,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 14, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 14, 1.8, 16, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.superHealth,
          g.greaterRange,
          g.greaterReload,
          g.doubleSize,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
        AUTOFIRE: true,
      },
    },
  ],
};

exports.trapTurret = {
  PARENT: [exports.autoTurret],
  LABEL: "Turret",
  BODY: {
    FOV: 1,
  },
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  COLOR: 16,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 14, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 14, 1.8, 16, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: [exports.trap, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.voidTrapTurret = {
  PARENT: [exports.autoTurret],
  LABEL: "Turret",
  BODY: {
    FOV: 1,
  },
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  COLOR: 16,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 9, 1, 0, 8, 0, 0],
    },
    {
      POSITION: [4, 9, 1.8, 20, 8, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: [exports.trap, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 9, 1, 0, -8, 0, 0],
    },
    {
      POSITION: [4, 9, 1.8, 20, -8, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: [exports.trap, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.megaTrapTurret = {
  PARENT: [exports.autoTurret],
  LABEL: "Turret",
  BODY: {
    FOV: 1,
  },
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  COLOR: 16,
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 11.5, 1.7, 13.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.greaterReload,
          g.greaterSize,
          g.greaterPenetration,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.sentryTrapTurret = {
  PARENT: [exports.trapTurret],
  COLOR: 5,
  GUNS: [
    {
      POSITION: [14, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.lesserStats]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.rogueTrapTurret = {
  PARENT: [exports.trapTurret],
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  COLOR: 10,
};
exports.citadelTrapTurret = {
  PARENT: [exports.trapTurret],
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  COLOR: 10,
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 12, 1, 0, 0, 30, 0],
    },
    {
      POSITION: [4, 11.5, 1.7, 13.5, 0, 30, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.greaterReload,
          g.greaterSize,
          g.greaterPenetration,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 12, 1, 0, 0, -30, 0],
    },
    {
      POSITION: [4, 11.5, 1.7, 13.5, 0, -30, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.greaterReload,
          g.greaterSize,
          g.greaterPenetration,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 5, 1, 0, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.eggTrapTurret = {
  PARENT:[exports.rogueTrapTurret],
  COLOR: 16,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 14, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 14, 1.8, 16, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.doubleReload, g.lesserPenetration]),
        TYPE: [exports.trap, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.autoSmasherTurret = {
  PARENT: [exports.autoTurret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.power,
          g.lesserStats,
          g.lesserSpeed,
          g.greaterReload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.power,
          g.lesserStats,
          g.lesserSpeed,
          g.greaterReload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.autoSmasherTurretNoRecoil = {
  PARENT: [exports.autoSmasherTurret],
  HAS_NO_RECOIL: true,
};
exports.autoSmasherTripleTurret = {
  PARENT: [exports.autoTurret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 6, 1, 0, 5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.power,
          g.lesserStats,
          g.lesserSpeed,
          g.greaterReload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.power,
          g.lesserStats,
          g.lesserSpeed,
          g.greaterReload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [22, 6, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.power,
          g.lesserStats,
          g.lesserSpeed,
          g.greaterReload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.autoSmasherTurretIndependant = {
  PARENT: [exports.autoSmasherTurret],
  INDEPENDENT: false,
};

exports.autoSmasherTurret4 = {
  PARENT: [exports.autoTurret],
  FACING_TYPE: "autospin",
  CONTROLLERS: ["spin"],
  INDEPENDENT: true,
  SHAPE: 1,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 0, 1, 0, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7, 30, 0, 45, 360, 0],
      TYPE: exports.autoSmasherTurretIndependant,
    },
    {
      POSITION: [7, 30, 0, 135, 360, 0],
      TYPE: exports.autoSmasherTurretIndependant,
    },
    {
      POSITION: [7, 30, 0, 225, 360, 0],
      TYPE: exports.autoSmasherTurretIndependant,
    },
    {
      POSITION: [7, 30, 0, 315, 360, 0],
      TYPE: exports.autoSmasherTurretIndependant,
    },
  ],
};
exports.minorAutoSmasherTurret = {
  PARENT: [exports.autoTurret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minion,
          g.greaterHealth,
          g.halfDamage,
          g.doubleReload,
                                     ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minion,
          g.greaterHealth,
          g.halfDamage,
          g.doubleReload,
                                     ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.weakAutoSmasherTurret = {
  PARENT: [exports.autoTurret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.power, g.halfStats]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.power, g.halfStats]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.weakAutoSmasherTripleTurret = {
  PARENT: [exports.autoTurret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 7, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.power,
          g.halfStats,
          g.greaterHealth,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.power, g.halfStats]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.power, g.halfStats]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.oldAutoSmasherTurret = {
  PARENT: [exports.autoTurret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.cubedTurret = {
  PARENT: [exports.autoTurret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 15, 0.7, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.uberStats]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.spikedAutoOrb = {
  PARENT: [exports.drone],
  TYPE: "trap",
  SHAPE: 0,
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapTargetToGoal",
    "hangOutNearMaster",
  ],
  AI: { FARMER: true },
  INDEPENDENT: false,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [15.5, 0, 0, 0, 360, 1],
      TYPE: exports.weakAutoSmasherTurret,
    },
    {
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [20.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody2,
    },
  ],
};
exports.auto3EggTurret = {
  PARENT: [exports.auto3Turret],
  COLOR: 6,

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.auto,
          g.minion,
          // g.halfReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.auto5Turret = {
  PARENT: [exports.auto3Turret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.auto, g.five]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.annihilator3Turret = {
  PARENT: [exports.auto3Turret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 20, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.auto,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.mega3Turret = {
  PARENT: [exports.auto3Turret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 14, 1, 0, 0, 0, 0],
      PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.auto]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.snatcherTurret = {
  PARENT: [exports.auto3Turret],
  GUNS: [
  {
    POSITION: [23, 3, 1, 0, -3.5, 0, 0.3],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.twin,
        g.gunner,
        g.nail,
        g.power,
        g.auto,
        g.halfDamage,
      ]),
      TYPE: exports.bullet,
    },
  },
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  {
    POSITION: [23, 3, 1, 0, 3.5, 0, 0.8],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.twin,
        g.gunner,
        g.nail,
        g.power,
        g.auto,
        g.halfDamage,
      ]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [12, 11, 1, 0, 0, 0, 0],
  },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 14, 1, 0, 0, 0, 0],
      PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.auto]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.predator3Turret = {
  PARENT: [exports.auto3Turret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.auto, g.halfDamage]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [21, 11, 1, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.auto]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 14, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.hunter,
          g.greaterDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.hunter3Turret = {
  PARENT: [exports.auto3Turret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.auto,
          g.halfDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [21, 11, 1, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.auto,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.heavySentryGun = {
  PARENT: [exports.auto3Turret],
  COLOR: 5,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 14, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.auto, g.halfDamage]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.heavyBlueGun = {
  PARENT: [exports.auto3Turret],
  COLOR: 10,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 14, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.auto, g.halfDamage]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.boomerTurret = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 10, 1, 14, 0, 0, 0],
    },
    {
      POSITION: [6, 10, -1.5, 7, 0, 0, 0],
    },
    {
      POSITION: [2, 10, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.boomerang,
          g.superReload,
        ]),
        TYPE: exports.boomerang,
      },
    },
  ],
};
exports.architectTurret = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 16, 1.1, 20, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block, g.superReload]),
        TYPE: exports.setBlock,
      },
    },
  ],
};
exports.heraTurret = {
  PARENT: [exports.genericTank],
  SHAPE: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 16, 1.1, 20, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block, g.superReload]),
        TYPE: exports.setBlock,
      },
    },
  ],
};
exports.rebounderTurret = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 10, 1, 14, 0, 0, 0],
    },
    {
      POSITION: [6, 10, -1.5, 7, 0, 0, 0],
    },
    {
      POSITION: [2, 10, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.flank,
          g.block,
          g.superReload,
          g.boomerang,
        ]),
        TYPE: exports.boomerang,
      },
    },
  ],
  
};
exports.rebounderTurretC = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 10, 1, 14, 0, 0, 0],
    },
    {
      POSITION: [6, 10, -1.5, 7, 0, 0, 0],
    },
    {
      POSITION: [2, 10, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.flank,
          g.block,
          g.superReload,
          g.boomerang,
          g.lesserHealth,
        ]),
        TYPE: exports.boomerang,
      },
    },
  ],
};
exports.constructionistTurret = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 19, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 19, 1.1, 20, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.greaterHealth,
          g.greaterPenetration,
          g.flank,
          g.block,
          g.superReload,
          g.greaterReload,
        ]),
        TYPE: exports.setBlock,
      },
    },
  ],
};
exports.constructionistTurretC = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 19, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 19, 1.1, 20, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.greaterPenetration,
          g.flank,
          g.block,
          g.superReload,
          g.greaterReload,
        ]),
        TYPE: exports.setBlock,
      },
    },
  ],
};
exports.shellerTurret = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 16, 1.1, 20, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block, g.superReload]),
        TYPE: exports.setBlock,
      },
    },
    {
      POSITION: [17, 3, 1, 0, 6, 7, 0],
    },
    {
      POSITION: [2, 3, 1.4, 17, 6, 7, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.lesserStats,
          g.greaterDamage,
        ]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [17, 3, 1, 0, -6, -7, 0],
    },
    {
      POSITION: [2, 3, 1.4, 17, -6, -7, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.lesserStats,
          g.greaterDamage,
        ]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
  ],
};
exports.shellerTurretC = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 16, 1.1, 20, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block, g.superReload, g.lesserHealth,]),
        TYPE: exports.setBlock,
      },
    },
    {
      POSITION: [17, 3, 1, 0, 6, 7, 0],
    },
    {
      POSITION: [2, 3, 1.4, 17, 6, 7, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.lesserStats,
          g.greaterDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [17, 3, 1, 0, -6, -7, 0],
    },
    {
      POSITION: [2, 3, 1.4, 17, -6, -7, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.lesserStats,
          g.greaterDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
  ],
};
exports.originatorPillbox = {
  LABEL: "Pillbox",
  PARENT: [exports.setBlock],
  CONTROLLERS: ["goToMasterTarget", "nearestDifferentMaster"],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.lesserAutoTurret, { INDEPENDENT: true }],
    },
  ],
};
exports.originatorTurret = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [3, 14, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block, g.superReload]),
        TYPE: exports.originatorPillbox,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
};
exports.originatorTurretC = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [3, 14, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block, g.superReload, g.lesserReload,]),
        TYPE: exports.originatorPillbox,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
};
exports.fragmentorTurret = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 16, 1.1, 20, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block, g.superReload]),
        TYPE: exports.setBlock,
      },
    },
    {
      POSITION: [17, 7, 1, 0, 6, 7, 0],
    },
    {
      POSITION: [2, 7, 1.4, 17, 6, 7, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.lesserStats]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [17, 7, 1, 0, -6, -7, 0],
    },
    {
      POSITION: [2, 7, 1.4, 17, -6, -7, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.lesserStats]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
  ],
};
exports.bombarderTurret = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 16, 1.1, 20, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block, g.superReload]),
        TYPE: exports.setBlock,
      },
    },
    {
      POSITION: [17, 3, 1, 0, 6, 7, 0],
    },
    {
      POSITION: [2, 3, 1.4, 17, 6, 7, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.greaterDamage,
        ]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [17, 3, 1, 0, -6, -7, 0],
    },
    {
      POSITION: [2, 3, 1.4, 17, -6, -7, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.greaterDamage,
        ]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
    //
    {
      POSITION: [17, 3, 1, 0, 4, 5, 0],
    },
    {
      POSITION: [2, 3, 1.4, 17, 4, 5, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.greaterDamage,
        ]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [17, 3, 1, 0, -4, -5, 0],
    },
    {
      POSITION: [2, 3, 1.4, 17, -4, -5, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.greaterDamage,
        ]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
  ],
};
exports.fragmentorTurretC = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 16, 1.1, 20, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block, g.superReload, g.lesserHealth]),
        TYPE: exports.setBlock,
      },
    },
    {
      POSITION: [17, 7, 1, 0, 6, 7, 0],
    },
    {
      POSITION: [2, 7, 1.4, 17, 6, 7, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.lesserStats, g.lesserHealth]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [17, 7, 1, 0, -6, -7, 0],
    },
    {
      POSITION: [2, 7, 1.4, 17, -6, -7, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.lesserStats, g.lesserHealth]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
  ],
};
exports.bombarderTurretC = {
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 16, 1.1, 20, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block, g.superReload, g.lesserHealth]),
        TYPE: exports.setBlock,
      },
    },
    {
      POSITION: [17, 3, 1, 0, 6, 7, 0],
    },
    {
      POSITION: [2, 3, 1.4, 17, 6, 7, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.greaterDamage,
          g.lesserHealth
        ]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [17, 3, 1, 0, -6, -7, 0],
    },
    {
      POSITION: [2, 3, 1.4, 17, -6, -7, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.greaterDamage,
          g.lesserHealth
        ]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
    //
    {
      POSITION: [17, 3, 1, 0, 4, 5, 0],
    },
    {
      POSITION: [2, 3, 1.4, 17, 4, 5, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.greaterDamage,
          g.lesserHealth
        ]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [17, 3, 1, 0, -4, -5, 0],
    },
    {
      POSITION: [2, 3, 1.4, 17, -4, -5, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.greaterDamage,
          g.lesserHealth
        ]),
        TYPE: exports.trap,
        LABEL: "Secondary",
      },
    },
  ],
};
exports.assassin3Turret = {
  PARENT: [exports.auto3Turret],
  BODY: {
    FOV: 5,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [27, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.sniper,
          g.auto,
          g.assass,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 9, -1.5, 8, 0, 0, 0],
    },
  ],
};
exports.bansheeTurret = {
  PARENT: [exports.auto3Turret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [26, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.greaterDamage,
          g.auto,
          g.halfDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.bansheeEggTurret = {
  PARENT: [exports.auto3Turret],
  COLOR: 6,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [26, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.greaterDamage,
          g.auto,
          g.minion,
          // g.halfReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.baseSwarmTurret = {
  PARENT: [exports.auto3Turret],
  LABEL: "Protector Swarm Turret",
  INDEPENDENT: true,
  BODY: {
    FOV: 3.5,
  },
  AI: {
    NO_LEAD: true,
    LIKES_SHAPES: true,
  },

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 4.5, 0.6, 7, 2, 0, 0.15],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.protectorswarm]),
        TYPE: [
          exports.swarmDrone,
          { INDEPENDENT: true, AI: { LIKES_SHAPES: true } },
        ],
        ALWAYS_FIRE: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [5, 4.5, 0.6, 7, -2, 0, 0.15],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.protectorswarm]),
        TYPE: [
          exports.swarmDrone,
          { INDEPENDENT: true, AI: { LIKES_SHAPES: true } },
        ],
        ALWAYS_FIRE: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [5, 4.5, 0.6, 7.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.protectorswarm]),
        TYPE: [
          exports.swarmDrone,
          { INDEPENDENT: true, AI: { LIKES_SHAPES: true } },
        ],
        ALWAYS_FIRE: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.baseGunTurret = {
  PARENT: [exports.auto3Turret],
  LABEL: "Desimator Destroyer Turret",
  BODY: {
    FOV: 5,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 12, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.destroy]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [11, 13, 1, 6, 0, 0, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.destroy]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [7, 13, -1.3, 6, 0, 0, 0],
    },
  ],
};
exports.bossPillboxTurret = {
  PARENT: [exports.autoTurret],
  BODY: {
    FOV: 2,
  },
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.terrestrialPillboxTurret = {
  PARENT: [exports.autoTurret],
  BODY: {
    FOV: 2,
  },
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.lesserStats]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.pillboxTurret = {
  PARENT: [exports.bossPillboxTurret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.power,
          g.minorStats,
          g.greaterReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.bastionTurret = {
  PARENT: [exports.pillboxTurret],
  BODY: {
    FOV: base.FOV * 0.85,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 14, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.minion,
          // g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.mechTurret = {
  PARENT: [exports.pillboxTurret],
  BODY: {
    FOV: base.FOV * 0.85,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.minion,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.twinMechTurret = {
  PARENT: [exports.pillboxTurret],
  BODY: {
    FOV: base.FOV * 0.85,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 8, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.minion,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.minion,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.twinMechanisterTurret = {
  PARENT: [exports.pillboxTurret],
  BODY: {
    FOV: base.FOV * 0.85,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 8, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.minion,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.repairBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.minion,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.repairBullet,
      },
    },
  ],
};
exports.flankMechTurret = {
  PARENT: [exports.pillboxTurret],
  CONTROLLERS: ["spin", "alwaysFire"],
  SPIN_RATE: -0.02,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.gunner,
          g.minion,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 11, 1, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.gunner,
          g.minion,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 11, 1, 0, 0, 240, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.gunner,
          g.minion,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.antiTurret = {
  PARENT: [exports.genericTank],
  //CONTROLLERS: ["onlyAcceptInArc"],
  INDEPENDENT: false,
  BODY: {
    FOV: 10,
  },
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15.8, 3.5, 1, 0, -1.7, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
          g.minorReload,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15.8, 3.5, 1, 0, 1.7, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
          g.minorReload,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 3.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
          g.minorReload,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6.35, 6.5, -1.55, 6.5, 0, 0, 0],
    },
  ],
    };
exports.nailgunTurret = {
  PARENT: [exports.auto3Turret],
  CONTROLLERS: ["onlyAcceptInArc"],
  INDEPENDENT: false,
  BODY: {
    FOV: 10,
  },
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 2, 1, 0, -2.5, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 2, 1, 0, 2.5, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 2, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5.5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.antiDestroyerTurret = {
  PARENT: [exports.genericTank],
  CONTROLLERS: ["mapTargetToGoal"],
  INDEPENDENT: false,
  BODY: {
    FOV: 10,
  },
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      POSITION: [18, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
          g.halfStats,
          g.minorReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6.5, 10, -1.55, 6.5, 0, 0, 0],
    },
  ],
};
exports.crasherSpawner = {
  PARENT: [exports.genericTank],
  LABEL: "Spawned",
  STAT_NAMES: statnames.drone,
  CONTROLLERS: ["nearestDifferentMaster"],
  COLOR: 5,
  INDEPENDENT: true,
  AI: { chase: true },
  MAX_CHILDREN: 4,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.over,
          g.lesserStats,
          g.superReload,
          g.lesserDamage,
        ]),
        TYPE: [
          exports.drone,
          { LABEL: "Crasher", VARIES_IN_SIZE: true, DRAW_HEALTH: true },
        ],
        SYNCS_SKILLS: true,
        AUTOFIRE: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.masterGun = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 3,
  },
  CONTROLLERS: ["nearestDifferentMaster"],
  COLOR: 16,
  MAX_CHILDREN: 2,
  AI: {
    NO_LEAD: true,
    SKYNET: true,
    FULL_VIEW: true,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8, 14, 1.3, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
//J.J.'S SAWS
(exports.triangleSaw1 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: 3,
  INDEPENDENT: true,
}),
  (exports.triangleSaw2 = {
    LABEL: "",
    COLOR: 16,
    SHAPE: 3,
    INDEPENDENT: true,
  }),
  (exports.triangleSaw3 = {
    LABEL: "",
    COLOR: 2,
    SHAPE: 3,
    INDEPENDENT: true,
  }),
  (exports.cubedSaw1 = {
    LABEL: "",
    COLOR: 9,
    SHAPE: 4,
    INDEPENDENT: true,
  }),
  (exports.cubedGun1 = {
    LABEL: "",
    COLOR: 9,
    SHAPE: 4,
    INDEPENDENT: false,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [30, 12, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.minorDamage]),
          TYPE: exports.bullet,
          STAT_CALCULATOR: gunCalcNames.fixedReload,
        },
      },
      {
        POSITION: [40, 12, 1.7, 0, 0, 180, 1 / 3],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.morerecoil,
            g.minorDamage,
            g.minorDamage,
            g.greaterSpray,
            g.thruster,
          ]),
          TYPE: exports.bullet,
          STAT_CALCULATOR: gunCalcNames.fixedReload,
        },
      },
      {
        POSITION: [40, 12, 1.7, 0, 0, 180, 2 / 3],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.morerecoil,
            g.minorDamage,
            g.minorDamage,
            g.greaterSpray,
            g.thruster,
          ]),
          TYPE: exports.bullet,
          STAT_CALCULATOR: gunCalcNames.fixedReload,
        },
      },
      {
        POSITION: [40, 12, 1.7, 0, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.morerecoil,
            g.minorDamage,
            g.minorDamage,
            g.greaterSpray,
            g.thruster,
          ]),
          TYPE: exports.bullet,
          STAT_CALCULATOR: gunCalcNames.fixedReload,
        },
      },
    ],
  });
exports.cubedGun2 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: 4,
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [21, 11, 1, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [32, 3, 1, 0, 6, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.morerecoil, g.greaterSpray]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [26, 3, 1, 0, 2, 180, 1 / 4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.morerecoil, g.greaterSpray]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 3, 1, 0, -2, 180, 2 / 4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.morerecoil, g.greaterSpray]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [16, 3, 1, 0, -6, 180, 3 / 4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.morerecoil, g.greaterSpray]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.cubedGun3 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: 4,
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [21, 11, 1, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [32, 3, 1, 0, -6, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.morerecoil, g.greaterSpray]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [26, 3, 1, 0, -2, 180, 1 / 4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.morerecoil, g.greaterSpray]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 3, 1, 0, 2, 180, 2 / 4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.morerecoil, g.greaterSpray]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [16, 3, 1, 0, 6, 180, 3 / 4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.morerecoil, g.greaterSpray]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
//Missiles 
//Click the <--> to open code
exports.missile = {
  PARENT: [exports.bullet],
  LABEL: "Missile",
  INDEPENDENT: true,
  BODY: {
    DENSITY: 3,
    RANGE: 120,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 6, 1, 0, -2, 130, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 2, 230, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.auto3Missile = {
  PARENT: [exports.missile],
  LABEL: "Auto-3 Missile",
  DANGER: 7,
  FACING_TYPE: "turnWithSpeed",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: [exports.auto3Turret, { HAS_NO_RECOIL: true }],
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: [exports.auto3Turret, { HAS_NO_RECOIL: true }],
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: [exports.auto3Turret, { HAS_NO_RECOIL: true }],
    },
  ],
};
exports.kronosMissile = {
  PARENT: [exports.missile],
  LABEL: "Hyper Missile",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 6, 1, 0, -2, 150, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 2, 210, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, -2, 90, 0.5],
    },
    {
      POSITION: [3, 6, 1.5, 13.5, -2, 90, 0.5],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
        ]),
        TYPE: [exports.trap, { PERSISTS_AFTER_DEATH: true }],
      },
    },
    {
      POSITION: [14, 6, 1, 0, 2, 270, 0.5],
    },
    {
      POSITION: [3, 6, 1.5, 13.5, 2, 270, 0.5],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
        ]),
        TYPE: [exports.trap, { PERSISTS_AFTER_DEATH: true }],
      },
    },
  ],
};
exports.rogueEternalMissile = {
  PARENT: [exports.missile],
  LABEL: "Hyper Missile",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.greaterSpeed,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, -5, 0, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.greaterSpeed,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, -2, 150, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 2, 210, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, -2, 180, 0.5],
    },
    {
      POSITION: [3, 6, 1.5, 13.5, -2, 180, 0.5],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
        ]),
        TYPE: [exports.trap, { PERSISTS_AFTER_DEATH: true }],
      },
    },
  ],
};
exports.autoMissile = {
  PARENT: [exports.missile],
  LABEL: "Auto Missile",
  INDEPENDENT: true,
  BODY: {
    DENSITY: 3,
    RANGE: 120,
  },
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 361, 1],
      TYPE: exports.autoTurret,
    },
  ],
};
exports.autoLauncherMissile = {
  PARENT: [exports.autoMissile],
  LABEL: "Missile",
  INDEPENDENT: true,
  BODY: {
    RANGE: 120,
    DENSITY: 3,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 6, 1, 1, 0, 180, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.sentinelMissile2 = {
  PARENT: [exports.bullet],
  LABEL: "Missile",
  INDEPENDENT: true,
  BODY: {
    RANGE: 120,
    DENSITY: 3,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

      POSITION: [12, 10, 0, 0, 0, 180, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, -2, 130, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 2, 230, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.snake = {
  PARENT: [exports.bullet],
  LABEL: "Missile",

  INDEPENDENT: true,
  BODY: {
    RANGE: 120,
    DENSITY: 3,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.4, 8, 0, 180, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        STAT_CALCULATOR: gunCalcNames.thruster,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.snake,
          g.halfDamage,
          g.halfRecoil,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
      },
    },
    {
      POSITION: [10, 12, 0.8, 8, 0, 180, 0.5],
      PROPERTIES: {
        AUTOFIRE: true,
        NEGATIVE_RECOIL: true,
        STAT_CALCULATOR: gunCalcNames.thruster,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.snake,
          g.snakeskin,
          g.halfDamage,
          g.halfRecoil,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
      },
    },
  ],
};
exports.launcherMissile = {
  PARENT: [exports.bullet],
  LABEL: "Missile",
  INDEPENDENT: true,
  BODY: {
    RANGE: 120,
    DENSITY: 3,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 6, 1, 1, 0, 180, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.grenadierMissile = {
  PARENT: [exports.bullet],
  LABEL: "Missile",
  DEATH_THROES: "grenadierExplosion",
  INDEPENDENT: true,
  BODY: {
    RANGE: 120,
    DENSITY: 3,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.grenadierSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 6, 1, 1, 0, 180, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.lesserGrenadierMissile = {
  PARENT: [exports.bullet],
  LABEL: "Missile",
  DEATH_THROES: "lesserGrenadierExplosion",
  INDEPENDENT: true,
  BODY: {
    RANGE: 120,
    DENSITY: 3,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.grenadierSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 6, 1, 1, 0, 180, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.miniNeutronMissile = {
  PARENT: [exports.bullet],
  LABEL: "Missile",
  INDEPENDENT: true,
  BODY: {
    RANGE: 120,
    DENSITY: 3,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 6, 1, 1, 0, 180, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.lesserDamage,
          g.halfReload
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.beenade = {
  PARENT: [exports.bullet],
  LABEL: "Beenade Chucker",
  DEATH_THROES: "beenadeExplosion",
  INDEPENDENT: true,
  BODY: {
    RANGE: 120,
    DENSITY: 3,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13.5, 0, 0, 0, 360, 1],
      TYPE: [exports.grenadierSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 6, 1, 1, 0, 180, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.neutronMissile = {
  PARENT: [exports.bullet],
  LABEL: "Missile",
  DEATH_THROES: "neutronExplosion",
  INDEPENDENT: true,
  BODY: {
    RANGE: 120,
    DENSITY: 3,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13.5, 0, 0, 0, 360, 1],
      TYPE: [exports.acidicFieldaSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.grenadierSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 6, 1, 1, 0, 180, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.C4Missile = {
  PARENT: [exports.bullet],
  LABEL: "C4 on a Missile",
  DEATH_THROES: "C4Explosion",
  INDEPENDENT: true,
  BODY: {
    RANGE: 120,
    DENSITY: 3,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.grenadierSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 6, 1, 1, 0, 180, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.rocket = {
  PARENT: [exports.bullet],
  LABEL: "Rocket",
  INDEPENDENT: true,
  BODY: {
    RANGE: 120,
    DENSITY: 3,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8, 12, 1.4, 8, 0, 180, 3.75],
      PROPERTIES: {
        AUTOFIRE: true,
        STAT_CALCULATOR: gunCalcNames.thruster,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.arty,
          g.halfReload,
          g.doubleRecoil,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
      },
    },
  ],
};
exports.hive = {
  PARENT: [exports.bullet],
  LABEL: "Hive",
  BODY: {
    RANGE: 110,
    FOV: 0.5,
    DENSITY: 3,
  },
  FACING_TYPE: "turnWithSpeed",
  INDEPENDENT: true,
  CONTROLLERS: ["alwaysFire"],
  AI: { NO_LEAD: true },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 9.5, 0.6, 7, 0, 108, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 180, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 252, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 324, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 36, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.HexaHive = {
  PARENT: [exports.hive],
  LABEL: "Hive",
  SHAPE: 6,
  BODY: {
    RANGE: 110,
    FOV: 0.5,
    DENSITY: 3,
  },
  FACING_TYPE: "turnWithSpeed",
  INDEPENDENT: true,
  CONTROLLERS: ["alwaysFire"],
  AI: { NO_LEAD: true },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 9.5, 0.6, 7, 0, 0, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.hexaBee,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 60, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.hexaBee,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 120, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.hexaBee,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 180, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.hexaBee,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 240, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.hexaBee,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 300, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.hexaBee,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.miniHive = {
  PARENT: [exports.hive],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 9.5, 0.6, 7, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 120, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 240, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.hyperMissile = {
  PARENT: [exports.missile],
  LABEL: "Hyper Missile",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 6, 1, 0, -2, 150, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 2, 210, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, -2, 90, 0.5],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
      },
    },
    {
      POSITION: [14, 6, 1, 0, 2, 270, 0.5],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
      },
    },
  ],
};
exports.rogueMissile = {
  PARENT: [exports.missile],
  LABEL: "Rogue Skimmer Missile",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 6, 1, 0, -2, 150, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
          g.lesserRecoil,  
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 2, -150, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
          g.lesserRecoil,  
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8, 12, 1.4, 8, 0, 180, 3.75],
      PROPERTIES: {
        AUTOFIRE: true,
        STAT_CALCULATOR: gunCalcNames.thruster,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.arty,
          g.halfReload,
          g.doubleRecoil,
          g.lesserRecoil,  
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
      },
    },
    {
      POSITION: [14, 6, 1, 0, -2, 90, 0.5],
    },
    {
      POSITION: [3, 6, 1.5, 13.5, -2, 90, 0.5],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
        ]),
        TYPE: [exports.trap, { PERSISTS_AFTER_DEATH: true }],
      },
    },
    {
      POSITION: [14, 6, 1, 0, 2, 270, 0.5],
    },
    {
      POSITION: [3, 6, 1.5, 13.5, 2, 270, 0.5],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.gunner,
          g.superDamage,
          g.thruster,
          g.superRecoil,
          g.superRecoil,
          g.greaterSpeed,
        ]),
        TYPE: [exports.trap, { PERSISTS_AFTER_DEATH: true }],
      },
    },
  ],
};
//MINIONS & STATIONED TURRETS

exports.DomOrb1 = {
  PARENT: [exports.strongAuto3Turret],
  HAS_NO_RECOIL: false,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [19.5, 0, 0, 0, 361, 1],
      TYPE: exports.dominatorBody,
    },
  ],
    GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.destroy,
          g.single,
          g.NoRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.DomOrb2 = {
  PARENT: [exports.strongAuto3Turret],
  HAS_NO_RECOIL: false,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [19.5, 0, 0, 0, 361, 1],
      TYPE: exports.dominatorBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 3, 1, 0, -2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserSize,
          g.halfRange,
          g.NoRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14.5, 3, 1, 0, 2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserSize,
          g.halfRange,
          g.NoRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 3, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserSize,
          g.halfRange,
          g.NoRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.DomOrb3 = {
  PARENT: [exports.strongAuto3Turret],
  HAS_NO_RECOIL: false,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [19.5, 0, 0, 0, 361, 1],
      TYPE: exports.dominatorBody,
    },
  ],
    GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over, g.superRange, g.lesserStats, g.NoRecoil,]),
        MAX_CHILDREN: 3,
        TYPE: exports.swarmDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over, g.superRange, g.lesserStats, g.NoRecoil,]),
        MAX_CHILDREN: 3,
        TYPE: exports.swarmDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over, g.superRange, g.lesserStats, g.NoRecoil,]),
        MAX_CHILDREN: 3,
        TYPE: exports.swarmDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.DomOrb1Generator = {
PARENT: [exports.smasherOrbGenerator],
  SHAPE: 6,
  GUNS: [
        
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superSize,
                  g.greaterSize,
                  //g.greaterStats,
                  g.superHealth,
                  g.greaterReload,
                  g.lesserDamage,
                  g.superHealth,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.DomOrb1,
                  {
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
            
            ],
        };
exports.DomOrb2Generator = {
PARENT: [exports.smasherOrbGenerator],
  SHAPE: 6,
  GUNS: [
        
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superSize,
                  g.greaterSize,
                  //g.greaterStats,
                  g.superHealth,
                  g.greaterReload,
                  g.lesserDamage,
                  g.superHealth,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.DomOrb2,
                  {
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
            
            ],
        };
exports.DomOrb3Generator = {
PARENT: [exports.smasherOrbGenerator],
  SHAPE: 6,
  GUNS: [
        
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superSize,
                  g.greaterSize,
                  //g.greaterStats,
                  g.superHealth,
                  g.greaterReload,
                  g.lesserDamage,
                  g.superHealth,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.DomOrb3,
                  {
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
            
            ],
        };
exports.DomCollident = {
  PARENT: [exports.dualCollident],
  TURRETS: [
    {
      POSITION: [20, 0, 55, 0, 360, 1],
      TYPE: [exports.DomOrb1Generator],
     },
    {
      POSITION: [20, 0, 55, 120, 360, 1],
      TYPE: [exports.DomOrb2Generator],
     },
    {
      POSITION: [20, 0, 55, 240, 360, 1],
      TYPE: [exports.DomOrb3Generator],
     },
       ],
         };
exports.minion = {
  PARENT: [exports.genericTank],
  IS_PROJECTILE: true,
  LABEL: "Minion",
  TYPE: "minion",
  DAMAGE_CLASS: 0,
  TARGETABLE: false,
  HITS_OWN_TYPE: "hard",
  FACING_TYPE: "smoothToTarget",
  BODY: {
    FOV: 0.5,
    SPEED: 3,
    ACCELERATION: 0.4,
    HEALTH: 2.5,
    SHIELD: 0,
    DAMAGE: 0.75,
    RESIST: 1,
    PENETRATION: 0.85,
    RANGE: 100,
    DENSITY: 50,
  },
  AI: {
    BLIND: true,
  },
  DRAW_HEALTH: false,
  CLEAR_ON_MASTER_UPGRADE: true,
  GIVE_KILL_MESSAGE: false,
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapAltToFire",
    "minion",
    "canRepel",
    "hangOutNearMaster",
  ],
  //CONTROLLERS: ['nearestDifferentMaster'],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.minion]),
        WAIT_TO_CYCLE: true,
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.citadelMinion = {
  PARENT: [exports.minion],
  LABEL: "Citadel Minion",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 9, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.minion, g.twin]),
        WAIT_TO_CYCLE: true,
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 9, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.minion, g.twin]),
        WAIT_TO_CYCLE: true,
        TYPE: exports.bullet,
      },
    },
  ],
  
};
exports.damagedArenaCloserTurret = {
  PARENT: [exports.auto3Turret],
  LABEL: "",
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 13, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.power]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.arenaTurret = {
  PARENT: [exports.auto3Turret],
  LABEL: "",
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.halfSpeed,
          g.lesserHealth,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.arenaMinionTurret = {
  PARENT: [exports.auto3Turret],
  LABEL: "",
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.arenaMinion = {
  PARENT: [exports.genericTank],
  IS_PROJECTILE: true,
  LABEL: "Arena Minion",
  TYPE: "minion",
  DAMAGE_CLASS: 0,
  TARGETABLE: false,
  IGNORE_COLLISION: true,
  HITS_OWN_TYPE: "hard",
  FACING_TYPE: "smoothToTarget",
  BODY: {
    FOV: 0.5,
    SPEED: 3,
    ACCELERATION: 0.4,
    HEALTH: 2,
    SHIELD: 0,
    DAMAGE: 0.75,
    RESIST: 1,
    PENETRATION: 0.85,
    RANGE: 100,
    DENSITY: 50,
  },
  AI: {
    BLIND: true,
  },
  DRAW_HEALTH: false,
  CLEAR_ON_MASTER_UPGRADE: true,
  GIVE_KILL_MESSAGE: false,
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapAltToFire",
    "minion",
    "canRepel",
    "hangOutNearMaster",
  ],
  //CONTROLLERS: ['nearestDifferentMaster'],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.minion, g.power]),
        WAIT_TO_CYCLE: true,
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.auto3ArenaMinion = {
  PARENT: [exports.arenaMinion],
  FACING_TYPE: "autospin",
  GUNS: [],
  TURRETS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 9, 0, 0, 190, 0],
      TYPE: exports.arenaMinionTurret,
    },
    {
      POSITION: [10, 9, 0, 120, 190, 0],
      TYPE: exports.arenaMinionTurret,
    },
    {
      POSITION: [10, 9, 0, -120, 190, 0],
      TYPE: exports.arenaMinionTurret,
    },
  ],
};
exports.necroHexagonMinion = {
  PARENT: [exports.drone],
  GROWTH_FACTOR: 3,
  WALL_IMMUNITY: true,
  SHAPE: 6,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [7, 5, 0, 0, 360, 1],
      TYPE: exports.auto5Turret,
    },
    {
      POSITION: [7, 5, 0, 120, 360, 1],
      TYPE: exports.auto5Turret,
    },
    {
      POSITION: [7, 5, 0, -120, 360, 1],
      TYPE: exports.auto5Turret,
    },
  ],
};
exports.tryiMinion = {
  PARENT: [exports.minion],
  COLOR: 2,
  SHAPE: 3,
  GUNS: [
    {
      POSITION: [20, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.minion]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.minion]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [15, 8, 1, 0, -1, 155, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minion,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 1, -155, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minion,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [17, 8, 1, 0, -1, 135, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minion,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [17, 8, 1, 0, 1, -135, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minion,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minion,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 0, 0, 0],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: exports.triangleSaw1,
    },
  ],
};
exports.krisSwarmMinion = {
  PARENT: [exports.minion],
  BODY: {
    FOV: 0.6,
    SPEED: 2,
    ACCELERATION: 0.4,
    HEALTH: 3.5,
    SHIELD: 1,
    DAMAGE: 0.15,
    RESIST: 1,
    PENETRATION: 0.25,
    RANGE: 100,
    DENSITY: 50,
    SIZE: 2,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [0, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [0, 0, 0, 0, 360, 1],
      TYPE: [exports.assaulterTurret],
    },
  ],
};

exports.armoredMinion = {
  PARENT: [exports.minion],
  BODY: {
    FOV: 0.6,
    SPEED: 2,
    ACCELERATION: 0.4,
    HEALTH: 3.5,
    SHIELD: 1,
    DAMAGE: 0.75,
    RESIST: 1,
    PENETRATION: 0.85,
    RANGE: 100,
    DENSITY: 50,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.minion]),
        WAIT_TO_CYCLE: true,
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.minion]),
        WAIT_TO_CYCLE: true,
        TYPE: exports.swarmDrone,
      },
    },
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
};

exports.legendaryPentagonMinion1 = {
  PARENT: [exports.minion],
  LABEL: "Pentagon Minion",
  TARGETABLE: true,
  WALL_IMMUNITY: true,
  GROWTH_FACTOR: 1.5,
  HAS_NO_RECOIL: true,
  DRAW_HEALTH: true,
  SHAPE: 5,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 3, 1, 0, -8, -7, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 3, 1, 0, 8, 7, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17, 3, 1, 0, -6, -7, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17, 3, 1, 0, 6, 7, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.lesserDamage]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.legendaryPentagonMinion2 = {
  PARENT: [exports.minion],
  LABEL: "Pentagon Minion",
  TARGETABLE: true,
  WALL_IMMUNITY: true,
  GROWTH_FACTOR: 1.5,
  HAS_NO_RECOIL: true,
  DRAW_HEALTH: true,
  SHAPE: 5,
  GUNS: [],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody,
    },
    {
      POSITION: [10, 8, 0, 180, 120, 0],
      TYPE: exports.hunter3Turret,
    },
    {
      POSITION: [10, 8, 0, -105, 120, 0],
      TYPE: exports.hunter3Turret,
    },
    {
      POSITION: [10, 8, 0, 105, 120, 0],
      TYPE: exports.hunter3Turret,
    },
    {
      POSITION: [10, 8, 0, 35, 120, 0],
      TYPE: exports.hunter3Turret,
    },
    {
      POSITION: [10, 8, 0, -35, 120, 0],
      TYPE: exports.hunter3Turret,
    },
  ],
};
exports.legendaryPentagonMinion3 = {
  PARENT: [exports.minion],
  LABEL: "Pentagon Minion",
  TARGETABLE: true,
  WALL_IMMUNITY: true,
  GROWTH_FACTOR: 1.5,
  HAS_NO_RECOIL: true,
  DRAW_HEALTH: true,
  SHAPE: 5,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

      POSITION: [15, 7, 1, 0, 5.5, 0, 0],
    },
    {
      POSITION: [6, 7, 1.35, 19.6, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.halfDamage, g.halfReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4.5, 7, 1.35, 16.6, 5.5, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.halfDamage, g.halfReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3.2, 7, 1.35, 13.6, 5.5, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.halfDamage, g.halfReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

      POSITION: [15, 7, 1, 0, -5.5, 0, 0],
    },
    {
      POSITION: [6, 7, 1.35, 19.6, -5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.halfDamage, g.halfReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4.5, 7, 1.35, 16.6, -5.5, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.halfDamage, g.halfReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3.2, 7, 1.35, 13.6, -5.5, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.halfDamage, g.halfReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.builderMinion = {
  PARENT: [exports.minion],
  GROWTH_FACTOR: 2,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 12, 1.1, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.lesserHealth]),
        TYPE: exports.setBlock,
      },
    },
  ],
};
exports.leaperTurret = {
  PARENT: [exports.auto3Turret],
  LABEL: "",
  COLOR: 17,
  SHAPE: [
    [-0.4, -0],
    [-1, -0.8],
    [1, 0],
    [-1, 0.8],
  ],
  BODY: {
    FOV: 1.1,
    SPEED: 0.1,
  },
  COLOR: 16,
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 10, 1.5, 0, 0, 180, 2.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.thruster,
          g.thruster,
          g.greaterSpray,
          g.lesserReload,
          g.lesserReload,
          g.lesserReload,
          g.lesserReload,
          g.lesserReload,
          g.lesserReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.leaperDrone = {
  PARENT: [exports.minion],
  LABEL: "Leaper",
  SHAPE: 1,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [20, 0, 0, 0, 360, 1],
      TYPE: [exports.leaperTurret],
    },
  ],
};
exports.campfireMinion = {
  PARENT: [exports.minion],
  SHAPE: -3,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.weakAutoSmasherTurret],
    },
  ],
  GUNS: [
    {
      POSITION: [11, 9, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [11, 9, 1, 0, 0, 120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [11, 9, 1, 0, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.helicopterMinion = {
  PARENT: [exports.minion],
  SHAPE: 3,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: [exports.propeller1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      POSITION: [11, 9, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [11, 9, 1, 0, 0, 120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [11, 9, 1, 0, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee]),
        TYPE: exports.swarmDrone,
      },
    },
  ],
};
exports.necroMinion = {
  PARENT: [exports.genericTank],
  IS_PROJECTILE: true,
  LABEL: "Minion",
  TYPE: "minion",
  NECRO: true,
  DAMAGE_CLASS: 0,
  TARGETABLE: false,
  HITS_OWN_TYPE: "hard",
  FACING_TYPE: "smoothToTarget",
  BODY: {
    FOV: 0.5,
    SPEED: 3,
    ACCELERATION: 0.4,
    HEALTH: 2.5,
    SHIELD: 0,
    DAMAGE: 0.75,
    RESIST: 1,
    PENETRATION: 0.85,
    RANGE: 100,
    DENSITY: 50,
  },
  AI: {
    BLIND: true,
  },
  DRAW_HEALTH: false,
  CLEAR_ON_MASTER_UPGRADE: true,
  GIVE_KILL_MESSAGE: false,
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapAltToFire",
    "minion",
    "canRepel",
    "hangOutNearMaster",
  ],
  //CONTROLLERS: ['nearestDifferentMaster'],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.minion]),
        WAIT_TO_CYCLE: true,
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.infectiousFullAutoGuardMinion = {
  PARENT: [exports.necroMinion],
  LABEL: "Guard",
  VARIES_IN_SIZE: true,
  GUNS: [],
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.lesserAutoTurret],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.auto3EggTurret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.auto3EggTurret,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.auto3EggTurret,
    },
  ],
};
exports.infectiousBansheeGuardMinion = {
  PARENT: [exports.necroMinion],
  LABEL: "Guard",
  VARIES_IN_SIZE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */ POSITION: [10, 8, 0, 0, 80, 0],
      TYPE: exports.bansheeEggTurret,
    },
    {
      POSITION: [10, 8, 0, 120, 80, 0],
      TYPE: exports.bansheeEggTurret,
    },
    {
      POSITION: [10, 8, 0, 240, 80, 0],
      TYPE: exports.bansheeEggTurret,
    },
  ],
  GUNS: [
    {
      POSITION: [6, 11, 1.2, 8, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.lesserDamage,
          g.lesserHealth,
          g.halfSize,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.lesserDamage,
          g.lesserHealth,
          g.halfSize,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.lesserDamage,
          g.lesserHealth,
          g.halfSize,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
  ],
};
exports.infectiousSpawnerGuardMinion = {
  PARENT: [exports.necroMinion],
  LABEL: "Guard",
  VARIES_IN_SIZE: true,
  MAX_CHILDREN: 4,
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.minion]),
        TYPE: exports.minion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.infectiousBuzzerProtectorMinion = {
  PARENT: [exports.infectiousFullAutoGuardMinion],
  SHAPE: 4,
  TURRETS: [],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.minion,
          g.greaterHealth,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.minion,
          g.greaterHealth,
        ]),

        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};

exports.infectiousSwarmerProtectorMinion = {
  PARENT: [exports.infectiousFullAutoGuardMinion],
  SHAPE: 4,
  TURRETS: [],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile, g.minion]),
        TYPE: exports.hive,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
};
exports.infectiousBeekeeperProtectorMinion = {
  PARENT: [exports.infectiousFullAutoGuardMinion],
  SHAPE: 4,
  TURRETS: [],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [14, 3, 1, 0, -6, -7, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.minion, g.doubleSize]),
        TYPE: exports.uncontrolledBeeDrone,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 0, 0],
    },
    {
      POSITION: [14, 3, 1, 0, 6, 7, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.minion, g.doubleSize]),
        TYPE: exports.uncontrolledBeeDrone,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 0, 0],
    },
    {
      POSITION: [19, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.minion]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.infectiousOverBasicKeeperMinion = {
  PARENT: [exports.infectiousFullAutoGuardMinion],
  SHAPE: 3,
  TURRETS: [],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 11, 1.2, 8, 0, 125, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over, g.minion]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 235, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over, g.minion]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.minion]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.infectiousDirectorKeeperMinion = {
  PARENT: [exports.infectiousFullAutoGuardMinion],
  SHAPE: 3,
  TURRETS: [],
  MAX_CHILDREN: 5,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.over,
          g.lesserReload,
          g.minion,
        ]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.infectiousCrossbowSentinelMinion = {
  PARENT: [exports.infectiousFullAutoGuardMinion],
  LABEL: "Pentagon Sentinel",
  SHAPE: 5,
  TURRETS: [],
  GUNS: [
    {
      POSITION: [15.5, 3.5, 1, 0, -2.3, -19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15.5, 3.5, 1, 0, 2.3, 19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, 3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, -3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.rifle,
          g.crossbow,
          g.crossbow2,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.infectiousMinigunSentinelMinion = {
  PARENT: [exports.infectiousFullAutoGuardMinion],
  LABEL: "Pentagon Sentinel",
  SHAPE: 5,
  TURRETS: [],
  GUNS: [
    {
      POSITION: [14.5, 7.5, 0.6, 0, 5.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12.5, 7.5, 0.5, 0, 5.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14.5, 7.5, 0.6, 0, -5.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12.5, 7.5, 0.5, 0, -5.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22.3, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20.3, 8, 1, 0, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18.3, 8, 1, 0, 0, 0, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.infectiousSkimmerSentinelMinion = {
  PARENT: [exports.infectiousFullAutoGuardMinion],
  LABEL: "Pentagon Sentinel",
  SHAPE: 5,
  TURRETS: [],

  GUNS: [
    {
      POSITION: [20, 10, 1, , 0, , 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 13, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile, g.minion]),
        TYPE: exports.sentinelMissile2,
      },
    },
  ],
};
exports.swarmCenturionMinion = {
  PARENT: [exports.minion],
  SHAPE: 6,
  DRAW_HEALTH: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 7, 0, 180, 120, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [23, 0, 0, 0, 30, 0],
      TYPE: exports.smasherBody4,
    },
  ],
  GUNS: [
    {
      POSITION: [17, 4.5, 1, 0, -4.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.puregunner]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17, 4.5, 1, 0, 4.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.puregunner]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.bulwarkMinion = {
  PARENT: [exports.minion],
  DANGER: 7,
  BODY: {
    DAMAGE: base.DAMAGE * 1.1,
    ACCEL: base.ACCEL * 0.8,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 5.5, 185, 0],
    },
    {
      POSITION: [3, 8, 1.7, 14, 5.5, 185, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      POSITION: [15, 8, 1, 0, -5.5, 175, 0.5],
    },
    {
      POSITION: [3, 8, 1.7, 14, -5.5, 175, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};

exports.miniMinion = {
  PARENT: [exports.swarmDrone],
  LABEL: "Swarm Minion",
  TYPE: "minion",
  DAMAGE_CLASS: 0,
  TARGETABLE: false,
  HITS_OWN_TYPE: "hard",
  FACING_TYPE: "smoothToTarget",
  BODY: {
    FOV: 0.3,
    SPEED: 6,
    ACCELERATION: 0.5,
    HEALTH: 2,
    SHIELD: 0.25,
    REGEN: -1,
    DAMAGE: 0.3,
    RESIST: 1,
    PENETRATION: 0.5,
    RANGE: 50,
    DENSITY: 10,
  },
  AI: {
    BLIND: true,
  },
  DRAW_HEALTH: false,
  CLEAR_ON_MASTER_UPGRADE: true,
  GIVE_KILL_MESSAGE: false,
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapAltToFire",
    "minion",
    "canRepel",
    "hangOutNearMaster",
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.minion, g.minorStats]),
        WAIT_TO_CYCLE: true,
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.basicMinion = {
  PARENT: [exports.minion],
  LABEL: "Animated Tank",
  TYPE: "minion",
  TARGETABLE: true,
  WALL_IMMUNITY: true,
  GROWTH_FACTOR: 1.9,
  BODY: {
    FOV: 0.6,
    SPEED: 1.75,
    ACCELERATION: 0.5,
    HEALTH: 5.5,
    DAMAGE: 0.65,
    RESIST: 1,
    PENETRATION: 0.75,
    RANGE: 100,
    DENSITY: 50,
  },
  ORBIT_DISTANCE: 50,
  CONTROLLERS: [
    "minion",
    "nearestDifferentMaster",
    "mapAltToFire",

    "canRepel",
    "hangOutNearMaster",
  ],
  DANGER: 7,
  DRAW_HEALTH: true,
};
exports.machineGunMinion = {
  PARENT: [exports.basicMinion],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 10, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.minion]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.pounderMinion = {
  PARENT: [exports.basicMinion],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.sniperMinion = {
  PARENT: [exports.basicMinion],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.minion]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.directorMinion = {
  PARENT: [exports.basicMinion],
  MAX_CHILDREN: 6,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.minion]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};

exports.twinMinion = {
  PARENT: [exports.basicMinion],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.minion]),
        TYPE: exports.bullet,
      },
    },
    {
      /* LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.minion]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.trapperMinion = {
  PARENT: [exports.basicMinion],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.smasherMinion = {
  PARENT: [exports.drone],
  SHAPE: 0,
  GUNS: [],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
  IS_SMASHER: true,
};
exports.repairMan = {
  PARENT: [exports.minion],
  LABEL: "Repair Man",
  DANGER: 5,
  TYPE: "tank",
  GIVE_KILL_MESSAGE: true,
  DRAW_HEALTH: true,
  IS_PROJECTILE: false,
  SPECIAL_EFFECT: "man",
  AI_TARGET: "structures",
  ORBIT_DISTANCE: 80,
  CONTROLLERS: [
    "minion",
    "mapAltToFire",
    "nearestDifferentMaster",
    "canRepel",
    "hangOutNearMaster",
  ],
  BODY: {
    FOV: 1,
    ACCEL: 0.003,
    PENETRATION: 3,
    SPEED: base.SPEED * 0.25,
    DAMAGE: 10,
    HEALTH: 200,
    SHIELD: base.SHIELD,
    REGEN: 0.005,
  },
  CAN_BE_ON_LEADERBOARD: false,
  //DRAW_HEALTH: true,
  LEVEL: 45,
  SIZE: 12,
  SHAPE: 6,
  SKILL: skillSet({
    rld: 0.3, //reload
    dam: 0.2, //bullet damage
    pen: 0.2, //bullet penetration
    str: 0.2, //bullet health
    spd: 0.3, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 0, 0, 0, 360, 1],
      TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.repairBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
    },
  ],
};
exports.launcherTurret = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 10, 1, , 0, , 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 13, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
        TYPE: exports.launcherMissile,
      },
    },
  ],
};
exports.juliusLauncherTurret = {
  PARENT: [exports.auto3Turret, exports.skimmer],
  LABEL: "",
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 10, 1, 0, 0, 0, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 13, 1, 0, 0, 0, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile, g.lesserPenetration, g.lesserHealth,]),
        TYPE: exports.launcherMissile,
      },
    },
  ],
};
exports.boosterMinion = {
  PARENT: [exports.minion],
  LABEL: "Minion",
  BODY: {
    FOV: 0.5,
    SPEED: 1.5,
    ACCELERATION: 0.12,
    HEALTH: 2.5,
    SHIELD: 1,
    REGEN: -1,
    DAMAGE: 0.55,
    RESIST: 1,
    PENETRATION: 1,
    RANGE: 100,
    DENSITY: 5.75,
  },
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapAltToFire",
    "mapTargetToGoal",
    "canRepel",
    "hangOutNearMaster",
  ],

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.tri,
          g.minion,
          g.halfStats,
          g.greaterDamage,
          g.halfReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.tri,
          g.thruster,
          g.halfrecoil,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.tri,
          g.thruster,
          g.halfrecoil,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 0, 145, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 0, 215, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
  ],
};
exports.fighterdrone = {
  PARENT: [exports.boosterMinion],
  LABEL: "Fighter Clone",
  BODY: {
    FOV: 0.5,
    SPEED: 1.65,
    ACCELERATION: 0.22,
    HEALTH: 3,
    SHIELD: 1.3,
    REGEN: -1,
    DAMAGE: 0.65,
    RESIST: 1,
    PENETRATION: 1,
    RANGE: 100,
    DENSITY: 5.75,
  },
  GUNS: [{
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [18, 8, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront, g.halfStats, g.lesserReload]),
    TYPE: exports.bullet,
    LABEL: "Front",
      },
    },
    {
      POSITION: [16, 8, 1, 0, -1, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront, g.halfStats, g.lesserReload]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 1, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront, g.halfStats, g.lesserReload]),
        TYPE: exports.bullet,
      },
    },
  {
    POSITION: [16, 8, 1, 0, 0, 150, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.minorStats, g.lesserRecoil, g.lesserReload]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [16, 8, 1, 0, 0, 210, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.minorStats, g.lesserRecoil, g.lesserReload]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  }
  ],
};
exports.experimenterStationedTurret = {
  PARENT: [exports.genericTank],
  LABEL: "Stationed Turret",
  TYPE: "trap",
  IS_PROJECTILE: true,
  SPECIAL_EFFECT: "noRegen",
  WALL_IMMUNITY: true,
  DAMAGE_CLASS: 0,
  DANGER: 7,
  HITS_OWN_TYPE: "hard",
  FACING_TYPE: "smoothToTarget",
  HAS_NO_RECOIL: true,
  GROWTH_FACTOR: 2.5,
  FIXED_POSITION: true,
  NO_REGEN: true,
  BODY: {
    FOV: 1.25,
    SPEED: 0,
    ACCELERATION: 0,
    HEALTH: 7.5,
    SHIELD: 0,
    DAMAGE: 1.15,
    REGEN: -1,
    RESIST: 1,
    PENETRATION: 1,
    RANGE: 100,
    DENSITY: 0.4,
    PUSHABILITY: 0,
  },
  AI: {
    BLIND: true,
  },
  DRAW_HEALTH: true,
  CLEAR_ON_MASTER_UPGRADE: true,
  GIVE_KILL_MESSAGE: false,
  CONTROLLERS: ["Dominator"],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.single,
          g.halfDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },

    {
      POSITION: [5.5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.experimenterStationedTurretNOGROWTH = {
  PARENT: [exports.experimenterStationedTurret],
  GROWTH_FACTOR: 1,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.single,
          g.halfDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },

    {
      POSITION: [5.5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.betaExperimenterStationedTurret = {
  PARENT: [exports.experimenterStationedTurret],
  GROWTH_FACTOR: 3.5,
  BODY: {
    FOV: 1.25,
    SPEED: 0,
    ACCELERATION: 0,
    HEALTH: 10,
    SHIELD: 0,
    DAMAGE: 1.75,
    REGEN: -1,
    RESIST: 1,
    PENETRATION: 1,
    RANGE: 100,
    DENSITY: 0.4,
    PUSHABILITY: 0,
  },
  AI: {
    BLIND: true,
  },
  DRAW_HEALTH: true,
  CLEAR_ON_MASTER_UPGRADE: true,
  GIVE_KILL_MESSAGE: false,
  CONTROLLERS: ["Dominator"],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.single,
          g.halfDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },

    {
      POSITION: [5.5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.scientistStationedTurret = {
  PARENT: [exports.experimenterStationedTurret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 2.5, 1, 0, -2, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 2.5, 1, 0, 2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },

    {
      POSITION: [5.5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.physicistStationedTurret = {
  PARENT: [exports.experimenterStationedTurret],
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 11.5, 1.7, 13.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy, 
          g.halfDamage,
          g.lesserHealth,
          g.doubleSpeed,
          g.greaterSize,
          g.lesserReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.inventorStationedTurret = {
  PARENT: [exports.experimenterStationedTurret],
  LABEL: "Stationed Mini-Turret",
  GROWTH_FACTOR: 1.25,
  BODY: {
    FOV: 1.75,
    SPEED: 0,
    ACCELERATION: 0,
    HEALTH: 2.5,
    SHIELD: 0,
    DAMAGE: 1.35,
    RESIST: 1,
    PENETRATION: 1,
    RANGE: 100,
    DENSITY: 0.4,
    REGEN: -1,
    PUSHABILITY: 0,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.single,
          g.minorDamage,
          g.halfHealth,
        ]),
        TYPE: exports.bullet,
      },
    },

    {
      POSITION: [5.5, 8, -1.8, 6.5, 0, 0, 0],
    },

    {
      POSITION: [5.5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.researcherStationedTurret = {
  PARENT: [exports.experimenterStationedTurret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 8.5, 0.6, 5, 4.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.lesserHealth]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [10, 8.5, 0.6, 5, -4.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.lesserHealth]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.betaScientistStationedTurret = {
  PARENT: [exports.betaExperimenterStationedTurret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 2.5, 1, 0, -2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 2.5, 1, 0, 2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 2.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5.5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.betaPhysicistStationedTurret = {
  PARENT: [exports.betaExperimenterStationedTurret],
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 11.5, 1.7, 16, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.halfDamage,
          g.lesserHealth,
          g.doubleSpeed,
          g.greaterSize,
          g.greaterPenetration,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3, 11.5, 1.7, 13.5, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.halfDamage,
          g.lesserHealth,
          g.doubleSpeed,
          g.greaterSize,
          g.greaterPenetration,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.betaInventorStationedTurret = {
  PARENT: [exports.betaExperimenterStationedTurret],
  LABEL: "Stationed Mini-Turret",
  GROWTH_FACTOR: 1.25,
  BODY: {
    FOV: 1.75,
    SPEED: 0,
    ACCELERATION: 0,
    HEALTH: 2.5,
    SHIELD: 0,
    DAMAGE: 1.35,
    RESIST: 1,
    PENETRATION: 1,
    RANGE: 100,
    DENSITY: 0.4,
    REGEN: -1,
    PUSHABILITY: 0,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.single,
          g.minorDamage,
          g.halfHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5.5, 8, -1.8, 6.5, 4, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, -4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.single,
          g.minorDamage,
          g.halfHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5.5, 8, -1.8, 6.5, -4, 0, 0],
    },
  ],
};
exports.betaResearcherStationedTurret = {
  PARENT: [exports.betaExperimenterStationedTurret],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 8.5, 0.6, 5, 4.5, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.halfDamage, g.lesserHealth]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [10, 8.5, 0.6, 5, -4.5, 90, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.halfDamage, g.lesserHealth]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 8.5, 0.6, 5, 4.5, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.halfDamage, g.lesserHealth]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [10, 8.5, 0.6, 5, -4.5, -90, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.halfDamage, g.lesserHealth]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
dereference = (type) => {
  let output = JSON.parse(JSON.stringify(type));
  if (type.GUNS)
    for (let i = 0; i < type.GUNS.length; i++)
      if (output.GUNS[i].PROPERTIES)
        output.GUNS[i].PROPERTIES.TYPE = type.GUNS[i].PROPERTIES.TYPE;
  if (type.TURRETS)
    for (let i = 0; i < type.TURRETS.length; i++)
      output.TURRETS[i].TYPE = type.TURRETS[i].TYPE;
  return output;
};

rereference = (type) => {
  let output = JSON.parse(JSON.stringify(type));
  if (type.TURRETS)
    for (let i = 0; i < type.TURRETS.length; i++)
      if (output.TURRETS[i].PROPERTIES)
        output.TURRETS[i].PROPERTIES.TYPE = type.TURRETS[i].PROPERTIES.TYPE;

  return output;
};
function makeSwarmSpawner(guntype) {
  return {
    PARENT: [exports.genericTank],
    LABEL: "",
    BODY: {
      FOV: 2,
    },
    CONTROLLERS: ["nearestDifferentMaster"],
    COLOR: 16,
    AI: {
      NO_LEAD: true,
      SKYNET: true,
      FULL_VIEW: true,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [14, 15, 0.6, 14, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: guntype,
          TYPE: exports.swarmDrone,
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
    ],
  };
}
exports.cruiserGun = makeSwarmSpawner(combineStats([g.swarm]));
function makeAuto(type, name = -1, options = {}) {
  let turret = { type: exports.autoTurret, size: 10, independent: true };
  if (options.type != null) {
    turret.type = options.type;
  }
  if (options.size != null) {
    turret.size = options.size;
  }
  if (options.independent != null) {
    turret.independent = options.independent;
  }

  let output = JSON.parse(JSON.stringify(type));
  let autogun = {
    /*********  SIZE               X       Y     ANGLE    ARC */
    POSITION: [turret.size, 0, 0, 180, 360, 1],
    TYPE: [
      turret.type,
      {
        CONTROLLERS: ["nearestDifferentMaster"],
        INDEPENDENT: turret.independent,
      },
    ],
  };
  if (type.GUNS != null) {
    output.GUNS = type.GUNS;
  }
  if (type.TURRETS == null) {
    output.TURRETS = [autogun];
  } else {
    output.TURRETS = [...type.TURRETS, autogun];
  }
  if (name == -1) {
    output.LABEL = "Auto-" + type.LABEL;
  } else {
    output.LABEL = name;
  }
  output.DANGER = type.DANGER + 1;
  return output;
}
function makeHybrid(type, name = -1) {
  let output = JSON.parse(JSON.stringify(type));
  let spawner = {
    /********* LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [5.6, 12.7, 1.2, 8, 0, 180, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.drone]),
      TYPE: [exports.drone, { INDEPENDENT: true }],
      AUTOFIRE: true,
      SYNCS_SKILLS: true,
      STAT_CALCULATOR: gunCalcNames.drone,
      WAIT_TO_CYCLE: false,
      MAX_CHILDREN: 3,
    },
  };
  if (type.TURRETS != null) {
    output.TURRETS = type.TURRETS;
  }
  if (type.GUNS == null) {
    output.GUNS = [spawner];
  } else {
    output.GUNS = [...type.GUNS, spawner];
  }
  if (name == -1) {
    output.LABEL = "Hybrid " + type.LABEL;
  } else {
    output.LABEL = name;
  }
  return output;
}

(makeMulti = (type, count, name = -1, startRotation = 0) => {
  let output = dereference(type),
    shootyBois = output.GUNS,
    fraction = 360 / count;
  output.GUNS = [];
  for (let gun of type.GUNS) {
    for (let i = 0; i < count; i++) {
      let newgun = dereference(gun);
      newgun.POSITION[5] += startRotation + fraction * i;
      if (gun.PROPERTIES) newgun.PROPERTIES.TYPE = gun.PROPERTIES.TYPE;
      output.GUNS.push(newgun);
    }
  }
  output.LABEL =
    name == -1 ? (greekNumbers[count - 1] || count + " ") + type.LABEL : name;
  return output;
}),
  //FOOD
  (exports.goldenEgg = {
    PARENT: [exports.food],
    FOOD: {
      LEVEL: -1,
    },
    LABEL: "Golden Egg",
    IS_BOSS: true,
    TARGETABLE: false,
    VALUE: 0,
    SHAPE: 0,
    SIZE: 7.5,
    COLOR: 35,
    BODY: {
      DAMAGE: 0,
      HEALTH: 999999999,
      PUSHABILITY: 0,
    },
    DRAW_HEALTH: false,
    GIVE_KILL_MESSAGE: true,
    INTANGIBLE: true,
    HITS_OWN_TYPE: "never",
  });
exports.egg = {
  PARENT: [exports.food],
  FOOD: {
    LEVEL: 0,
  },
  LABEL: "Egg",
  VALUE: 20,
  SHAPE: 0,
  SIZE: 5,
  COLOR: 6,
  BODY: {
    DAMAGE: 1.1,
    HEALTH: 0.0011,
    PUSHABILITY: 0,
  },
  DRAW_HEALTH: false,
  GIVE_KILL_MESSAGE: false,
  INTANGIBLE: true,
  HITS_OWN_TYPE: "never",
};
exports.square = {
  PARENT: [exports.food],
  FOOD: {
    LEVEL: 1,
  },
  LABEL: "Square",
  VALUE: 80,
  SHAPE: 4,
  SIZE: 10,
  COLOR: 13,
  BODY: {
    DAMAGE: 3,
    DENSITY: 3.5,
    HEALTH: 1,
    PENETRATION: 5,
  },
  DRAW_HEALTH: true,
  INTANGIBLE: false,
};
exports.triangle = {
  PARENT: [exports.food],
  FOOD: {
    LEVEL: 2,
  },
  LABEL: "Triangle",
  VALUE: 400,
  SHAPE: 3,
  SIZE: 10,
  COLOR: 2,
  BODY: {
    DAMAGE: 8,
    DENSITY: 5,
    HEALTH: 3,
    RESIST: 1.15,
    PENETRATION: 5,
  },
  DRAW_HEALTH: true,
};
exports.pentagon = {
  PARENT: [exports.food],
  FOOD: {
    LEVEL: 3,
  },
  LABEL: "Pentagon",
  VALUE: 2000,
  SHAPE: 5,
  SIZE: 15,
  COLOR: 14,
  BODY: {
    DAMAGE: 8,
    PUSHABILITY: 1.8,
    DENSITY: 7,
    HEALTH: 15,
    RESIST: 1.25,
    PENETRATION: 2,
  },
  DRAW_HEALTH: true,
};

exports.hexagon = {
  PARENT: [exports.food],
  FOOD: {
    LEVEL: 4,
  },
  SHAPE: 6,
  LABEL: "Hexagon",
  SPECIAL_EFFECT: "beta",
  VALUE: 10000,
  COLOR: 15,
  SIZE: 29,
  BODY: {
    DAMAGE: 8,
    PUSHABILITY: 2,
    DENSITY: 20,
    HEALTH: 80,
    RESIST: Math.pow(1.25, 2),
    SHIELD: 50,
    REGEN: 0.2,
    PENETRATION: 2.5,
  },
  GIVE_KILL_MESSAGE: true,
};
exports.septagon = {
  PARENT: [exports.hexagon],
  FOOD: {
    LEVEL: 5,
  },
  LABEL: "Septagon",
  SPECIAL_EFFECT: "nestOnly",
  VALUE: 50000,
  SIZE: 58,
  SHAPE: 7,
  COLOR: 11,
  BODY: {
    DAMAGE: 9,
    DENSITY: 60,
    PUSHABILITY: 1,
    HEALTH: 160,
    RESIST: Math.pow(1.25, 3),
    SHIELD: 51,
    REGEN: 0.1,
    PENETRATION: 3,
  },
};
exports.octagon = {
  PARENT: [exports.septagon],
  FOOD: {
    LEVEL: 6,
  },
  LABEL: "Octagon",
  SPECIAL_EFFECT: "nestOnly",
  SHAPE: 8,
  COLOR: 4,
  VALUE: 150000,
  SIZE: 75,
  BODY: {
    DAMAGE: 9,
    DENSITY: 200,

    HEALTH: 240,
    RESIST: Math.pow(1.25, 3),
    SHIELD: 52,
    REGEN: 0.1,
    PENETRATION: 4,
  },
};
exports.nonagon = {
  PARENT: [exports.octagon],
  FOOD: {
    LEVEL: 7,
  },
  LABEL: "Nonagon",
  SPECIAL_EFFECT: "nestOnly",
  SHAPE: 9,
  COLOR: 18,
  VALUE: 500000,
  SIZE: 80,
  BODY: {
    DAMAGE: 10,
    DENSITY: 200,

    HEALTH: 300,
    RESIST: Math.pow(1.25, 3),
    SHIELD: 55,
    REGEN: 0.1,
    PENETRATION: 4,
  },
};
//RARE POLYGONS
exports.gem = {
  PARENT: [exports.square],
  FOOD: {
    LEVEL: 0,
  },
  LABEL: "Gem",
  PASSIVE_EFFECT: "uniqueFood",
  VALUE: 2000,
  SHAPE: 6,
  SIZE: 4,
  COLOR: 0,
  BODY: {
    DAMAGE: 2,
    DENSITY: 4,
    HEALTH: 5,
    PENETRATION: 2,
    PUSHABILITY: 4,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [],
};
exports.greenEgg = {
  PARENT: [exports.egg],
  COLOR: 1,
};
exports.greenSquare = {
  PARENT: [exports.square],
  COLOR: 1,
};
exports.greenTriangle = {
  PARENT: [exports.triangle],
  COLOR: 1,
};
exports.greenPentagon = {
  PARENT: [exports.pentagon],
  COLOR: 1,
};
exports.greenHexagon = {
  PARENT: [exports.hexagon],
  COLOR: 1,
};
exports.greenSeptagon = {
  PARENT: [exports.septagon],
  COLOR: 1,
};
exports.greenOctagon = {
  PARENT: [exports.octagon],
  COLOR: 1,
};
exports.greenNonagon = {
  PARENT: [exports.nonagon],
  COLOR: 1,
};
exports.tealEgg = {
  PARENT: [exports.egg],
  COLOR: 0,
};
exports.tealSquare = {
  PARENT: [exports.square],
  COLOR: 0,
};
exports.tealTriangle = {
  PARENT: [exports.triangle],
  COLOR: 0,
};
exports.tealPentagon = {
  PARENT: [exports.pentagon],
  COLOR: 0,
};
exports.tealHexagon = {
  PARENT: [exports.hexagon],
  COLOR: 0,
};
exports.tealSeptagon = {
  PARENT: [exports.septagon],
  COLOR: 0,
};
exports.tealOctagon = {
  PARENT: [exports.octagon],
  COLOR: 0,
};
exports.tealNonagon = {
  PARENT: [exports.nonagon],
  COLOR: 0,
};
exports.rainEgg = {
  PARENT: [exports.egg],
  COLOR: 36,
};
exports.rainSquare = {
  PARENT: [exports.square],
  COLOR: 36,
};
exports.rainTriangle = {
  PARENT: [exports.triangle],
  COLOR: 36,
};
exports.rainPentagon = {
  PARENT: [exports.pentagon],
  COLOR: 36,
};
exports.rainHexagon = {
  PARENT: [exports.hexagon],
  COLOR: 36,
};
exports.rainSeptagon = {
  PARENT: [exports.septagon],
  COLOR: 36,
};
exports.rainOctagon = {
  PARENT: [exports.octagon],
  COLOR: 36,
};
exports.rainNonagon = {
  PARENT: [exports.nonagon],
  COLOR: 36,
};
exports.blackEgg = {
  PARENT: [exports.egg],
  COLOR: 19,
};
exports.blackSquare = {
  PARENT: [exports.square],
  COLOR: 19,
};
exports.blackTriangle = {
  PARENT: [exports.triangle],
  COLOR: 19,
};
exports.blackPentagon = {
  PARENT: [exports.pentagon],
  COLOR: 19,
};
exports.blackHexagon = {
  PARENT: [exports.hexagon],
  COLOR: 19,
};
exports.blackSeptagon = {
  PARENT: [exports.septagon],
  COLOR: 19,
};
exports.blackOctagon = {
  PARENT: [exports.octagon],
  COLOR: 19,
};
exports.blackNonagon = {
  PARENT: [exports.nonagon],
  COLOR: 19,
};
exports.Triangle = {
  PARENT: [exports.triangle],
  COLOR: 0,
};
exports.shinyEgg = {
  PARENT: [exports.egg],
  LABEL: "Shiny Egg",
  PASSIVE_EFFECT: "uniqueFood",
  FOOD: {
    LEVEL: 0,
  },
  SIZE: 8,
  VALUE: 2000,
  COLOR: 1,
  BODY: {
    HEALTH: 1,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.75, 0, 0, 45, 360, 1],
      TYPE: [exports.greenEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.shinySquare = {
  PARENT: [exports.square],
  LABEL: "Shiny Square",
  PASSIVE_EFFECT: "uniqueFood",
  FOOD: {
    LEVEL: 1,
  },
  SIZE: 10.5,
  VALUE: 8000,
  COLOR: 1,
  BODY: {
    HEALTH: 5,
    DENSITY: 1,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 360, 1],
      TYPE: [exports.greenSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.shinyTriangle = {
  PARENT: [exports.triangle],
  LABEL: "Shiny Triangle",
  PASSIVE_EFFECT: "uniqueFood",
  VALUE: 40000,
  FOOD: {
    LEVEL: 2,
  },
  SIZE: 10.5,
  GIVE_KILL_MESSAGE: true,
  COLOR: 1,
  BODY: {
    DENSITY: 2,
    HEALTH: 15,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 180, 360, 1],
      TYPE: [exports.greenTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};

exports.shinyPentagon = {
  PARENT: [exports.pentagon],
  LABEL: "Shiny Pentagon",
  PASSIVE_EFFECT: "uniqueFood",
  VALUE: 200000,
  FOOD: {
    LEVEL: 3,
  },
  SIZE: 15.5,
  GIVE_KILL_MESSAGE: true,
  COLOR: 1,
  BODY: {
    DENSITY: 10,
    HEALTH: 45,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16.25, 0, 0, 180, 360, 1],
      TYPE: [exports.greenPentagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.shinyHexagon = {
  PARENT: [exports.hexagon],
  LABEL: "Shiny Hexagon",
  PASSIVE_EFFECT: "uniqueFood",
  VALUE: 1000000,
  FOOD: {
    LEVEL: 4,
  },
  SIZE: 29.5,
  GIVE_KILL_MESSAGE: true,
  COLOR: 1,
  BODY: {
    DENSITY: 25,
    HEALTH: 240,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 90, 360, 1],
      TYPE: [exports.greenHexagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.shinySeptagon = {
  PARENT: [exports.septagon],
  LABEL: "Shiny Septagon",
  PASSIVE_EFFECT: "uniqueFood",
  SPECIAL_EFFECT: "nestOnly",
  VALUE: 5000000,
  SIZE: 58.5,
  COLOR: 1,
  FOOD: {
    LEVEL: 5,
  },
  GIVE_KILL_MESSAGE: true,
  BODY: {
    DENSITY: 80,
    HEALTH: 380,
  },

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 180, 360, 1],
      TYPE: [exports.greenSeptagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.shinyOctagon = {
  PARENT: [exports.octagon],
  FOOD: {
    LEVEL: 6,
  },
  LABEL: "Shiny Octagon",
  PASSIVE_EFFECT: "uniqueFood",
  SPECIAL_EFFECT: "nestOnly",
  VALUE: 15000000,
  SIZE: 75.5,
  COLOR: 1,
  BODY: {
    DENSITY: 250,

    HEALTH: 460,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 22.5, 360, 1],
      TYPE: [exports.greenOctagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.shinyNonagon = {
  PARENT: [exports.nonagon],
  FOOD: {
    LEVEL: 7,
  },
  LABEL: "Shiny Nonagon",
  PASSIVE_EFFECT: "uniqueFood",
  SPECIAL_EFFECT: "nestOnly",
  VALUE: 5000000,
  SIZE: 80,
  COLOR: 1,
  BODY: {
    DENSITY: 250,

    HEALTH: 720,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 180, 360, 1],
      TYPE: [exports.greenNonagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.jewel = {
  PARENT: [exports.food],
  LABEL: "Jewel",
  PASSIVE_EFFECT: "uniqueFood",
  FOOD: {
    LEVEL: 0,
  },
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  VALUE: 400000,
  SHAPE: 6,
  SIZE: 6,
  COLOR: 3,
  BODY: {
    DAMAGE: 8,
    DENSITY: 4,
    HEALTH: 30,
    PENETRATION: 2,

    PUSHABILITY: 4,
  },
};
exports.legendaryEgg = {
  PARENT: [exports.shinyEgg],
  LABEL: "Legendary Egg",
  PASSIVE_EFFECT: "uniqueFood",
  FOOD: {
    LEVEL: 0,
  },
  SIZE: 11.25,
  VALUE: 3000,
  COLOR: 0,
  BODY: {
    DAMAGE: 1,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.75, 0, 0, 45, 360, 1],
      TYPE: [exports.tealEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 0, 0, 0, 360, 1],
      TYPE: [exports.tealEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.legendarySquare = {
  PARENT: [exports.shinySquare],
  LABEL: "Legendary Square",
  FOOD: {
    LEVEL: 1,
  },
  VALUE: 12000,
  SIZE: 11.75,
  COLOR: 0,
  BODY: {
    DAMAGE: 6,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 360, 1],
      TYPE: [exports.tealSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8, 0, 0, 0, 360, 1],
      TYPE: [exports.tealSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.legendaryTriangle = {
  PARENT: [exports.shinyTriangle],
  LABEL: "Legendary Triangle",
  FOOD: {
    LEVEL: 2,
  },
  VALUE: 60000,
  SIZE: 12,
  COLOR: 0,
  BODY: {
    DAMAGE: 16,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 180, 360, 1],
      TYPE: [exports.tealTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5.25, 0, 0, 0, 360, 1],
      TYPE: [exports.tealTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};

exports.legendaryPentagon = {
  PARENT: [exports.shinyPentagon],
  LABEL: "Legendary Pentagon",
  FOOD: {
    LEVEL: 3,
  },
  VALUE: 300000,
  SIZE: 17,
  COLOR: 0,
  BODY: {
    DAMAGE: 16,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16.25, 0, 0, 180, 360, 1],
      TYPE: [exports.tealPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12.75, 0, 0, 0, 360, 1],
      TYPE: [exports.tealPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
  ],
};
exports.legendaryHexagon = {
  PARENT: [exports.shinyHexagon],
  LABEL: "Legendary Hexagon",
  FOOD: {
    LEVEL: 4,
  },
  VALUE: 1500000,
  SIZE: 31,
  COLOR: 0,
  BODY: {
    DAMAGE: 16,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 90, 360, 1],
      TYPE: [exports.tealHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.tealHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
  ],
};
exports.legendarySeptagon = {
  PARENT: [exports.shinySeptagon],
  LABEL: "Legendary Septagon",
  FOOD: {
    LEVEL: 5,
  },
  VALUE: 7500000,
  SPECIAL_EFFECT: "nestOnly",
  SIZE: 59,
  COLOR: 0,
  BODY: {
    DAMAGE: 18,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 180, 360, 1],
      TYPE: [exports.tealSeptagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: [exports.tealSeptagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.legendaryOctagon = {
  PARENT: [exports.shinyOctagon],
  LABEL: "Legendary Octagon",
  FOOD: {
    LEVEL: 6,
  },
  VALUE: 20000000,
  SPECIAL_EFFECT: "nestOnly",
  SIZE: 76,
  COLOR: 0,
  BODY: {
    DAMAGE: 18,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 22.5, 360, 1],
      TYPE: [exports.tealOctagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17.5, 0, 0, 0, 360, 1],
      TYPE: [exports.tealOctagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.legendaryNonagon = {
  PARENT: [exports.shinyNonagon],
  LABEL: "Legendary Nonagon",
  FOOD: {
    LEVEL: 7,
  },
  VALUE: 75000000,
  SPECIAL_EFFECT: "nestOnly",
  SIZE: 81,
  COLOR: 0,
  BODY: {
    DAMAGE: 20,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 180, 360, 1],
      TYPE: [exports.tealNonagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: [exports.tealNonagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.shadowEgg = {
  PARENT: [exports.legendaryEgg],
  LABEL: "Shadow Egg",
  FOOD: {
    LEVEL: 0,
  },
  BODY: { REGEN: 0 },
  PASSIVE_EFFECT: "uniqueFood",
  ALPHA: 0.05,
  VALUE: 4000,
  COLOR: 19,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [],
};
exports.shadowSquare = {
  PARENT: [exports.legendarySquare],
  LABEL: "Shadow Square",
  FOOD: {
    LEVEL: 1,
  },
  BODY: { REGEN: 0 },
  ALPHA: 0.05,
  VALUE: 16000,
  COLOR: 19,
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.shadowTriangle = {
  PARENT: [exports.legendaryTriangle],
  LABEL: "Shadow Triangle",
  FOOD: {
    LEVEL: 2,
  },
  BODY: { REGEN: 0 },
  VALUE: 80000,
  ALPHA: 0.05,
  COLOR: 19,
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};

exports.shadowPentagon = {
  PARENT: [exports.legendaryPentagon],
  LABEL: "Shadow Pentagon",
  FOOD: {
    LEVEL: 3,
  },
  BODY: { REGEN: 0 },
  VALUE: 400000,
  ALPHA: 0.05,
  COLOR: 19,
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.shadowHexagon = {
  PARENT: [exports.legendaryHexagon],
  LABEL: "Shadow Hexagon",
  FOOD: {
    LEVEL: 4,
  },
  BODY: { REGEN: 0 },
  VALUE: 2000000,
  ALPHA: 0.05,
  COLOR: 19,
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.shadowSeptagon = {
  PARENT: [exports.legendarySeptagon],
  LABEL: "Shadow Septagon",
  FOOD: {
    LEVEL: 5,
  },
  BODY: { REGEN: 0 },
  ALPHA: 0.05,
  VALUE: 10000000,
  SPECIAL_EFFECT: "nestOnly",
  COLOR: 19,
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.shadowOctagon = {
  PARENT: [exports.legendaryOctagon],
  LABEL: "Shadow Octagon",
  FOOD: {
    LEVEL: 6,
  },
  BODY: { REGEN: 0 },
  ALPHA: 0.05,
  VALUE: 25000000,
  SPECIAL_EFFECT: "nestOnly",
  COLOR: 19,
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.shadowNonagon = {
  PARENT: [exports.legendaryNonagon],
  LABEL: "Shadow Nonagon",
  FOOD: {
    LEVEL: 7,
  },
  BODY: { REGEN: 0 },
  ALPHA: 0.05,
  VALUE: 125000000,
  SPECIAL_EFFECT: "nestOnly",
  COLOR: 19,
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.albinoSquare = {
  PARENT: [exports.square],
  LABEL: "Albino Square",
  VALUE: 800,
  FOOD: {
    LEVEL: 6,
  },
  BODY: { REGEN: 0 },
  INTANGIBLE: true,
  COLOR: 6,
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.albinoTriangle = {
  PARENT: [exports.triangle],
  LABEL: "Albino Triangle",
  INTANGIBLE: true,
  VALUE: 4000,
  COLOR: 6,
  BODY: { REGEN: 0 },
  FOOD: {
    LEVEL: 5,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};

exports.albinoPentagon = {
  PARENT: [exports.pentagon],
  LABEL: "Albino Pentagon",
  VALUE: 20000,
  INTANGIBLE: true,
  COLOR: 6,
  FOOD: {
    LEVEL: 4,
  },
  BODY: { REGEN: 0 },
  SIZE: 16,
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.albinoHexagon = {
  PARENT: [exports.hexagon],
  LABEL: "Albino Hexagon",
  VALUE: 100000,
  FOOD: {
    LEVEL: 3,
  },
  BODY: { REGEN: 0 },
  COLOR: 6,
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.albinoSeptagon = {
  PARENT: [exports.septagon],
  LABEL: "Albino Septagon",
  VALUE: 500000,
  SPECIAL_EFFECT: "nestOnly",
  FOOD: {
    LEVEL: 2,
  },
  BODY: { REGEN: 0 },
  COLOR: 6,
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.albinoOctagon = {
  PARENT: [exports.octagon],
  LABEL: "Albino Octagon",
  VALUE: 1500000,
  SPECIAL_EFFECT: "nestOnly",
  COLOR: 6,
  BODY: { REGEN: 0 },
  FOOD: {
    LEVEL: 1,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.albinoNonagon = {
  PARENT: [exports.nonagon],
  LABEL: "Albino Nonagon",
  VALUE: 1500000,
  SPECIAL_EFFECT: "nestOnly",
  COLOR: 6,
  BODY: { REGEN: 0 },
  FOOD: {
    LEVEL: 0,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.epilepticEgg = {
  PARENT: [exports.legendaryEgg],
  LABEL: "Epileptic Egg",
  PASSIVE_EFFECT: "uniqueFood",
  FOOD: {
    LEVEL: 0,
  },
  BODY: { REGEN: 0 },
  VALUE: 6000,
  COLOR: 20,
  SIZE: 9.5,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [],
};
exports.epilepticSquare = {
  PARENT: [exports.legendarySquare],
  LABEL: "Epileptic Square",
  FOOD: {
    LEVEL: 1,
  },
  COLOR: 20,
  VALUE: 24000,
  SIZE: 12.5,
  BODY: {
    RESIST: 1.15,
    PUSHABILITY: 1.4,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.epilepticTriangle = {
  PARENT: [exports.legendaryTriangle],
  LABEL: "Epileptic Triangle",
  FOOD: {
    LEVEL: 2,
  },
  VALUE: 120000,
  COLOR: 20,
  SIZE: 11.5,
  BODY: {
    RESIST: 1.25,
    PUSHABILITY: 1.4,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};

exports.epilepticPentagon = {
  PARENT: [exports.legendaryPentagon],
  LABEL: "Epileptic Pentagon",
  FOOD: {
    LEVEL: 3,
  },
  VALUE: 600000,
  COLOR: 20,
  SIZE: 16.5,
  BODY: {
    RESIST: 1.35,
    PUSHABILITY: 1,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.epilepticHexagon = {
  PARENT: [exports.legendaryHexagon],
  LABEL: "Epileptic Hexagon",
  FOOD: {
    LEVEL: 4,
  },
  VALUE: 3000000,
  COLOR: 20,
  SIZE: 30.5,
  BODY: {
    RESIST: 1.55,
    PUSHABILITY: 0.75,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [],
};
exports.epilepticSeptagon = {
  PARENT: [exports.legendarySeptagon],
  LABEL: "Epileptic Septagon",
  FOOD: {
    LEVEL: 5,
  },
  VALUE: 15000000,
  SPECIAL_EFFECT: "nestOnly",
  SIZE: 58.5,
  COLOR: 20,
  BODY: {
    RESIST: 1.75,
    PUSHABILITY: 0.5,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",

  TURRETS: [],
};
exports.epilepticOctagon = {
  PARENT: [exports.legendaryOctagon],
  LABEL: "Epileptic Octagon",
  FOOD: {
    LEVEL: 6,
  },
  VALUE: 40000000,
  SPECIAL_EFFECT: "nestOnly",
  SIZE: 76.5,
  COLOR: 20,
  BODY: {
    RESIST: 2,
    PUSHABILITY: 0.05,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",

  TURRETS: [],
};
exports.epilepticNonagon = {
  PARENT: [exports.legendaryNonagon],
  LABEL: "Epileptic Nonagon",
  FOOD: {
    LEVEL: 7,
  },
  VALUE: 200000000,
  SPECIAL_EFFECT: "nestOnly",
  SIZE: 83,
  COLOR: 20,
  BODY: {
    RESIST: 2,
    PUSHABILITY: 0.05,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",

  TURRETS: [],
};
exports.rainbowEgg = {
  PARENT: [exports.epilepticEgg],
  LABEL: "Rainbow Egg",
  PASSIVE_EFFECT: "uniqueFood",
  FOOD: {
    LEVEL: 0,
  },
  SIZE: 10.5,
  VALUE: 9000,
  COLOR: 36,
  BODY: {
    SHIELD: 5,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.75, 0, 0, 45, 360, 1],
      TYPE: [exports.rainEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 0, 0, 0, 360, 1],
      TYPE: [exports.rainEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [2, 0, 0, 0, 360, 1],
      TYPE: [exports.rainEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.rainbowSquare = {
  PARENT: [exports.epilepticSquare],
  LABEL: "Rainbow Square",
  FOOD: {
    LEVEL: 1,
  },
  COLOR: 36,
  VALUE: 36000,
  SIZE: 13,
  BODY: {
    SHIELD: 10,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 360, 1],
      TYPE: [exports.rainSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8, 0, 0, 0, 360, 1],
      TYPE: [exports.rainSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 0, 0, 45, 360, 1],
      TYPE: [exports.rainSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.rainbowTriangle = {
  PARENT: [exports.epilepticTriangle],
  LABEL: "Rainbow Triangle",
  FOOD: {
    LEVEL: 2,
  },
  VALUE: 180000,
  COLOR: 36,
  SIZE: 12.5,
  BODY: {
    SHIELD: 10,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 180, 360, 1],
      TYPE: [exports.rainTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5.25, 0, 0, 0, 360, 1],
      TYPE: [exports.rainTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [2.5, 0, 0, 180, 360, 1],
      TYPE: [exports.rainTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};

exports.rainbowPentagon = {
  PARENT: [exports.epilepticPentagon],
  LABEL: "Rainbow Pentagon",
  FOOD: {
    LEVEL: 3,
  },
  VALUE: 900000,
  COLOR: 36,
  SIZE: 17,
  BODY: {
    SHIELD: 15,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16.25, 0, 0, 180, 360, 1],
      TYPE: [exports.rainPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12.75, 0, 0, 0, 360, 1],
      TYPE: [exports.rainPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9.75, 0, 0, 180, 360, 1],
      TYPE: [exports.rainPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
  ],
};
exports.rainbowHexagon = {
  PARENT: [exports.epilepticHexagon],
  LABEL: "Rainbow Hexagon",
  FOOD: {
    LEVEL: 4,
  },
  VALUE: 4500000,
  SIZE: 31,
  COLOR: 36,
  BODY: {
    SHIELD: 65,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16.25, 0, 0, 90, 360, 1],
      TYPE: [exports.rainHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.75, 0, 0, 0, 360, 1],
      TYPE: [exports.rainHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12.75, 0, 0, 90, 360, 1],
      TYPE: [exports.rainHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
  ],
};
exports.rainbowSeptagon = {
  PARENT: [exports.epilepticSeptagon],
  LABEL: "Rainbow Septagon",
  FOOD: {
    LEVEL: 5,
  },
  VALUE: 22000000,
  SPECIAL_EFFECT: "nestOnly",
  SIZE: 59,
  COLOR: 36,
  BODY: {
    SHIELD: 75,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17.5, 0, 0, 180, 360, 1],
      TYPE: [exports.rainSeptagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, 0, 0, 360, 1],
      TYPE: [exports.rainSeptagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 180, 360, 1],
      TYPE: [exports.rainSeptagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.rainbowOctagon = {
  PARENT: [exports.epilepticOctagon],
  LABEL: "Rainbow Octagon",
  FOOD: {
    LEVEL: 6,
  },
  VALUE: 60000000,
  SPECIAL_EFFECT: "nestOnly",
  SIZE: 77,
  COLOR: 36,
  BODY: {
    SHIELD: 85,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 22.5, 360, 1],
      TYPE: [exports.rainOctagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17.5, 0, 0, 0, 360, 1],
      TYPE: [exports.rainOctagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, 0, 22.5, 360, 1],
      TYPE: [exports.rainOctagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.rainbowNonagon = {
  PARENT: [exports.epilepticNonagon],
  LABEL: "Rainbow Nonagon",
  FOOD: {
    LEVEL: 7,
  },
  VALUE: 300000000,
  SPECIAL_EFFECT: "nestOnly",
  SIZE: 85,
  COLOR: 36,
  BODY: {
    SHIELD: 85,
  },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 180, 360, 1],
      TYPE: [exports.rainNonagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17.5, 0, 0, 0, 360, 1],
      TYPE: [exports.rainNonagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, 0, 180, 360, 1],
      TYPE: [exports.rainNonagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.abyssalEgg1 = {
  PARENT: [exports.rainbowEgg],
  LABEL: "Abyssal Egg",
  SHAPE: 0,
  VALUE: 13500,
  COLOR: 19,
  SIZE: 19,
  SPECIAL_EFFECT: "nestOnly",
  FOOD: {
    LEVEL: 7,
  },
  BODY: { REGEN: 0 },
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.75, 0, 0, 45, 360, 1],
      TYPE: [exports.blackEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 0, 0, 0, 360, 1],
      TYPE: [exports.blackEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [2, 0, 0, 0, 360, 1],
      TYPE: [exports.blackEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [0.75, 0, 0, 0, 360, 1],
      TYPE: [exports.blackEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.abyssalEgg2 = {
  PARENT: [exports.abyssalEgg1],
  FOOD: {
    LEVEL: 0,
  },
};
exports.abyssalSquare = {
  PARENT: [exports.rainbowSquare],
  LABEL: "Abyssal Square",
  FOOD: {
    LEVEL: 1,
  },
  BODY: { REGEN: 0 },
  SHAPE: 4,
  VALUE: 54000,
  COLOR: 19,
  SIZE: 26,
  SPECIAL_EFFECT: "nestOnly",
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 360, 1],
      TYPE: [exports.blackSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8, 0, 0, 0, 360, 1],
      TYPE: [exports.blackSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 0, 0, 45, 360, 1],
      TYPE: [exports.blackSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [2.75, 0, 0, 0, 360, 1],
      TYPE: [exports.blackSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.abyssalTriangle = {
  PARENT: [exports.rainbowTriangle],
  LABEL: "Abyssal Triangle",
  FOOD: {
    LEVEL: 2,
  },
  BODY: { REGEN: 0 },
  SHAPE: 3,
  VALUE: 270000,
  COLOR: 19,
  SIZE: 25,
  SPECIAL_EFFECT: "nestOnly",
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 180, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5.25, 0, 0, 0, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [2.5, 0, 0, 180, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [1.25, 0, 0, 0, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.abyssalPentagon = {
  PARENT: [exports.rainbowPentagon],
  LABEL: "Abyssal Pentagon",
  FOOD: {
    LEVEL: 3,
  },
  BODY: { REGEN: 0 },
  SHAPE: 5,
  VALUE: 1350000,
  COLOR: 19,
  SIZE: 34,
  SPECIAL_EFFECT: "nestOnly",
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16.25, 0, 0, 180, 360, 1],
      TYPE: [exports.blackPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12.75, 0, 0, 0, 360, 1],
      TYPE: [exports.blackPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9.75, 0, 0, 180, 360, 1],
      TYPE: [exports.blackPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7.25, 0, 0, 0, 360, 1],
      TYPE: [exports.blackPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
  ],
};
exports.abyssalHexagon = {
  PARENT: [exports.rainbowHexagon],
  LABEL: "Abyssal Hexagon",
  FOOD: {
    LEVEL: 4,
  },
  BODY: { REGEN: 0 },
  VALUE: 7000000,
  COLOR: 19,
  SIZE: 62,
  SPECIAL_EFFECT: "nestOnly",
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17.5, 0, 0, 90, 360, 1],
      TYPE: [exports.blackHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.75, 0, 0, 0, 360, 1],
      TYPE: [exports.blackHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12.75, 0, 0, 90, 360, 1],
      TYPE: [exports.blackHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.25, 0, 0, 0, 360, 1],
      TYPE: [exports.blackHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
  ],
};
exports.abyssalSeptagon = {
  PARENT: [exports.rainbowSeptagon],
  LABEL: "Abyssal Septagon",
  FOOD: {
    LEVEL: 5,
  },
  BODY: { REGEN: 0 },
  VALUE: 33000000,
  COLOR: 19,
  SIZE: 108,
  SPECIAL_EFFECT: "nestOnly",
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17.5, 0, 0, 180, 360, 1],
      TYPE: [exports.blackSeptagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, 0, 0, 360, 1],
      TYPE: [exports.blackSeptagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 180, 360, 1],
      TYPE: [exports.blackSeptagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13.75, 0, 0, 0, 360, 1],
      TYPE: [exports.blackSeptagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.abyssalOctagon = {
  PARENT: [exports.rainbowOctagon],
  LABEL: "Abyssal Octagon",
  FOOD: {
    LEVEL: 6,
  },
  BODY: { REGEN: 0 },
  VALUE: 90000000,
  COLOR: 19,
  SIZE: 154,
  SPECIAL_EFFECT: "nestOnly",
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 22.5, 360, 1],
      TYPE: [exports.blackOctagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17.5, 0, 0, 0, 360, 1],
      TYPE: [exports.blackOctagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, 0, 22.5, 360, 1],
      TYPE: [exports.blackOctagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.blackOctagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.abyssalNonagon = {
  PARENT: [exports.rainbowNonagon],
  LABEL: "Abyssal Nonagon",
  FOOD: { 
    LEVEL: 7,
  },
  BODY: { REGEN: 0 },
  VALUE: 450000000,
  COLOR: 19,
  SIZE: 165,
  SPECIAL_EFFECT: "nestOnly",
  GIVE_KILL_MESSAGE: true,
  PASSIVE_EFFECT: "uniqueFood",

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 180, 360, 1],
      TYPE: [exports.blackNonagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17.5, 0, 0, 0, 360, 1],
      TYPE: [exports.blackNonagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, 0, 180, 360, 1],
      TYPE: [exports.blackNonagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.blackNonagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
//MISC

exports.spectator = {
  PARENT: [exports.genericTank],
  LABEL: "Spectator",
  TYPE: "none",
  IGNORE_COLLISION: true,
  CHANGE_SIGHT: true,
  ALPHA: 0,
  ACCEPTS_SCORE: false,
  RESET_UPGRADES: true,
  SKILL: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  LEVEL: -1,
  CAN_BE_ON_LEADERBOARD: false,
  HITS_ITS_OWN_TYPE: "never",
  INTANGIBLE: true,
  DANGER: 0,
  BODY: {
    FOV: 3.5,
    DAMAGE: 0,
    HEALTH: 10000,
    REGEN: 10000,
    RESIST: 10000,
    SHIELD: 10000,
    SPEED: base.SPEED * 5,
    ACCELERATION: 10,
  },
  DRAW_HEALTH: false,
};
//MODIFIED PROJECTILES

exports.flankGuardMinion = makeMulti(
  {
    PARENT: [exports.basicMinion],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 8, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  3,
  "Animated Tank"
);
exports.twisterMissile = makeMulti(
  {
    PARENT: [exports.bullet],
    LABEL: "Missile",
    INDEPENDENT: true,

    FACING_TYPE: "turnWithSpeed",
    BODY: {
      RANGE: 110,
      DENSITY: 3,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [14, 7, 1, 0, 0, 0, 0],
        PROPERTIES: {
          AUTOFIRE: true,
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.gunner,
            g.arty,
            g.superDamage,
          ]),
          TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
          STAT_CALCULATOR: gunCalcNames.thruster,
        },
      },
    ],
  },
  3,
  "Missile"
);
exports.hyperTwisterMissile = makeMulti(
  {
    PARENT: [exports.missile],
    LABEL: "Missile",
    INDEPENDENT: true,

    FACING_TYPE: "turnWithSpeed",
    BODY: {
      RANGE: 110,
      DENSITY: 3,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [14, 7, 1, 0, 0, 0, 0],
        PROPERTIES: {
          AUTOFIRE: true,
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.gunner,
            g.arty,
            g.superDamage,
          ]),
          TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
          STAT_CALCULATOR: gunCalcNames.thruster,
        },
      },
    ],
  },
  4,
  "Hyper Missile"
);
exports.breakerBurst = makeMulti(
  {
    PARENT: [exports.missile],
    DANGER: 7,
    FACING_TYPE: "random",
    CONTROLLERS: ["alwaysFire"],
    MOTION_TYPE: "glide",
    ALPHA: 0,
    BODY: {
      SPEED: 0,
      ACCELERATION: 0,
      HEALTH: 9999,
      RANGE: 5,
      DAMAGE: 0,
      },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 15, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.halfStats]),
          TYPE: [exports.trap, { PERSISTS_AFTER_DEATH: true}],
        },
      },
    ],
  },
  5,
  "Bursting"
);
exports.bursterBurst = makeMulti(
  {
    PARENT: [exports.missile],
    DANGER: 7,
    FACING_TYPE: "random",
    CONTROLLERS: ["alwaysFire"],
    MOTION_TYPE: "glide",
    ALPHA: 0,
    BODY: {
      SPEED: 0,
      ACCELERATION: 0,
      HEALTH: 9999,
      RANGE: 5,
      DAMAGE: 0,
      },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 7.5, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.halfStats, g.lesserDamage]),
          TYPE: [exports.trap, { PERSISTS_AFTER_DEATH: true}],
        },
      },
    ],
  },
  10,
  "Bursting"
);
exports.ogbursterBurst = makeMulti(
  {
    PARENT: [exports.missile],
    DANGER: 7,
    FACING_TYPE: "random",
    CONTROLLERS: ["alwaysFire"],
    MOTION_TYPE: "glide",
    ALPHA: 0,
    BODY: {
      SPEED: 0,
      ACCELERATION: 0,
      HEALTH: 9999,
      RANGE: 5,
      DAMAGE: 0,
      },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 7.5, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.halfStats, g.lesserDamage]),
          TYPE: [exports.ogbursterTrap, { PERSISTS_AFTER_DEATH: true}],
        },
      },
    ],
  },
  10,
  "Bursting"
);
exports.grenadierExplosion = makeMulti(
  {
    PARENT: [exports.bullet],
    ALPHA: 0,
    FACING_TYPE: "autospin",
    INDEPENDENT: true,
    BODY: {
      RANGE: 5,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 5, 1, 0, 0, 0, 0],
        PROPERTIES: {
          AUTOFIRE: true,
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.twin,
            g.gunner,
            g.cyclone,
            g.power,
            g.lesserStats,
          ]),
          TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        },
      },
    ],
  },
  10,
  ""
);
exports.grenadierExplosion = makeMulti(
  {
    PARENT: [exports.bullet],
    ALPHA: 0,
    FACING_TYPE: "autospin",
    INDEPENDENT: true,
    BODY: {
      RANGE: 5,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 5, 1, 0, 0, 0, 0],
        PROPERTIES: {
          AUTOFIRE: true,
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.twin,
            g.gunner,
            g.cyclone,
            g.power,
            g.lesserStats,
          ]),
          TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        },
      },
    ],
  },
  10,
  ""
);
exports.lesserGrenadierExplosion = makeMulti(
  {
    PARENT: [exports.bullet],
    ALPHA: 0,
    FACING_TYPE: "autospin",
    INDEPENDENT: true,
    BODY: {
      RANGE: 5,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 5, 1, 0, 0, 0, 0],
        PROPERTIES: {
          AUTOFIRE: true,
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.twin,
            g.gunner,
            g.cyclone,
            g.power,
            g.lesserStats,
            g.lesserDamage,
          ]),
          TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        },
      },
    ],
  },
  5,
  ""
);
exports.RealisticExplosion = makeMulti(
  {
    PARENT: [exports.bullet],
    ALPHA: 0,
    FACING_TYPE: "autospin",
    INDEPENDENT: true,
    BODY: {
      RANGE: 5,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 5, 1, 0, 0, 0, 0],
        PROPERTIES: {
          AUTOFIRE: true,
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.twin,
            g.gunner,
            g.cyclone,
            g.power,
            g.lesserStats,
            g.minorReload,
            g.minorReload,
            g.halfDamage,
          ]),
          TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 5, 1, 0, 0, 8, 0],
        PROPERTIES: {
          AUTOFIRE: true,
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.twin,
            g.gunner,
            g.cyclone,
            g.power,
            g.lesserStats,
            g.minorReload,
            g.minorReload,
            g.halfDamage,
            g.lesserDamage,
          ]),
          TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 5, 1, 0, 0, 24, 0],
        PROPERTIES: {
          AUTOFIRE: true,
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.twin,
            g.gunner,
            g.cyclone,
            g.power,
            g.lesserStats,
            g.minorReload,
            g.minorReload,
            g.halfDamage,
            g.halfRange,
            g.bitmoreSize,
            g.lesserDamage,
          ]),
          TYPE: [exports.trap, { PERSISTS_AFTER_DEATH: true }],
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 5, 1, 0, 0, 14, 0],
        PROPERTIES: {
          AUTOFIRE: true,
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.twin,
            g.gunner,
            g.cyclone,
            g.power,
            g.lesserStats,
            g.minorReload,
            g.minorReload,
            g.halfDamage,
            g.halfRange,
            g.bitmoreSize,
          ]),
          TYPE: [exports.trap, { PERSISTS_AFTER_DEATH: true }],
        },
      },
    ],
  },
  7,
  ""
);
exports.C4Explosion = makeMulti(
  {
    PARENT: [exports.bullet],
    ALPHA: 0,
    FACING_TYPE: "autospin",
    INDEPENDENT: true,
    BODY: {
      RANGE: 5,
    },
    GUNS: [
      {
      POSITION: [20, 12, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.superHealth,
          g.greaterDamage,
          g.minorSpeed,
          g.minorSpeed,
          g.minorSpeed,
          g.minorSpeed,
          
        ]),
        TYPE: [exports.bullet, { LABEL: "Flare", MOTION_TYPE: "grow" }],
      },
    },
    ],
  },
  1,
  ""
);
exports.beenadeExplosion = makeMulti(
  {
    PARENT: [exports.bullet],
    ALPHA: 0,
    FACING_TYPE: "autospin",
    INDEPENDENT: true,
    BODY: {
      RANGE: 5,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 5, 1, 0, 0, 0, 0],
        PROPERTIES: {
          AUTOFIRE: true,
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.twin,
            g.gunner,
            g.cyclone,
            g.power,
            g.lesserStats,
            g.lesserRange,
            g.lesserSpeed,
            g.greaterHealth,
            g.greaterDamage,
          ]),
          TYPE: [exports.uncontrolledBeeDrone, { PERSISTS_AFTER_DEATH: true }],
        },
      },
    ],
  },
  7,
  ""
);
exports.neutronExplosion = makeMulti(
  {
    PARENT: [exports.bullet],
    ALPHA: 0,
    FACING_TYPE: "autospin",
    INDEPENDENT: true,
    BODY: {
      RANGE: 5,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 5, 1, 0, 0, 0, 0],
        PROPERTIES: {
          AUTOFIRE: true,
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.twin,
            g.gunner,
            g.cyclone,
            g.power,
            g.lesserStats,
          ]),
          TYPE: [exports.miniNeutronMissile, { PERSISTS_AFTER_DEATH: true }],
        },
      },
    ],
  },
  10,
  ""
);
exports.leapingSquareDrone = {
  PARENT: [exports.squareDrone],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.bounce,
    },
  ],
};
exports.leapingTriangleDrone = {
  PARENT: [exports.leapingSquareDrone],
  LABEL: "Triangle",
  SHAPE: 3,
  COLOR: 9,
};
exports.autoSunchip = {
  LABEL: "Sunchip",
  PARENT: [exports.sunchip],
  TURRETS: [
  {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.cubedSaw1,],
    },
    {
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [
        exports.lesserAutoTurret,
        { CONTROLLERS: ["nearestDifferentMaster"], INDEPENDENT: true },
      ],
    },
  ],
};
exports.autoSterileEggChip = {
  LABEL: "Sunchip",
  PARENT: [exports.sterileEggChip],
  TURRETS: [
    {
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [
        exports.lesserAutoTurret,
        { CONTROLLERS: ["nearestDifferentMaster"], INDEPENDENT: true },
      ],
    },
  ],
};
exports.autoDrone = {
  LABEL: "Drone",
  PARENT: [exports.drone],
  TURRETS: [
    {
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [
        exports.lesserAutoTurret,
        { CONTROLLERS: ["nearestDifferentMaster"], INDEPENDENT: true },
      ],
    },
  ],
};
exports.revenantDrone = {
  PARENT: [exports.drone],
  IGNORE_COLLISION: true,
  INTANGIBLE: true,
  INVISIBLE: [0.006, 0.003],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: [exports.goodEye, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.hollowDrone = {PARENT: [exports.revenantDrone], ALPHA: 0.45, INVISIBLE: [100, 0],}
exports.revenantSwarm = {
  PARENT: [exports.swarmDrone],
  IGNORE_COLLISION: true,
  INTANGIBLE: true,
  ALPHA: 0.45,

  BODY: {
    ACCELERATION: 6,
    PENETRATION: 1.25,
    HEALTH: 0.35 * wepHealthFactor,
    DAMAGE: 1.5 * wepDamageFactor,
    SPEED: 4.5,
    REGEN: -1,
    RESIST: 1.6,
    RANGE: 225,
    DENSITY: 2,
    PUSHABILITY: 1,
    FOV: 1.5,
  },  INVISIBLE: [100, 0],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: [exports.goodEye, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.autoSwarmDrone = {
  PARENT: [exports.swarmDrone],
  TURRETS: [
    {
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [
        exports.weakAutoTurret,
        { CONTROLLERS: ["nearestDifferentMaster"], INDEPENDENT: true },
      ],
    },
  ],
};
exports.autoUncontrolledSwarmDrone = {
  PARENT: [exports.swarmDrone],
  INDEPENDENT: true,
  TURRETS: [
    {
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [
        exports.weakAutoTurret,
        { CONTROLLERS: ["nearestDifferentMaster"], INDEPENDENT: true },
      ],
    },
  ],
};
exports.autoBeeDrone = {
  PARENT: [exports.beeDrone],
  TURRETS: [
    {
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [
        exports.weakAutoTurret,
        { CONTROLLERS: ["nearestDifferentMaster"], INDEPENDENT: true },
      ],
    },
  ],
};
exports.driveHive = {
  PARENT: [exports.bullet],
  LABEL: "Hive",
  BODY: {
    RANGE: 110,
    FOV: 0.5,
    DENSITY: 3,
  },
  FACING_TYPE: "turnWithSpeed",
  INDEPENDENT: true,
  CONTROLLERS: ["alwaysFire"],
  AI: { NO_LEAD: true },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 9.5, 0.6, 7, 0, 108, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.autoBeeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 180, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.autoBeeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 252, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.autoBeeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 324, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.autoBeeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 36, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfDamage,
          g.greaterReload,
        ]),
        TYPE: exports.autoBeeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.healerDrone = {
  PARENT: [exports.drone],
  HEAL_EFFECT: true,
  CONTROLLERS: ["nearestDifferentMaster"],
  AI_TARGET: "healAllies",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.healerTrap = {
  PARENT: [exports.trap],
  HEAL_EFFECT: true,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.gunSentryDrone = {
  PARENT: [exports.drone],
  LABEL: "Sentry",
  BODY: {
    SPEED: 2,
  },
  SHAPE: 3,
  DRAW_HEALTH: true,
  TURRETS: [
    {
      POSITION: [12, 0, 0, 180, 360, 1],
      TYPE: [
        exports.heavySentryGun,
        { HAS_NO_RECOIL: true, INDEPENDENT: true },
      ],
    },
  ],
};
exports.gunBlueDrone = {
  PARENT: [exports.drone],
  LABEL: "Sentry",
  BODY: {
    SPEED: 3.5,
  },
  SHAPE: 3,
  DRAW_HEALTH: true,
  TURRETS: [
    {
      POSITION: [12, 0, 0, 180, 360, 1],
      TYPE: [
        exports.heavyBlueGun,
        { HAS_NO_RECOIL: true, INDEPENDENT: true },
      ],
    },
  ],
};
exports.swarmBlueDrone = {
  PARENT: [exports.drone],
  LABEL: "Sentry",
  SHAPE: 3,
  BODY: {
    SPEED: 3.5,
  },
  DRAW_HEALTH: true,
  GUNS: [
    {
      POSITION: [7, 14, 0.6, 7, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.halfDamage]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.swarmSentryDrone = {
  PARENT: [exports.drone],
  LABEL: "Sentry",
  SHAPE: 3,
  BODY: {
    SPEED: 2,
  },
  DRAW_HEALTH: true,
  GUNS: [
    {
      POSITION: [7, 14, 0.6, 7, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.halfDamage]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.trapSentryDrone = {
  PARENT: [exports.drone],
  LABEL: "Sentry",
  BODY: {
    SPEED: 2,
  },
  SHAPE: 3,
  DRAW_HEALTH: true,
  TURRETS: [
    {
      POSITION: [12, 0, 0, 180, 360, 1],
      TYPE: [
        exports.sentryTrapTurret,
        {
          HAS_NO_RECOIL: true,
          CONTROLLERS: ["nearestDifferentMaster"],
          INDEPENDENT: true,
        },
      ],
    },
  ],
};

exports.thrasherDrone = {
  PARENT: [exports.minion],
  LABEL: "Thrasher",
  VARIES_IN_SIZE: true,
  WALL_IMMUNITY: true,
  DRAW_HEALTH: true,
  GUNS: [],
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.lesserAutoTurret],
    },
  ],
};
exports.twinAutoAnomalyDrone = {
  PARENT: [exports.thrasherDrone],
  LABEL: "Void Anomaly",
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.weakAutoSmasherTurret],
    },
  ],
};
exports.thrasherSpawner = {
  PARENT: [exports.genericTank],
  LABEL: "Spawned",
  STAT_NAMES: statnames.drone,
  CONTROLLERS: ["nearestDifferentMaster"],
  COLOR: 19,
  SHAPE: 1,
  INDEPENDENT: true,
  AI: { chase: true },
  MAX_CHILDREN: 4,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner]),
        TYPE: [exports.thrasherDrone],
        SYNCS_SKILLS: true,
        AUTOFIRE: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.twinAutoAnomalySpawner = {
  PARENT: [exports.genericTank],
  LABEL: "Spawned",
  STAT_NAMES: statnames.drone,
  CONTROLLERS: ["nearestDifferentMaster"],
  COLOR: 19,
  SHAPE: 1,
  INDEPENDENT: true,
  AI: { chase: true },
  MAX_CHILDREN: 4,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.greaterHealth,
          g.greaterSize,
          g.superSpeed,
        ]),
        TYPE: [exports.twinAutoAnomalyDrone],
        SYNCS_SKILLS: true,
        AUTOFIRE: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.autoSmasherMinion = {
  PARENT: [exports.minion],
  LABEL: "Auto-Smasher Minion",
  GROWTH_FACTOR: 1.5,
  BODY: {
    FOV: 0.5,
    SPEED: 3,
    ACCELERATION: 0.4,
    HEALTH: 4.5,
    SHIELD: 1,
    REGEN: 0.5,
    DAMAGE: 0.55,
    RESIST: 1,
    PENETRATION: 1,
    RANGE: 100,
    DENSITY: 8,
  },
  GUNS: [],
  DRAW_HEALTH: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.weakAutoSmasherTurret, { INDEPENDENT: true }],
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
};

exports.fullAutoGuardMinion = {
  PARENT: [exports.minion],
  LABEL: "Guard",
  VARIES_IN_SIZE: true,
  GUNS: [],
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.lesserAutoTurret],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.auto3EggTurret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.auto3EggTurret,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.auto3EggTurret,
    },
  ],
};
exports.bansheeGuardMinion  = {
  PARENT: [exports.minion],
  LABEL: "Guard",
  VARIES_IN_SIZE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */ POSITION: [10, 8, 0, 0, 80, 0],
      TYPE: exports.bansheeEggTurret,
    },
    {
      POSITION: [10, 8, 0, 120, 80, 0],
      TYPE: exports.bansheeEggTurret,
    },
    {
      POSITION: [10, 8, 0, 240, 80, 0],
      TYPE: exports.bansheeEggTurret,
    },
  ],
  GUNS: [
    {
      POSITION: [6, 11, 1.2, 8, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.lesserDamage,
          g.lesserHealth,
          g.halfSize,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.lesserDamage,
          g.lesserHealth,
          g.halfSize,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.lesserDamage,
          g.lesserHealth,
          g.halfSize,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
  ],
};
exports.spawnerGuardMinion  = {
  PARENT: [exports.minion],
  LABEL: "Guard",
  VARIES_IN_SIZE: true,
  MAX_CHILDREN: 4,
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.minion]),
        TYPE: exports.minion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.cruiserProtectorMinion = {
  PARENT: [exports.fullAutoGuardMinion],
  SHAPE: 4,
  TURRETS: [],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.minion,
          g.greaterHealth,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.minion,
          g.greaterHealth,
        ]),

        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};

exports.swarmerProtectorMinion = {
  PARENT: [exports.fullAutoGuardMinion],
  SHAPE: 4,
  TURRETS: [],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile, g.minion, g.greaterReload]),
        TYPE: exports.hive,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
};
exports.beekeeperProtectorMinion = {
  PARENT: [exports.fullAutoGuardMinion],
  SHAPE: 4,
  TURRETS: [],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [14, 3, 1, 0, -6, -7, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.minion, g.doubleSize]),
        TYPE: exports.uncontrolledBeeDrone,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 0, 0],
    },
    {
      POSITION: [14, 3, 1, 0, 6, 7, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.minion, g.doubleSize]),
        TYPE: exports.uncontrolledBeeDrone,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 0, 0],
    },
    {
      POSITION: [19, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.minion]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.betaProtectorMinion = {
  PARENT: [exports.fullAutoGuardMinion],
  LABLE: "Beta Protector",
  SIZE: 10,
  SHAPE: 4,
  MAX_CHILDREN: 4,
  TURRETS: [],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [2, 12.5, 1, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.minion, g.doubleSize]),
        TYPE: exports.beekeeperProtectorMinion,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 0, 0],
    },
    {
      POSITION: [4.5, 10.5, 1, 10.5, 0, 90, 0],
    },
    {
      POSITION: [2, 12.5, 1, 15, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.minion, g.doubleSize]),
        TYPE: exports.beekeeperProtectorMinion,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 90, 0],
    },
    {
      POSITION: [4.5, 10.5, 1, 10.5, 0, -90, 0],
    },
    {
      POSITION: [2, 12.5, 1, 15, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.minion, g.doubleSize]),
        TYPE: exports.beekeeperProtectorMinion,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, -90, 0],
    },
    {
      POSITION: [4.5, 10.5, 1, 10.5, 0, 180, 0],
    },
    {
      POSITION: [2, 12.5, 1, 15, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.minion, g.doubleSize]),
        TYPE: exports.beekeeperProtectorMinion,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 180, 0],
    },
  ],
};
exports.trianglesenti1 = {
  PARENT: [exports.fullAutoGuardMinion],
  SHAPE: 3,
  TURRETS: [],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 11, 1.2, 8, 0, 125, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over, g.minion]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 235, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over, g.minion]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.minion]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.trianglesenti2 = makeMulti(
  {
    PARENT: [exports.fullAutoGuardMinion],
    SHAPE: 3,
    TURRETS: [],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [11, 8.5, 0.6, 7, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.minion]),
          TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
      {
        POSITION: [6, 11, 1.2, 8, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone, g.over, g.minion]),
          TYPE: exports.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
          MAX_CHILDREN: 1,
        },
      },
    ],
  },
  3,
  "Sentinel"
);
exports.trianglesenti3 = {
  PARENT: [exports.fullAutoGuardMinion],
  SHAPE: 3,
  TURRETS: [],
  MAX_CHILDREN: 5,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.over,
          g.lesserReload,
          g.minion,
        ]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.pentagonsenti1 = {
  PARENT: [exports.fullAutoGuardMinion],
  LABEL: "Pentagon Sentinel",
  SHAPE: 5,
  WALL_IMMUNITY: true,
  TURRETS: [],
  GUNS: [
    {
      POSITION: [15.5, 3.5, 1, 0, -2.3, -19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15.5, 3.5, 1, 0, 2.3, 19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, 3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, -3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.rifle,
          g.crossbow,
          g.crossbow2,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.erebussenti1 = {
  PARENT: [exports.minion],
  LABEL: "Pentagon Sentinel",
  SHAPE: 5,
  BODY:{
    FOV: base.FOV * 4,
    SPEED: base.SPEED * 3,
  },
  WALL_IMMUNITY: true,
  TURRETS: [],
  GUNS: [
    {
      POSITION: [15.5, 3.5, 1, 0, -2.3, -19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15.5, 3.5, 1, 0, 2.3, 19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, 3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, -3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.rifle,
          g.crossbow,
          g.crossbow2,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.pentagonsenti2 = {
  PARENT: [exports.fullAutoGuardMinion],
  LABEL: "Pentagon Sentinel",
  SHAPE: 5,
  TURRETS: [],
  GUNS: [
    {
      POSITION: [14.5, 7.5, 0.6, 0, 5.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12.5, 7.5, 0.5, 0, 5.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14.5, 7.5, 0.6, 0, -5.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12.5, 7.5, 0.5, 0, -5.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22.3, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20.3, 8, 1, 0, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18.3, 8, 1, 0, 0, 0, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.pentagonsenti3 = {
  PARENT: [exports.fullAutoGuardMinion],
  LABEL: "Pentagon Sentinel",
  SHAPE: 5,
  TURRETS: [],

  GUNS: [
    {
      POSITION: [20, 10, 1, , 0, , 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 13, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile, g.minion]),
        TYPE: exports.sentinelMissile2,
      },
    },
  ],
};
exports.pentagonsenti4 = {
  PARENT: [exports.fullAutoGuardMinion],
  LABEL: "Pentagon Sentinel",
  SHAPE: 5,
  TURRETS: [],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody,
    },
    {
      POSITION: [10, 8, 0, 180, 80, 0],
      TYPE: exports.autoTurret,
    },
    {
      POSITION: [10, 8, 0, -105, 80, 0],
      TYPE: exports.autoTurret,
    },
    {
      POSITION: [10, 8, 0, 105, 80, 0],
      TYPE: exports.autoTurret,
    },
    {
      POSITION: [10, 8, 0, 35, 80, 0],
      TYPE: exports.autoTurret,
    },
    {
      POSITION: [10, 8, 0, -35, 80, 0],
      TYPE: exports.autoTurret,
    },
  ],
};
exports.hexasenti1 = {
  PARENT: [exports.pentagonsenti1],
  LABEL: "Hexagon Sentinel",
  SPECIAL_EFFECT: "noRegen",
  TARGETABLE: true,
  WALL_IMMUNITY: true,
  GROWTH_FACTOR: 3.5,
  BODY: {
    FOV: 0.5,
    SPEED: 3,
    ACCELERATION: 0.4,
    HEALTH: 7.5,
    SHIELD: 0.1,
    REGEN: -1,
    DAMAGE: 0.55,
    RESIST: 0.02,
    RANGE: 100,
    DENSITY: 150,
  },
  DRAW_HEALTH: true,
  SHAPE: 6,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [13, 3, 1, 0, -8, -7, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.lesserDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 3, 1, 0, 8, 7, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.lesserDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17, 3, 1, 0, -6, -7, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.lesserDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17, 3, 1, 0, 6, 7, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.lesserDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.lesserDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.hexasenti2 = {
  PARENT: [exports.hexasenti1],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 3, 1, 0, -6, -7, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.minion, g.halfRecoil]),
        TYPE: exports.uncontrolledBeeDrone,
      },
    },
    {
      POSITION: [14, 3, 1, 0, 6, 7, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.minion, g.halfRecoil]),
        TYPE: exports.uncontrolledBeeDrone,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.minion,
          g.halfRecoil,
        ]),
        TYPE: exports.hive,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
};
exports.pillbox = {
  LABEL: "Pillbox",
  PARENT: [exports.setBlock],
  CONTROLLERS: ["goToMasterTarget", "nearestDifferentMaster"],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.lesserAutoTurret, { INDEPENDENT: true }],
    },
  ],
};
exports.REASpillboxTurret = {
  PARENT: [exports.pillboxTurret],
  GUNS: [
    {
      POSITION: [22, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.minion, g.lesserStats]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

      POSITION: [17, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.8, 17, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.minion, g.lesserStats]),
        TYPE: [exports.trap, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.REASpillbox = {
  LABEL: "Pillbox",
  PARENT: [exports.setBlock],
  CONTROLLERS: ["goToMasterTarget", "nearestDifferentMaster"],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.REASpillboxTurret, { INDEPENDENT: true }],
    },
  ],
};
exports.boostedpillbox = {
  LABEL: "Pillbox",
  PARENT: [exports.setBlock],
  //CONTROLLERS: ["alwaysFire"],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 10, 1, 0, 0, 0, 25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          //g.doubleReload,
          g.minorRange,
          g.doubleSize,
          g.minorRange,
          g.minorRange,
          g.minorSpeed,
          g.superRecoil,
        ]),
        TYPE: [exports.setBlock, { PERSISTS_AFTER_DEATH: true }],
        AUTOFIRE: true,
      },
    },
  ],
};
exports.trailtest = {
  LABEL: "Trail Test",
  PARENT: [exports.genericTank],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 10, 1, 2, 0, 180, 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.doublereload,
          g.minorRange,
          g.doubleSize,
          g.minorRange,
          g.minorRange,
          g.minorSpeed,
          g.greaterRecoil,
          g.greaterRecoil,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        AUTOFIRE: true,
      },
    },
  ],
};
exports.hivebox = {
  LABEL: "Hivebox",
  PARENT: [exports.setBlock],
  CONTROLLERS: ["goToMasterTarget", "nearestDifferentMaster"],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 9.5, 0.6, 7, 0, 180, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.lesserHealth,
          g.lesserHealth,
          g.lesserDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 9.5, 0.6, 7, 0, -90, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.lesserHealth,
          g.lesserHealth,
          g.lesserDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 9.5, 0.6, 7, 0, 90, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.lesserHealth,
          g.lesserHealth,
          g.lesserDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 9.5, 0.6, 7, 0, 0, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.lesserHealth,
          g.lesserHealth,
          g.lesserDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.arenaPillboxTurret = {
  PARENT: [exports.auto3Turret],
  LABEL: "",
  HAS_NO_RECOIL: true,
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.halfSpeed,
          g.lesserStats,
          g.doubleReload,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.arenaPillbox = {
  LABEL: "Pillbox",
  PARENT: [exports.setBlock],
  CONTROLLERS: ["goToMasterTarget", "nearestDifferentMaster"],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.arenaPillboxTurret, { INDEPENDENT: true }],
    },
  ],
};
exports.ULTRApillbox = {
  LABEL: "PillboxULTRA",
  PARENT: [exports.setBlock],
  CONTROLLERS: ["goToMasterTarget", "nearestDifferentMaster"],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 6, 0, 0, 120, 0],
      TYPE: [exports.auto4Turret, { INDEPENDENT: true }],
    },
    {
      POSITION: [10, 6, 0, 90, 120, 0],
      TYPE: [exports.auto4Turret, { INDEPENDENT: true }],
    },
    {
      POSITION: [10, 6, 0, -90, 120, 0],
      TYPE: [exports.auto4Turret, { INDEPENDENT: true }],
    },
    {
      POSITION: [10, 6, 0, 180, 120, 0],
      TYPE: [exports.auto4Turret, { INDEPENDENT: true }],
    },
    {
      POSITION: [3, 8, 0, 45, 120, 1],
      TYPE: [exports.lesserAutoTurret, { INDEPENDENT: true }],
    },
    {
      POSITION: [3, 8, 0, -45, 120, 1],
      TYPE: [exports.lesserAutoTurret, { INDEPENDENT: true }],
    },
    {
      POSITION: [3, 8, 0, -135, 120, 1],
      TYPE: [exports.lesserAutoTurret, { INDEPENDENT: true }],
    },
    {
      POSITION: [3, 8, 0, 135, 120, 1],
      TYPE: [exports.lesserAutoTurret, { INDEPENDENT: true }],
    },
    {
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.oldAutoSmasherTurret, { INDEPENDENT: true }],
    },
  ],
};
exports.engineTurret = {
  PARENT: [exports.autoTurret],
  DANGER: 7,
  LABEL: "",
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.45,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [3, 14, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: [exports.pillbox, { PERSISTS_AFTER_DEATH: true }],
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
};
exports.bounceblock = {
  LABEL: "Slung Block",
  PARENT: [exports.setBlock],
  CONTROLLERS: ["goToMasterTarget", "nearestDifferentMaster"],
  INDEPENDENT: true,
  BODY: {
    FOV: 0.54,
  },
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.autoBounce, //boing
    },
  ],
};

exports.holdtrap = {
  LABEL: "Trap",
  PARENT: [exports.trap],
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.bastionTurret,
    },
  ],
};
exports.mechtrap = {
  LABEL: "Trap",
  PARENT: [exports.trap],
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.mechTurret,
    },
  ],
};
exports.autoBullet = {
  PARENT: [exports.bullet],
  TURRETS: [
    {
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: [exports.mechTurret, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.mechanisterTrap = {
  LABEL: "Trap",
  PARENT: [exports.trap],
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.twinMechanisterTurret,
      REPAIR_EFFECT: true,
    },
  ],
};
exports.mechanismTrap = {
  LABEL: "Trap",
  PARENT: [exports.trap],
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.twinMechTurret,
    },
  ],
};
exports.mechanizerTrap = {
  LABEL: "Trap",
  PARENT: [exports.trap],
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.flankMechTurret,
    },
  ],
};
exports.cubedmechtrap = {
  LABEL: "block",
  SHAPE: -4,
  PARENT: [exports.trap],
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  TURRETS: [
    {
      POSITION: [11, 10, 0, 0, 150, 0],
      TYPE: exports.cubedTurret,
    },
    {
      POSITION: [11, 10, 0, 90, 150, 0],
      TYPE: exports.cubedTurret,
    },
    {
      POSITION: [11, 10, 0, -90, 150, 0],
      TYPE: exports.cubedTurret,
    },
    {
      POSITION: [11, 10, 0, 180, 150, 0],
      TYPE: exports.cubedTurret,
    },
  ],
};
exports.flingertrap = {
  LABEL: "Flung Trap",
  PARENT: [exports.trap],
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  BODY: {
    FOV: 0.5,
  },
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.autoBounce,
    },
  ],
};
exports.shattererTrap = {
  PARENT: [exports.trap],
  LABEL: "Trap",
  DEATH_THROES: "breakerBurst",
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  BODY: {
    FOV: 0.5,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.breakerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.autoBounce,
    },
  ],
};
exports.mechBreakerTrap = {
  LABEL: "Trap",
  PARENT: [exports.trap],
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  DEATH_THROES: "breakerBurst",
  BODY: {
    FOV: 0.5,
  },
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.mechTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.breakerSymbol,
    },
  ],
};
exports. LandmineTrap = {
  LABEL: "Landmine",
  INVISIBLE: [100, 0],
  ALPHA: 0.075,
  PARENT: [exports.trap],
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  DEATH_THROES: "RealisticExplosion",
  PUSHABILITY: 0,
  BODY: {
    FOV: 0.5,
    SHAPE: 0,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 30, 360, 0],
      TYPE: exports.smasherBody2,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.breakerSymbol,
    },
  ],
};
exports.mechflingtrap = {
  LABEL: "Flung Trap",
  PARENT: [exports.trap],
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,

  BODY: {
    FOV: 0.5,
  },
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.mechTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.bounce,
    },
  ],
};

exports.bosspillbox = {
  LABEL: "Pillbox",
  PARENT: [exports.unsetBlock],
  CONTROLLERS: ["nearestDifferentMaster"],

  BODY: {
    SPEED: 1,
  },

  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.bossPillboxTurret,
    },
  ],
};
exports.terrestrialpillbox = {
  LABEL: "Pillbox",
  PARENT: [exports.unsetBlock],
  CONTROLLERS: ["nearestDifferentMaster"],

  BODY: {
    SPEED: 1,
  },

  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.terrestrialPillboxTurret,
    },
  ],
};
exports.bosspillboxTwin = {
  LABEL: "Pillbox",
  PARENT: [exports.unsetBlock],
  CONTROLLERS: ["nearestDifferentMaster"],

  BODY: {
    SPEED: 1,
  },

  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.weakAutoSmasherTurret,
    },
  ],
};
exports.tankpillboxTwin = {
  LABEL: "Pillbox",
  PARENT: [exports.unsetBlock],
  CONTROLLERS: ["nearestDifferentMaster"],

  BODY: {
    SPEED: 1,
  },

  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.minorAutoSmasherTurret,
    },
  ],
};
exports.bosspillboxTrio = {
  LABEL: "Pillbox",
  PARENT: [exports.trap],
  SHAPE: -4,
  CONTROLLERS: ["nearestDifferentMaster"],
  BODY: {
    SPEED: 1,
  },
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.weakAutoSmasherTripleTurret,
    },
  ],
};

exports.bosstrapbox = {
  LABEL: "Pillbox",
  PARENT: [exports.unsetBlock],
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: true,
  BODY: {
    SPEED: 1,
    FOV: 1.2,
  },

  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.trapTurret, { INDEPENDENT: true }],
    },
  ],
};
exports.pillboxT = {
  LABEL: "Pillbox",
  PARENT: [exports.unsetBlock],
  CONTROLLERS: ["nearestDifferentMaster"],

  BODY: {
    FOV: 1.2,
    SPEED: 1,
  },

  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.engineTurret,
    },
  ],
};
exports.workerMinion = makeMulti(
  {
    PARENT: [exports.minion],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [11, 0, 0, 0, 360, 1],
        TYPE: exports.weakAutoSmasherTurret,
      },
    ],
    GUNS: [
      {
        /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4.5, 10.5, 1, 10.5, 0, 180, 0],
      },
      {
        POSITION: [1.2, 12.5, 1, 14.8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.spawner]),
          TYPE: exports.minion,
          MAX_CHILDREN: 2,
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [3.5, 12.5, 1, 8, 0, 180, 0],
      },
      {
        POSITION: [15, 7, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [3, 7, 1.7, 15, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap]),
          TYPE: exports.mechtrap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [12, 9, 1, 0, 0, 0, 0],
      },
    ],
  },
  3,
  "Worker Minion"
);
//Reusable Guns

let basicGun = [];
let miniShotGuns = [];
let noviceGun = [];

let adeptGun = [];

let advancedGun = [];

let expertGun = [];

let eliteGun = [];

let masterGun = [];

let chosenGun = [];

let worthyoftheGodsGun = [];

let machineGun = [];
let machineHeal = [];
let twinGuns = [];
let pounderGun = [];
let launcherGun = [];
let destroyerGun = [];
let cruiserGuns = [];
let sideGuns = [];
let hollowSideGuns = [];
let extraSideGuns = [];
let beeGuns = [];
let hexaBeeGuns = [];
let pelletGuns = [];
let hunterGuns = [];
let gatlingGun = [];
let healingGun = [];
let blasterGun = [];
let trapGuardGun = [];
let birdGuns = [];
let condorGuns = [];
let triangleThrusterGuns = [];
let triangleGun = [];
let ripperGun = [];
let shrapnelGun = [];
let shotGun = [];
let shotHeal = [];
let reverseShotGun = [];
let builderGun = [];
basicGun.push({
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [18, 8, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic]),
    TYPE: exports.bullet,
    LABEL: "", // def
    STAT_CALCULATOR: 0, // def
    WAIT_TO_CYCLE: false, // defd
    AUTOFIRE: false, // def
    SYNCS_SKILLS: false, // def
    MAX_CHILDREN: 0, // def
    ALT_FIRE: false, // def
    NEGATIVE_RECOIL: false, // def
  },
});
for (let i = 0; i < 2.5; i++) {
  miniShotGuns.push(
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [1, 7.5, 1, 5, 0.25 * i, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.lesserDamage,
          g.bitLessHealth,
          g.halfReload,
        ]),
        TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [1, 7.5, 1, 5, -0.25 * i, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.lesserDamage,
          g.bitLessHealth,
          g.halfReload
        ]),
        TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [1, 7.5, 1, 5, 0.25 * i, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.lesserDamage,
          g.bitLessHealth,
          g.halfReload
        ]),
        TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [1, 7.5, 1, 5, -0.25 * i, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.lesserDamage,
          g.bitLessHealth,
          g.halfReload
        ]),
        TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
      },
    }
  );
}
noviceGun.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [19, 8, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.greaterDamage]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [5.5, 4, -1.8, 6.5, 0, 0, 0],
  },
);
adeptGun.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [19, 8, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.doubleDamage]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [6, 5, -1.8, 6.5, 0, 0, 0],
  },
);
advancedGun.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [19, 8, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.doubleDamage]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [6.5, 6, -1.8, 6.5, 0, 0, 0],
  }
);
expertGun.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [19, 8, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.doubleDamage, 
        g.greaterSpeed,
      ]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [7, 6, -1.8, 6.5, 0, 0, 0],
  }
);
eliteGun.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [19, 8, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.doubleDamage, 
        g.greaterSpeed,
      ]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [7.5, 6, -1.8, 6.5, 0, 0, 0],
  }
);
masterGun.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [19, 8, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.superDamage, g.greaterSpeed]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [8, 6, -1.8, 6.5, 0, 0, 0],
  }
);
chosenGun.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [19, 8, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.superDamage, g.doubleSpeed]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [8, 8, -1.8, 6.5, 0, 0, 0],
  }
);
worthyoftheGodsGun.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [19, 8, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.superDamage, g.superSpeed]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [8, 10, -1.8, 6.5, 0, 0, 0],
  }
);
machineGun.push({
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [12, 10, 1.4, 8, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.mach]),
    TYPE: exports.bullet,
  },
});
machineHeal.push({
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [12, 10, 1.25, 8, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.lesserHealth, g.lesserSpeed, g.lesserDamage,]),
    TYPE: exports.healerBullet,
  },
});
builderGun.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 12, 1, 0, 0, 0, 0],
  },
  {
    POSITION: [2, 12, 1.1, 18, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.trap, g.block, g.greaterHealth]),
      TYPE: exports.setBlock,
    },
  }
);
twinGuns.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [20, 8, 1, 0, 5.5, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
      TYPE: exports.bullet,
    },
  },
  {
    /* LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
      TYPE: exports.bullet,
    },
  }
);
pounderGun.push({
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [20, 12, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
    TYPE: exports.bullet,
  },
});
launcherGun.push(
  {
    POSITION: [20, 10, 1, , 0, , 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic]),
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 13, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
      TYPE: exports.launcherMissile,
    },
  }
);
destroyerGun.push({
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [21, 14.55, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
    TYPE: exports.bullet,
  },
});
sideGuns.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [17, 3, 1, 0, -6, -7, 0.2],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.gunner,
        g.arty,
        g.nail,
        g.power,
        g.halfSpeed,
        g.greaterDamage,
      ]),
      TYPE: exports.bullet,
      LABEL: "Secondary",
    },
  },
  {
    POSITION: [17, 3, 1, 0, 6, 7, 0.6],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.gunner,
        g.arty,
        g.nail,
        g.power,
        g.halfSpeed,
        g.greaterDamage,
      ]),
      TYPE: exports.bullet,
      LABEL: "Secondary",
    },
  },
);
hollowSideGuns.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [17, 3, 1, 0, -6, -7, 0.2],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.gunner,
        g.arty,
        g.nail,
        g.power,
        g.halfSpeed,
        g.greaterDamage,
      ]),
      TYPE: exports.arenaBullet,
      LABEL: "Secondary",
    },
  },
  {
    POSITION: [17, 3, 1, 0, 6, 7, 0.6],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.gunner,
        g.arty,
        g.nail,
        g.power,
        g.halfSpeed,
        g.greaterDamage,
      ]),
      TYPE: exports.arenaBullet,
      LABEL: "Secondary",
    },
  },
);
cruiserGuns.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [7, 7.5, 0.6, 7, 4, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm]),
      TYPE: exports.swarmDrone,
      STAT_CALCULATOR: gunCalcNames.swarm,
    },
  },
  {
    POSITION: [7, 7.5, 0.6, 7, -4, 0, 0.5],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm]),
      TYPE: exports.swarmDrone,
      STAT_CALCULATOR: gunCalcNames.swarm,
    },
  }
);
extraSideGuns.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [13, 3, 1, 0, -8, -7, 0.4],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.gunner,
        g.arty,
        g.nail,
        g.power,
        g.halfSpeed,
      ]),
      TYPE: exports.bullet,
      LABEL: "Secondary",
    },
  },
  {
    POSITION: [13, 3, 1, 0, 8, 7, 0.8],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.gunner,
        g.arty,
        g.nail,
        g.power,
        g.halfSpeed,
      ]),
      TYPE: exports.bullet,
      LABEL: "Secondary",
    },
  },
);
beeGuns.push(
  {
    POSITION: [14, 3, 1, 0, 6, 7, 0.75],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.doubleSize]),
      TYPE: exports.uncontrolledBeeDrone,
      LABEL: "Secondary",
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [14, 3, 1, 0, -6, -7, 0.25],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.doubleSize]),
      TYPE: exports.uncontrolledBeeDrone,
      LABEL: "Secondary",
    },
  },
);
hexaBeeGuns.push(
  {
    POSITION: [14, 3, 1, 0, 6, 7, 0.75],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.doubleSize]),
      TYPE: exports.hexaBee,
      LABEL: "Secondary",
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [14, 3, 1, 0, -6, -7, 0.25],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.doubleSize]),
      TYPE: exports.hexaBee,
      LABEL: "Secondary",
    },
  },
);
pelletGuns.push(
  {
    POSITION: [19, 2, 1, 0, -2.5, 0, 0.3],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.twin,
        g.gunner,
        g.nail,
        g.power,
      ]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [19, 2, 1, 0, 2.5, 0, 0.8],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.twin,
        g.gunner,
        g.nail,
        g.power,
      ]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [12, 11, 1, 0, 0, 0, 0],
  }
);
hunterGuns.push(
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [24, 7, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter, g.hunter2]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [21, 11, 1, 0, 0, 0, 0.25],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter]),
      TYPE: exports.bullet,
    },
  }
);
trapGuardGun.push(
  {
    POSITION: [13, 8, 1, 0, 0, 180, 0],
  },
  {
    POSITION: [4, 8, 1.7, 13, 0, 180, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.trap]),
      TYPE: exports.trap,
      STAT_CALCULATOR: gunCalcNames.trap,
    },
  }
);

gatlingGun.push({
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [15, 10, 1.4, 8, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.sniper, g.minorRecoil, g.greaterHealth, g.bitmoreDamage]),
    TYPE: exports.bullet,
  },
});
healingGun.push({
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [15, 10, 1.4, 8, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.sniper, g.minorRecoil, g.halfHealth]),
    TYPE: exports.healerBullet,
  },
});
blasterGun.push({
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [12, 12, 1.4, 8, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.pound, g.halfRecoil]),
    TYPE: exports.bullet,
  },
});
birdGuns.push(
  {
    POSITION: [16, 8, 1, 0, 0, 150, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [16, 8, 1, 0, 0, 210, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.flank,
        g.tri,
        g.thruster,
        g.halfrecoil,
      ]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [18, 8, 1, 0, 0, 180, 0.6],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.flank,
        g.tri,
        g.thruster,
        g.halfrecoil,
      ]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  }
);
condorGuns.push(
  {
    POSITION: [14, 8, 1, 0, 0, -230, 1.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [14, 8, 1, 0, 0, 230, 1.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.flank,
        g.tri,
        g.thruster,
      ]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [16, 8, 1, 0, 0, -210, 0.6],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [16, 8, 1, 0, 0, 210, 0.6],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.flank,
        g.tri,
        g.thruster,
      ]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [18, 8, 1, 0, 0, 180, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.flank,
        g.tri,
        g.thruster,
      ]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  }
);
triangleThrusterGuns.push(
  {
    POSITION: [16, 8, 1, 0, 0, 150, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [16, 8, 1, 0, 0, 210, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  }
);
triangleGun.push({
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [18, 8, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront]),
    TYPE: exports.bullet,
    LABEL: "Front",
  },
});
for (let i = 0; i < 5; i++) {
  ripperGun.push(
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [10, 7.5, 1, 5, 0.25 * i, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.shotgun,
          g.halfReload,
          g.greaterSize,
          g.greaterDamage,
          g.greaterHealth,
          g.doubleSpeed,
          g.superRange,
          g.superRange,
        ]),
        TYPE: exports.uncontrolledSwarmDrone,
      },
    },
    {
      POSITION: [10, 7.5, 1, 5, -0.25 * i, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.shotgun,
          g.halfReload,
          g.greaterSize,
          g.greaterDamage,
          g.greaterHealth,
          g.doubleSpeed,
          g.superRange,
          g.superRange,
        ]),
        TYPE: exports.uncontrolledSwarmDrone,
      },
    }
  );
}
for (let i = 0; i < 5; i++) {
  shrapnelGun.push(
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [1, 7.5, 1, 5, 0.25 * i, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.shotgun,
          g.halfPenetration,
          g.minorReload,
          g.superDamage,
          g.superHealth,
          g.lesserSpeed,
        ]),
        TYPE: [exports.trap, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [1, 7.5, 1, 5, -0.25 * i, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.shotgun,
          g.halfPenetration,
          g.minorReload,
          g.superDamage,
          g.superHealth,
          g.lesserSpeed,
        ]),
        TYPE: [exports.trap, { VARIES_IN_SIZE: true }],
      },
    }
  );
}
for (let i = 0; i < 5; i++) {
  shotGun.push(
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [1, 7.5, 1, 5, 0.25 * i, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [1, 7.5, 1, 5, -0.25 * i, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
      },
    },
  );
}
for (let i = 0; i < 5; i++) {
  shotHeal.push(
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [1, 7.5, 1, 5, 0.25 * i, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
          g.halfHealth,
        ]),
        TYPE: [exports.healerBullet, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [1, 7.5, 1, 5, -0.25 * i, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
          g.halfHealth,
        ]),
        TYPE: [exports.healerBullet, { VARIES_IN_SIZE: true }],
      },
    },
  );
}
for (let i = 0; i < 5; i++) {
  reverseShotGun.push(
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [1, 7.5, 1, 5, 0.25 * i, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [1, 7.5, 1, 5, -0.25 * i, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
      },
    }
  );
}
//
exports.roguestrapnelgunTurret = {
  PARENT: [exports.autoTurret],
  LABEL: "",
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: false,
  GUNS: [
    {
      POSITION: [15, 17.5, -0.05, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.shotgun,
          g.doubleSpray,
          g.superSpeed,
          g.lesserSize,
          g.bitmoreSpeed
        ]),
        TYPE: [exports.unsetBlock, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [0, 17.5, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.shotgun,
          g.doubleSpray,
          g.superSpeed,
          g.lesserSize,
          g.bitmoreSpeed
        ]),
        TYPE: [exports.unsetBlock, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [0, 17.5, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.shotgun,
          g.doubleSpray,
          g.superSpeed,
          g.lesserSize,
          g.bitmoreSpeed
        ]),
        TYPE: [exports.unsetBlock, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [0, 17.5, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.shotgun,
          g.doubleSpray,
          g.superSpeed,
          g.lesserSize,
          g.bitmoreSpeed
        ]),
        TYPE: [exports.unsetBlock, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [0, 17.5, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.shotgun,
          g.doubleSpray,
          g.superSpeed,
          g.lesserSize,
          g.bitmoreSpeed
        ]),
        TYPE: [exports.unsetBlock, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [10, 12.25, -0.75, 4, 0, 0, 0],
    },
  ],
};
exports.roguestrapnelgunTurret2 = {
  PARENT: [exports.autoTurret],
  LABEL: "",
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  CONTROLLERS: ["nearestDifferentMaster"],
  INDEPENDENT: false,
  GUNS: [
    {
      POSITION: [15, 17.5, -0.05, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.shotgun,
          g.doubleSpray,
          g.superSpeed,
          g.bitmoreSpeed,
          g.halfReload,
          g.bitmoreSize,
        ]),
        TYPE: [exports.unsetBlock, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [0, 17.5, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.shotgun,
          g.doubleSpray,
          g.superSpeed,
          g.bitmoreSpeed,
          g.halfReload,
          g.bitmoreSize,
        ]),
        TYPE: [exports.unsetBlock, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [0, 17.5, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.shotgun,
          g.doubleSpray,
          g.superSpeed,
          g.bitmoreSpeed,
          g.halfReload,
          g.bitmoreSize,
        ]),
        TYPE: [exports.unsetBlock, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [0, 17.5, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.shotgun,
          g.doubleSpray,
          g.superSpeed,
          g.bitmoreSpeed,
          g
        ]),
        TYPE: [exports.unsetBlock, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [0, 17.5, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.shotgun,
          g.doubleSpray,
          g.superSpeed,
          g.bitmoreSpeed,
          g.halfReload,
          g.bitmoreSize,
        ]),
        TYPE: [exports.unsetBlock, { VARIES_IN_SIZE: true }],
      },
    },
    {
      POSITION: [12, 12.25, -0.75, 4, 0, 0, 0],
    },
  ],
};
//CUBED CLASSES
exports.Shard = {
  PARENT: [exports.genericTank],
  LABEL: "Shard",
  DANGER: 3,
  COLOR: 4,
  SHAPE: -3,
  SIZE: 20,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 75,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20.5, 10.5, 1, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20.5, 10.5, 1, 0, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20.5, 10.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.constructionistTower = {
  PARENT: [exports.experimenterStationedTurret],
  FACING_TYPE: "autospin",
  HAS_NO_RECOIL: true,
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 0, 1],
      TYPE: [exports.cubedSaw1],
    },
    {
      POSITION: [15, 0, 0, 180, 360, 1],
      TYPE: [
        exports.autoSmasherTurretNoRecoil,
        { INDEPENDENT: true, CONTROLLERS: ["nearestDifferentMaster"] },
      ],
    },
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedSaw1],
    },
  ],

  GUNS: [
    {
      POSITION: [14, 13, 1.5, 0, 0, 0, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.halfReload,
        ]),
        TYPE: [exports.autoSmasherMinion, { DRAW_HEALTH: true }],
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [14, 13, 1.5, 0, 0, 90, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.halfReload,
        ]),
        TYPE: [exports.autoSmasherMinion, { DRAW_HEALTH: true }],
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [14, 13, 1.5, 0, 0, -90, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.halfReload,
        ]),
        TYPE: [exports.autoSmasherMinion, { DRAW_HEALTH: true }],
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [14, 13, 1.5, 0, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.halfReload,
        ]),
        TYPE: [exports.autoSmasherMinion, { DRAW_HEALTH: true }],
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.crystalline = {
  PARENT: [exports.genericTank],
  LABEL: "Crystalline",
  DANGER: 3,
  COLOR: 4,
  SHAPE: -3,
  SIZE: 30,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 125,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: [exports.crystalBody],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.predator3Turret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.predator3Turret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.predator3Turret],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [23, 0, 0, 0, 180, 0],
      TYPE: [exports.crystalBody],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter, g.hunter2]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 7, 1, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 5, 1, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter, g.hunter2]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 7, 1, 0, 0, 120, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 5, 1, 0, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter, g.hunter2]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 7, 1, 0, 0, -120, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.omnigem = {
  PARENT: [exports.genericTank],
  LABEL: "Omni Gem",
  DANGER: 3,
  COLOR: 4,
  SHAPE: -3,
  SIZE: 40,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 125,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 30, 0, 1],
      TYPE: [exports.crystalBody],
    },
    {
      POSITION: [13, 0, 0, -30, 0, 1],
      TYPE: [exports.crystalBody],
    },
    {
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: [exports.crystalBody],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.predator3Turret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.predator3Turret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.predator3Turret],
    },
    {
      POSITION: [9, 9, 0, 120, 160, 0],
      TYPE: [exports.oldAutoSmasherTurret],
    },
    {
      POSITION: [9, 9, 0, 0, 0, 0],
      TYPE: [exports.oldAutoSmasherTurret],
    },
    {
      POSITION: [9, 9, 0, -120, 160, 0],
      TYPE: [exports.oldAutoSmasherTurret],
    },
    {
      POSITION: [9, 9, 0, 120, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [9, 9, 0, 0, 0, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [9, 9, 0, -120, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [23, 0, 0, 0, 180, 0],
      TYPE: [exports.crystalBody],
    },
  ],
};
exports.Crystal = {
  PARENT: [exports.genericTank],
  LABEL: "Crystal",
  DANGER: 3,
  COLOR: 4,
  SHAPE: -3,
  SIZE: 20,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 50,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [9.5, 8.5, 1.5, 0, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [9.5, 8.5, 1.5, 0, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [9.5, 8.5, 1.5, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 2,
      },
    },
  ],
};
exports.CrystalHarvester = {
  PARENT: [exports.genericTank],
  LABEL: "Crystal Harvester",
  DANGER: 3,
  COLOR: 4,
  SHAPE: -3,
  SIZE: 40,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 300,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 180, 0, 1],
      TYPE: [exports.crystalBody],
    },
    {
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: [exports.crystalBody],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.annihilator3Turret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.annihilator3Turret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.annihilator3Turret],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.crystalBody],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 10.5, 1, 0, 0, -60, 0],
    },
    {
      POSITION: [12, 10.5, 1, 0, 0, 60, 0],
    },
    {
      POSITION: [12, 10.5, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [2, 13.5, 1, 12, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory, g.greaterSize]),
        TYPE: exports.campfireMinion,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [2, 13.5, 1, 12, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory, g.greaterSize]),
        TYPE: exports.campfireMinion,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [2, 13.5, 1, 12, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory, g.greaterSize]),
        TYPE: exports.campfireMinion,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [9, 13.5, 1, 0, 0, 60, 0],
    },
    {
      POSITION: [9, 13.5, 1, 0, 0, -60, 0],
    },
    {
      POSITION: [9, 13.5, 1, 0, 0, 180, 0],
    },
  ],
};

exports.CrystalFormation = {
  PARENT: [exports.genericTank],
  LABEL: "Crystal Formation",
  DANGER: 3,
  COLOR: 4,
  SHAPE: -3,
  SIZE: 30,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 100,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: [exports.crystalBody],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.annihilator3Turret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.annihilator3Turret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.annihilator3Turret],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.crystalBody],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 10.5, 1, 0, 0, -60, 0],
    },
    {
      POSITION: [12, 10.5, 1, 0, 0, 60, 0],
    },
    {
      POSITION: [12, 10.5, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [2, 13.5, 1, 12, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory, g.greaterSize]),
        TYPE: exports.campfireMinion,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [2, 13.5, 1, 12, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory, g.greaterSize]),
        TYPE: exports.campfireMinion,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [2, 13.5, 1, 12, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory, g.greaterSize]),
        TYPE: exports.campfireMinion,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [9, 13.5, 1, 0, 0, 60, 0],
    },
    {
      POSITION: [9, 13.5, 1, 0, 0, -60, 0],
    },
    {
      POSITION: [9, 13.5, 1, 0, 0, 180, 0],
    },
  ],
};
exports.Gemstone = {
  PARENT: [exports.genericTank],
  LABEL: "Gemstone",
  DANGER: 3,
  COLOR: 4,
  FACING_TYPE: "autospin",
  SHAPE: -3,
  SIZE: 20,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 100,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 8.5, 1, 0, 0, -120, 0],
    },
    {
      POSITION: [12, 8.5, 1, 0, 0, 120, 0],
    },
    {
      POSITION: [12, 8.5, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [1.5, 8.5, 1.5, 12, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [1.5, 8.5, 1.5, 12, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [1.5, 8.5, 1.5, 12, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
      },
    },
  ],
};
exports.geode = {
  PARENT: [exports.genericTank],
  LABEL: "Geode",
  DANGER: 3,
  COLOR: 4,
  FACING_TYPE: "autospin",
  SPECIAL_EFFECT: "experiment",
  SHAPE: -3,
  SIZE: 30,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 150,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: [exports.crystalBody],
    },
    {
      POSITION: [13, 7, 0, 60, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [13, 7, 0, -60, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [13, 7, 0, 180, 160, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.crystalBody],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 8.5, 1.2, 0, 0, -120, 0],
    },
    {
      POSITION: [12, 8.5, 1.2, 0, 0, 120, 0],
    },
    {
      POSITION: [12, 8.5, 1.2, 0, 0, 0, 0],
    },
    {
      POSITION: [1.5, 8.5, 1.4, 12, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.experimenterStationedTurret,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [1.5, 8.5, 1.4, 12, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.experimenterStationedTurret,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [1.5, 8.5, 1.4, 12, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.experimenterStationedTurret,
        MAX_CHILDREN: 3,
      },
    },
  ],
};
exports.geodecluster = {
  PARENT: [exports.genericTank],
  LABEL: "Geode Cluster",
  DANGER: 3,
  COLOR: 4,
  FACING_TYPE: "autospin",
  SPECIAL_EFFECT: "experiment",
  SHAPE: -3,
  SIZE: 40,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 450,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 40, 0, 60, 0, 1],
      TYPE: [exports.geode],
    },
    {
      POSITION: [15, 40, 0, -60, 0, 1],
      TYPE: [exports.geode],
    },
    {
      POSITION: [15, 40, 0, 180, 0, 1],
      TYPE: [exports.geode],
    },
    {
      POSITION: [15, 0, 0, 180, 0, 1],
      TYPE: [exports.crystalBody],
    },
    {
      POSITION: [13, 7, 0, 60, 160, 0],
      TYPE: [exports.oldAutoSmasherTurret],
    },
    {
      POSITION: [13, 7, 0, -60, 160, 0],
      TYPE: [exports.oldAutoSmasherTurret],
    },
    {
      POSITION: [13, 7, 0, 180, 160, 0],
      TYPE: [exports.oldAutoSmasherTurret],
    },
    {
      POSITION: [13, 7, 0, 60, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [13, 7, 0, -60, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [13, 7, 0, 180, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.crystalBody],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [40, 9.5, 0.8, 0, 0, -60, 0],
    },
    {
      POSITION: [40, 9.5, 0.8, 0, 0, 60, 0],
    },
    {
      POSITION: [40, 9.5, 0.8, 0, 0, 180, 0],
    },
    {
      POSITION: [40, 3.5, 1.8, 0, 0, -60, 0],
    },
    {
      POSITION: [40, 3.5, 1.8, 0, 0, 60, 0],
    },
    {
      POSITION: [40, 3.5, 1.8, 0, 0, 180, 0],
    },
    {
      POSITION: [12, 8.5, 1.2, 0, 0, -120, 0],
    },
    {
      POSITION: [12, 8.5, 1.2, 0, 0, 120, 0],
    },
    {
      POSITION: [12, 8.5, 1.2, 0, 0, 0, 0],
    },
    {
      POSITION: [1.5, 8.5, 1.4, 12, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.experimenterStationedTurret,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [1.5, 8.5, 1.4, 12, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.experimenterStationedTurret,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [1.5, 8.5, 1.4, 12, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.experimenterStationedTurret,
        MAX_CHILDREN: 3,
      },
    },
  ],
};
//RENEWED
exports.smasherv2 = {
  PARENT: [exports.genericRenewed],
  LABEL: "Smasher",
  DANGER: 7,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.saver = {
  PARENT: [exports.genericRenewed],
  LABEL: "Saver",
  FACING_TYPE: "autospin",
  DANGER: 7,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 8, 0, 180, 160, 0],
      TYPE: exports.cruiserTurret1,
    },
    {
      POSITION: [10, 8, 0, -60, 160, 0],
      TYPE: exports.cruiserTurret1,
    },
    {
      POSITION: [10, 8, 0, 60, 160, 0],
      TYPE: exports.cruiserTurret1,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
  STAT_NAMES: statnames.smasher,
};
exports.preserver = {
  PARENT: [exports.genericRenewed],
  LABEL: "Preserver",
  FACING_TYPE: "autospin",
  DANGER: 7,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 180, 160, 0],
      TYPE: exports.cruiserTurret2,
    },
    {
      POSITION: [12, 8, 0, -60, 160, 0],
      TYPE: exports.cruiserTurret2,
    },
    {
      POSITION: [12, 8, 0, 60, 160, 0],
      TYPE: exports.cruiserTurret2,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
};
exports.Savior = {
  PARENT: [exports.genericRenewed],
  LABEL: "Savior",
  FACING_TYPE: "autospin",
  DANGER: 7,
  SIZE: 25,
  BODY: {
    SPEED: base.SPEED * 0.5,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 180, 160, 0],
      TYPE: exports.cruiserTurret3,
    },
    {
      POSITION: [12, 8, 0, -60, 160, 0],
      TYPE: exports.cruiserTurret3,
    },
    {
      POSITION: [12, 8, 0, 60, 160, 0],
      TYPE: exports.cruiserTurret3,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
};
exports.blockade = {
  PARENT: [exports.genericRenewed],
  LABEL: "Blockade",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15.5, 10.5, 1.7, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.greaterHealth]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
  STAT_NAMES: statnames.smasher,
};
exports.defend = {
  PARENT: [exports.genericRenewed],
  LABEL: "Defense",
  DANGER: 7,
  BODY: {
    HEALTH: base.HEALTH * 3,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.splinterBody,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.squire = {
  PARENT: [exports.genericRenewed],
  LABEL: "Squire",
  DANGER: 7,
  BODY: {
    HEALTH: base.HEALTH * 5,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.splinterBody2,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.splinterBody,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.noble = {
  PARENT: [exports.genericRenewed],
  LABEL: "Noble",
  DANGER: 7,
  BODY: {
    HEALTH: base.HEALTH * 5,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.splinterBody2,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.splinterBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.greaterDamage,
                  g.size400,
                  g.superSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.greaterDamage,
                  g.size400,
                  g.doubleSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.blackCircle,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: exports.damageAuraSymbol,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.gateGuardian = {
  PARENT: [exports.genericRenewed],
  LABEL: "Gate Guardian",
  DANGER: 7,
  SIZE: 25,
  BODY: {
    SPEED: base.SPEED * 2,
    HEALTH: base.HEALTH * 15,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [20.5, 0, 0, 180, 360, 0],
      TYPE: exports.splinterBody2,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.splinterBody2,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.splinterBody,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.knight = {
  PARENT: [exports.genericRenewed],
  LABEL: "Knight",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15.5, 10.5, 1.7, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.greaterHealth]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [15.5, 10.5, 1.7, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.greaterHealth]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
};
exports.warrior = {
  PARENT: [exports.genericRenewed],
  LABEL: "Warrior",
  DANGER: 7,
  SIZE: 25,
  BODY: {
    SPEED: base.SPEED * 0.5,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15.5, 10.5, 1.7, 0, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.greaterHealth]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [15.5, 10.5, 1.7, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.greaterHealth]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [15.5, 10.5, 1.7, 0, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.greaterHealth]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
};
exports.battery = {
  PARENT: [exports.genericRenewed],
  LABEL: "Battery",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.13,
    SPEED: base.SPEED * 1.5,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.greaterDamage,
                  g.size400,
                  g.superSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.greaterDamage,
                  g.size400,
                  g.doubleSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.blackCircle,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: exports.damageAuraSymbol,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.generator = {
  PARENT: [exports.genericRenewed],
  LABEL: "Generator",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.13,
    SPEED: base.SPEED * 1.5,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.greaterDamage,
                  g.size400,
                  g.superSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.greaterDamage,
                  g.size400,
                  g.doubleSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.greaterDamage,
                  g.size400,
                  g.greaterSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.blackCircle,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: exports.damageAuraSymbol,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.reactor = {
  PARENT: [exports.genericRenewed],
  LABEL: "Fusion Reactor",
  DANGER: 7,
  SIZE: 25,
  BODY: {
    ACCELERATION: base.ACCEL + 0.13,
    SPEED: base.SPEED * 1.5,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.greaterDamage,
                  g.size400,
                  g.superSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.greaterDamage,
                  g.size400,
                  g.doubleSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.greaterDamage,
                  g.size400,
                  g.doubleSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.greaterDamage,
                  g.size400,
                  g.greaterSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: exports.damageAuraSymbol,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
//BOOSTERS
exports.racer = {
  PARENT: [exports.genericTank],
  LABEL: "Racer",
  BODY: {
    ACCELERATION: base.ACCELERATION,
    HEALTH: base.HEALTH * 1.8,
    SHIELD: base.SHIELD * 1.8,
    SPEED: 6,
    DENSITY: base.DENSITY * 0.2,
  },
  DANGER: 7,
  GUNS: [
    {
      POSITION: [15, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.trifront]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, -1, 115, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 1, -115, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    ...triangleThrusterGuns,
  ],
};
exports.bolter = {
  PARENT: [exports.genericTank],
  LABEL: "Bolter",
  BODY: {
    ACCELERATION: base.ACCELERATION,
    HEALTH: base.HEALTH * 2,
    SHIELD: base.SHIELD * 2,
    SPEED: 6,
    DENSITY: base.DENSITY * 0.2,
  },
  DANGER: 7,
  GUNS: [
    {
      POSITION: [15, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.trifront]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, -1, 115, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 1, -115, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, -1, 165, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 1, -165, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    ...triangleThrusterGuns,
  ],
};
exports.speedDemon = {
  PARENT: [exports.genericTank],
  LABEL: "Speed Demon",
  BODY: {
    ACCELERATION: base.ACCELERATION,
    HEALTH: base.HEALTH * 2.25,
    SHIELD: base.SHIELD * 2.25,
    SPEED: 6,
    DENSITY: base.DENSITY * 0.2,
  },
  DANGER: 7,
  GUNS: [
    {
      POSITION: [17, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, -1, 115, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 1, -115, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, -1, 165, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 1, -165, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, -1, 145, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 1, -145, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    ...triangleThrusterGuns,
  ],
};

exports.zipper = {
  PARENT: [exports.genericTank],
  LABEL: "Zipper",
  BODY: {
    ACCELERATION: base.ACCELERATION * 0.1,
    HEALTH: base.HEALTH * 1.8,
    SHIELD: base.SHIELD * 1.8,
    SPEED: base.SPEED * 3,
    DENSITY: base.DENSITY * 0.2,
  },
  DANGER: 7,
  GUNS: [
    ...triangleGun,
    {
      POSITION: [15, 8, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    ...triangleThrusterGuns,
  ],
};
exports.Accelerator = {
  PARENT: [exports.genericTank],
  LABEL: "Accelerator",
  BODY: {
    ACCELERATION: base.ACCELERATION * 0.1,
    HEALTH: base.HEALTH * 1.8,
    SHIELD: base.SHIELD * 1.8,
    SPEED: base.SPEED * 3,
    DENSITY: base.DENSITY * 0.2,
  },
  DANGER: 7,
  GUNS: [
    ...triangleGun,
    {
      POSITION: [15, 8, 1, 0, 0, 160, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 0, -160, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    ...triangleThrusterGuns,
  ],
};

//PENTAGON CLASSES
//TRI CLASSES
exports.swarmKeeper = {
  PARENT: [exports.genericTank],
  LABEL: "Swarm Keeper",
  COLOR: 2,
  SHAPE: 3,
  SIZE: 10,
};
//air ships
exports.genericHelicopter = {
  PARENT: [exports.genericSwarmKeeper],
  LABEL: "Helicopter",
  MOTION_TYPE: "drift",
  LAYER: 60,
  COPY_LAYER: true,
  COPY_COLLISION: true,
  IGNORE_COLLISION: true,
  BODY: {
    FOV: base.FOV * 1.2,
  },
};
exports.helicopter = {
  PARENT: [exports.genericHelicopter],
  LABEL: "Tri copter",
  COPY_LAYER: true,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: [exports.propeller1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: [exports.bullet],
      },
    },
  ],
};
exports.airship = {
  PARENT: [exports.genericHelicopter],
  LABEL: "Airship",
  MOTION_TYPE: "drift",
  IGNORE_COLLISION: true,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7, 23, 0, 180, 360, 1],
      TYPE: [exports.propeller1, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [7, 23, 0, 60, 360, 1],
      TYPE: [exports.propeller2, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [7, 23, 0, -60, 360, 1],
      TYPE: [exports.propeller1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [23, 5, 0, 0, 0, 60, 0],
    },
    {
      POSITION: [23, 5, 0, 0, 0, -60, 0],
    },
    {
      POSITION: [23, 5, 0, 0, 0, 180, 0],
    },
    {
      POSITION: [18, 8, 0, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 8, 0, 0, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 8, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.swarmship = {
  PARENT: [exports.genericHelicopter],
  LABEL: "Swarm Ship",
  MOTION_TYPE: "drift",
  IGNORE_COLLISION: true,
  BODY: {
    FOV: base.FOV * 2,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7, 23, 0, 180, 360, 1],
      TYPE: [exports.propeller2, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [7, 23, 0, 60, 360, 1],
      TYPE: [exports.propeller1, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [7, 23, 0, -60, 360, 1],
      TYPE: [exports.propeller2, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [7, 23, 0, 180, 360, 1],
      TYPE: [exports.propeller1, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [7, 23, 0, 60, 360, 1],
      TYPE: [exports.propeller2, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [7, 23, 0, -60, 360, 1],
      TYPE: [exports.propeller1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [23, 5, 0, 0, 0, 60, 0],
    },
    {
      POSITION: [23, 5, 0, 0, 0, -60, 0],
    },
    {
      POSITION: [23, 5, 0, 0, 0, 180, 0],
    },
    {
      POSITION: [18, 8, 0, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [18, 8, 0, 0, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [18, 8, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
      },
    },
  ],
};
exports.carriership = {
  PARENT: [exports.genericHelicopter],
  LABEL: "Carrier Copter",
  MOTION_TYPE: "drift",
  IGNORE_COLLISION: true,
  BODY: {
    FOV: base.FOV * 1.2,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7, 23, 0, 180, 360, 1],
      TYPE: [exports.propeller1, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [7, 23, 0, 60, 360, 1],
      TYPE: [exports.propeller2, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [7, 23, 0, -60, 360, 1],
      TYPE: [exports.propeller1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [23, 5, 0, 0, 0, 60, 0],
    },
    {
      POSITION: [23, 5, 0, 0, 0, -60, 0],
    },
    {
      POSITION: [23, 5, 0, 0, 0, 180, 0],
    },
    {
      POSITION: [20, 5, 1.7, 0, 0, 120, 0],
    },
    {
      POSITION: [20, 5, 1.7, 0, 0, -120, 0],
    },
    {
      POSITION: [20, 5, 1.7, 0, 0, 0, 0],
    },
    {
      POSITION: [18, 8, 0.7, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.lesserHealth,
          g.greaterSize,
        ]),
        TYPE: exports.helicopterMinion,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [18, 8, 0.7, 0, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.lesserHealth,
          g.greaterSize,
        ]),
        TYPE: exports.helicopterMinion,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [18, 8, 0.7, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.lesserHealth,
          g.greaterSize,
        ]),
        TYPE: exports.helicopterMinion,
        MAX_CHILDREN: 1,
      },
    },
  ],
};
exports.lightShip = {
  PARENT: [exports.genericHelicopter],
  SHAPE: 3,
  LABEL: "Light Ship",
  DANGER: 7,
  GUNS: [
    {
      POSITION: [12.5, 6, 1, 0, 5, 180, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 6, 1, 0, -5, 180, 0],
    },
    {
      POSITION: [2, 6, 1.4, 12, 5, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.thruster]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [2, 6, 1.4, 12, -5, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.thruster]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [20.5, 10.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [8, 0, 0, 0, 360, 1],
      TYPE: [exports.propeller1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.heavyShip = {
  PARENT: [exports.genericHelicopter],
  SHAPE: 3,
  LABEL: "Heavy Ship",
  DANGER: 7,
  GUNS: [
    {
      POSITION: [12.5, 6, 1, 0, 5, 180, 0],
    },
    {
      POSITION: [12.5, 6, 1, 0, -5, 180, 0],
    },
    {
      POSITION: [2, 6, 1.4, 12, 5, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.thruster]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [2, 6, 1.4, 12, -5, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.thruster]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [14.5, 6, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [2, 6, 1.4, 15, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.thruster]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [20.5, 13.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: [exports.propeller1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.Fleet = {
  PARENT: [exports.genericHelicopter],
  SHAPE: 3,
  LABEL: "Fleet",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [30, 8.5, 1, 0, 0, -100, 0],
    },
    {
      POSITION: [30, 8.5, 1, 0, 0, 100, 0],
    },
    {
      POSITION: [20.5, 10.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [20, -10, 30, 0, 0, 1],
      TYPE: exports.fleetBody,
    },
    {
      POSITION: [20, -10, -30, 0, 0, 1],
      TYPE: exports.fleetBody,
    },
    {
      POSITION: [6, -10, -30, 0, 360, 1],
      TYPE: [exports.propeller2, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [6, -10, 30, 0, 360, 1],
      TYPE: [exports.propeller1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
//flank
exports.triBeat = {
  PARENT: [exports.genericSwarmKeeper],
  LABEL: "Tri Beat",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 0, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 8, 0, 0, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 8, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
  ],
};
//PENTAGON CLASSES
exports.swarmSentinel2 = {
  PARENT: [exports.genericTank],
  LABEL: "Swarm Penatgon",
  SHAPE: 5,
  SIZE: 14,
};
// MISSILES
exports.pentagonMissile1 = {
  PARENT: [exports.bullet],
  LABEL: "Pentagon Missile",
  SHAPE: 5,
  INDEPENDENT: true,
  BODY: {
    DENSITY: 3,
    RANGE: 120,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 6, 1, 0, 0, 180, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.greaterRecoil,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.pentagonMissile2 = {
  PARENT: [exports.bullet],
  LABEL: "Pentagon Missile",
  SHAPE: 5,
  INDEPENDENT: true,
  BODY: {
    DENSITY: 3,
    RANGE: 120,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 6, 1, 0, 0, 108.25, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, -108.25, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.pentagonMissile3 = {
  PARENT: [exports.bullet],
  LABEL: "Pentagon Missile",
  SHAPE: 5,
  INDEPENDENT: true,
  BODY: {
    DENSITY: 3,
    RANGE: 120,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 6, 1, 0, 0, 108.25, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, -108.25, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, 180, 0.5],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.greaterRecoil,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.pentagonAutoBullet1 = {
  PARENT: [exports.bullet],
  TURRETS: [
    {
      POSITION: [10, 0, 0, 180, 360, 1],
      TYPE: [exports.weakAutoPentagonGun, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
//TANKS

exports.machinery = {
  PARENT: [exports.genericSwarmSentinel],
  LABEL: "Machinery",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 9, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [17, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.pentagonAutoBullet1,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
};
exports.dualMachinery = {
  PARENT: [exports.genericSwarmSentinel],
  LABEL: "Dual Machinery",
  DANGER: 7,
  GUNS: [
    {
      POSITION: [10, 9, -0.5, 9, 5, 0, 0],
    },
    {
      POSITION: [17, 9, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.lesserDamage]),
        TYPE: exports.pentagonAutoBullet1,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [10, 9, -0.5, 9, -5, 0, 0],
    },
    {
      POSITION: [17, 9, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.lesserDamage]),
        TYPE: exports.pentagonAutoBullet1,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
};
exports.tripletMachinery = {
  PARENT: [exports.genericSwarmSentinel],
  LABEL: "Triplet Machinery",
  DANGER: 7,
  GUNS: [
    {
      POSITION: [10, 9, -0.5, 9, 5, 0, 0],
    },
    {
      POSITION: [17, 9, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.lesserDamage]),
        TYPE: exports.pentagonAutoBullet1,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [10, 9, -0.5, 9, -5, 0, 0],
    },
    {
      POSITION: [17, 9, 1, 0, -5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.lesserDamage]),
        TYPE: exports.pentagonAutoBullet1,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [10, 9, -0.5, 12, 5, 0, 0],
    },
    {
      POSITION: [20, 9, 1, 0, 5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.lesserDamage]),
        TYPE: exports.pentagonAutoBullet1,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
};
exports.tripleMachinery = {
  PARENT: [exports.genericSwarmSentinel],
  LABEL: "Triple Machinery",
  DANGER: 7,
  GUNS: [
    {
      POSITION: [10, 9, -0.5, 9, -1, -20, 0],
    },
    {
      POSITION: [17, 9, 1, 0, -1, -20, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.lesserDamage]),
        TYPE: exports.pentagonAutoBullet1,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [10, 9, -0.5, 9, 1, 20, 0],
    },
    {
      POSITION: [17, 9, 1, 0, 1, 20, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.lesserDamage]),
        TYPE: exports.pentagonAutoBullet1,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [10, 9, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [17, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.lesserDamage]),
        TYPE: exports.pentagonAutoBullet1,
        STAT_CALCULATOR: gunCalcNames.sustained,
        /*/GUNS: [
    {
      POSITION: [19, 8, 1, 0, -2, -20, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 2, 20, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,/*/
      },
    },
  ],
};
exports.heavyMachinery = {
  PARENT: [exports.genericSwarmSentinel],
  LABEL: "Heavy Machinery",
  DANGER: 3,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [17, 14, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.pentagonMissile3,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
};
//SQUARE CLASSES
exports.swarmProtector = {
  PARENT: [exports.genericTank],
  LABEL: "Swarm Protector",
  SHAPE: 4,
  SIZE: 10,
};
//drone users
exports.porter = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Porter",
  SHAPE: 4,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 2,
      },
    },
  ],
};
exports.deliverer = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Deliverer",
  SHAPE: 4,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 2,
      },
    },
  ],
};
//flank
exports.duoNode = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Duo Node",
  SHAPE: 4,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.quadNode = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Quad Node",
  SHAPE: 4,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.octoNode = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Octo Node",
  SHAPE: 4,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, 45, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, -45, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, -135, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, 135, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
  ],
};
//Auto
exports.theif = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Thief",
  FACING_TYPE: "autospin",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 10, 0, 0, 140, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [14.5, 10, 0, 180, 140, 0],
      TYPE: [exports.auto3Turret],
    },
  ],
};
exports.scavenger = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Scavenger",
  FACING_TYPE: "autospin",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 10, 0, 0, 140, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [14.5, 10, 0, 180, 140, 0],
      TYPE: [exports.auto3Turret],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 9, 0.6, 0, 5, -90, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [15, 9, 0.6, 0, 5, 90, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [15, 9, 0.6, 0, -5, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [15, 9, 0.6, 0, -5, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
      },
    },
  ],
};
exports.quadAutoNode = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Quad Auto-Node",
  SHAPE: 4,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 10, 0, 0, 140, 0],
      TYPE: [exports.auto5Turret],
    },
    {
      POSITION: [14.5, 10, 0, -90, 140, 0],
      TYPE: [exports.auto5Turret],
    },
    {
      POSITION: [14.5, 10, 0, 90, 140, 0],
      TYPE: [exports.auto5Turret],
    },
    {
      POSITION: [14.5, 10, 0, 180, 140, 0],
      TYPE: [exports.auto5Turret],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 0, 0, 0, 45, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, -45, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, 135, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 0, 0, 0, -135, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.bandit = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Bandit",
  FACING_TYPE: "autospin",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 10, 0, 0, 140, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [14.5, 10, 0, 180, 140, 0],
      TYPE: [exports.auto3Turret],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 10, 1.6, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [15, 10, 1.6, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [17, 10, 0.6, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [17, 10, 0.6, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
      },
    },
  ],
};
exports.desperado = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Desperado",
  FACING_TYPE: "autospin",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 10, 0, 0, 140, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [14.5, 10, 0, 180, 140, 0],
      TYPE: [exports.auto3Turret],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 15, 1.6, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.cheese, g.lesserHealth]),
        TYPE: exports.drone,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [15, 15, 1.6, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.cheese, g.lesserHealth]),
        TYPE: exports.drone,
        MAX_CHILDREN: 1,
      },
    },
  ],
};
exports.outlaw = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Outlaw",
  FACING_TYPE: "autospin",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 10, 0, 0, 140, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [14.5, 10, 0, 180, 140, 0],
      TYPE: [exports.auto3Turret],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 10, 1.6, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [15, 10, 1.6, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
  ],
};
exports.blackhat = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Black Hat",
  FACING_TYPE: "autospin",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 10, 0, 0, 140, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [14.5, 10, 0, 180, 140, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [14.5, 10, 0, 0, 140, 0],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [14.5, 10, 0, 180, 140, 0],
      TYPE: [exports.auto4Turret],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 10, 1.6, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [15, 10, 1.6, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
  ],
};
exports.fugitive = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Fugitive",
  FACING_TYPE: "autospin",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 10, 0, 0, 140, 0],
      TYPE: [exports.auto5Turret],
    },
    {
      POSITION: [14.5, 10, 0, 180, 140, 0],
      TYPE: [exports.auto5Turret],
    },
    {
      POSITION: [14.5, 10, 0, 0, 140, 0],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [14.5, 10, 0, 180, 140, 0],
      TYPE: [exports.auto4Turret],
    },
  ],
};

exports.runaway = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Runaway",
  FACING_TYPE: "autospin",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 10, 0, 0, 140, 0],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [14.5, 10, 0, -90, 140, 0],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [14.5, 10, 0, 90, 140, 0],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [14.5, 10, 0, 180, 140, 0],
      TYPE: [exports.auto4Turret],
    },
  ],
};
exports.villain = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Villain",
  FACING_TYPE: "autospin",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 10, 0, 0, 140, 0],
      TYPE: [exports.auto5Turret],
    },
    {
      POSITION: [14.5, 10, 0, -90, 140, 0],
      TYPE: [exports.auto5Turret],
    },
    {
      POSITION: [14.5, 10, 0, 90, 140, 0],
      TYPE: [exports.auto5Turret],
    },
    {
      POSITION: [14.5, 10, 0, 180, 140, 0],
      TYPE: [exports.auto5Turret],
    },
    {
      POSITION: [14.5, 10, 0, 0, 140, 0],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [14.5, 10, 0, -90, 140, 0],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [14.5, 10, 0, 90, 140, 0],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [14.5, 10, 0, 180, 140, 0],
      TYPE: [exports.auto4Turret],
    },
  ],
};
exports.exiled = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Exiled",
  FACING_TYPE: "autospin",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 10, 0, 0, 140, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [14.5, 10, 0, -90, 140, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [14.5, 10, 0, 90, 140, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [14.5, 10, 0, 180, 140, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
  ],
};
//heavy classes
exports.cruncher = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Cruncher",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedSaw1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 10, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.flankCruncher = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Flank Cruncher",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedSaw1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 10, 0, 0, 0, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 10, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.quadCruncher = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Quad Cruncher",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedSaw1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 10, 0, 0, 0, 90, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 10, 0, 0, 0, -90, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 10, 0, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 10, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.doomCruncher = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Doom Cruncher",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedSaw1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [30, 10, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.sniper]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 15, 2, 0, 0, 0, 0],
    },
  ],
};
exports.flankDoomCruncher = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Flank Doom Cruncher",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedSaw1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [30, 10, 0, 0, 0, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.sniper]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 15, 2, 0, 0, 180, 0],
    },
    {
      POSITION: [30, 10, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.sniper]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 15, 2, 0, 0, 0, 0],
    },
  ],
};
exports.cruncher5000 = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Cruncher 5000",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedSaw1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [30, 10, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.sniper, g.mini]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [25, 10, 0, 0, 0, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.sniper, g.mini]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 10, 0, 0, 0, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.sniper, g.mini]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 15, 2, 0, 0, 0, 0],
    },
  ],
};
exports.destructor = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Destructor",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedSaw1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 15, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.doomDestructor = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Doom Destructor",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedSaw1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 15, 0, 10, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.sniper]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 15, 2, 0, 0, 0, 0],
    },
  ],
};
exports.dualDestructor = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Dual Destructor",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedSaw1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 15, 0, 5, -10, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 15, 0, 5, 10, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 15, 2.5, 0, 0, 0, 0],
    },
  ],
};
exports.deconstructor = {
  PARENT: [exports.genericSwarmProtector],
  LABEL: "Deconstructor",
  SHAPE: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedSaw1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 20, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.anni]),
        TYPE: exports.bullet,
      },
    },
  ],
};
//CLASSES
exports.basic = {
  PARENT: [exports.genericTank],
  LABEL: "Basic",
  GUNS: [...basicGun],
};
exports.autobasic = makeAuto(exports.basic)
exports.sentry = {
  PARENT: [exports.genericTank],
  LABEL: "Sentry",
  GUNS: [...basicGun],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: [exports.machineTurret, { INDEPENDENT: true, COLOR: 16 }],
    },
  ]
};
exports.bauto = {
  PARENT: [exports.genericTank],
  LABEL: "Borderline Full-auto",
  GUNS: [...basicGun],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: [exports.autoTurret, { INDEPENDENT: true, COLOR: 16 }],
    },

    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [6, 0, 0, 0, 360, 1],
      TYPE: [exports.weakAutoTurret, { INDEPENDENT: true, COLOR: 16 }],
    },
  ]
};
exports.heli = {
  PARENT: [exports.genericHeliTank],
  LABEL: "Helicopter",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: [exports.propeller1, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [...basicGun],
};
exports.autoheli = {
  PARENT: [exports.genericHeliTank],
  LABEL: "Auto-Helicopter",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: [exports.propeller1, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 13, 0, 90, 120, 0],
      TYPE: [exports.auto4Turret, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 13, 0, -90, 120, 0],
      TYPE: [exports.auto4Turret, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [...basicGun],
};
exports.mechanistbody = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 0,
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
};
exports.mechanisthandsaw1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "turretWithMotion",
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
};
exports.mechanicalBasichand = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  COLOR: 16,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [...sideGuns, ...pounderGun],
};
exports.mechanicalMortar = {
  LABEL: "Mechanical Mortar",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 180, 1],
      TYPE: [exports.mechanicalBasichand, { COLOR: 16 }],
    },

    {
      POSITION: [17, 17, -17, -15, 180, 1],
      TYPE: [exports.mechanicalBasichand, { COLOR: 16 }],
    },
  ],
};
exports.beeTyrant = {
  PARENT: [exports.genericTank],
  LABEL: "Bee Tyrant",
  FACING_TYPE: "autospin",
  SHAPE: 6,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 60, 180, 0],
      TYPE: exports.beeTurret,
    },
    {
      POSITION: [11, 8, 0, -60, 180, 0],
      TYPE: exports.beeTurret,
    },
    {
      POSITION: [11, 8, 0, 180, 180, 0],
      TYPE: exports.beeTurret,
    },
  ],
      /*/
  GUNS: [
    {
      POSITION: [17, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [8, 12.5, 1, 0, 0, 0, 0],
    },
  ],/*/

};
exports.beeLord = {
  PARENT: [exports.genericTank],
  LABEL: "Bee Lord",
  SHAPE: 6,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: exports.smasherBody2,
    },
    {
      POSITION: [11, 8, 0, 60, 180, 0],
      TYPE: exports.mechanicalBeeTurret,
    },
    {
      POSITION: [11, 8, 0, -60, 180, 0],
      TYPE: exports.mechanicalBeeTurret,
    },
    {
      POSITION: [11, 8, 0, 180, 180, 0],
      TYPE: exports.mechanicalBeeTurret,
    },
  ],
  GUNS: [
    {
      POSITION: [17, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17, 9, 1, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17, 9, 1, 0, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [8, 12.5, 1, 0, 0, 0, 0],
    },
  ],
};
exports.enhanced = {
  PARENT: [exports.genericTank],
  LABEL: "Enhanced",
  SHAPE: 6,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [11, 23, -23, 0, 360, 0],
      TYPE: [exports.autoTurret, { INDEPENDENT: false, HAS_NO_RECOIL: true }],
    },
    {
      POSITION: [11, 23, 23, 0, 360, 0],
      TYPE: [exports.autoTurret, { INDEPENDENT: false, HAS_NO_RECOIL: true }],
    },
    {
      POSITION: [11, -23, 23, 0, 360, 0],
      TYPE: [exports.autoTurret, { INDEPENDENT: false, HAS_NO_RECOIL: true }],
    },
    {
      POSITION: [11, -23, -23, 0, 360, 0],
      TYPE: [exports.autoTurret, { INDEPENDENT: false, HAS_NO_RECOIL: true }],
    },
  ],
  GUNS: [
    {
      POSITION: [17, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.lesserReload]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [8, 12.5, 1, 0, 0, 0, 0],
    },
  ],
};
exports.ring = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    SHAPE: 1,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [8, 8, 1, 1, 5, 0, 0],
      },
      {
        POSITION: [8, 8, 1, 0, 5, 45, 0.5],
      },
    ],
  },
  8,
  "Octo Tank"
);
exports.testDummy = {
  PARENT: [exports.genericTank],
  LABEL: "Target Dummy",
  NAME: "Dummy",
  HAS_NO_RECOIL: true,
};
exports.dummyelite = {
  PARENT: [exports.testDummy],
  FACING_TYPE: "autospin",
  //REGEN_TYPE: "shieldOnly",
  SIZE: 26.5,
  SHAPE: 3,
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 1, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 20,
  BODY: {
    SHIELD: base.SHIELD,
    PENETRATION: 5,
    DAMAGE: 9,
    FOV: 1.2,
    SPEED: 0.55,
    HEALTH: 150,
    REGEN: 0.01,
  },
};
exports.wtf = {
  PARENT: [exports.genericTank],
  LABEL: "Physical Manifestation of 'WTF!?'",
  NAME: undefined,
  BODY: {
    DENSITY: Infinity,
    DAMAGE: true,
    HEALTH: NaN,
    SPEED: false,
    ACCELERATION: null,
    PENETRATION: "Yes Daddy",
  },
};
exports.IDAT = {
  PARENT: [exports.genericTank],
  LABEL: "physical Manifestation of 'WTH' ",
  DANGER: false,
  FOV: 30,
  SHAPE: [
    [-0.4, 1],
    [-1.83, 0.17],
    [-1, 0.4],
    [-0.5, 0],
    [-1, -0.4],
    [-1.8, 0.14],
    [-0.4, -1],
    [0, -0.5],
    [0.4, -1],
    [-1.82, 0.11],
    [1, -0.4],
    [0.5, 0],
    [1, 0.4],
    [-1.81, 0.14],
    [0.4, 1],
    [0, 0.5],
  ],
  BODY: {
    HEALTH: NaN,
    DENSITY: Infinity,
    DAMAGE: true,
    SPEED: 54,
    FOV: 30,
    ACCELERATION: undefined,
    PENETRATION: 13624315637485,
  },
  GUNS: [
    {
      POSITION: [22, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
        ]),
        TYPE: exports.wtf,
      },
    },
    {
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
        ]),
        TYPE: exports.wtf,
      },
    },
    {
      POSITION: [20, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
        ]),
        TYPE: exports.wtf,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
        ]),
        TYPE: exports.wtf,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
          g.halfSpeed,
        ]),
        TYPE: exports.wtf,
      },
    },
  ],
};
exports.counter = {
  PARENT: [exports.genericTank],
  LABEL: "Counter",
  IGNORE_COLLISION: true,
  ALPHA: 0,
  SIZE: 0.1,
  INTANGIBLE: true,
  BODY: {
    DAMAGE: 0,
    PUSHABILITY: 0,
  },
  HAS_NO_RECOIL: true,
};
exports.counterDenied = {
  PARENT: [exports.counter],
  LABEL: "Zero Lives = Lose",
  SPECIAL_EFFECT: "denied",
  COLOR: 0,
  SCORE: Infinity,
};
exports.baddreadnought = {
  PARENT: [exports.genericTank],
  LABEL: "Bad Dreadnought",
  DANGER: 7,
  FACING_TYPE: "locksFacing",
  STAT_NAMES: statnames.swarm,
  BODY: {
    FOV: base.FOV * 1.2,
  },
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, -4, 0, 0, 0, 0],
      TYPE: exports.genericEntity,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [6, 16, 1, 16, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.fake]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [1, 3, 1, 3, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.puregunner,
          g.machgun,
          g.thruster,
          //[0.1, 3, 1, 1, 1, 1, 1, 1, 1, 0.075, 1, 2, 1],
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.novice = {
  PARENT: [exports.genericTank],
  LABEL: "Novice",
  BODY: {
    SHIELD: base.SHIELD * 1.05,
    HEALTH: base.HEALTH * 1.05,
    DAMAGE: base.DAMAGE * 1.05,
    REGEN: base.REGEN * 1.05,
    FOV: base.FOV * 1.05,
    DENSITY: base.DENSITY * 1.05,
    },
  GUNS: [...noviceGun],
};
exports.adept = {
  PARENT: [exports.genericTank],
  LABEL: "Adept",
  BODY: {
    SHIELD: base.SHIELD * 1.05,
    HEALTH: base.HEALTH * 1.05,
    DAMAGE: base.DAMAGE * 1.05,
    REGEN: base.REGEN * 1.05,
    FOV: base.FOV * 1.05,
    DENSITY: base.DENSITY * 1.05,
    },
  GUNS: [...adeptGun],
};
exports.advanced = {
  PARENT: [exports.genericTank],
  LABEL: "Advanced",
  GUNS: [...advancedGun],
  BODY: {
    SHIELD: base.SHIELD * 1.1,
    HEALTH: base.HEALTH * 1.1,
    DAMAGE: base.DAMAGE * 1.1,
    REGEN: base.REGEN * 1.1,
    FOV: base.FOV * 1.1,
    DENSITY: base.DENSITY * 1.1,
    },
};
exports.expert = {
  PARENT: [exports.genericTank],
  LABEL: "Expert",
  BODY: {
    SHIELD: base.SHIELD * 1.1,
    HEALTH: base.HEALTH * 1.1,
    DAMAGE: base.DAMAGE * 1.1,
    REGEN: base.REGEN * 1.1,
    FOV: base.FOV * 1.1,
    DENSITY: base.DENSITY * 1.1,
    },
  GUNS: [...expertGun],
};
exports.eliteTank = {
  PARENT: [exports.genericTank],
  LABEL: "Elite",
  BODY: {
    SHIELD: base.SHIELD * 1.15,
    HEALTH: base.HEALTH * 1.15,
    DAMAGE: base.DAMAGE * 1.15,
    REGEN: base.REGEN * 1.15,
    FOV: base.FOV * 1.15,
    DENSITY: base.DENSITY * 1.15,
    },
  GUNS: [...eliteGun],
};
exports.master = {
  PARENT: [exports.genericTank],
  LABEL: "Master",
  BODY: {
    SHIELD: base.SHIELD * 1.15,
    HEALTH: base.HEALTH * 1.15,
    DAMAGE: base.DAMAGE * 1.15,
    REGEN: base.REGEN * 1.15,
    FOV: base.FOV * 1.15,
    DENSITY: base.DENSITY * 1.15,
    },
  GUNS: [...masterGun],
};
exports.chosen = {
  PARENT: [exports.genericTank],
  LABEL: "Chosen",
  BODY: {
    SHIELD: base.SHIELD * 1.15,
    HEALTH: base.HEALTH * 1.15,
    DAMAGE: base.DAMAGE * 1.15,
    REGEN: base.REGEN * 1.15,
    FOV: base.FOV * 1.15,
    DENSITY: base.DENSITY * 1.15,
    },
  GUNS: [...chosenGun],
};
exports.worthyOfTheGods = {
  PARENT: [exports.genericTank],
  LABEL: "Worthy of the Gods",
  BODY: {
    SHIELD: base.SHIELD * 1.15,
    HEALTH: base.HEALTH * 1.15,
    DAMAGE: base.DAMAGE * 1.15,
    REGEN: base.REGEN * 1.15,
    FOV: base.FOV * 1.15,
    DENSITY: base.DENSITY * 1.15,
    },
  GUNS: [...worthyoftheGodsGun],
};
exports.noviceDominationTurret = {
  PARENT: [exports.genericTank],
  LABEL: "Novice Domination Turret",
  HAS_NO_RECOIL: true,
  BODY: {
    SPEED: 0,
    ACCELERATION: -1,
    SHIELD: base.SHIELD * 2,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 2,
    REGEN: base.REGEN * 3,
    FOV: base.FOV * 1.5,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 0,
  },
  SKILL_CAP: [
    smshskl, //reload
    smshskl, //Penetration
    smshskl, //bullet hp
    smshskl, //bullet dmg
    smshskl, //bullet spd
    smshskl, //shield
    smshskl, //body dmg
    smshskl, // body hp
    smshskl, //shield regen
    0, //body speed
  ],
  GUNS: [
    ...noviceGun,
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
};
exports.triNoviceDominationTurret = {
  PARENT: [exports.genericTank],
  LABEL: "Tri-Novice Domination Turret",
  HAS_NO_RECOIL: true,
  BODY: {
    SPEED: 0,
    ACCELERATION: 0,
    SHIELD: base.SHIELD * 2,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 2,
    REGEN: base.REGEN * 3,
    FOV: base.FOV * 1.5,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 0,
  },
  SKILL_CAP: [
    smshskl, //reload
    smshskl, //Penetration
    smshskl, //bullet hp
    smshskl, //bullet dmg
    smshskl, //bullet spd
    smshskl, //shield
    smshskl, //body dmg
    smshskl, // body hp
    smshskl, //shield regen
    0, //body speed
  ],
  GUNS: [
    {
      POSITION: [20, 8, -1.3, 0, 0, 90, 0],
    },
    {
      POSITION: [20, 8, -1.3, 0, 0, 270, 0],
    },
    ...noviceGun,
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 25, 0, 359, 1],
      TYPE: exports.noviceTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, -25, 0, 359, 1],
      TYPE: exports.noviceTurret,
    },
  ],
};
exports.adeptDominationTurret = {
  PARENT: [exports.genericTank],
  LABEL: "Adept Domination Turret",
  HAS_NO_RECOIL: true,
  BODY: {
    SPEED: 0,
    ACCELERATION: 0,
    SHIELD: base.SHIELD * 2,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 2,
    REGEN: base.REGEN * 3,
    FOV: base.FOV * 1.5,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 0,
  },
  SKILL_CAP: [
    smshskl, //reload
    smshskl, //Penetration
    smshskl, //bullet hp
    smshskl, //bullet dmg
    smshskl, //bullet spd
    smshskl, //shield
    smshskl, //body dmg
    smshskl, // body hp
    smshskl, //shield regen
    0, //body speed
  ],
  GUNS: [
    ...adeptGun,
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
};
exports.single = {
  PARENT: [exports.genericTank],
  LABEL: "Single",
  BODY: {
    FOV: base.FOV * 1.4,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.single]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5.5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};

exports.smash = {
  PARENT: [exports.genericTank],
  LABEL: "Smasher",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED * 1.1,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.1,
    PENETRATION: base.PENETRATION + 0.3,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};

exports.starcrush = {
  PARENT: [exports.genericTank],
  LABEL: "Star Crusher",
  DANGER: 7000,
  COLOR: 6,
  IGNORE_COLLISION: true,
  SIZE: 25,
  BODY: {
    ACCELERATION: base.ACCEL + 0.45,
    SPEED: base.SPEED * 2,
    HEALTH: base.HEALTH * 20000,
    DAMAGE: base.DAMAGE * 1000.2,
    SHIELD: base.SHIELD * 10.1,
    REGEN: base.REGEN * 1.1,
    PENETRATION: base.PENETRATION + 0.3,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 0,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.starBody2,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 1],
      TYPE: exports.starBody,
    },
    {
      POSITION: [25.5, 0, 0, 0, 35, 0],
      TYPE: exports.starBody3,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, -20, 360, 1],
      TYPE: [
        exports.starBody2,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterDamage,
                  g.greaterDamage,
                  g.greaterDamage,
                  g.power,
                  g.greaterStats,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.starOrb,
                  {
                    SHAPE: 0,
                    CONNECTED_DAMAGE: false,
                    DAMAGE_MULTIPLIER: 1.25,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 90, 360, 1],
      TYPE: [
        exports.starBody2,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterDamage,
                  g.greaterDamage,
                  g.greaterDamage,
                  g.power,
                  g.greaterStats,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.starOrb,
                  {
                    CONNECTED_DAMAGE: false,
                    DAMAGE_MULTIPLIER: 1.25,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 210, 360, 1],
      TYPE: [
        exports.starBody2,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterDamage,
                  g.greaterDamage,
                  g.greaterDamage,
                  g.power,
                  g.greaterStats,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.starOrb,
                  {
                    CONNECTED_DAMAGE: false,
                    DAMAGE_MULTIPLIER: 1.25,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
  ],
  STAT_NAMES: statnames.smasher,
};
exports.polter = {
  PARENT: [exports.genericTank],
  LABEL: "Poltergeist",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.1,
    SPEED: base.SPEED * 1.1,
    HEALTH: base.HEALTH * 2.2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.3,
    PENETRATION: base.PENETRATION + 0.3,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  INVISIBLE: [0.006, 0.003],
  INTANGIBLE: true,
  IGNORE_COLLISION: true,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: [exports.goodEye, { INDEPENDENT: true }],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};

exports.smashatmo = {
  PARENT: [exports.genericTank],
  LABEL: "Smashersphere",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.13,
    SPEED: base.SPEED * 1,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.2,
    PENETRATION: base.PENETRATION + 0.25,
    FOV: base.FOV + 0.2,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.doubleSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.greaterSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.blackCircle,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: exports.damageAuraSymbol,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.auraDrone = {
  PARENT: [exports.drone],
  TURRETS: [
    
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.halfDamage,
                  g.size400,
                  g.doubleSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.blackCircle,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: exports.damageAuraSymbol,
    },
  ],
}
exports.truesmashatmo = {
  PARENT: [exports.genericTank],
  LABEL: "True Smashersphere",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.13,
    SPEED: base.SPEED * 1,
    HEALTH: base.HEALTH * 2.5,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.25,
    PENETRATION: base.PENETRATION + 0.25,
    FOV: base.FOV + 0.2,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 30, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [

            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.doubleSize,
                  g.bitmoreSize
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [

            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.doubleSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.greaterSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.blackCircle,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: exports.damageAuraSymbol,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8.75, 0, 0, 0, 360, 1],
      TYPE: exports.damageAuraSymbol,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};



exports.destructionist = {
  PARENT: [exports.genericTank],
  LABEL: "Destructionist",
  DANGER: 7,
  BODY: {
    SPEED: base.SPEED * 0.75,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.1,
  },
  SKILL_CAP: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
  SPECIAL_EFFECT: "Legend",
  RESET_UPGRADES: true,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
      ],
  IS_SMASHER: true,
  GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.dualCollident,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
    {
      POSITION: [18, 2.5, 5, 1, 0, 270, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 13.3, -1.5, 0, 0, 270, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
        TYPE: exports.hyperTwisterMissile,
      },
    },
    {
      POSITION: [18, 2.5, 5, 1, 0, 90, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 13.3, -1.5, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
        TYPE: exports.hyperTwisterMissile,
      },
    },
  {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.sniper,
          g.hunter,
          g.halfDamage,
          g.greaterPenetration,
          g.halfReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 14.55, 1, 0, 0, 0, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.sniper,
          g.destroy,
          g.hunter,
          g.greaterPenetration,
          g.halfReload,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },

    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    ...reverseShotGun,
    {
      POSITION: [15, 14, 1, 6, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: [exports.bullet, { BODY: { RANGE: 0 } }],
      },
    },
    {
      POSITION: [8, 14, -1.3, 4, 0, 180, 0],
    },
  ],
};
exports.smashdupe = {
  PARENT: [exports.genericTank],
  LABEL: "Collider",
  FACING_TYPE: "autospin",
  SPIN_RATE: 0.075,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED * 1.1,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.1,
    PENETRATION: base.PENETRATION + 0.3,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.trioCollident,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
    ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
  ],
  IS_SMASHER: true,

  STAT_NAMES: statnames.smasher,
};
exports.autosmashdupe = {
  PARENT: [exports.genericTank],
  LABEL: "Auto-Collider",
  FACING_TYPE: "autospin",
  SPIN_RATE: 0.075,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED * 1.1,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.1,
    PENETRATION: base.PENETRATION + 0.3,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.trioCollident,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
    ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.colliderDriveTurret,
    },
  ],
  IS_SMASHER: true,

  STAT_NAMES: statnames.smasher,
};
exports.smashdupedrive = {
  PARENT: [exports.genericTank],
  LABEL: "Colliderdrive",
  FACING_TYPE: "autospin",
  SPIN_RATE: 0.075,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED * 1.1,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.1,
    PENETRATION: base.PENETRATION + 0.3,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.driveCollident,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
    ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.colliderDriveTurret,
    },
  ],
  IS_SMASHER: true,

  STAT_NAMES: statnames.smasher,
};
exports.growdupe = {
  PARENT: [exports.genericTank],
  LABEL: "Collider",
  FACING_TYPE: "autospin",
  SPIN_RATE: 0.075,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED * 1.1,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.1,
    PENETRATION: base.PENETRATION + 0.3,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.growCollident,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
    ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
  ],
  IS_SMASHER: true,

  STAT_NAMES: statnames.smasher,
};
exports.smashdupev2 = {
  PARENT: [exports.genericTank],
  LABEL: "Collider?",
  FACING_TYPE: "autospin",
  SPIN_RATE: 0.075,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED * 1.1,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.1,
    PENETRATION: base.PENETRATION + 0.3,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.dualCollident,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },{
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, -15, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.dualcollidentS,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },{
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 15, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.dualcollidentB,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
    ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
  ],
  IS_SMASHER: true,

  STAT_NAMES: statnames.smasher,
};
exports.smashdupev3 = {
  PARENT: [exports.genericTank],
  LABEL: "Collider?",
  FACING_TYPE: "autospin",
  SPIN_RATE: 0.075,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED * 1.1,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.1,
    PENETRATION: base.PENETRATION + 0.3,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.dualCollident,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },{
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.dualcollidentS,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },{
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.dualcollidentB,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
{
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 30, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.dualcollidentB3,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
{
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 15, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.dualcollidentB2,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },

            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 90, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.dualCollident,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },{
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 90, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.dualcollidentS,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },{
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 90, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.dualcollidentB,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
{
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 120, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.dualcollidentB3,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
{
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 105, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.dualcollidentB2,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
            
    ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
  ],
  IS_SMASHER: true,

  STAT_NAMES: statnames.smasher,
};
exports.smashdupe.SKILL_CAP = [
  smshskl,
  smshskl,
  smshskl,
  smshskl,
  0,
  smshskl,
  smshskl,
  smshskl,
  smshskl,
  smshskl,
];

exports.bouncer = {
  PARENT: [exports.genericTank],
  LABEL: "Bouncer",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.2,
    SPEED: base.SPEED * 0.8,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.2,
    REGEN: base.REGEN * 1.2,
    PENETRATION: base.PENETRATION + 0.35,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bounce],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.speedGod = {
  PARENT: [exports.genericTank],
  LABEL: "Speed God",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.2,
    SPEED: 6,
    HEALTH: base.HEALTH * 2.5,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 2.5,
    REGEN: base.REGEN * 1.2,
    PENETRATION: base.PENETRATION + 0.35,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  GUNS: [
    {
      POSITION: [17, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, -1, 115, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 1, -115, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, -1, 165, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 1, -165, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, -1, 145, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 1, -145, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    ...triangleThrusterGuns,
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bounce],
    },
  ],
  //IS_SMASHER: true,
  SKILL_CAP: [
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
  ],
  STAT_NAMES: statnames.smasher,
};

exports.banger = {
  PARENT: [exports.genericTank],
  LABEL: "Banger",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.2,
    SPEED: base.SPEED * 1.1,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.2,
    REGEN: base.REGEN * 1,
    PENETRATION: base.PENETRATION + 0.35,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bang],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.killIssue = {
  PARENT: [exports.genericTank],
  LABEL: "Kill Issue",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.2,
    SPEED: base.SPEED * 5,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.2,
    REGEN: base.REGEN * 1,
    PENETRATION: base.PENETRATION + 0.35,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bangBang],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.celestialSmasher = {
  PARENT: [exports.voidlordMeleeBoss],
  LABEL: "Smasher Amalgamation",
  FACING_TYPE: "autospin",
  DANGER: 7,
  SIZE: 30,
  BODY: {
    ACCELERATION: 0.3,
    SPEED: base.SPEED * 1.5,
    HEALTH: 1500,
  },
  INVISIBLE: [0.09, 0.03],
  INTANGIBLE: true,
  IGNORE_COLLISION: true,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [25, 0, 0, 0, 0, 0],
      TYPE: [exports.goodEye, { INDEPENDENT: true }],
    },
    {
      POSITION: [25, 0, 0, 90, 0, 0],
      TYPE: [exports.goodEye, { INDEPENDENT: true }],
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bounce],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.superSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.doubleSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.greaterSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.blackCircle,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: exports.damageAuraSymbol,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.greaterDamage,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 120, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.greaterDamage,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 240, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.greaterDamage,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [15, 0, 55, 0, 360, 1],
      TYPE: exports.autoSmasherTurretNoRecoil,
    },
    {
      POSITION: [15, 0, 55, 120, 360, 1],
      TYPE: exports.autoSmasherTurretNoRecoil,
    },
    {
      POSITION: [15, 0, 55, -120, 360, 1],
      TYPE: exports.autoSmasherTurretNoRecoil,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [13, 0, 0, 90, 360, 1],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [13, 0, 0, 180, 360, 1],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [13, 0, 0, 270, 360, 1],
      TYPE: exports.spikeBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bigBang],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
  ],
  STAT_NAMES: statnames.smasher,
};
(exports.landmine = {
  PARENT: [exports.genericTank],
  LABEL: "Landmine",
  DANGER: 7,
  INVISIBLE: [0.09, 0.03],
  BODY: {
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED * 1.2,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1,
    REGEN: base.REGEN * 1.1,
    PENETRATION: base.PENETRATION + 0.3,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 30, 360, 0],
      TYPE: exports.smasherBody2,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
}),
  (exports.megaSmasher = {
    PARENT: [exports.genericTank],
    LABEL: "Mega-Smasher",
    DANGER: 7,
    BODY: {
      ACCELERATION: base.ACCEL + 0.15,
      SPEED: base.SPEED * 1.3,
      HEALTH: base.HEALTH * 2,
      DAMAGE: base.DAMAGE * 1.2,
      SHIELD: base.SHIELD * 1,
      REGEN: base.REGEN * 1,
      PENETRATION: base.PENETRATION + 0.35,
      FOV: base.FOV + 0.1,
      DENSITY: base.DENSITY + 0.5,
      PUSHABILITY: 3,
    },
    IS_SMASHER: true,
    SKILL_CAP: [
      smshskl,
      0,
      0,
      0,
      0,
      smshskl,
      smshskl,
      smshskl,
      smshskl,
      smshskl,
    ],
    STAT_NAMES: statnames.smasher,
    TURRETS: [
      {
        /** SIZE     X       Y     ANGLE    ARC */
        POSITION: [25, 0, 0, 0, 360, 0],
        TYPE: exports.megaSmasherBody,
      },
    ],
  });
exports.spike = {
  PARENT: [exports.genericTank],
  LABEL: "Spike",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED,
    HEALTH: base.HEALTH * 2.3,
    DAMAGE: base.DAMAGE * 1.4,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.1,
    PENETRATION: base.PENETRATION + 0.3,
    FOV: base.FOV,
    DENSITY: base.DENSITY + 1,
    PUSHABILITY: 3,
  },
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
  ],
};

exports.weirdspike = {
  PARENT: [exports.genericTank],
  LABEL: "Impaler",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED * 0.7,
    HEALTH: base.HEALTH * 3,
    DAMAGE: base.DAMAGE * 1.5,
    SHIELD: base.SHIELD * 1.3,
    REGEN: base.REGEN * 1,
    PENETRATION: base.PENETRATION + 0.3,
    FOV: base.FOV,
    DENSITY: base.DENSITY + 1.25,
    PUSHABILITY: 1.5,
  },
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [20.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody2,
    },
  ],
};
exports.autosmash = makeAuto(exports.smash, "Auto-Smasher", {
  type: exports.autoSmasherTurret,
  size: 11,
});
exports.autosmash.SKILL_CAP = [
  smshskl,
  smshskl,
  smshskl,
  smshskl,
  smshskl,
  smshskl,
  smshskl,
  smshskl,
  smshskl,
  smshskl,
];
exports.protect = {
  PARENT: [exports.genericTank],
  LABEL: "Body Guard",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED * 1,
    HEALTH: base.HEALTH * 2.2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1,
    PENETRATION: base.PENETRATION + 0.3,
    SHIELD: base.SHIELD + 0.2,
    REGEN: base.REGEN + 0.05,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  SKILL_CAP: [
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
    smshskl,
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
  GUNS: [...basicGun],

  IS_SMASHER: true,
  STAT_NAMES: statnames.smasher,
};

exports.healer = {
  PARENT: [exports.genericTank],
  LABEL: "Healer",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.halfSpeed]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
    },
  ],
};

exports.mechanic = {
  PARENT: [exports.genericTank],
  LABEL: "Mechanic",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.halfSpeed]),
        TYPE: exports.repairBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
    },
  ],
};
exports.curer = {
  PARENT: [exports.genericTank],
  LABEL: "Curer",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, -5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.halfSpeed, g.lesserHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, -5.5, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, 5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.halfSpeed, g.lesserHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 5.5, 0, 0],
    },
  ],
};

exports.doctor = {
  PARENT: [exports.genericTank],
  LABEL: "Doctor",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 3.5, -0.5, 6.75, -7.25, 0, 0.45],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner, g.halfSpeed, g.lesserHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 4, 1, 0, -7.25, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 3.5, -0.5, 6.75, 7.25, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner, g.halfSpeed, g.lesserHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 4, 1, 0, 7.25, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 3.5, -0.5, 10.75, -3.25, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner, g.halfSpeed, g.lesserHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 4, 1, 0, -3.25, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 3.5, -0.5, 10.75, 3.25, 0, 0.45],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner, g.halfSpeed, g.lesserHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 4, 1, 0, 3.25, 0, 0],
    },
  ],
};

exports.purifier = makeMulti({
  PARENT: [exports.genericTank],
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, -5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.halfSpeed, g.lesserHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, -5.5, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, 5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.halfSpeed, g.lesserHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 5.5, 0, 0],
    },
  ],
},
2,
"Purifier",
);

exports.cleanser = {
  PARENT: [exports.genericTank],
  LABEL: "Cleanser",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, -5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.triple, g.halfSpeed, g.lesserHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, -5.5, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.triple, g.halfSpeed, g.lesserHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 5.5, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 17, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.triple, g.halfSpeed, g.lesserHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
    },
  ],
};

exports.restorer = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "Restorer",
    SPECIAL_EFFECT: "noFFA",
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [14.5, 0, 0, 0, 360, 1],
        TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [7, 8, -0.5, 14, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.halfSpeed]),
          TYPE: exports.healerBullet,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 8, 1, 0, 0, 0, 0],
      },
    ],
  },
  3,
  "Restorer"
);

exports.heal3 = {
  PARENT: [exports.genericTank],
  LABEL: "Healer-3",
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [14.5, 0, 0, 0, 360, 1],
        TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
    {
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.healer3Turret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.healer3Turret,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.healer3Turret,
    },
  ],
};

exports.ambulance = {
  PARENT: [exports.genericTank],
  LABEL: "Ambulance",
  BODY: {
    HEALTH: base.HEALTH * 0.8,
    SHIELD: base.SHIELD * 0.8,
    DENSITY: base.DENSITY * 0.6,
  },
  DANGER: 7,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [14.5, 0, 0, 0, 360, 1],
        TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
    ],
  GUNS: [
      {
    POSITION: [16, 8, 1, 0, 0, 150, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.lesserSpeed]),
      TYPE: exports.healerBullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [16, 8, 1, 0, 0, 210, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.lesserSpeed]),
      TYPE: exports.healerBullet,
      LABEL: gunCalcNames.thruster,
    },
  },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.halfSpeed]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
    },
  ],
};

exports.rejuvenator = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "Restorer",
    SPECIAL_EFFECT: "noFFA",
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [14.5, 0, 0, 0, 360, 1],
        TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [7, 8, -0.5, 14, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.halfSpeed]),
          TYPE: exports.healerBullet,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 8, 1, 0, 0, 0, 0],
      },
    ],
  },
  6,
  "Rejuvenator"
);

exports.medic = {
  PARENT: [exports.genericTank],
  LABEL: "Medic",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [25, 7, -0.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.halfHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 8, 1, 0, 0, 0, 0],
    },
  ],
};

exports.medigun = {
  PARENT: [exports.genericTank],
  LABEL: "Medigun",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [25, 7, -0.5, 0.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.mini, g.halfHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 8, 1, 0.5, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [25, 7, -0.5, -2.5, 0, 0, 0.333],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.mini, g.halfHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 8, 1, -2.5, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [25, 7, -0.5, -5, 0, 0, 0.666],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.mini, g.halfHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 8, 1, -5, 0, 0, 0],
    },
  ],
};

exports.vital = {
  PARENT: [exports.genericTank],
  LABEL: "Vital Hunter",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [25, 9, -0.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter, g.hunter2, g.halfHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 10, 1, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter, g.halfHealth]),
        TYPE: exports.healerBullet,
      },
    },
  ],
};

exports.surgeon = {
  PARENT: [exports.genericTank],
  LABEL: "Surgeon",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [25, 7, -0.5, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.halfHealth]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [27, 8.5, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [5, 8.5, -1.6, 8, 0, 0, 0],
    },
  ],
};

exports.mender = {
  PARENT: [exports.genericTank],
  LABEL: "Mender",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 11, -0.7, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.halfSpeed, g.lesserDamage]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [13, 10, 1.4, 8, 0, 0, 0],
    },
  ],
};

exports.lifeshot = {
  PARENT: [exports.genericTank],
  LABEL: "Lifeshot ",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.8,
    FOV: base.FOV * 1.2,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [26, 9.25, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.sniper,
          g.lowpower,
          g.greaterReload,
          g.minorRecoil,
          g.halfHealth
        ]),
        TYPE: exports.healerBullet,
      },
    },
    ...healingGun,
  ],
};

exports.caretaker = {
  PARENT: [exports.genericTank],
  LABEL: "Care Taker",
  DANGER: 7,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [26, 7.5, 1.4, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.lowpower,
          g.lesserDamage,
          g.greaterReload,
          g.NoRecoil,
          g.lesserHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [23, 8.5, 1.4, 0, 0, 0, 0.15],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.lowpower,
          g.lesserDamage,
          g.doubleReload,
          g.minorRecoil,
          g.greaterStats,
          g.NoRecoil,
          g.lesserHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.healerBullet,
      },
    },
    ...machineHeal,
  ],
};

exports.reviver = {
  PARENT: [exports.genericTank],
  LABEL: "Reviver",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 12, -0.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.halfSpeed]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 13, 1, 0, 0, 0, 0],
    },
  ],
};

exports.vanguard = {
  PARENT: [exports.genericTank],
  LABEL: "Vanguard",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 13.5, -0.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.lesserSpeed]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 14.5, 1, 0, 0, 0, 0],
    },
  ],
};

exports.aderaline = {
  PARENT: [exports.genericTank],
  LABEL: "Aderaline Shot",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    ...shotHeal,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 13.5, -0.5, 3.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.greaterStats,
          g.superReload,
          g.doubleReload,]),
        TYPE: exports.healerBullet,
      },
    },
    {
      POSITION: [15, 14, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: [exports.healerBullet, { BODY: { RANGE: 0 } }],
      },
    },
    {
      POSITION: [8, 14, -1.3, 4, 0, 0, 0],
    },
  ],
};

exports.vitalis = {
  PARENT: [exports.genericTank],
  LABEL: "Vitalis",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [13, 3, 1, 0, -8, -7, 0.4],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.gunner,
        g.arty,
        g.nail,
        g.power,
        g.minorSpeed,
      ]),
      TYPE: exports.healerBullet,
      LABEL: "Secondary",
    },
  },
  {
    POSITION: [13, 3, 1, 0, 8, 7, 0.8],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.gunner,
        g.arty,
        g.nail,
        g.power,
        g.minorSpeed,
      ]),
      TYPE: exports.healerBullet,
      LABEL: "Secondary",
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [17, 3, 1, 0, -6, -7, 0.2],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.gunner,
        g.arty,
        g.nail,
        g.power,
        g.minorSpeed,
      ]),
      TYPE: exports.healerBullet,
      LABEL: "Secondary",
    },
  },
  {
    POSITION: [17, 3, 1, 0, 6, 7, 0.6],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.gunner,
        g.arty,
        g.nail,
        g.power,
        g.minorSpeed,
      ]),
      TYPE: exports.healerBullet,
      LABEL: "Secondary",
    },
  },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 12, -0.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.halfSpeed]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 13, 1, 0, 0, 0, 0],
    },
  ],
};

exports.practitioner = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Practitioner",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.healerTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};

exports.needle = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Needle",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.halfSpeed]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.healerTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};

exports.pulsecaster = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Pulsecaster",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [6, 7, 1.35, 19.6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.minorDamage,
          g.minorHealth,
          g.halfReload,
        ]),
        TYPE: exports.healerTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4.5, 7, 1.35, 16.6, 0, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.minorDamage,
          g.minorHealth,
          g.halfReload,
        ]),
        TYPE: exports.healerTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3.2, 7, 1.35, 13.6, 0, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.minorDamage,
          g.minorHealth,
          g.halfReload,
        ]),
        TYPE: exports.healerTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

  ],
};

exports.aegis = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Aegis",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 11.5, 1.7, 13.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.halfReload,
          g.greaterSize,
          g.greaterPenetration,
          g.lesserDamage,
          g.lesserHealth
        ]),
        TYPE: exports.healerTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};

exports.nurse = {
  PARENT: [exports.genericTank],
  LABEL: "Nurse",
  SPECIAL_EFFECT: "noFFA",
  STAT_NAMES: statnames.drone,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.1,
  },
  MAX_CHILDREN: 6,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.halfSpeed, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.healerDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};

exports.sustainer = {
  PARENT: [exports.genericTank],
  LABEL: "Sustainer",
  SPECIAL_EFFECT: "noFFA",
  STAT_NAMES: statnames.drone,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.1,
  },
  MAX_CHILDREN: 7,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over, g.halfSpeed, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.healerDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 90, 0.3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over, g.halfSpeed, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.healerDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};

exports.healerMinion = {
  PARENT: [exports.minion],
  BODY: {
    FOV: 0.5,
    SPEED: 3,
    ACCELERATION: 0.4,
    HEALTH: 2.25,
    SHIELD: 0,
    DAMAGE: 0.75,
    RESIST: 1,
    PENETRATION: 0.85,
    RANGE: 100,
    DENSITY: 50,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  HEAL_EFFECT: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.minion, g.halfHealth,]),
        WAIT_TO_CYCLE: true,
        TYPE: exports.healerBullet,
      },
    },
  ],
};

exports.mediforge = {
  PARENT: [exports.genericTank],
  LABEL: "Mediforge",
  DANGER: 7,
  STAT_NAMES: statnames.drone,
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: 1.2,
  },
  MAX_CHILDREN: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.healerMinion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
};

exports.physician = {
  PARENT: [exports.genericTank],
  LABEL: "Physician",
  DANGER: 7,
  SPECIAL_EFFECT: "noFFA",
  BODY: {
    SPEED: base.SPEED * 0.9,
    DAMAGE: base.DAMAGE * 1.1,
    FOV: base.FOV * 1.05,
    DENSITY: base.DENSITY * 2,
  },
  IS_SMASHER: true,
  HEAL_EFFECT: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healersphereSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 270, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 360, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
};
exports.minihealer = {
  PARENT: [exports.genericTank],
  LABEL: "Healer",
  SPECIAL_EFFECT: "noFFA",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 8, -0.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 8, -0.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
    },
  ],
};
exports.twin = {
  PARENT: [exports.genericTank],
  LABEL: "Twin",
  GUNS: [...twinGuns],
};

exports.gunner = {
  PARENT: [exports.genericTank],
  LABEL: "Gunner",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 3.5, 1, 0, 7.25, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 3.5, 1, 0, -7.25, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 3.5, 1, 0, 3.75, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 3.5, 1, 0, -3.75, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.gunnerop = {
  PARENT: [exports.genericTank],
  LABEL: "ANTI-EVERYTHING-GUN",
  DANGER: 7,
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 3.5, 1, 0, 7.25, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.puregunner,
          g.op,
          g.op,
          g.op,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 3.5, 1, 0, -7.25, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.puregunner,
          g.op,
          g.op,
          g.op,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 3.5, 1, 0, 3.75, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.puregunner,
          g.op,
          g.op,
          g.op,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 3.5, 1, 0, -3.75, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.puregunner,
          g.op,
          g.op,
          g.op,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.guncruiser = {
  PARENT: [exports.genericTank],
  LABEL: "Unrelentor",
  DANGER: 7,
  FACING_TYPE: "locksFacing",
  STAT_NAMES: statnames.swarm,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.2,
  },
  GUNS: [
    ...beeGuns,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.halfDamage]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.buzzer = {
  PARENT: [exports.genericTank],
  LABEL: "Buzzer",
  DANGER: 7,
  FACING_TYPE: "locksFacing",
  STAT_NAMES: statnames.swarm,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.2,
  },
  GUNS: [...beeGuns],
};
exports.assaulter = {
  PARENT: [exports.genericTank],
  LABEL: "Assaulter",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7.5, 5.5, 0.6, 5, 7, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7.5, 5.5, 0.6, 5, -7, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 2, 1, 0, -2.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 2, 1, 0, 2.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 11, 1, 0, 0, 0, 0],
    },
  ],
};

exports.gunrshot = {
  PARENT: [exports.genericTank],
  LABEL: "Destablizer",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 2, 4.0, -3, 5, 45, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.arty,
          g.gunner,
          g.halfRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 2, 4.0, -3, -5, 315, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.arty,
          g.gunner,
          g.halfRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 2.5, 4.0, 0, 2.5, 25, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.arty,
          g.gunner,
          g.halfRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 2.5, 4.0, 0, -2.5, 335, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.arty,
          g.gunner,
          g.halfRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    ...twinGuns,
    {
      POSITION: [14, 1.5, 4.0, 3, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.arty,
          g.gunner,
          g.halfRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.adeptFlankTurret = makeMulti({
  PARENT: [exports.autoTurret],
  CONTROLLERS: ["spin", "alwaysFire"],
  GUNS: [
    
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [19, 8, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.doubleDamage]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [6, 5, -1.8, 6.5, 0, 0, 0],
  },
  ],
},
3,
"");

exports.helpme = {
  PARENT: [exports.genericTank],
  LABEL: "Terror",
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.1,
    SPEED: base.SPEED * 0.75,
  },
  SKILL_CAP: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
  SPECIAL_EFFECT: "Legend",
  RESET_UPGRADES: true,
  VOID_CREATION: 1,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.adeptFlankTurret],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 8.5, 1, 0, 0, 240, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserRecoil]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6, 3.25, -1.8, 16.25, 0, 240, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 12, 1, 0, 0, 240, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.lesserRecoil]),
        TYPE: exports.bullet,
      },
    },
    {
     POSITION: [7, 7.25, -1.8, 6.5, 0, 240, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 8.5, 1, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserRecoil]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6, 3.25, -1.8, 16.25, 0, 120, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 12, 1, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.lesserRecoil]),
        TYPE: exports.bullet,
      },
    },
  {
    POSITION: [7, 7.25, -1.8, 6.5, 0, 120, 0],
  },
    {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 8, 1, 0, 0, 180, 0],
      PROPERTIES: {
       SHOOT_SETTINGS: combineStats([g.basic, g.lesserRecoil]),
       TYPE: exports.bullet,
     },
    },
    {
      POSITION: [6, 3.25, -1.8, 10.5, 0, 180, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.lesserRecoil]),
        TYPE: exports.drone,
        AUTOFIRE: true,
  MAX_CHILDREN: 6,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [5.5, 8, -1.8, 6.5, 0, 180, 0],
    },
    {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 8, 1, 0, 0, 60, 0],
      PROPERTIES: {
       SHOOT_SETTINGS: combineStats([g.basic, g.lesserRecoil]),
       TYPE: exports.bullet,
     },
    },
    {
      POSITION: [6, 3.25, -1.8, 14, 0, 60, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 8, 1, -3, 0, 60, 0],
    },
    {
      POSITION: [3.5, 8, 1.7, 14, 0, 60, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.doubleHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 8, 1, 0, 0, 300, 0],
      PROPERTIES: {
       SHOOT_SETTINGS: combineStats([g.basic, g.lesserRecoil]),
       TYPE: exports.bullet,
     },
    },
    {
      POSITION: [6, 3.25, -1.8, 14, 0, 300, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 8, 1, -3, 0, 300, 0],
    },
    {
      POSITION: [3.5, 8, 1.7, 14, 0, 300, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.doubleHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.lesserRecoil]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6, 5, -1.8, 6.5, 5.5, 0, 0],
    },
    {
      /* LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.lesserRecoil]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [7.5, 5, -1.8, 6.5, -5.5, 0, 0],
    },
    {
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [15, 9, 1.4, 8, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.lesserRecoil]),
    TYPE: exports.bullet,
   },
  },
  {
    POSITION: [7, 6.25, -1.8, 6.5, 0, 0, 0],
  },
 ],
};

exports.Healnomoly = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    TURRETS: [
      {
        /** SIZE     X       Y     ANGLE    ARC */
        POSITION: [23.5, 0, 0, 0, 360, 0],
        TYPE: exports.smasherBody,
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [15.5, 0, 0, 0, 360, 1],
        TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [10.5, 0, 0, 0, 360, 1],
        TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 7, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [3, 7, 1.7, 15, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.hexatrap,
            g.halfSpeed,
            g.bitmoreReload,
          ]),
          TYPE: exports.healerTrap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [22, 8, 1, 0, 0, 60, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.halfSpeed]),
          TYPE: exports.repairBullet,
        },
      },
      {
        POSITION: [3, 7, 1.7, 15, 0, 60, 0.25],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.hexatrap,
            g.halfSpeed,
            g.bitmoreReload,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
  },
  3,
  "Mini-Sanctuary"
);
exports.testersphere = {
  PARENT: [exports.genericTank],
  LABEL: "testersphere",
  SPEACIAL_EFFECT: "palisadeEvolve",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.13,
    SPEED: base.SPEED * 1,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.2,
    PENETRATION: base.PENETRATION + 0.25,
    FOV: base.FOV + 0.2,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.repairAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                 // g.halfDamage,
                  g.minorDamage,
                  g.size500,
                  g.doubleSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.repairAura, { COLOR: 37 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7.6, 9.5, 0, 72, 360, 0],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.doubleDamage,
                  g.size500,
                  g.doubleSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 0, 360, 1],
      TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.repairManClass = {
PARENT: [exports.protect],
LABEL: "Repair Man",
REPAIR_EFFECT: true,
  RESET_UPGRADES: true,
TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 270, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 360, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15.5, 0, 0, 0, 360, 1],
      TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    ],

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.halfSpeed]),
        TYPE: exports.repairBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
    },
  ],
};
exports.warHealer = {
PARENT: [exports.protect],
  RESET_UPGRADES: true,
LABEL: "War Healer",
HEAL_EFFECT: true,
TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 270, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 360, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    ],

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.halfSpeed]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
    },
  ],
};
exports.mettasphere = {
  PARENT: [exports.smash],
  LABEL: "Mettasphere",
  RESET_UPGRADES: true,
  HEAL_EFFECT: true,
  REPAIR_EFFECT: true,
  BODY: {
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED * 1.1,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.5,
    SHIELD: base.SHIELD * 1.3,
    REGEN: base.REGEN * 1,
    PENETRATION: base.PENETRATION + 0.3,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 270, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 360, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [24.5, 0, 0, 0, 360, 0],
      TYPE: exports.mettaBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.metta3AuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  //g.halfDamage,
                  g.minorDamage,
                  g.size500,
                  g.doubleSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.metta3, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.metta3AuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                 // g.halfDamage,
                  g.minorDamage,
                  g.size500,
                  g.greaterSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.metta3, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.metta3AuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                 // g.halfDamage,
                  g.minorDamage,
                  g.size500,
                  g.greaterSize,
                ]),
                TYPE: [exports.metta3, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.metta2AuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.doubleSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.metta2, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.metta2AuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.greaterSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.metta2, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.metta2AuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.greaterSize,
                ]),
                TYPE: [exports.metta2, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.metta1AuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.doubleSize,
                ]),
                TYPE: [exports.metta1, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.metta1AuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.greaterSize,
                ]),
                TYPE: [exports.metta1, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.metta1AuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                ]),
                TYPE: [exports.metta1, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.whiteCircle,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: exports.mettaSymbol,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [4, 0, 0, 0, 360, 1],
      TYPE: exports.mettaSymbol2,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.repairer = {
PARENT: [exports.smash],
LABEL: "Repairer",
REPAIR_EFFECT: true,
  RESET_UPGRADES: true,
TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 270, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 360, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15.5, 0, 0, 0, 360, 1],
      TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    ],
};
exports.repairsphere = {
  PARENT: [exports.smash],
  LABEL: "Repairsphere",
  RESET_UPGRADES: true,
REPAIR_EFFECT: true,
TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 270, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 360, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.repairAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.halfDamage,
                  g.minorDamage,
                  g.size500,
                  g.doubleSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.repairAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.repairAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.halfDamage,
                  g.minorDamage,
                  g.size500,
                  g.greaterSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.repairAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.repairAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.halfDamage,
                  g.minorDamage,
                  g.size500,
                  g.greaterSize,
                ]),
                TYPE: [exports.repairAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15.5, 0, 0, 0, 360, 1],
      TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};

exports.truerepairsphere = {
  PARENT: [exports.repairsphere],
  LABEL: "True Repairsphere",
  DANGER: 7,
  RESET_UPGRADES: true,
  BODY: {
    ACCELERATION: base.ACCEL + 0.13,
    SPEED: base.SPEED * 1,
    HEALTH: base.HEALTH * 2.5,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.25,
    PENETRATION: base.PENETRATION + 0.25,
    FOV: base.FOV + 0.2,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 270, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 360, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.repairAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.halfDamage,
                  g.minorDamage,
                  g.size500,
                  g.doubleSize,
                  g.mediumSize,
                ]),
                TYPE: [exports.repairAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.repairAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.halfDamage,
                  g.minorDamage,
                  g.size500,
                  g.doubleSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.repairAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.repairAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.halfDamage,
                  g.minorDamage,
                  g.size500,
                  g.greaterSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.repairAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.repairAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.halfDamage,
                  g.minorDamage,
                  g.size500,
                  g.greaterSize,
                ]),
                TYPE: [exports.repairAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15.5, 0, 0, 0, 360, 1],
      TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.75, 0, 0, 0, 360, 1],
      TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};

exports.supportsphere = {
  PARENT: [exports.smash],
  LABEL: "Supportsphere",
  HEAL_EFFECT: true,
  REPAIR_EFFECT: true,
  RESET_UPGRADES: true,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 270, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 360, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.repairAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                 // g.halfDamage,
                  g.minorDamage,
                  g.size500,
                  g.doubleSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.repairAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.healAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.halfDamage,
                  g.size400,
                  g.doubleSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.healAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healersphereSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 0, 360, 1],
      TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};

exports.irradiator = {
  PARENT: [exports.smash],
  LABEL: "Irradiator",
  REPAIR_EFFECT: true,
  RESET_UPGRADES: true,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 270, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 360, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.repairAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                 // g.halfDamage,
                  g.minorDamage,
                  g.size500,
                  g.doubleSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.repairAura, { COLOR: 37 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.doubleDamage,
                  g.size500,
                  g.doubleSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 0, 360, 1],
      TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};

exports.dualist = {
  PARENT: [exports.smash],
  LABEL: "Dualist",
  HEAL_EFFECT: true,
  RESET_UPGRADES: true,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 270, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 360, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.healAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.doubleSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.healAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.doubleDamage,
                  g.size500,
                  g.doubleSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },

    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healersphereSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};

exports.wilder = {
  PARENT: [exports.genericTank],
  LABEL: "I'm going insane ~Kris",

  BODY: {
    FOV: base.FOV * 1.35,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 3, 3.5, -1.5, 5, 20, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.nail,
          g.lesserReload,
          g.minorDamage,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 3, 3.5, -1.5, -5, 340, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.nail,
          g.lesserReload,
          g.minorDamage,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /* LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [26, 9, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        //the gun term for assassin is 'assass'
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.assass]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.ringofdeath = {
  PARENT: [exports.genericTank],
  LABEL: "Shredder",
  FACING_TYPE: "autospin",
  SPIN_RATE: 0.075,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED * 1.1,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.1,
    REGEN: base.REGEN * 1.1,
    PENETRATION: base.PENETRATION + 0.3,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  g.lesserDamage,
                  g.superReload,
                  g.superReload,
                  g.greaterReload,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 120, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  g.lesserDamage,
                  g.superReload,
                  g.superReload,
                  g.greaterReload,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 240, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  g.lesserDamage,
                  g.superReload,
                  g.superReload,
                  g.greaterReload,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 60, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  g.lesserDamage,
                  g.superReload,
                  g.superReload,
                  g.greaterReload,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 180, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  g.lesserDamage,
                  g.superReload,
                  g.superReload,
                  g.greaterReload,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 300, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  g.lesserDamage,
                  g.superReload,
                  g.superReload,
                  g.greaterReload,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 35, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.superSize,
                  g.greaterSize,
                  g.halfDamage,
                  g.superReload,
                  g.greaterReload,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 35, 120, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.superSize,
                  g.greaterSize,
                  g.halfDamage,
                  g.superReload,
                  g.greaterReload,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 35, 240, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.superSize,
                  g.greaterSize,
                  g.halfDamage,
                  g.superReload,
                  g.greaterReload,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 35, 60, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.superSize,
                  g.greaterSize,
                  g.halfDamage,
                  g.superReload,
                  g.greaterReload,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 35, 180, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.superSize,
                  g.greaterSize,
                  g.halfDamage,
                  g.superReload,
                  g.greaterReload,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 35, 300, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.superSize,
                  g.greaterSize,
                  g.halfDamage,
                  g.superReload,
                  g.greaterReload,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },

    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 55, 30, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  g.minorDamage,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 55, 150, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  g.minorDamage,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 55, 270, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  g.minorDamage,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 55, 90, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  g.minorDamage,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 55, 210, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  g.minorDamage,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 55, 330, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterHealth,
                  g.superSize,
                  g.greaterSize,
                  g.minorDamage,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
  ],
  IS_SMASHER: true,
  STAT_NAMES: statnames.smasher,
};

exports.Parmesan = {
  PARENT: [exports.genericTank],
  LABEL: "Parmesan Cheese",
  STAT_NAMES: statnames.drone,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    SPEED: base.SPEED * 0.95,
    FOV: base.FOV * 1.1,
  },
  MAX_CHILDREN: 1,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10.5, 18, 1.2, 5.5, 0, 0, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.cheese, g.lesserSpeed]),
        TYPE: [exports.healerDrone, { DRAW_HEALTH: true }],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};

exports.mutant = {
  //MUTANT TEENAGE NINJA TURTLES
  PARENT: [exports.genericTank],
  LABEL: "Mutant",

  BODY: {
    FOV: base.FOV * 1.35,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21.5, 14, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.bullet,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6.5, 10, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.doubleSize,
          g.lesserDamage,
          g.lesserHealth,
          g.lesserReload,
        ]),
        TYPE: [exports.squareDrone, { COLOR: 13 }],
        ALT_FIRE: true,
        MAX_CHILDREN: 5,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [6.5, 10, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.doubleSize, g.lesserDamage]),
        TYPE: [exports.triangleDrone],
        ALT_FIRE: true,
        MAX_CHILDREN: 2,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.Dad = {
  //dash in, bang, dash out
  PARENT: [exports.genericTank],
  LABEL: "Dad",
  DANGER: 10,
  BODY: {
    ACCELERATION: base.ACCEL + 0.2,
    SPEED: base.SPEED * 1.1,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.2,
    REGEN: base.REGEN * 1,
    PENETRATION: base.PENETRATION + 0.35,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.55,
    PUSHABILITY: 3,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bangAlt],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bounce],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};

exports.healersphere = {
  PARENT: [exports.smash],
  RESET_UPGRADES: true,
  LABEL: "Healersphere",
  HEAL_EFFECT: true,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 270, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 360, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.healAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.doubleSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.healAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.healAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.greaterSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.healAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.healAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.greaterSize,
                ]),
                TYPE: [exports.healAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healersphereSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};

exports.truehealersphere = {
  PARENT: [exports.healersphere],
  LABEL: "True Healersphere",
  RESET_UPGRADES: true,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 270, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21, 0, 0, 360, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.healAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.doubleSize,
                  g.mediumSize,
                ]),
                TYPE: [exports.healAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.healAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.doubleSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.healAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.healAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.greaterSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.healAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.healAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.greaterSize,
                ]),
                TYPE: [exports.healAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healersphereSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.75, 0, 0, 0, 360, 1],
      TYPE: [exports.healersphereSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};

exports.polyTerror = {
  PARENT: [exports.genericTank],
  LABEL: "Poly Terror",
  SHAPE: 4,

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, -5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 5.5, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, -5.5, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4, 8, 1.2, 8, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.doubleSize,
          g.lesserDamage,
          g.lesserHealth,
          g.lesserReload,
        ]),
        TYPE: [exports.squareDrone],
        MAX_CHILDREN: 6,

        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [4, 8, 1.2, 8, 0, 270, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.doubleSize, g.lesserDamage]),
        TYPE: [exports.triangleDrone],
        MAX_CHILDREN: 6,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};

exports.polyLord = {
  PARENT: [exports.genericTank],
  LABEL: "Poly Lord",
  SHAPE: 4,

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4, 8, 1.2, 8, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.doubleSize,
          g.lesserDamage,
          g.lesserHealth,
          g.lesserReload,
        ]),
        TYPE: [exports.squareDrone],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 6,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [4, 8, 1.2, 8, 0, 270, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.doubleSize, g.lesserDamage]),
        TYPE: [exports.triangleDrone],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 5,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [4, 9, 1.2, 8, 0, 90, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.doubleSize,
          g.greaterSize,
          g.lesserDamage,
          g.greaterHealth,
          g.greaterReload,
        ]),
        TYPE: [exports.pentagonDrone],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 4,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [4, 9, 1.2, 8, 0, 270, 1.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.doubleSize,
          g.greaterSize,
          g.lesserStats,
          g.halfSpeed,
          g.superHealth,
          g.superHealth,
          g.greaterHealth,
          g.superReload,
        ]),
        TYPE: [exports.hexagonDrone, { DRAW_HEALTH: true, GROWTH_FACTOR: 3 }],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 1,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};

exports.whirlpool = {
  //just me testing <3
  PARENT: [exports.genericTank],
  LABEL: "Whirlpool",
  DANGER: 10,
  BODY: {
    ACCELERATION: base.ACCEL + 0.2,
    SPEED: base.SPEED * 1.1,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.2,
    SHIELD: base.SHIELD * 1.2,
    REGEN: base.REGEN * 1,
    PENETRATION: base.PENETRATION + 0.35,
    FOV: base.FOV + 0.1,
    DENSITY: base.DENSITY + 0.55,
    PUSHABILITY: 3,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.whirlSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7, 0, 0, 0, 360, 1],
      TYPE: [exports.whirlSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 0, 0, 0, 360, 1],
      TYPE: [exports.whirlSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [3, 0, 0, 0, 360, 1],
      TYPE: [exports.whirlSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 1, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.bang,
          g.uberHealth,
          g.uberDensity,
          g.doubleRange,
          g.doubleRange,
          g.minorSpeed,
          g.minorSpeed,
          g.superPenetration,
        ]),
        TYPE: [
          exports.bullet,
          {
            IGNORE_COLLISION: true,
            MOTION_TYPE: "growth",
            SPECIAL_EFFECT: "push",
            REPEL: -0.75,
            INTANGIBLE: true,
          },
        ],
      },
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};

exports.healomizer = {
  PARENT: [exports.genericTank],
  LABEL: "Healomizer",
  DANGER: 7,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X  ***/
      POSITION: [24, 1.25, 8, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.puregunner,
          g.halfDamage,
          g.superSize,
          g.greaterSpray,
          g.halfReload,
          g.lesserRecoil,
        ]),
        TYPE: exports.healerBullet,
      },
    },
    ...machineHeal,
  ],
};

exports.machinegunner = {
  PARENT: [exports.genericTank],
  LABEL: "Machine Gunner",
  DANGER: 7,
  BODY: {
    SPEED: base.SPEED * 0.9,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 3, 4.0, -3, 5, 0, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 3, 4.0, -3, -5, 0, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 3, 4.0, 0, 2.5, 0, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 3, 4.0, 0, -2.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 3, 4.0, 3, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.autogunner = makeAuto(exports.gunner);
exports.nailgun = {
  PARENT: [exports.genericTank],
  LABEL: "Nailgun",
  DANGER: 7,
  BODY: {
    FOV: base.FOV * 1.1,
    SPEED: base.SPEED * 0.9,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 2, 1, 0, -2.5, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 2, 1, 0, 2.5, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 2, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5.5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.MechaNailgun = {
  PARENT: [exports.genericTank],
  TYPE: "base",
  LABEL: "Mecha Nailgun",
  BODY: {
    FOV: base.FOV * 1.2,
    HEALTH: base.HEALTH * 3,
    SHIELD: base.SHIELD * 1.3,
    REGEN: base.REGEN * 0.8,
  },
  GUNS: [
    {
      POSITION: [20, 7.5, -1.5, 0, 0, 90, 0],
    },
    {
      POSITION: [20, 7.5, -1.5, 0, 0, 270, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 2, 1, 0, -2.5, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 2, 1, 0, 2.5, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 2, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5.5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 0, 0],
      TYPE: exports.dominatorBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 25.5, 0, 359, 1],
      TYPE: exports.nailgunTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, -25.5, 0, 359, 1],
      TYPE: exports.nailgunTurret,
    },
  ],
};
exports.double = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [20, 8, 1, 0, 5.5, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  2,
  "Double Twin"
);
exports.hewnBulwark = 
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
   LABEL: "Hewn Bulwark",
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [20, 8, 1, 0, 5.5, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double]),
          TYPE: exports.bullet,
        },
      },

    {
      POSITION: [18, 8, 1, 0, -5.5, 165, 0],
    },
    {
      POSITION: [3, 8, 1.7, 17, -5.5, 165, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      POSITION: [18, 8, 1, 0, 5.5, -165, 0.5],
    },
    {
      POSITION: [3, 8, 1.7, 17, 5.5, -165, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [20, 8, 1, 0, 5.5, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [20, 8, 1, 0, -5.5, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double]),
          TYPE: exports.bullet,
        },
      },
    ],
  };
exports.autodouble = makeAuto(exports.double, "Auto-Double");

exports.tripletwin = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [20, 8, 1, 0, 5.5, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  3,
  "Triple Twin"
);
exports.hewn = {
  PARENT: [exports.genericTank],
  LABEL: "Hewn Double",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 8, 1, 0, -5.5, 155, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double,]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 5.5, -155, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double,]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double,]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double,]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, 5.5, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double,]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, -5.5, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double,]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.crackShot = {
  PARENT: [exports.genericTank],
  LABEL: "Crack Shot",
  DANGER: 7,
  BODY: {
    SPEED: base.SPEED * 0.9,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 8, 1, 0, -3, -10, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 3, 10, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 2.5, 1, 0, 2, 5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.greaterDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 2.5, 1, 0, -2, -5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.greaterDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.weed = {
  PARENT: [exports.genericTank],
  LABEL: "WEED",
  DANGER: 7,
  BODY: {
    SPEED: base.SPEED * 0.9,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 8, 1, 0, -3, -10, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.bent,
          g.superDamage,
          g.superSpeed,
          g.superHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 3, 10, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.bent,
          g.superDamage,
          g.superSpeed,
          g.superHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.bent,
          g.superDamage,
          g.superSpeed,
          g.superHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 2.5, 1, 0, 2, 5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.greaterDamage,
          g.superDamage,
          g.superSpeed,
          g.superHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 2.5, 1, 0, -2, -5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.greaterDamage,
          g.superDamage,
          g.superSpeed,
          g.superHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.bent = {
  PARENT: [exports.genericTank],
  LABEL: "Triple Shot",
  DANGER: 7,
  BODY: {
    SPEED: base.SPEED * 0.9,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 8, 1, 0, -2, -20, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 2, 20, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.bentdouble = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [19, 8, 1, 0, -1, -25, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent, g.double]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [19, 8, 1, 0, 1, 25, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent, g.double]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [22, 8, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent, g.double]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  2,
  "Bent Double"
);

exports.penta = {
  PARENT: [exports.genericTank],
  LABEL: "Penta Shot",
  DANGER: 7,
  BODY: {
    SPEED: base.SPEED * 0.85,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, -3, -30, 0.667],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 3, 30, 0.667],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, -2, -15, 0.333],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 2, 15, 0.333],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.benthybrid = makeHybrid(exports.bent, "Bent Hybrid");

exports.triple = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  BODY: {
    FOV: base.FOV * 1.05,
  },
  LABEL: "Triplet",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 10, 1, 0, 5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.triple]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 10, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.triple]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [21, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.triple]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.dual = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  BODY: {
    ACCEL: base.ACCEL * 0.8,
    FOV: base.FOV * 1.1,
  },
  LABEL: "Dual",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 7, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.dual, g.halfDamage]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 7, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.dual, g.halfDamage]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 8.5, 1, 0, 5.5, 0, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.dual]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 8.5, 1, 0, -5.5, 0, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.dual]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.bulwark = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Bulwark",
  BODY: {
    DAMAGE: base.DAMAGE * 1.1,
    ACCEL: base.ACCEL * 0.8,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 5.5, 185, 0],
    },
    {
      POSITION: [3, 8, 1.7, 14, 5.5, 185, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      POSITION: [15, 8, 1, 0, -5.5, 175, 0.5],
    },
    {
      POSITION: [3, 8, 1.7, 14, -5.5, 175, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.triwark = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Tri-wark",
  BODY: {
    DAMAGE: base.DAMAGE * 1.1,
    ACCEL: base.ACCEL * 0.8,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, 5.5, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, -5.5, 120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },


    {
      POSITION: [18, 8, 1, 0, 5.5, 120, 0],
    },
    {
      POSITION: [3, 8, 1.7, 17, 5.5, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      POSITION: [18, 8, 1, 0, -5.5, -120, 0.5],
    },
    {
      POSITION: [3, 8, 1.7, 17, -5.5, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 5.5, -120, 0],
    },
    {
      POSITION: [3, 8, 1.7, 14, 5.5, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      POSITION: [15, 8, 1, 0, -5.5, 120, 0.5],
    },
    {
      POSITION: [3, 8, 1.7, 14, -5.5, 120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.bentBulwark = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Bent Bulwark",
  BODY: {
    DAMAGE: base.DAMAGE * 1.1,
    ACCEL: base.ACCEL * 0.8,
  },
  GUNS: [
       {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [19, 8, 1, 0, -1, -25, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent, g.double]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [19, 8, 1, 0, 1, 25, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent, g.double]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [22, 8, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent, g.double]),
          TYPE: exports.bullet,
        },
      },
    {
      POSITION: [15, 8, 1, 0, -1, 205, 0],
    },
    {
      POSITION: [3, 8, 1.7, 14, -1, 205, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      POSITION: [15, 8, 1, 0, 1, -205, 0],
    },
    {
      POSITION: [3, 8, 1.7, 14, 1, -205, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 1, 180, 0.5],
    },
    {
      POSITION: [3, 8, 1.7, 17, 1, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.autoBulwark = makeAuto(exports.bulwark);
exports.hewnwark = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Hewnwark",
  BODY: {
    DAMAGE: base.DAMAGE * 1.1,
    ACCEL: base.ACCEL * 0.8,
  },
  GUNS: [
    {
      POSITION: [15, 8, 1, 0, -5.5, 155, 0],
    },
    {
      POSITION: [3, 8, 1.7, 14, -5.5, 155, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      POSITION: [15, 8, 1, 0, 5.5, -155, 0.5],
    },
    {
      POSITION: [3, 8, 1.7, 14, 5.5, -155, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 5.5, 185, 0],
    },
    {
      POSITION: [3, 8, 1.7, 14, 5.5, 185, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      POSITION: [15, 8, 1, 0, -5.5, 175, 0.5],
    },
    {
      POSITION: [3, 8, 1.7, 14, -5.5, 175, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.frontier = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Frontier",
  BODY: {
    DAMAGE: base.DAMAGE * 1.1,
    ACCEL: base.ACCEL * 0.8,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 10, 1, 0, 5, 185, 0],
    },
    {
      POSITION: [3, 10, 1.3, 16, 5, 185, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.setBlock,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [16, 10, 1, 0, -5, 175, 0.5],
    },
    {
      POSITION: [3, 10, 1.3, 16, -5, 175, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.setBlock,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};

exports.sniper = {
  PARENT: [exports.genericTank],
  LABEL: "Sniper",
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.trinet = {
  PARENT: [exports.genericTank],
  LABEL: "Shitagon",
  SHAPE: 1,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.2,
  },
  TURRETS: [
    {
      POSITION: [20, -8.5, 1, 20, 0, 0, 0],
      TYPE: exports.triangle,
    },
    {
      POSITION: [20, 8.5, 1, -20, 0, 180, 0],
      TYPE: exports.triangle,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.shooter = {
  PARENT: [exports.genericTank],
  LABEL: "Shooter",
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.rifle = {
  PARENT: [exports.genericTank],
  LABEL: "Rifle",
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.225,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 4.5, 1, 0, 3.7, 0, 1 / 3],
    },
    {
      POSITION: [20, 4.5, 1, 0, -3.7, 0, 1 / 3],
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.rifle]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.attack = {
  PARENT: [exports.genericTank],
  LABEL: "Attacker",
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.225,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 6, 1, 0, 6, 0, 1 / 3],
    },
    {
      POSITION: [20, 6, 1, 0, -6, 0, 1 / 3],
    },
    {
      POSITION: [24, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.pound, g.rifle]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.musket = {
  PARENT: [exports.genericTank],
  LABEL: "Musket",
  BODY: {
    ACCELERATION: base.ACCEL * 0.9,
    FOV: base.FOV * 1.225,
  },
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 5.5, 0, 0],
    },
    {
      POSITION: [16, 8, 1, 0, -5.5, 0, 0],
    },
    {
      POSITION: [18, 7, 1, 0, 4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.sniper, g.rifle]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 7, 1, 0, -4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.sniper, g.rifle]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.woodpecker = {
  PARENT: [exports.falcon],
  LABEL: "Wood Pecker",
  BODY: {
    ACCELERATION: base.ACCEL * 0.9,
    FOV: base.FOV * 1.225,
  },
  DANGER: 7,
  GUNS: [
    ...birdGuns,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 9.5, 1, 0, 0, -90, 0],
    },
    {
      POSITION: [16, 9.5, 1, 0, 0, 90, 0],
    },
    {
      POSITION: [18, 7, 1, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.sniper, g.rifle]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 7, 1, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.sniper, g.rifle]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [27, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.assass]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    {
      POSITION: [5, 8.5, -1.6, 8, 0, 0, 0],
    },
  ],
};
exports.crossbow = {
  PARENT: [exports.genericTank],
  LABEL: "Crossbow",
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.225,
  },
  GUNS: [
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [9, 3.5, 1, 4, -2, -32, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.crossbow]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [9, 3.5, 1, 4, 2, 32, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.crossbow]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [15.5, 3.5, 1, 0, -2.3, -19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.crossbow]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [15.5, 3.5, 1, 0, 2.3, 19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.crossbow]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, 3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.crossbow]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, -3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.crossbow]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.rifle]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.armsman = makeHybrid(exports.rifle, "Armsman");

exports.shade = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Shade",
  INVISIBLE: [0.06, 0.03],
  IS_CREEP: true,
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.85,
    FOV: base.FOV * 1.4,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: [exports.evilEye, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [25, 8.5, -2, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.skulker = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Skulker",
  INVISIBLE: [0.06, 0.03],
  IS_CREEP: true,
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.85,
    FOV: base.FOV * 1.4,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 7, -2, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter, g.hunter2, g.halfRecoil]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 10, -2, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter, g.halfRecoil]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.creeper = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Creeper",//aww man, so we back in the mines-
  INVISIBLE: [0.06, 0.03],
  IS_CREEP: true,//thas wierd man, why u a creep???
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.85,
    FOV: base.FOV * 1.4,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [25, 8.5, -2, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.halfRecoil]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.infiltrate = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Infiltrator",
  IS_CREEP: true,
  INVISIBLE: [0.06, 0.03],
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.85,
    FOV: base.FOV * 1.4,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 10, -2, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.sniper, g.halfRecoil]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.cloaker = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Cloaker",
  INVISIBLE: [100, 0],
  ALPHA: 0.15,
  IS_CREEP: true,
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.85,
    FOV: base.FOV * 1.4,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 8.5, -2, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.assassin = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Assassin",
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.85,
    FOV: base.FOV * 1.4,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [27, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.assass]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 8.5, -1.6, 8, 0, 0, 0],
    },
  ],
};
exports.slayer = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Slayer",
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.85,
    FOV: base.FOV * 1.4,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [27, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.assass]),
        TYPE: exports.acceleratingBullet,
      },
    },
    {
      POSITION: [7.5, 8.5, -1.6, 8, 0, 0, 0],
    },
  ],
};
exports.ranger = {
  PARENT: [exports.genericTank],
  LABEL: "Ranger",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.5,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.5,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [32, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.assass]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 8.5, -1.6, 8, 0, 0, 0],
    },
  ],
};
exports.autoass = makeAuto(exports.assassin);
exports.stalker = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Stalker",
  INVISIBLE: [0.06, 0.03],
  IS_CREEP: true,
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.85,
    FOV: base.FOV * 1.4,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [27, 8.5, -2, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.assass, g.halfRecoil,]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.hunter = {
  PARENT: [exports.genericTank],
  LABEL: "Hunter",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    SPEED: base.SPEED * 0.9,
    FOV: base.FOV * 1.35,
  },
  GUNS: [...hunterGuns],
};
exports.xhunter = {
  PARENT: [exports.genericTank],
  LABEL: "X-Hunter",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.5,
  },
  GUNS: [
    ...hunterGuns,
    {
      POSITION: [5, 12, -1.3, 7, 0, 0, 0],
    },
  ],
};
exports.preda = {
  PARENT: [exports.genericTank],
  LABEL: "Predator",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    SPEED: base.SPEED * 0.85,
    FOV: base.FOV * 1.35,
  },
  GUNS: [
    ...hunterGuns,
    {
      POSITION: [18, 14, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.hunter,
          g.greaterDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.poach = makeHybrid(exports.hunter, "Poacher");

exports.director = {
  PARENT: [exports.genericTank],
  LABEL: "Director",
  STAT_NAMES: statnames.drone,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.1,
  },
  MAX_CHILDREN: 6,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.manipulator = {
  PARENT: [exports.genericTank],
  LABEL: "Manipulator",
  STAT_NAMES: statnames.drone,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 1.75,
    FOV: base.FOV * 1.1,
    DENSITY: 0.1,
  },
  MAX_CHILDREN: 4,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8.5, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.lesserReload,]),
        TYPE: exports.lightDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.auraDirector = {
  PARENT: [exports.genericTank],
  LABEL: "Forcefield Director",
  STAT_NAMES: statnames.drone,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 1.75,
    FOV: base.FOV * 1.1,
    DENSITY: 0.1,
  },
  MAX_CHILDREN: 4,
  TURRETS: [
    
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.blackCircle,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: exports.droneAuraSymbol,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8.5, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.lesserReload,]),
        TYPE: exports.auraDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.revenant = {
  PARENT: [exports.genericTank],
  LABEL: "Revenant",
  STAT_NAMES: statnames.drone,
  // INVISIBLE: [0.006, 0.003],
  //IS_CREEP: true,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.1,
  },
  MAX_CHILDREN: 6,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: [exports.evilEye, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.revenantDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.manager = {
  PARENT: [exports.genericTank],
  LABEL: "Manager",
  STAT_NAMES: statnames.drone,
  DANGER: 7,
  INVISIBLE: [0.09, 0.03],
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.15,
  },
  MAX_CHILDREN: 8,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.greaterSpeed]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.cheese = {
  PARENT: [exports.genericTank],
  LABEL: "Big Cheese",
  STAT_NAMES: statnames.drone,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    SPEED: base.SPEED * 0.95,
    FOV: base.FOV * 1.1,
  },
  MAX_CHILDREN: 1,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10.5, 18, 1.2, 5.5, 0, 0, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.cheese]),
        TYPE: [exports.drone, { DRAW_HEALTH: true }],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.overseer = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.drone,
    BODY: {
      ACCELERATION: base.ACCEL * 0.75,
      SPEED: base.SPEED * 0.9,
      FOV: base.FOV * 1.1,
    },
    MAX_CHILDREN: 8,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5.5, 12, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone, g.over]),
          TYPE: exports.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
        },
      },
    ],
  },
  2,
  "Overseer"
);
exports.miniguardian = {
  PARENT: [exports.genericTank],
  SHAPE: 3,
  SIZE: 15,
  COLOR: 5,
  LABEL: "Mini Guardian",
  BODY: {
    SPEED: base.SPEED * 1.4,
    HEALTH: base.HEALTH * 1.4,
    DAMAGE: base.DAMAGE * 1.4,
    SHIELD: base.SHIELD * 1.4,
    REGEN: base.REGEN * 1.4,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 10, 1.8, 1.6, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound, g.halfDamage, g.halfReload]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [7, 10, 1.8, 1.6, 0, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound, g.halfDamage, g.halfReload]),
        TYPE: exports.swarmDrone,
      },
    },
  ],
};
exports.overlord = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.drone,
    BODY: {
      ACCELERATION: base.ACCEL * 0.75,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.1,
    },
    MAX_CHILDREN: 8,
    GUNS: [
      {
        POSITION: [5.5, 12, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone, g.over]),
          TYPE: exports.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
        },
      },
    ],
  },
  4,
  "Overlord"
);
exports.corrupter = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.drone,
    BODY: {
      ACCELERATION: base.ACCEL * 0.75,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.1,
    },
    MAX_CHILDREN: 8,
    GUNS: [
      {
        POSITION: [6, 12, 1.2, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone, g.greaterSize]),
          TYPE: exports.thrasherDrone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
        },
      },
      {
        POSITION: [15, 15, 0.8, 0, 0, 180, 0],
      },
    ],
  },
  4,
  "Corrupter"
);
exports.quadbuilder = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.trap,
    BODY: {
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 12, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [2, 12, 1.1, 18, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.block, g.greaterHealth]),
          TYPE: exports.unsetBlock,
        },
      },
    ],
  },
  4,
  "Quad-Builder"
);

exports.overtrap = {
  PARENT: [exports.genericTank],
  LABEL: "Overtrapper",
  DANGER: 7,
  STAT_NAMES: statnames.generic,
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 11, 1.2, 8, 0, 125, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 235, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [14, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.octobuilder = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.trap,
    BODY: {
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 12, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [2, 12, 1.1, 18, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.block, g.lesserHealth]),
          TYPE: exports.unsetBlock,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [20, 12, 1, 0, 0, 45, 0.5],
      },
      {
        POSITION: [2, 12, 1.1, 20, 0, 45, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.block, g.lesserHealth]),
          TYPE: exports.unsetBlock,
        },
      },
    ],
  },
  4,
  "Octo-Builder"
);
exports.hexabuilder = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.trap,
    BODY: {
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 12, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [2, 12, 1.1, 18, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.block]),
          TYPE: exports.unsetBlock,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [20, 12, 1, 0, 0, 60, 0.5],
      },
      {
        POSITION: [2, 12, 1.1, 20, 0, 60, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.block]),
          TYPE: exports.unsetBlock,
        },
      },
    ],
  },
  3,
  "Hexa-Builder"
);
exports.lordtrap = {
  PARENT: [exports.genericTank],
  LABEL: "Lordtrapper",
  DANGER: 7,
  STAT_NAMES: statnames.generic,
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 11, 1.2, 8, 0, 125, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, -125, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 55, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, -55, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [14, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.greaterDamage, g.bitmoreHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.undertrapper = {
  PARENT: [exports.genericTank],
  LABEL: "Undertrapper",
  DANGER: 7,
  STAT_NAMES: statnames.generic,
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.2,
  },

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 12, 1.2, 8, 0, 125, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip, g.lesserReload]),

        TYPE: exports.sunchip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 6,
      },
    },
    {
      POSITION: [5, 12, 1.2, 8, 0, 235, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip, g.lesserReload]),
        TYPE: exports.sunchip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 6,
      },
    },
    {
      POSITION: [14, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.underpen = {
  PARENT: [exports.genericTank],
    LABEL: "Underpen",
  DANGER: 7,
  STAT_NAMES: statnames.generic,
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.2,
  },

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 12, 1.2, 8, 0, 125, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip, g.lesserReload]),

        TYPE: exports.sunchip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 6,
      },
    },
    {
      POSITION: [5, 12, 1.2, 8, 0, 235, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip, g.lesserReload]),
        TYPE: exports.sunchip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 6,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.entomber = {
  PARENT: [exports.genericTank],
  LABEL: "Entomber",
  DANGER: 7,
  SHAPE: 4,
  STAT_NAMES: statnames.generic,
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.2,
  },

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 12, 1.2, 8, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip, g.lesserReload]),

        TYPE: exports.sunchip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 7,
      },
    },
    {
      POSITION: [5, 12, 1.2, 8, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip, g.lesserReload]),
        TYPE: exports.sunchip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 7,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 12, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip, g.lesserReload, g.halfReload,]),

        TYPE: exports.sunchip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 7,
      },
    },
    {
      POSITION: [14, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.quadpen = {
  PARENT: [exports.genericTank],
  LABEL: "Quad Pen",
  DANGER: 7,
  SHAPE: 4,
  STAT_NAMES: statnames.generic,
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.2,
  },

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 12, 1.2, 8, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip, g.lesserReload]),

        TYPE: exports.sunchip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 7,
      },
    },
    {
      POSITION: [5, 12, 1.2, 8, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip, g.lesserReload]),
        TYPE: exports.sunchip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 7,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 12, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip, g.lesserReload, g.halfReload,]),

        TYPE: exports.sunchip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 7,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.banshee = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    BODY: {
      ACCELERATION: base.ACCEL * 0.5,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.1,
    },
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [10, 8, 0, 0, 175, 0],
        TYPE: exports.bansheeTurret,
      },
      {
        POSITION: [10, 8, 0, 120, 175, 0],
        TYPE: exports.bansheeTurret,
      },
      {
        POSITION: [10, 8, 0, 240, 175, 0],
        TYPE: exports.bansheeTurret,
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [6, 11, 1.2, 8, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone, g.over]),
          TYPE: exports.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
          MAX_CHILDREN: 2,
        },
      },
    ],
  },
  3,
  "Banshee"
);
exports.parade = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    BODY: {
      ACCELERATION: base.ACCEL * 0.5,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.1,
    },
    FACING_TYPE: "autospin",
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [6, 11, 1.2, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone, g.over]),
          TYPE: exports.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
          MAX_CHILDREN: 2,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 7, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [3, 7, 1.7, 15, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
  },
  3,
  "Parade"
);
exports.worker = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    BODY: {
      ACCELERATION: base.ACCEL * 0.5,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.1,
    },
    FACING_TYPE: "autospin",
    GUNS: [
      {
        /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4.5, 10.5, 1, 10.5, 0, 180, 0],
      },
      {
        POSITION: [1.2, 12.5, 1, 14.8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.spawner]),
          TYPE: exports.minion,
          MAX_CHILDREN: 2,
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [3.5, 12.5, 1, 8, 0, 180, 0],
      },
      {
        POSITION: [15, 7, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [3, 7, 1.7, 15, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap]),
          TYPE: exports.mechtrap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [12, 9, 1, 0, 0, 0, 0],
      },
    ],
  },
  3,
  "Worker"
);
exports.overdrive = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "Overdrive",
    DANGER: 7,
    STAT_NAMES: statnames.drone,
    BODY: {
      ACCELERATION: base.ACCEL * 0.75,
      SPEED: base.SPEED * 0.9,
      FOV: base.FOV * 1.1,
    },
    MAX_CHILDREN: 8,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [9, 0, 0, 0, 360, 1],
        TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [6, 12, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone, g.over]),
          TYPE: exports.autoDrone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
        },
      },
    ],
  },
  2,
  "Overdrive"
);

exports.overaccel = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.drone,
    BODY: {
      ACCELERATION: base.ACCEL * 0.75,
      SPEED: base.SPEED * 0.9,
      FOV: base.FOV * 1.1,
    },
    MAX_CHILDREN: 8,
    GUNS: [
      { POSITION: [8, 10, 1.2, 8, 0, 90, 0] },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [6, 12, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone, g.over]),
          TYPE: exports.buzzDrone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
        },
      },
    ],
  },
  2,
  "Over-Swarm"
);
exports.commander = {
  PARENT: [exports.genericTank],
  LABEL: "Commander",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.5,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.1,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 120, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 240, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
  ],
};
exports.alloy = {
  PARENT: [exports.genericTank],
  LABEL: "Alloy",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.5,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.1,
  },
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [10, 8, 0, 0, 175, 0],
        TYPE: exports.bansheeTurret,
      },
      {
        POSITION: [10, 8, 0, 120, 175, 0],
        TYPE: exports.bansheeTurret,
      },
      {
        POSITION: [10, 8, 0, 240, 175, 0],
        TYPE: exports.bansheeTurret,
      },
    ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 120, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 240, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
  ],
};
exports.governer = {
  PARENT: [exports.genericTank],
  LABEL: "Governer",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.5,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.1,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 120, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 240, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 60, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.superReload]),
        TYPE: exports.minion,
        STAT_CALCULATOR: gunCalcNames.drone,
        MAX_CHILDREN: 2,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 60, 0],
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 180, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.superReload]),
        TYPE: exports.minion,
        STAT_CALCULATOR: gunCalcNames.drone,
        MAX_CHILDREN: 2,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 180, 0],
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 300, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.superReload]),
        TYPE: exports.minion,
        STAT_CALCULATOR: gunCalcNames.drone,
        MAX_CHILDREN: 2,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 300, 0],
    },
  ],
};
exports.general = {
  PARENT: [exports.genericTank],
  LABEL: "General",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.5,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.1,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 45, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 135, 1 / 4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -135, 2 / 4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },

    {
      POSITION: [7, 7.5, 0.6, 7, 0, -45, 3 / 4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
  ],
};
exports.overclocker = {
  PARENT: [exports.genericTank],
  LABEL: "Overclocker",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.5,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.1,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.autoSwarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 120, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.autoSwarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 240, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.autoSwarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.autoDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.autoDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.autoDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
  ],
};
exports.regulator = {
  PARENT: [exports.genericTank],
  LABEL: "Regulator",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.5,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.1,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 4, 0, 0 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 4, 120, 2 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 4, 240, 4 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, -4, 0, 1 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 120, 3 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 240, 5 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
  ],
};
exports.autoCommander = makeAuto(exports.commander)
exports.autoover = makeAuto(exports.overseer);

exports.overgunner = {
  PARENT: [exports.genericTank],
  LABEL: "Overgunner",
  DANGER: 7,
  STAT_NAMES: statnames.generic,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    SPEED: base.SPEED * 0.9,
    FOV: base.FOV * 1.1,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 11, 1.2, 8, 0, 125, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 235, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    ...pelletGuns,
  ],
};

exports.cruiser = {
  PARENT: [exports.genericTank],
  LABEL: "Cruiser",
  DANGER: 7,
  FACING_TYPE: "locksFacing",
  STAT_NAMES: statnames.swarm,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.2,
  },
  GUNS: [...cruiserGuns],
};
exports.miniNesterCruiserTurret = {
  PARENT: [exports.auto3Turret, exports.cruiser],
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.halfDamage,
          g.halfDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.halfDamage, g.lesserHealth]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.cruiserdrive = {
  PARENT: [exports.genericTank],
  LABEL: "Clocker",
  DANGER: 7,
  FACING_TYPE: "locksFacing",
  STAT_NAMES: statnames.swarm,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.2,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.autoSwarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.autoSwarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};

exports.lurker = {
  PARENT: [exports.genericTank],
  LABEL: "Lurker",
  INVISIBLE: [0.06, 0.03],
  DANGER: 7,
  // HAS_NO_RECOIL: true,
  FACING_TYPE: "locksFacing",
  STAT_NAMES: statnames.swarm,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.2,
  },
  GUNS: [
    // ...cruiserGuns,
    {
      POSITION: [8, 7.5, 0.6, 7, 4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.doubleSpeed]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [8, 7.5, 0.6, 7, -4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.doubleSpeed]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};

exports.battleship = {
  PARENT: [exports.genericTank],
  LABEL: "Battleship",
  DANGER: 7,
  STAT_NAMES: statnames.swarm,
  FACING_TYPE: "locksFacing",
  BODY: {
    ACCELERATION: base.ACCEL,
    FOV: base.FOV * 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 4, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.battleShip]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 90, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 4, 270, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 270, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.battleShip]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },
  ],
};
exports.warship = {
  PARENT: [exports.genericTank],
  LABEL: "Warship",
  DANGER: 7,
  STAT_NAMES: statnames.swarm,
  FACING_TYPE: "locksFacing",
  BODY: {
    ACCELERATION: base.ACCEL,
    FOV: base.FOV * 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 4, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.battleShip]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 90, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 4, 270, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 270, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.battleShip]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.battleShip]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 4, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.battleShip]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },
  ],
};
exports.carrier = {
  PARENT: [exports.genericTank],
  LABEL: "Carrier",
  DANGER: 7,
  STAT_NAMES: statnames.swarm,
  FACING_TYPE: "locksFacing",
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.3,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.carrier]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 2, 30, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.carrier]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -2, -30, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.carrier]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};

exports.tanker = {
  PARENT: [exports.genericTank],
  LABEL: "Oil Tanker",
  DANGER: 7,
  STAT_NAMES: statnames.swarm,
  FACING_TYPE: "locksFacing",
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.3,
  },
  GUNS: [
    {
      POSITION: [7, 7.5, 0.6, 7, 3, 30, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.carrier]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -3, -30, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.carrier]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [8, 7.5, 0.6, 7, 2, 15, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.carrier]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [8, 7.5, 0.6, 7, -2, -15, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.carrier]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [9, 7.5, 0.6, 7, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.carrier]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.autocruiser = makeAuto(exports.cruiser, "Auto-Cruiser");
exports.fortress = {
  PARENT: [exports.genericTank],
  LABEL: "Fortress", //'Palisade',
  DANGER: 7,
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 180, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 300, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 9, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 0, 120, 0],
    },
    {
      POSITION: [4, 9, 1.5, 14, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 0, 240, 0],
    },
    {
      POSITION: [4, 9, 1.5, 14, 0, 240, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.Palisade = {
  PARENT: [exports.genericTank],
  LABEL: "Palisade", //'Palisade',
  DANGER: 7,
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.2,
  },
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 360* 0/3 + 60, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 360*0/3 + 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.superReload, g.greaterReload,]),
        TYPE: exports.minion,
        MAX_CHILDREN: 2,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 360*0/3 + 60, 0],
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 360* 1/3 + 60, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 360*1/3 + 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.superReload, g.greaterReload,]),
        TYPE: exports.minion,
        MAX_CHILDREN: 2,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 360*1/3 + 60, 0],
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 360* 2/3 + 60, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 360*2/3 + 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.superReload, g.greaterReload,]),
        TYPE: exports.minion,
        MAX_CHILDREN: 2,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 360*2/3 + 60, 0],
    },
    {
      POSITION: [14, 9, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 9, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 0, 120, 0],
    },
    {
      POSITION: [4, 9, 1.5, 14, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 0, 240, 0],
    },
    {
      POSITION: [4, 9, 1.5, 14, 0, 240, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.shulker = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 6,
    STAT_NAMES: statnames.drone,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.2,
      HEALTH: base.HEALTH * 2,
      RESIST: base.RESIST * 2,
      FOV: base.FOV * 1.1,
    },
    SHAPE: 4,
    MAX_CHILDREN: 2,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5, 12, 1.2, 2, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.sunchip, g.superHealth, g.superSpeed, g.halfReload, g.superPenetration, g.superHealth,]),
          TYPE: [exports.sunchip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 1, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.superRecoil, g.superRecoil, g.superRecoil, g.minorRange, g.minorRange, g.minorRange, g.superReload, g.superReload,]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    ],
  },
  1,
  "Shulker"
);
exports.underseer = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 6,
    STAT_NAMES: statnames.drone,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.9,
      FOV: base.FOV * 1.1,
    },
    SHAPE: 4,
    MAX_CHILDREN: 20,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5, 12, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.sunchip]),
          TYPE: [exports.sunchip],
          AUTOFIRE: true,
          MAX_CHILDREN: 5,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  2,
  "Underseer"
);
exports.polyseer = {
  PARENT: [exports.genericTank],
  LABEL: "Polyseer",
  DANGER: 7,
  STAT_NAMES: statnames.drone,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    SPEED: base.SPEED * 0.9,
    FOV: base.FOV * 1.1,
  },
  SHAPE: 4,
  MAX_CHILDREN: 10,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4, 8, 1.2, 8, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.doubleSize,
          g.lesserDamage,
          g.lesserHealth,
          g.lesserReload,
        ]),
        TYPE: [exports.squareDrone, { COLOR: 13 }],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [4, 8, 1.2, 8, 0, 270, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.doubleSize, g.lesserDamage]),
        TYPE: [exports.triangleDrone],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};

exports.polyFear = {
  PARENT: [exports.genericTank],
  LABEL: "Poly Fear",
  SHAPE: 4,

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4, 8, 1.2, 8, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.doubleSize,
          g.lesserDamage,
          g.lesserHealth,
          g.lesserReload,
        ]),
        TYPE: [exports.squareDrone],
        MAX_CHILDREN: 6,

        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [4, 8, 1.2, 8, 0, 270, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.doubleSize, g.lesserDamage]),
        TYPE: [exports.triangleDrone],
        MAX_CHILDREN: 6,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.autoPolyFear = makeAuto(exports.polyFear);
exports.shadowShaper = {
  PARENT: [exports.genericTank],
  LABEL: "Shadow Shaper",
  DANGER: 6,
  INVISIBLE: [0.006, 0.003],
  STAT_NAMES: statnames.drone,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    SPEED: base.SPEED * 0.9,
    FOV: base.FOV * 1.1,
  },
  SHAPE: 4,
  MAX_CHILDREN: 10,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4, 8, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.doubleSize,
          g.lesserDamage,
          g.lesserHealth,
          g.lesserReload,
        ]),
        TYPE: [exports.stealthedSquareDrone],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [4, 8, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.doubleSize, g.lesserDamage]),
        TYPE: [exports.stealthedTriangleDrone],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.underdrive = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.drone,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.9,
      FOV: base.FOV * 1.1,
    },
    SHAPE: 4,
    MAX_CHILDREN: 20,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [9, 0, 0, 0, 360, 1],
        TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5, 12, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.sunchip]),
          TYPE: [exports.autoSunchip],
          AUTOFIRE: true,
          MAX_CHILDREN: 5,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  2,
  "Underdrive"
);
exports.necromancer = {
  PARENT: [exports.genericTank],
  LABEL: "Necromancer",
  DANGER: 6,
  STAT_NAMES: statnames.necro,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.15,
  },
  SHAPE: 4,

  MAX_CHILDREN: 40,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 12, 1.2, 8, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip]),
        TYPE: [exports.sunchip],
        AUTOFIRE: true,
        MAX_CHILDREN: 5,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
      },
    },
    {
      POSITION: [5, 12, 1.2, 8, 0, 270, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip]),
        TYPE: [exports.sunchip],
        AUTOFIRE: true,
        MAX_CHILDREN: 5,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
      },
    },
    {
      POSITION: [5, 12, 1.2, 8, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip]),
        TYPE: [exports.sunchip],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 5,
        STAT_CALCULATOR: gunCalcNames.necro,
      },
    },
    {
      POSITION: [5, 12, 1.2, 8, 0, 180, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip]),
        TYPE: [exports.sunchip],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 5,
        STAT_CALCULATOR: gunCalcNames.necro,
      },
    },
  ],
};
exports.polymancer = {
  PARENT: [exports.genericTank],
  LABEL: "Polymancer",
  DANGER: 6,
  STAT_NAMES: statnames.drone,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.15,
  },
  SHAPE: 4,

  MAX_CHILDREN: 10,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4, 8, 1.2, 8, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.doubleSize,
          g.lesserDamage,
          g.lesserHealth,
          g.lesserReload,
        ]),
        TYPE: [exports.squareDrone],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [4, 8, 1.2, 8, 0, 270, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.doubleSize, g.lesserDamage]),
        TYPE: [exports.triangleDrone],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [4, 8, 1.2, 8, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.doubleSize,
          g.greaterSize,
          g.lesserDamage,
          g.greaterHealth,
          g.greaterReload,
        ]),
        TYPE: [exports.pentagonDrone],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 4,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [4, 8, 1.2, 8, 0, 180, 1.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.doubleSize,
          g.greaterSize,
          g.lesserStats,
          g.halfSpeed,
          g.superHealth,
          g.superHealth,
          g.greaterHealth,
          g.superReload,
        ]),
        TYPE: [exports.hexagonDrone, { DRAW_HEALTH: true, GROWTH_FACTOR: 3 }],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 1,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};

exports.maleficitor = {
  PARENT: [exports.genericTank],
  LABEL: "Maleficitor",
  DANGER: 7,
  STAT_NAMES: statnames.necro,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.15,
  },
  SHAPE: 4,
  MAX_CHILDREN: 20,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip]),
        TYPE: exports.stealthedSunchip,
        AUTOFIRE: true,
        MAX_CHILDREN: 10,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
      },
    },
  ],
};

exports.polyTyrant = {
  PARENT: [exports.genericTank],
  LABEL: "Poly Tyrant",
  DANGER: 7,
  STAT_NAMES: statnames.drone,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.15,
  },
  SHAPE: 4,
  MAX_CHILDREN: 1,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4, 13, 1.2, 8, 0, 0, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.lesserStats,
          g.greaterPenetration,
          g.superHealth,
          g.superHealth,
          g.minorSpeed,
          g.superHealth,
          g.superHealth,
          g.superReload,
          g.superReload,
          g.lesserDamage,
          g.lesserSpeed,
        ]),
        TYPE: exports.septagonDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.factory = {
  PARENT: [exports.genericTank],
  LABEL: "Factory",
  DANGER: 7,
  STAT_NAMES: statnames.drone,
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: 1.2,
  },
  MAX_CHILDREN: 6,
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory]),
        TYPE: exports.minion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
};
exports.animator = {
  PARENT: [exports.genericTank],
  LABEL: "Animator",
  DANGER: 7,
  STAT_NAMES: statnames.drone,
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: 1.2,
  },
  MAX_CHILDREN: 4,
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5.4, 13, 1, 10.5, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory, 
          g.halfDamage, 
          g.superHealth,
          g.superReload,
          g.superReload,
          ]),
        TYPE: [exports.pounderMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      },
    },

    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [2.4, 16, 1, 15.5, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.halfDamage,
          g.superHealth,
          g.lesserSize,
          g.superReload,
          g.superReload,
        ]),
        TYPE: [exports.flankGuardMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      },
    },

    {
      POSITION: [4.4, 16, 1, 8, 0, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.halfDamage,
          g.superHealth,
          g.lesserSize,
          g.superReload,
          g.superReload,
        ]),
        TYPE: [exports.trapperMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      },
    },
  ],
};
exports.reanimator = {
  PARENT: [exports.genericTank],
  LABEL: "Reanimator",
  DANGER: 7,
  STAT_NAMES: statnames.drone,
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: 1.2,
  },
  MAX_CHILDREN: 4,
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5.4, 13, 1, 10.5, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory, g.halfDamage, g.superHealth]),
        TYPE: [exports.pounderMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 3,
        SYNCS_SKILLS: true,
      },
    },

    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [2.4, 16, 1, 15.5, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.halfDamage,
          g.superHealth,
          g.lesserSize,
        ]),
        TYPE: [exports.boosterMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 3,
        SYNCS_SKILLS: true,
      },
    },

    {
      POSITION: [4.4, 16, 1, 8, 0, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.halfDamage,
          g.superHealth,
          g.lesserSize,
        ]),
        TYPE: [exports.smasherMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 3,
        SYNCS_SKILLS: true,
      },
    },
  ],
};
exports.inffactory = {
  PARENT: [exports.factory],
  LABEL: "Infinite Factory",
  DANGER: 7,
  COLOR: 36,
  MAX_CHILDREN: 0,
};

exports.animator.SKILL_CAP = [9, 9, smshskl, 9, 0, 9, 9, 9, 9, 9];
exports.spawner = {
  PARENT: [exports.genericTank],
  LABEL: "Spawner",
  DANGER: 7,
  STAT_NAMES: statnames.drone,
  BODY: {
    FOV: 1.2,
  },
  MAX_CHILDREN: 4,
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner]),
        TYPE: exports.minion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.hardshellspawner = {
  PARENT: [exports.genericTank],
  LABEL: "Hardshell Spawner",
  DANGER: 7,
  BODY: {
    FOV: 1.2,
  },
  MAX_CHILDREN: 3,
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 15.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [1.2, 16.5, 1, 14.8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.cheese,
          g.halfStats,
          g.lesserReload,
          g.lesserReload,
          g.doubleHealth,
          g.doublePenetration,
        ]),
        TYPE: exports.smasherMinion,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 16.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.autospawner = makeAuto(exports.spawner);
exports.machine = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Machine Gun",
  GUNS: [...machineGun],
};
exports.autoaetherMGun = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "auto aether Machine Gun",
  GUNS: [
    {
      POSITION: [12, 10, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.minorRecoil, g.mach]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.autoTurret],
    },
    {
      POSITION: [18, -5, 30, 0, 360, 1],
      TYPE: exports.machine3Turret,
    },
    {
      POSITION: [18, -5, -30, 0, 360, 1],
      TYPE: exports.machine3Turret,
    },
  ],
};
exports.spitterArchived = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Spitter",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        STAT_CALCULATOR: gunCalcNames.thruster,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.mach,
          g.doubleRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [10, 12, 0.8, 8, 0, 0, 0.5],
      PROPERTIES: {
        NEGATIVE_RECOIL: true,
        STAT_CALCULATOR: gunCalcNames.thruster,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.mach,
          g.doubleRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.gatling = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Gatling Gun",
  BODY: {
    ACCELERATION: base.ACCEL * 0.8,
    FOV: base.FOV * 1.2,
  },
  GUNS: [...gatlingGun],
};
exports.autogatling = makeAuto(exports.gatling, "Auto-Gatling");
exports.blaster = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Blaster",
  GUNS: [...blasterGun],
};

exports.spray = {
  PARENT: [exports.genericTank],
  LABEL: "Sprayer",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [23, 7, 1, 0, 0, 0, 0],

      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.lowpower,
          g.lesserDamage,
          g.greaterReload,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    ...machineGun,
  ],
};

exports.blazer = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Blazer",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [23, 10.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.pound,

          g.lowpower,
          g.halfDamage,
          g.greaterReload,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    ...blasterGun,
  ],
};
exports.focal = {
  PARENT: [exports.genericTank],
  LABEL: "Focal",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.8,
    FOV: base.FOV * 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [26, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.sniper,
          g.lowpower,
          g.greaterReload,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    ...gatlingGun,
  ],
};
exports.atomizer = {
  PARENT: [exports.genericTank],
  LABEL: "Atomizer",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X  ***/
      POSITION: [24, 1.25, 8, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.puregunner,
          g.lesserDamage,
          g.superSize,
          g.greaterSpray,
          g.halfReload,
          g.lesserRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    ...machineGun,
  ],
};
exports.redistributor = {
  PARENT: [exports.genericTank],
  LABEL: "Redistributor",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [26, 5, 1.4, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.lowpower,
          g.lesserDamage,
          g.greaterReload,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [23, 7, 1.4, 0, 0, 0, 0.15],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.lowpower,
          g.lesserDamage,
          g.doubleReload,
          g.minorRecoil,
          g.greaterStats,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    ...machineGun,
  ],
};

exports.phoenix = {
  PARENT: [exports.genericTank],
  LABEL: "Phoenix",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [23, 7, 1, 0, 0, 0, 0],

      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.lowpower,
          g.lesserDamage,
          g.greaterReload,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 10, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mach]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    ...birdGuns,
  ],
};

exports.mini = {
  PARENT: [exports.genericTank],
  LABEL: "Minigun",
  DANGER: 7,
  BODY: {
    FOV: 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, 0, 0, 0.333],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 0, 0.667],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.automini = makeAuto(exports.mini);
exports.vulture = {
  PARENT: [exports.genericTank],
  LABEL: "Vulture",
  DANGER: 7,
  BODY: {
    FOV: 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 7.1, -1.6, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.trifront,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    {
      POSITION: [20, 7.2, -1.8, 0, 0, 0, 0.333],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.trifront,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    {
      POSITION: [18, 7.3, -2, 0, 0, 0, 0.667],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.trifront,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    ...birdGuns,
  ],
};
exports.autovulture = makeAuto(exports.vulture);
exports.condor = {
  PARENT: [exports.genericTank],
  LABEL: "Condor",
  DANGER: 8,
  BODY: {
    DAMAGE: base.DAMAGE * 0.75,
    FOV: 1.2,
  },
  GUNS: [
    {
      POSITION: [14.5, 7.5, 0.6, 0, 5.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minorRecoil,
          g.gunner,
          g.halfSize,
          g.lesserDamage,
          g.bitLessDamage,
          g.lesserReload,
          g.greaterSpeed
        ]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    {
      POSITION: [14.5, 7.5, 0.6, 0, -5.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minorRecoil,
          g.gunner,
          g.halfSize,
          g.lesserDamage,
          g.bitLessDamage,//cock and ball
          g.lesserReload,//JJ WHAT THE FUQ
          g.greaterSpeed
        ]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 7.1, -1.6, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.trifront,
          g.lesserHealth,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    {
      POSITION: [20, 7.2, -1.8, 0, 0, 0, 0.333],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.trifront,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    {
      POSITION: [18, 7.3, -2, 0, 0, 0, 0.667],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.trifront,
          g.lesserHealth,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    ...condorGuns,
  ],
};
exports.megagun = {
  PARENT: [exports.genericTank],
  LABEL: "Mega-gun",
  DANGER: 7,
  BODY: {
    FOV: 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [23.5, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.pound,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20.5, 12, 1, 0, 0, 0, 0.333],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.pound,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17.5, 12, 1, 0, 0, 0, 0.667],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.pound,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.stream = {
  PARENT: [exports.genericTank],
  LABEL: "Streamliner",
  DANGER: 7,
  BODY: {
    FOV: 1.3,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [25, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.stream]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [23, 8, 1, 0, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.stream]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [21, 8, 1, 0, 0, 0, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.stream]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 0, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.stream]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17, 8, 1, 0, 0, 0, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.stream]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.cropduster = makeHybrid(exports.mini, "Crop Duster");
exports.pound = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.8,
  },
  LABEL: "Pounder",
  GUNS: [...pounderGun],
};

exports.star = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    BODY: {
      SPEED: base.SPEED * 1.1,
    },
    GUNS: [...pounderGun],
  },
  3,
  "Star"
);
exports.neutronStar = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    BODY: {
      SPEED: base.SPEED * 1.1,
    },
    GUNS: [...destroyerGun],
  },
  3,
  "Neutron Star"
);
exports.pulsar = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      FOV: base.FOV * 1.35,
    },
    GUNS: [...hunterGuns],
  },
  3,
  "Pulsar"
);
exports.autoStar = makeAuto(exports.star);
exports.eagle = {
  PARENT: [exports.genericTank],
  LABEL: "Eagle",
  BODY: {
    ACCELERATION: base.ACCEL * 0.8,
  },
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    ...birdGuns,
  ],
};
exports.destroy = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
  },
  LABEL: "Destroyer",
  GUNS: [...destroyerGun],
};
exports.dualdestroy = {
  PARENT: [exports.genericTank],
  LABEL: "Dual Destroyer",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
  },
  RESET_UPGRADES: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 15, 0, 5, -8, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 15, 0, 5, 8, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 15, 2, 0, 0, 0, 0],
    },
  ],
};
exports.minielite_destroyer = makeMulti(
  {
    PARENT: [exports.genericTank],
    FACING_TYPE: "autospin",
    SHAPE: 3,
    SIZE: 15,
    COLOR: 5,
    BODY: {
      // def
      HEALTH: base.HEALTH * 1.5,
      DAMAGE: base.DAMAGE * 1.5,
      PENETRATION: base.PENETRATION * 1.5,
      REGEN: base.REGEN * 1.5,
      FOV: base.FOV * 1.25,
      DENSITY: base.DENSITY * 1.5,
      PUSHABILITY: 0.5,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5, 16, 1, 6, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.pound,
            g.destroy,
            g.anni,
            g.greaterHealth,
            g.greaterPenetration,
            g.bitmoreDamage,
          ]),
          TYPE: exports.bullet,
          LABEL: "Devastator",
        },
      },
    ],
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [11, 0, 0, 0, 360, 1],
        TYPE: [exports.auto4Turret, { INDEPENDENT: true, COLOR: 5 }],
      },
    ],
  },
  3,
  "Mini Elite Destroyer"
);
exports.obliterator = {
  PARENT: [exports.genericTank],
  LABEL: "Obliterator",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    SPEED: base.SPEED * 0.9,
    FOV: base.FOV * 1.25,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.sniper,
          g.hunter,
          g.halfDamage,
          g.greaterPenetration,
          g.halfReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 14.55, 1, 0, 0, 0, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.sniper,
          g.destroy,
          g.hunter,
          g.greaterPenetration,
          g.halfReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 17.1, 1, 0, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.sniper,
          g.destroy,
          g.hunter,
          g.greaterDamage,
          g.greaterPenetration,
          g.halfReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.decimate = {
  PARENT: [exports.genericTank],
  LABEL: "Decimator",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    SPEED: base.SPEED * 0.9,
    FOV: base.FOV * 1.25,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.sniper,
          g.hunter,
          g.halfDamage,
          g.greaterPenetration,
          g.halfReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 14.55, 1, 0, 0, 0, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.sniper,
          g.destroy,
          g.hunter,
          g.greaterPenetration,
          g.halfReload,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.eviscerate = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
  },
  LABEL: "Eviscerator",
  GUNS: [...sideGuns, ...destroyerGun],
};
exports.homer = {//HOMER SIMPSON??
  PARENT: [exports.genericTank],
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
  },
  LABEL: "Seeker",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 8.5, 0.6, 5, 4.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [10, 8.5, 0.6, 5, -4.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.terminate = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
  },
  LABEL: "Retaliator",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 14.55, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.halfReload,
          g.lesserReload,
          g.greaterRange,
        ]),
        TYPE: exports.bullet,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [20, 20, 0.001, 0, 0, 0, 0],
    },
  ],
};
exports.terminate.SKILL_CAP = [
  0, //reload
  12, //Penetration
  12, //bullet hp
  12, //bullet dmg
  12, //bullet spd
  9, //shield
  9, //body dmg
  9, // body hp
  9, //shield regen
  9, //body speed
];
exports.autodestroy = makeAuto(exports.destroy);
exports.minidamagedArenaCloser = {
  PARENT: [exports.genericTank],
  SIZE: 13,
  LABEL: "Mini Damaged Arena Closer",
  LAYER: 75,
  BODY: {
    SPEED: base.SPEED * 1.35,
    DENSITY: 0.3,
    ACCELERATION: base.ACCEL * 2,
      PUSHABILITY: 0.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.greaterHealth,
          g.lesserReload,
          g.minorRecoil,
          g.minorRecoil,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.anni = {
  PARENT: [exports.genericTank],
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
  },
  LABEL: "Annihilator",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20.5, 19.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.anni]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.magicmissiletest = {
  PARENT: [exports.genericTank],
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
  },
  LABEL: "Magic Missile Test",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20.5, 19.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.anni]),
        TYPE: exports.baltylaMagicMissile,
      },
    },
  ],
};
exports.magicminigun = {
  PARENT: [exports.genericTank],
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
  },
  LABEL: "Magic Minigun",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20.5, 12, 1.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.mach,
          g.greaterSpeed,
          g.superSpray,
          g.greaterSize,
          g.superSpray,
          g.greaterSize,
          g.superSpray,
          g.greaterSpeed,
          g.greaterSpeed,
          g.halfReload,
        ]),
        TYPE: exports.bulletDigon,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20.5, 12, 1.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.mach,
          g.greaterSpeed,
          g.superSpray,
          g.greaterSize,
          g.superSpray,
          g.greaterSize,
          g.superSpray,
          g.greaterSpeed,
          g.greaterSpeed,
          g.halfReload,
        ]),
        TYPE: exports.bulletDigon,
      },
    },
  ],
};
exports.nuhuh = {
  PARENT: [exports.genericTank],
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
  },
  LABEL: "No",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 10, 10, 0, 0, 0, 0],
    },
    {
      POSITION: [20, 100, 0, 10, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.uberHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.anniop = {
  PARENT: [exports.genericTank],
  BODY: {
    ACCELERATION: base.ACCEL,
  },
  LABEL: "DEATH",
  HAS_NO_RECOIL: true,
  DANGER: 0,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20.5, 19.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.uberDamage,
          g.uberReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.hybrid = makeHybrid(exports.destroy, "Hybrid");
exports.syphon = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
  },
  LABEL: "Syphon",
  GUNS: [
    ...destroyerGun,
    {
      POSITION: [13, 15, 1.5, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.greaterSize]),
        MAX_CHILDREN: 4,
        TYPE: exports.thrasherDrone,
      },
    },
    {
      POSITION: [15, 15, 0.8, 0, 0, 180, 0],
    },
  ],
};
exports.swarmshot = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Ripper",
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
  },
  GUNS: [
    ...ripperGun,
    {
      POSITION: [12, 8, -2, 11, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.shotgun,
          g.halfStats,
          g.halfReload,
          g.halfReload,
        ]),
        TYPE: [exports.uncontrolledSwarmDrone, { BODY: { RANGE: 0 } }],
      },
    },
    {
      POSITION: [8, 15, -1.3, 4, 0, 0, 0],
    },
  ],
};
exports.shrapshot = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Shrapnel",
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
  },
  GUNS: [
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    ...shrapnelGun,
    {
      POSITION: [15, 14, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.shotgun, g.halfReload]),
        TYPE: [exports.trap, { BODY: { RANGE: 0 } }],
      },
    },
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8, 6.5, 2, 8, 0, 0, 0],
    },
    {
      POSITION: [8, 14, -1.3, 4, 0, 0, 0],
    },
  ],
};

exports.shotgun = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Shotgun",
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.25,
  },
  GUNS: [
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    ...shotGun,
    {
      POSITION: [15, 14, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: [exports.bullet, { BODY: { RANGE: 0 } }],
      },
    },
    {
      POSITION: [8, 14, -1.3, 4, 0, 0, 0],
    },
  ],
};

exports.shotguh = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Shotguh",
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.25,
  },
  GUNS: [
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    ...shotGun,
    {
      POSITION: [15, 14, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.shotgun]),
        TYPE: [exports.bullet, { BODY: { RANGE: 0 } }],
      },
    },
    ...launcherGun,
    {
      POSITION: [8, 14, -1.3, 4, 0, 0, 0],
    },
  ],
};
exports.dualshotgun = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Dual Shotgun",
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.25,
  },
  GUNS: [
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [15, 12, 1, 5, 8, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.shotgun, g.greaterDamage]),
        TYPE: [exports.bullet],
      },
    },
    {
      POSITION: [15, 12, 1, 5, 8, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.greaterSpray,
          g.greaterHealth,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet],
      },
    },
    {
      POSITION: [15, 12, 1, 5, 8, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.greaterSpray,
          g.greaterHealth,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet],
      },
    },
    {
      POSITION: [15, 12, 1, 5, 8, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.greaterSpray,
          g.greaterHealth,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet],
      },
    },
    {
      POSITION: [15, 12, 1, 5, 8, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.greaterSpray,
          g.greaterHealth,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet],
      },
    },
    {
      POSITION: [15, 12, 1, 5, -8, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.greaterHealth,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet],
      },
    },
    {
      POSITION: [15, 12, 1, 5, -8, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.greaterSpray,
          g.greaterHealth,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet],
      },
    },
    {
      POSITION: [15, 12, 1, 5, -8, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.greaterSpray,
          g.greaterHealth,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet],
      },
    },
    {
      POSITION: [15, 12, 1, 5, -8, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.greaterSpray,
          g.greaterHealth,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet],
      },
    },
    {
      POSITION: [15, 12, 1, 5, -8, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.greaterSpray,
          g.greaterHealth,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet],
      },
    },
    {
      POSITION: [8, 12.5, -1.3, 5, -8, 0, 0],
    },
    {
      POSITION: [8, 12.5, -1.3, 5, 8, 0, 0],
    },
    {
      POSITION: [5, 15, 2, 0, 0, 0, 0],
    },
  ],
};
exports.assort = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Assortment",
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    DAMAGE: base.ACCEL * 1.4,
    PENETRATION: base.ACCEL * 1.1,
    RELOAD: base.ACCEL * 1.2,
  },
  GUNS: [
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */ {
      POSITION: [4, 3, 1, 11, -3, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.superSize,
          g.greaterHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [4, 3, 1, 11, 3, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleHealth,
          g.doubleSpray,
          g.superSize,
          g.greaterHealth,
        ]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [4, 4, 1, 13, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.superHealth,
          g.doubleSpray,
          g.superSize,
          g.greaterHealth,
        ]),
        TYPE: exports.setBlock,
      },
    },
    {
      POSITION: [1, 4, 1, 12, -1, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleRange,
          g.doubleSpray,
          g.superSize,
          g.greaterHealth,
        ]),
        TYPE: exports.hive,
      },
    },
    {
      POSITION: [1, 4, 1, 11, 1, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.superRange,
          g.doubleSpray,
          g.superSize,
          g.greaterHealth,
        ]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [1, 3, 1, 13, -1, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleDamage,
          g.doubleSpray,
          g.superSize,
          g.greaterHealth,
        ]),
        TYPE: exports.boomrang,
      },
    },
    {
      POSITION: [1, 3, 1, 13, 1, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.superDamage,
          g.doubleSpray,
          g.superSize,
          g.greaterHealth,
        ]),
        TYPE: exports.missile,
      },
    },
    {
      POSITION: [1, 2, 1, 13, 2, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.superSpeed,
          g.doubleSpray,
          g.superSize,
          g.greaterHealth,
        ]),
        TYPE: [exports.drone, { INDEPENDENT: true }],
        MAX_CHILDREN: 15,
      },
    },
    {
      POSITION: [1, 2, 1, 13, -2, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpeed,
          g.doubleSpray,
          g.superSize,
          g.greaterHealth,
        ]),
        TYPE: exports.beeDrone,
      },
    },
    {
      POSITION: [13, 12, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.shotgun, g.doubleSpray]),
        TYPE: [exports.bullet, { RANGE: 0 }],
      },
    },
    {
      POSITION: [8, 14.5, -1.4, 4, 0, 0, 0],
    },
  ],
};
exports.minielite_gunner = {
  PARENT: [exports.genericTank],
  SHAPE: 3,
  SIZE: 15,
  COLOR: 5,
  LABEL: "Mini Elite Gunner",
  BODY: {
    // def
    HEALTH: base.HEALTH * 1.25,
    DAMAGE: base.DAMAGE * 1.1,
    PENETRATION: base.PENETRATION * 1.5,
    SHIELD: base.SHIELD * 1.25,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 16, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [4, 16, 1.5, 14, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.pound]),
        TYPE: [exports.bosspillbox, { INDEPENDENT: true }],
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 14, -2, 2, 0, 60, 0],
    },
    {
      POSITION: [6, 14, -2, 2, 0, 300, 0],
    },
  ],

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 8, 0, 60, 180, 0],
      TYPE: [exports.miniEliteGunnerTurret],
    },
    {
      POSITION: [14, 8, 0, 300, 180, 0],
      TYPE: [exports.miniEliteGunnerTurret],
    },
  ],
};
exports.trapper = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Trapper",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.pen = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Pen",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ]
};
exports.inkpod = makeHybrid(exports.pen, "Ink Pod")
exports.outpost = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Outpost",
  GUNS: [
    ...sideGuns,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ]
};
exports.rampart = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Rampart",
  GUNS: [
    ...extraSideGuns,
    ...sideGuns,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ]
};
exports.watchtower = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Watchtower",
  GUNS: [
    ...beeGuns,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ]
};
exports.beacon = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Beacon",
  GUNS: [
    ...beeGuns,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    ...cruiserGuns
  ]
};


exports.inkfountain = makeMulti({
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 60, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ]
},
3,
"Ink Fountain"
);
exports.penception = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Pen-Ception",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
  TURRETS: [
      {
        POSITION: [12, 0, 0, 0, 360, 1],
        TYPE: [exports.penTurret, { INDEPENDENT: true, COLOR: 5 }],
      },]
};
exports.anvil = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Anvil",
  GUNS: [
    {
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [23.5, 10, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.bitmoreSize, g.bitLessSize]),
    TYPE: exports.bullet,
  },
},
    ...builderGun,
  ]
};
exports.demolitionist = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Demolitionist",
  GUNS: [
    {
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [23.5, 10, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.bitmoreSize, g.bitLessSize]),
    TYPE: exports.grenadierMissile,
  },
},
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 12, 1.1, 18, 0, 0, 0],
      PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.trap, g.block, g.greaterHealth]),
        TYPE: exports.wreckerSetBlock,
      },
    },
  ]
};
exports.monolith = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Monolith",
  GUNS: [
    {
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [23, 14.55, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
    TYPE: exports.bullet,
  },
},

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 18, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 18, 1.2, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.construct,
          g.greaterHealth,
        ]),
        TYPE: exports.setBlock,
      },
    },
  ]
};
exports.overpen = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Overpen",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 11, 1.2, 8, 0, 125, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 235, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
  ]
};
exports.lordpen = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Lordpen",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.bitmoreHealth]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.bitmoreDamage, g.bitmoreHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 11, 1.2, 8, 0, 125, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 235, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 55, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, -55, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 2,
      },
    },
  ]
};
exports.inker = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Inker",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.autoBullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.mechtrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ]
};
exports.printer = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Printer",
  STAT_NAMES: statnames.trap,
  BODY: {
    FOV: 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [27, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [6, 7, 1.35, 19.6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.halfDamage,
          g.halfReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21.5, 8, 1, 0, 0, 0, 1/3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [4.5, 7, 1.35, 16.6, 0, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.halfDamage,
          g.halfReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16.5, 8, 1, 0, 0, 0, 2/3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [3.2, 7, 1.35, 13.6, 0, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.halfDamage,
          g.halfReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.quill = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Quill",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 5.5, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, -5.5, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ]
};
exports.plume = makeMulti({
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 5.5, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, -5.5, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ]
},
2,
"Plume"
);
exports.trident = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Trident",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, -2, 5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, -2, 5.5, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 13, 5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, -2, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, -2, -5.5, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 13, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ]
};
exports.yes = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "FYM 'Nuh Uh'",
  BODY: { FOV: 8 },
  STAT_NAMES: statnames.trap,
  GUNS: [
    {
      POSITION: [3, 10, 1.7, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.uberHealth,
          g.superSize,
          g.superSize,
          g.superSize,
          g.superSize,
        ]),
        TYPE: exports.setBlock,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.breaker = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Breaker",
  SPECIAL_EFFECT: "noDomination",
  STAT_NAMES: statnames.trap,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.breakerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.breakerTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.burster = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Burster",
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "noDomination",
  TURRETS: [],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bursterSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.bursterTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.ogburster = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "og Burster",
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "noDomination",
  TURRETS: [],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bursterSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.ogbursterTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.landminelayer = makeMulti(
{
  PARENT: [exports.genericTank],
  DANGER: 7,
  INVISIBLE: [0.09, 0.03],
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "noDomination",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.breakerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.doubleRange, g.doubleRange, g.doubleRange, g.bitmoreRange, g.doubleReload, g.doubleReload, g.doubleReload, g.doubleSize]),
        TYPE: exports.LandmineTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8.5, 1, 0, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 8.5, 1, 0, 0, 0, 0],
    },

  ],
},
10,
"Landmine Layer",
);
exports.cracker = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Cracker",
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "noDomination",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.breakerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.mechBreakerTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.shatterer = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Shatterer",
  SPECIAL_EFFECT: "noDomination",
  STAT_NAMES: statnames.trap,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.flingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.breakerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.lesserDamage, g.greaterHealth]),
        TYPE: exports.shattererTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.autobreaker = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Auto-Breaker",
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "noDomination",
  TURRETS: [
    {
      POSITION: [11, 0, 0, 180, 360, 1],
      TYPE: [
        exports.breakerAutoTurret,
        { INDEPENDENT: true, CONTROLLERS: ["nearestDifferentMaster"] },
      ],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.breakerTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.autotrapper = makeAuto(exports.trapper, "Auto-Trapper", {
  type: exports.autoTurret,
});
exports.intercepter = makeAuto(exports.trapper, "Intercepter", {
  type: exports.trapTurret,
});
exports.flinger = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Flinger",
  STAT_NAMES: statnames.trap,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.flingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.lesserDamage, g.greaterHealth]),
        TYPE: exports.flingertrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.stinger = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Stinger",
  STAT_NAMES: statnames.trap,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 120, 360, 1],
      TYPE: [exports.flingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.lesserDamage, g.greaterHealth]),
        TYPE: exports.mechflingtrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};

exports.mech = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Mech",
  STAT_NAMES: statnames.trap,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.mechtrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};

exports.mechanizer = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Mechanizer",
  STAT_NAMES: statnames.trap,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 5, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 5, 0, 120, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 5, 0, 240, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.mechanizerTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.mechanism = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Mechanism",
  STAT_NAMES: statnames.trap,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7, 0, 4, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7, 0, -4, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.mechanismTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.mechanister = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Mechanister",
  STAT_NAMES: statnames.trap,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7, 0, 4, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7, 0, -4, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },

  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.mechanisterTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
        REPAIR_EFFECT: true,
      },
    },
  ],
};
exports.autoMech = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Auto-Mech",
  STAT_NAMES: statnames.trap,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 180, 360, 1],
      TYPE: [
        exports.squareAutoTurret,
        { INDEPENDENT: true, CONTROLLERS: ["nearestDifferentMaster"] },
      ],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.mechtrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.tritrapper = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.trap,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 7, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [3, 7, 1.7, 15, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
  },
  3,
  "Tri-Trapper"
);
exports.REredistributor = {
  PARENT: [exports.autoTurret],
  LABEL: "Redistributor",
  COLOR: 10,
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [26, 5, 1.4, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.mach,
          g.power,
          g.greaterReload,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [23, 7, 1.4, 0, 0, 0, 0.15],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.mach,
          g.power,
          g.greaterReload,
          g.minorRecoil,
          g.greaterStats,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    ...machineGun,
  ],
};
exports.RESkimTurret = {
  PARENT: [exports.auto3Turret],
  LABEL: "",
  COLOR: 10,
  BODY: { FOV: 8 },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 14, 0.6, 16.5, 0, 0, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.missile,
          g.superReload,
        ]),
        TYPE: exports.rogueEternalMissile,
      },
    },
    {
      POSITION: [16, 17, 1.6, 0, 0, 0, 0],
    },
    {
      POSITION: [17, 15, 1.2, 0, 0, 0, 0],
    },
  ],
};
exports.ragnarokgunnerTurret = {
  PARENT: [exports.auto3Turret],
  LABEL: "",
  BODY: { FOV: 8 },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8, 5, 0.6, 0, -7.5, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.power, g.lesserStats]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [8, 5, 0.6, 0, 7.5, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.power, g.lesserStats]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [17, 4, 1, 0, -3.5, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.pound, g.power]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17, 4, 1, 0, 3.5, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.pound, g.power]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.ragnaroksmashbullet = makeAuto(
  exports.smasherBullet,
  "Auto-Smasher Rocket",
  {
    type: exports.autoSmasherTurret,
    size: 11,
  }
);
exports.ragnaroksmasherTurret = {
  PARENT: [exports.auto3Turret],
  LABEL: "",
  BODY: { FOV: 8 },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [3, 12, 0.8, 16.5, 0, 0, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.missile,
          g.superReload,
          g.doubleSpeed,
          g.greaterSpeed,
        ]),
        TYPE: exports.ragnaroksmashbullet,
      },
    },
    {
      POSITION: [17, 13, 1.6, 0, 0, 0, 0],
    },
  ],
};
exports.skimturret = {
  PARENT: [exports.autoBasicTurret],
  LABEL: "", 
  BODY: { FOV: 8 },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.doubleReload,
          g.minorRecoil
        ]),
        TYPE: exports.missile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [17, 15, 1, 0, 0, 0, 0],
    },
  ],
};
exports.skimmerMechTurret = {
  PARENT: [exports.autoTurret],
  BODY: {
    FOV: base.FOV * 1.15,
  },
  LABEL: "Skimmer Mech",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [3, 15, 1, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
        TYPE: exports.autoMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody2,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.hexaSkimmerMechTurretRing = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 1,
  BODY: {
    FOV: 1.1,
  },
  COLOR: 16,
  INDEPENDENT: true,
  TURRETS: [
    {
      POSITION: [3, 11, 0, 0, 360, 1],
      TYPE: exports.skimmerMechTurret,
    },
    {
      POSITION: [3, 11, 0, 60, 360, 1],
      TYPE: exports.skimmerMechTurret,
    },
    {
      POSITION: [3, 11, 0, 120, 360, 1],
      TYPE: exports.skimmerMechTurret,
    },
    {
      POSITION: [3, 11, 0, 180, 360, 1],
      TYPE: exports.skimmerMechTurret,
    },
    {
      POSITION: [3, 11, 0, 240, 360, 1],
      TYPE: exports.skimmerMechTurret,
    },
    {
      POSITION: [3, 11, 0, 300, 360, 1],
      TYPE: exports.skimmerMechTurret,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 12, 1, 9, 0, 30, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, 90, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, 150, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, -150, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, -90, 0],
    },
    {
      POSITION: [1, 12, 1, 9, 0, -30, 0],
    },
  ],
};
exports.SniperTurret = {
  PARENT: [exports.auto3Turret],
  BODY: { FOV: 3 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.lesserDamage,
          g.superReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.minidefender = makeMulti(
  {
    PARENT: [exports.genericTank],
    SHAPE: 3,
    SIZE: 15,
    COLOR: 2,
    FACING_TYPE: "autospin",
    BODY: {
      // def
      ACCELERATION: 1,
      SPEED: 2.5,
      HEALTH: base.HEALTH * 1.75,
      DAMAGE: base.DAMAGE * 1.5,
      PENETRATION: base.PENETRATION * 1.5,
      SHIELD: base.SHIELD * 1.25,
      REGEN: base.REGEN * 2,
      FOV: base.FOV * 1.23,
      DENSITY: base.DENSITY * 1.5,
      PUSHABILITY: 0.5,
      HETERO: 3,
    },
    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [15, 9, 1, 0, 0, 60, 0],
      },
      {
        POSITION: [3, 9.5, 1.7, 13.5, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.pound,
            g.destroy,
            g.superHealth,
            g.greaterPenetration,
            g.greaterSize,
            g.halfSpeed
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [5, 8, 0, 0, 220, 1],
        TYPE: [exports.autoTurret, { INDEPENDENT: false }],
      },
      {
        POSITION: [5, 8, 0, 120, 220, 1],
        TYPE: [exports.autoTurret, { INDEPENDENT: false }],
      },
      {
        POSITION: [5, 8, 0, 240, 220, 1],
        TYPE: [exports.autoTurret, { INDEPENDENT: false }],
      },
      {
        POSITION: [8, 0, 0, 0, 360, 1],
        TYPE: exports.mega3Turret,
      },
    ],
  },
  3,
  "Mini Defender"
);
exports.SteamPunk = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.trap,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [9, 0, 0, 0, 360, 1],
        TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 7, 1, 0, 0, 0, 0],
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [12.5, 7, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [3, 7, 1.7, 15, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap]),
          TYPE: exports.mechtrap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
  },
  3,
  "Steam Punk"
);
exports.demolish = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.trap,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [11, 0, 0, 0, 360, 1],
        TYPE: [exports.breakerSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 7, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [3, 7, 1.7, 15, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap]),
          TYPE: exports.breakerTrap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
  },
  3,
  "Demolitionist"
);
exports.megatrap = {
  PARENT: [exports.genericTank],
  LABEL: "Mega-Trapper",
  STAT_NAMES: statnames.trap,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.1,
  },
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 11.5, 1.7, 13.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.halfReload,
          g.greaterSize,
          g.greaterPenetration,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.stackedMegaTrapper = {
  PARENT: [exports.genericTank],
  LABEL: "Stacked Mega-Trapper",
  STAT_NAMES: statnames.trap,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.1,
  },
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [23, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 11.5, 1.7, 13.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.halfReload,
          g.greaterSize,
          g.greaterPenetration,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4, 11.5, 1.7, 22.5, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.halfReload,
          g.greaterSize,
          g.greaterPenetration,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.Clockwork = {
  PARENT: [exports.genericTank],
  LABEL: "Clockwork",
  STAT_NAMES: statnames.trap,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.1,
  },
  DANGER: 7,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 11.5, 1.7, 13.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.halfReload,
          g.greaterSize,
          g.greaterPenetration,
        ]),
        TYPE: exports.holdtrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.megafling = {
  PARENT: [exports.genericTank],
  LABEL: "Mega-Flinger",
  STAT_NAMES: statnames.trap,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.1,
  },
  DANGER: 7,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.flingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 11.5, 1.7, 13.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.halfReload,
          g.greaterSize,
          g.greaterPenetration,
          g.minorMax,
        ]),
        TYPE: exports.flingertrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.automegatrap = makeAuto(exports.megatrap);
exports.ultratrap = {
  PARENT: [exports.genericTank],
  LABEL: "Ultra-Trapper",
  STAT_NAMES: statnames.trap,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.1,
  },
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [5, 16.6, 1.7, 13.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.anni,
          g.greaterReload,
          g.greaterSize,
          g.greaterDamage,
          g.greaterPenetration,
          g.halfReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.opultratrap = {
  PARENT: [exports.genericTank],
  LABEL: "Old Ultra-Trapper be like:",
  STAT_NAMES: statnames.trap,
  HAS_NO_RECOIL: true,
  BODY: {
    ACCELERATION: base.ACCEL * 5,
    FOV: base.FOV * 2.5,
  },
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [5, 16.6, 1.7, 13.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.anni,
          g.halfReload,
          g.greaterSize,
          g.greaterPenetration,
          g.uberStats,
          g.op,
          g.minorReload,
          g.superSpeed,
        ]),
        TYPE: [
          exports.trap,
          {
            IGNORE_COLLISION: true,
          },
        ],
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.deflect = makeMulti(
  {
    PARENT: [exports.genericTank],
    STAT_NAMES: statnames.trap,
    BODY: {
      ACCELERATION: base.ACCEL * 0.75,
      FOV: base.FOV * 1.1,
    },
    DANGER: 7,
    GUNS: [
      {
        /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 12, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [4, 11.5, 1.7, 13.5, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.pound,
            g.destroy,
            g.halfReload,
            g.greaterSize,
            g.greaterPenetration,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
  },
  3,
  "Deflector"
);
exports.builder = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Builder",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.15,
  },
  GUNS: [...builderGun],
};
exports.assembler = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Assembler",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.15,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [3.5, 15, 0, 0, 360, 1],
      TYPE: [exports.assemblerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 12, 1.1, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.assemblent,
      },
    },
  ],
};
exports.roadblock = {
  PARENT: [exports.genericTank],
  LABEL: "Road Blocker",
  SHAPE: 0,
  DANGER: 6,
  MAX_CHILDREN: 3,
  BODY: {
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED * 0.9,
  },
  GUNS: [
    {
      POSITION: [20, 20, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [20, 20, 2, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.uberHealth,
          g.lesserDamage,
          g.minorSpeed,
          g.superPenetration,
          g.superSize,
          g.halfRange,
        ]),
        TYPE: exports.setBlock,
      },
    },
    {
      POSITION: [10, 10, 1, 22.5, 0, 0, 0],
    },
    {
      POSITION: [5, 5, 1, 25, 0, 0, 0],
    },
    {
      POSITION: [10, 20, 1, 0, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 180, 360, 1],
      TYPE: [
        exports.autoTurret,
        { INDEPENDENT: true, CONTROLLERS: ["nearestDifferentMaster"] },
      ],
    },
  ],
};

exports.wrecker = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Wrecker",
  SPECIAL_EFFECT: "noDomination",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.15,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.breakerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 12, 1.1, 18, 0, 0, 0],
      PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.trap, g.block, g.greaterHealth]),
        TYPE: exports.wreckerSetBlock,
      },
    },
  ],
};
exports.slinger = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Slinger",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.15,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.flingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 12, 1.1, 18, 0, 0, 0],
      PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.trap, g.block, g.greaterHealth]),
        TYPE: exports.bounceblock,
      },
    },
  ],
};

exports.Mastertect = {
  PARENT: [exports.genericTank],
  LABEL: "Master-tect",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 1.1,
  },
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 72, 190, 0],
      TYPE: exports.architectTurret,
    },
    {
      POSITION: [12, 8, 0, 144, 190, 0],
      TYPE: exports.architectTurret,
    },
    {
      POSITION: [12, 8, 0, 216, 190, 0],
      TYPE: exports.architectTurret,
    },
    {
      POSITION: [12, 8, 0, 360, 190, 0],
      TYPE: exports.architectTurret,
    },
    {
      POSITION: [12, 8, 0, -72, 190, 0],
      TYPE: exports.architectTurret,
    },
  ],
};
exports.rebounder = {
  PARENT: [exports.genericTank],
  LABEL: "Rebounder",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 1.1,
  },
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 0, 190, 0],
      TYPE: exports.rebounderTurret,
    },
    {
      POSITION: [12, 8, 0, 120, 190, 0],
      TYPE: exports.rebounderTurret,
    },
    {
      POSITION: [12, 8, 0, 240, 190, 0],
      TYPE: exports.rebounderTurret,
    },
  ],
};
exports.architect = {
  PARENT: [exports.genericTank],
  LABEL: "Architect",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 1.1,
  },
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 0, 190, 0],
      TYPE: exports.architectTurret,
    },
    {
      POSITION: [12, 8, 0, 120, 190, 0],
      TYPE: exports.architectTurret,
    },
    {
      POSITION: [12, 8, 0, 240, 190, 0],
      TYPE: exports.architectTurret,
    },
  ],
};
exports.Castle = {
  PARENT: [exports.genericTank],
  LABEL: "Castle",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 1.1,
  },
  DANGER: 7,
  FACING_TYPE: "autospin",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 0, 0, 0],
      TYPE: exports.architectTurret,
    },
    {
      POSITION: [12, 8, 0, 120, 190, 0],
      TYPE: exports.architectTurret,
    },
    {
      POSITION: [12, 8, 0, -120, 190, 0],
      TYPE: exports.architectTurret,
    },
  ],
};
exports.city = {
  PARENT: [exports.genericTank],
  LABEL: "City",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 1.1,
  },
  DANGER: 7,
  FACING_TYPE: "autospin",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 360*0/5 + 36, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 360*1/5 + 36, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 360*2/5 + 36, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 360*3/5 + 36, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 360*4/5 + 36, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0,  360 * 0/5, 190, 0],
      TYPE: exports.architectTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0,  360 * 1/5, 190, 0],
      TYPE: exports.architectTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0,  360 * 2/5, 190, 0],
      TYPE: exports.architectTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0,  360 * 3/5, 190, 0],
      TYPE: exports.architectTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0,  360 * 4/5, 190, 0],
      TYPE: exports.architectTurret,
    },
  ],
};
exports.warzone = {
  PARENT: [exports.genericTank],
  LABEL: "Warzone",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 1.1,
  },
  DANGER: 7,
  FACING_TYPE: "autospin",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 0, 190, 0],
      TYPE: exports.shellerTurret,
    },
    {
      POSITION: [12, 8, 0, 120, 190, 0],
      TYPE: exports.shellerTurret,
    },
    {
      POSITION: [12, 8, 0, -120, 190, 0],
      TYPE: exports.shellerTurret,
    },
  ],
};
exports.Originator = {
  PARENT: [exports.genericTank],
  LABEL: "Originator",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 1.1,
  },
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 0, 190, 0],
      TYPE: exports.originatorTurret,
    },
    {
      POSITION: [12, 8, 0, 120, 190, 0],
      TYPE: exports.originatorTurret,
    },
    {
      POSITION: [12, 8, 0, 240, 190, 0],
      TYPE: exports.originatorTurret,
    },
  ],
};
exports.constructionist = {
  PARENT: [exports.genericTank],
  LABEL: "Constructionist",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 1.1,
  },
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 0, 190, 0],
      TYPE: exports.constructionistTurret,
    },
    {
      POSITION: [12, 8, 0, 120, 190, 0],
      TYPE: exports.constructionistTurret,
    },
    {
      POSITION: [12, 8, 0, 240, 190, 0],
      TYPE: exports.constructionistTurret,
    },
  ],
};
exports.autoArchitect = makeAuto(exports.architect);
exports.sheller = {
  PARENT: [exports.genericTank],
  LABEL: "Sheller",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 1.1,
  },
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 0, 190, 0],
      TYPE: exports.shellerTurret,
    },
    {
      POSITION: [12, 8, 0, 120, 190, 0],
      TYPE: exports.shellerTurret,
    },
    {
      POSITION: [12, 8, 0, 240, 190, 0],
      TYPE: exports.shellerTurret,
    },
  ],
};
exports.Fragmentor = {
  PARENT: [exports.genericTank],
  LABEL: "Fragmentor",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 1.1,
  },
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 0, 190, 0],
      TYPE: exports.fragmentorTurret,
    },
    {
      POSITION: [12, 8, 0, 120, 190, 0],
      TYPE: exports.fragmentorTurret,
    },
    {
      POSITION: [12, 8, 0, 240, 190, 0],
      TYPE: exports.fragmentorTurret,
    },
  ],
};
exports.bombarder = {
  PARENT: [exports.genericTank],
  LABEL: "Bombarder",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 1.1,
  },
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 0, 190, 0],
      TYPE: exports.bombarderTurret,
    },
    {
      POSITION: [12, 8, 0, 120, 190, 0],
      TYPE: exports.bombarderTurret,
    },
    {
      POSITION: [12, 8, 0, 240, 190, 0],
      TYPE: exports.bombarderTurret,
    },
  ],
};
exports.TOT = {
  PARENT: [exports.genericTank],
  LABEL: "Trilogy of Traps",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 1.1,
  },
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 0, 0, 0, 360, 1],
      TYPE: exports.megaTrapTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 0, 190, 0],
      TYPE: exports.shellerTurret,
    },
    {
      POSITION: [12, 8, 0, 120, 190, 0],
      TYPE: exports.shellerTurret,
    },
    {
      POSITION: [12, 8, 0, 240, 190, 0],
      TYPE: exports.shellerTurret,
    },
  ],
};
exports.hiveminder = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Hive Minder",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.15,
  },

  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  GUNS: [
    {
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [3, 14, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1.3, 18, 0, 0, 0],
    },
    {
      POSITION: [2, 16, 0.8, 20, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.greaterReload]),
        TYPE: exports.hivebox,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
};
exports.engineer = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Engineer",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.15,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [3, 14, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.greaterHealth,
          g.greaterReload,
        ]),
        TYPE: exports.pillbox,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
};
exports.whirlwind = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Whirlwind",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.15,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.trap, g.block, g.greaterHealth]),
        TYPE: exports.boostedpillbox,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [14, 16, 1, 0, 0, 0, 0],
    },
  ],
};
exports.constructer = {
  PARENT: [exports.genericTank],
  LABEL: "Constructor",
  STAT_NAMES: statnames.trap,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.5,
    SPEED: base.SPEED * 0.7,
    FOV: base.FOV * 1.15,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 18, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 18, 1.2, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.construct,
          g.greaterHealth,
        ]),
        TYPE: exports.setBlock,
      },
    },
  ],
};
exports.autobuilder = makeAuto(exports.builder);
exports.autoconstructer = makeAuto(exports.constructer);
exports.conq = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Conqueror",
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 0.8,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 14.55, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.bullet,
      },
    },
    ...builderGun,
  ],
};
exports.bentboomer = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Bent Boomer",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.15,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8, 10, 1, 8, -2, -35, 0],
    },
    {
      POSITION: [8, 10, 1, 8, 2, 35, 0],
    },
    {
      POSITION: [2, 10, 1.3, 16, -2, -35, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.greaterHealth,
          g.boomerang,
        ]),
        TYPE: exports.boomerang,
      },
    },
    {
      POSITION: [2, 10, 1.3, 16, 2, 35, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.greaterHealth,
          g.boomerang,
        ]),
        TYPE: exports.boomerang,
      },
    },
  ],
};
exports.boomer = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Boomer",
  STAT_NAMES: statnames.trap,
  FACING_TYPE: "locksFacing",
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.15,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 10, 1, 14, 0, 0, 0],
    },
    {
      POSITION: [6, 10, -1.5, 7, 0, 0, 0],
    },
    {
      POSITION: [2, 10, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.greaterHealth,
          g.boomerang,
        ]),
        TYPE: exports.boomerang,
      },
    },
  ],
};
exports.artillery = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Artillery",
  GUNS: [...sideGuns, ...pounderGun],
};
exports.beekeeper = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Beekeeper",
  GUNS: [...beeGuns, ...pounderGun],
};

exports.ordnance = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Ordnance",
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    SPEED: base.SPEED * 0.9,
    FOV: base.FOV * 1.25,
  },
  GUNS: [...sideGuns, ...hunterGuns],
};
exports.mortar = {
  PARENT: [exports.genericTank],
  LABEL: "Mortar",
  DANGER: 7,
  GUNS: [...extraSideGuns, ...sideGuns, ...pounderGun],
};
exports.armorPiercer = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Armor Piercer",
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 3.5, 1, 0, 7.25, 10, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.greaterReload,
          g.greaterDamage,
          g.minorRecoil,
        ]),
        TYPE: exports.smasherBullet,
      },
    },
    {
      POSITION: [16, 3.5, 1, 0, -7.25, -10, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.greaterReload,
          g.greaterDamage,
          g.minorRecoil,
        ]),
        TYPE: exports.smasherBullet,
      },
    },
    {
      POSITION: [18, 3.5, 1, 0, 4.25, 10, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.greaterReload,
          g.greaterDamage,
          g.minorRecoil,
        ]),
        TYPE: exports.smasherBullet,
      },
    },
    {
      POSITION: [18, 3.5, 1, 0, -4.25, -10, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.greaterReload,
          g.greaterDamage,
          g.minorRecoil,
        ]),
        TYPE: exports.smasherBullet,
      },
    },
    {
      POSITION: [20, 11.5, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.greaterDamage,
          g.minorRecoil,
        ]),
        TYPE: exports.smasherBullet,
      },
    },
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
  ],
};
exports.minielite_skimmer = {
  PARENT: [exports.genericTank],
  LABEL: "Mini Elite Skimmer",
  COLOR: 2,
  SHAPE: 3,
  SIZE: 15,
  FACING_TYPE: "autospin",
  BODY: {
    // def
    HEALTH: base.HEALTH * 1.25,
    DAMAGE: base.DAMAGE * 1.25,
    PENETRATION: base.PENETRATION * 1.25,
    SHIELD: base.SHIELD * 1.75,
    REGEN: base.REGEN * 1.25,
    FOV: base.FOV * 1.75,
    DENSITY: base.DENSITY * 1.25,
  },
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 5, 0, 60, 170, 0],
      TYPE: exports.skimturret,
    },
    {
      POSITION: [15, 5, 0, 180, 170, 0],
      TYPE: exports.skimturret,
    },
    {
      POSITION: [15, 5, 0, 300, 170, 0],
      TYPE: exports.skimturret,
    },
  ],
};
exports.launcher = {
  PARENT: [exports.genericTank],
  LABEL: "Launcher",
  BODY: {
    ACCELERATION: base.ACCEL * 0.8,
    FOV: base.FOV * 1.2,
  },
  DANGER: 7,
  GUNS: [...launcherGun],
};
exports.grenadier = {
  PARENT: [exports.genericTank],
  LABEL: "Grenadier",
  BODY: {
    ACCELERATION: base.ACCEL * 0.8,
    FOV: base.FOV * 1.2,
  },
  DANGER: 7,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.grenadierSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
  {
    POSITION: [20, 10, 1, , 0, , 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic]),
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 13, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
      TYPE: exports.grenadierMissile,
    },
  }
  ],
};

exports.beenader = {
  PARENT: [exports.genericTank],
  LABEL: "Beenade Chucker",
  BODY: {
    ACCELERATION: base.ACCEL * 0.8,
    FOV: base.FOV * 1.2,
  },
  DANGER: 7,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13.5, 0, 0, 0, 360, 1],
      TYPE: [exports.grenadierSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
  {
    POSITION: [20, 10, 1, , 0, , 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic]),
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 13, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile, g.greaterReload]),
      TYPE: exports.beenade,
    },
  }
  ],
};
exports.neutron = {
  PARENT: [exports.genericTank],
  LABEL: "Neutron",
  BODY: {
    ACCELERATION: base.ACCEL * 0.8,
    FOV: base.FOV * 1.2,
  },
  DANGER: 7,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13.5, 0, 0, 0, 360, 1],
      TYPE: [exports.acidicFieldSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.grenadierSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
  {
    POSITION: [20, 10, 1, , 0, , 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic]),
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 13, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
      TYPE: exports.neutronMissile,
    },
  }
  ],
};
exports.fieldgun = {
  PARENT: [exports.genericTank],
  LABEL: "Field Gun",
  BODY: {
    ACCELERATION: base.ACCEL * 0.8,
    FOV: base.FOV * 1.2,
  },
  DANGER: 7,
  GUNS: [...sideGuns, ...launcherGun],
};

exports.twister = {
  PARENT: [exports.genericTank],
  LABEL: "Twister",
  BODY: {
    ACCELERATION: base.ACCEL * 0.8,
    FOV: base.FOV * 1.2,
  },
  DANGER: 7,
  GUNS: [
    {
      POSITION: [18, 2.5, 5, 1, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 13.3, -1.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
        TYPE: exports.twisterMissile,
      },
    },
  ],
};

exports.rocketeer = {
  PARENT: [exports.genericTank],
  LABEL: "Rocketeer",
  BODY: {
    ACCELERATION: base.ACCEL * 0.8,
    FOV: base.FOV * 1.2,
  },
  DANGER: 7,
  GUNS: [
    {
      POSITION: [20, 3, 4, 1, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 11.5, -1.6, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.halfDamage,
        ]),
        TYPE: exports.rocket,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
};

exports.sidewind = {
  PARENT: [exports.genericTank],
  LABEL: "Sidewinder",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.3,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 11, -0.5, 14, 0, 0, 0],
    },
    {
      POSITION: [21, 12, -1.1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.lesserDamage,
        ]),
        TYPE: exports.snake,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
};
exports.skimmer = {
  PARENT: [exports.genericTank],
  BODY: {
    FOV: base.FOV * 1.15,
  },
  LABEL: "Skimmer",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [17, 15, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
        TYPE: exports.missile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
};
exports.hyperSkimmer = {
  PARENT: [exports.genericTank],
  BODY: {
    FOV: base.FOV * 1.15,
  },
  LABEL: "Hyper Skimmer",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 15, -0.5, 9, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.bitmoreDamage,
        ]),
        TYPE: exports.hyperMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [17, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [10, 10, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [17, 11, 1, 0, 0, 0, 0],
    },
  ],
};
exports.testerSkimmer = {
  PARENT: [exports.genericTank],
  BODY: {
    FOV: base.FOV * 1.15,
  },
  LABEL: "Tester Skimmer",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 15, -0.5, 9, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.bitmoreDamage,
        ]),
        TYPE: exports.rogueMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [17, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [10, 10, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [17, 11, 1, 0, 0, 0, 0],
    },
  ],
};
exports.skimmerMech = {
  PARENT: [exports.genericTank],
  BODY: {
    FOV: base.FOV * 1.15,
  },
  LABEL: "Skimmer Mech",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [3, 15, 1, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
        TYPE: exports.autoMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.launcherMech = {
  PARENT: [exports.genericTank],
  BODY: {
    FOV: base.FOV * 1.15,
  },
  LABEL: "Launcher Mech",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [7, 15, 1, 10, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
        TYPE: exports.autoLauncherMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [14, 14, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [8, 14, 1, 0, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.armata = {
  PARENT: [exports.genericTank],
  BODY: {
    FOV: base.FOV * 1.15,
  },
  LABEL: "Armata",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [9.5, 9, 1.3, 9, 0, 0, 0],
    },
    {
      POSITION: [17, 11, 1.4, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
        TYPE: exports.auto3Missile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 0, 0, 0],
    },
  ],
};
exports.beeNest = makeMulti(
  {
    PARENT: [exports.genericTank],
    SHAPE: 6,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [7, 9.5, 0.6, 7, 0, 0, 0.8],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.bee]),
          TYPE: exports.beeDrone,
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
    ],
  },
  3,
  "Bee-Nest"
);
exports.beehive = makeMulti(
  {
    PARENT: [exports.genericTank],
    SHAPE: 6,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [7, 9.5, 0.6, 7, 0, 0, 0.8],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.bee]),
          TYPE: exports.beeDrone,
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
    ],
  },
  6,
  "Bee-Hive"
);
exports.swarmer = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  BODY: {
    SPEED: base.SPEED * 1.2,
  },
  LABEL: "Swarmer",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.lesserDamage,
          g.doubleReload,
        ]),
        TYPE: exports.hive,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
};
exports.hivemind = makeMulti({
  PARENT: [exports.genericTank],
  DANGER: 7,
  SHAPE: 6,
  BODY: {
    SPEED: base.SPEED * 1.2,
  },
  GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [10, 9.5, 0.6, 7, 0, 60, 0.8],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.bee]),
          TYPE: exports.hexaBee,
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.mediumReload,
        ]),
        TYPE: exports.HexaHive,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
},
3,
"Hexa Hive",
);
exports.hexaswarm = {
  PARENT: [exports.genericTank],
  LABEL: "Hexa Swarmer",
  SHAPE: 6,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 3, 1, 0, -6, -7, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.mediumSize
        ]),
        TYPE: exports.hexaBee,
      },
    },
    {
      POSITION: [14, 3, 1, 0, 6, 7, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.mediumSize
        ]),
        TYPE: exports.hexaBee,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.doubleReload,
        ]),
        TYPE: exports.HexaHive,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
};
exports.hivelord = makeMulti({
  PARENT: [exports.genericTank],
  DANGER: 7,
  SHAPE: 6,
  BODY: {
    SPEED: base.SPEED * 1.2,
  },
  GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [10, 9.5, 0.6, 7, 0, 60, 0.8],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.greaterDamage]),
          TYPE: exports.hexaBee,
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 3, 1, 0, -6, -7, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.mediumSize
        ]),
        TYPE: exports.hexaBee,
      },
    },
    {
      POSITION: [14, 3, 1, 0, 6, 7, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.mediumSize
        ]),
        TYPE: exports.hexaBee,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.greaterReload,
        ]),
        TYPE: exports.HexaHive,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
},
3,
"Hive Lord",
);
exports.FTHive = makeMulti({
  PARENT: [exports.hive],
  SHAPE: 6,
  GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [10, 9.5, 0.6, 7, 0, 60, 0.8],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
          TYPE: exports.beeDrone,
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.lesserDamage,
          g.doubleReload,
        ]),
        TYPE: exports.hive,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
},
3,
"Super Hive",
);
exports.fearTheHive = makeMulti({
  PARENT: [exports.genericTank],
  DANGER: 7,
  SHAPE: 6,
  SIZE: 20,
  BODY: {
    HEALTH: base.HEALTH * 1.5,
  },
  GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [10, 9.5, 0.6, 7, 0, 60, 0.8],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
          TYPE: exports.hive,
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.lesserDamage,
          g.doubleReload,
        ]),
        TYPE: exports.FTHive,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
},
6,
"Fear The Hive",
);
exports.beenest = makeMulti(
  {
    PARENT: [exports.genericTank],
    SHAPE: 3,
    SIZE: 13,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [11, 0, 0, 0, 360, 1],
        TYPE: [exports.autoTurret],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [7, 9.5, 0.6, 7, 0, 60, 0.8],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
          TYPE: exports.beeDrone,
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
    ],
  },
  3,
  "Bee-Hive"
);
exports.beequeen = {
  PARENT: [exports.genericTank],
  SHAPE: 8,
  LABEL: "Queen Bee",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 11.5, 0.6, 7, -5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.lesserHealth]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 11.5, 0.6, 7, 5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.lesserHealth]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, -3, 90, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 3, -90, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, 120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 7, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.halfDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.spread = {
  PARENT: [exports.genericTank],
  LABEL: "Spreadshot",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [13, 4, 1, 0, -0.7, -74, 5 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14.5, 4, 1, 0, -0.9, -59, 4 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 4, 1, 0, -1.3, -41, 3 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17.5, 4, 1, 0, -1.25, -28, 2 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 4, 1, 0, -1.1, -14, 1 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 4, 1, 0, 0.7, 74, 5 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14.5, 4, 1, 0, 0.9, 59, 4 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 4, 1, 0, 1.3, 41, 3 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17.5, 4, 1, 0, 1.25, 28, 2 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 4, 1, 0, 1.1, 14, 1 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 8, 1, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.spreadmain,
          g.spread,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.flank = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    BODY: {
      SPEED: base.SPEED * 1.1,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 8, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  3,
  "Flank Guard"
);
exports.autoflank = makeAuto(exports.flank);
exports.deathstar = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [20, 12, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [20, 12, 1, 0, 0, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  3,
  "Death Star"
);
exports.hexa = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 8, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
          TYPE: exports.bullet,
        },
      },

      {
        POSITION: [18, 8, 1, 0, 0, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  3,
  "Hexa Tank"
);
exports.nuclearReactor = makeMulti(
  {
    PARENT: [exports.genericTank],
    SIZE: 20,
    BODY: {
      HEALTH: base.HEALTH * 5,
    },
    DANGER: 7,
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [12, 0, 0, 0, 360, 1],
        TYPE: [
          exports.acidicFieldSpawner,
          {
            GUNS: [
              {
                POSITION: [0, 20, 1, 0, 0, 0, 0],
                PROPERTIES: {
                  SHOOT_SETTINGS: combineStats([
                    g.atmosphere,
                    g.greaterDamage,
                    g.size400,
                    g.superSize,
                  ]),
                  TYPE: [exports.acidicField, { COLOR: 0 }],
                  MAX_CHILDREN: 1,
                  AUTOFIRE: true,
                },
              },
            ],
          },
        ],
      },
      {
        POSITION: [21.5, 0, 0, 0, 360, 0],
        TYPE: exports.smasherBody,
      },
    ],
    GUNS: [
      {
        POSITION: [10, 14, -0.5, 9, 0, 0, 0],
      },
      {
        POSITION: [17, 15, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
          TYPE: exports.missile,
          STAT_CALCULATOR: gunCalcNames.sustained,
        },
      },
      {
        POSITION: [10, 14, -0.5, 9, 0, 180, 0],
      },
      {
        POSITION: [17, 15, 1, 0, 0, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
          TYPE: exports.missile,
          STAT_CALCULATOR: gunCalcNames.sustained,
        },
      },
    ],
  },
  3,
  "Hexa Tank"
);
exports.blizzard = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 3.5, 1, 0, 0, 45, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.gunner,
            g.arty,
            g.doubleDamage,
          ]),
          TYPE: exports.bullet,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [12, 10, 1.4, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.mach]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  4,
  "Blizzard"
);
exports.hexanomal = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 7, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [3, 7, 1.7, 15, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [18, 8, 1, 0, 0, 60, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  3,
  ""
);
exports.hexanomaly = makeAuto(exports.hexanomal, "Hexanomaly");
exports.autohexa = makeAuto(exports.hexa);
exports.combine = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 7, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [3, 7, 1.7, 15, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [18, 8, 1, 0, 0, 45, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  4,
  "Combination"
);
exports.octo = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 8, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.spam]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [18, 8, 1, 0, 0, 45, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.spam]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  4,
  "Octo Tank"
);
exports.barrier = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    TURRETS: [
    {
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
      {
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.healSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.repsanctuary_snow,
    },
      {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.sanctuary_snow,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
    GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0.5],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 8, 1, 0, 0, 0, 0.5],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap]),
        TYPE: exports.repairTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 40, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 8, 1, 0, 0, 40, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 40, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap]),
        TYPE: exports.healTrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
  },
  4,
  "Barrier"
);
exports.cyclone = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 3.5, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [15, 3.5, 1, 0, 0, 30, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [15, 3.5, 1, 0, 0, 60, 0.25],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [15, 3.5, 1, 0, 0, 90, 0.75],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  3,
  "Cyclone"
);
exports.septatrap = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Octo-Trapper",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0/4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap, g.greaterDamage, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 45, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 45, 1/4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap, g.greaterDamage, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 90, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 90, 2/4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap, g.greaterDamage, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 135, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 135, 3/4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap, g.greaterDamage, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 180, 0/4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap, g.greaterDamage, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },


    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, -45, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, -45, 3/4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap, g.greaterDamage, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, -90, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, -90, 2/4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap, g.greaterDamage, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, -135, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, -135, 1/4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap, g.greaterDamage, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.barricade = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Barricade",
  STAT_NAMES: statnames.trap,
  BODY: {
    FOV: 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [6, 7, 1.35, 19.6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.halfDamage,
          g.halfHealth,
          g.halfReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4.5, 7, 1.35, 16.6, 0, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.halfDamage,
          g.halfHealth,
          g.halfReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3.2, 7, 1.35, 13.6, 0, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.halfDamage,
          g.halfHealth,
          g.halfReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.hexatra = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    BODY: {
      SPEED: base.SPEED * 0.8,
    },
    STAT_NAMES: statnames.trap,
    HAS_NO_RECOIL: true,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 7, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [3, 7, 1.7, 15, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [15, 7, 1, 0, 0, 60, 0.5],
      },
      {
        POSITION: [3, 7, 1.7, 15, 0, 60, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
  },
  3,
  ""
);
exports.rotaHexatra = {
    PARENT: [exports.hexatra],
    FACING_TYPE: "autospin",
    }
exports.miniNesterCruiserTurret = {
  PARENT: [exports.auto3Turret, exports.cruiser],
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.halfDamage,
        ]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        /*/},
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.halfDamage, g.lesserHealth]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,/*/
      },
    },
  ],
};
exports.mininestward = makeMulti(
  {
    PARENT: [exports.genericTank],
    SIZE: 17,
    SHAPE: 5,
    COLOR: 14,
    FACING_TYPE: "autospin",
    BODY: {
      // def
      ACCELERATION: 1,
      SPEED: 1.1,
      HEALTH: base.HEALTH * 1.75,
      PENETRATION: base.PENETRATION * 1.5,
      SHIELD: base.SHIELD * 2,
      REGEN: base.REGEN * 1.75,
      FOV: base.FOV * 1.21,
      DENSITY: base.DENSITY * 1.5,
      PUSHABILITY: 0.25,
    },
    TURRETS: [
      {
        POSITION: [7.6, 9.5, 0, 72, 110, 0],
        TYPE: [exports.miniNesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 144, 110, 0],
        TYPE: [exports.miniNesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 216, 110, 0],
        TYPE: [exports.miniNesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 288, 110, 0],
        TYPE: [exports.miniNesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 360, 110, 0],
        TYPE: [exports.miniNesterCruiserTurret],
      },

      {
        POSITION: [9.3, 0, 0, 0, 360, 1],
        TYPE: [exports.trapTurret, { INDEPENDENT: true }],
      },
    ],
    GUNS: [
      {
        POSITION: [3, 7.5, 1, 8, 0, 35, 0],
      },
      {
        POSITION: [1.46, 7.2, 1.3, 11, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.doubleStats, g.lesserRange, g.doubleReload, g.greaterSize]),
          TYPE: exports.unsetBlock,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
  },
  5,
  "Mini Nest Warden"
);
exports.hexatrap = makeAuto(exports.hexatra, "Hexa-Trapper");
exports.tri = {
  PARENT: [exports.genericTank],
  LABEL: "Tri-Angle",
  BODY: {
    HEALTH: base.HEALTH * 0.8,
    SHIELD: base.SHIELD * 0.8,
    DENSITY: base.DENSITY * 0.6,
  },
  DANGER: 7,
  GUNS: [...triangleGun, ...triangleThrusterGuns],
};
exports.breeze = {
  PARENT: [exports.genericTank],
  LABEL: "Breeze",
  BODY: {
    HEALTH: base.HEALTH * 0.8,
    SHIELD: base.SHIELD * 0.8,
    DENSITY: base.DENSITY * 0.6,
  },
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [13, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    }, ...triangleThrusterGuns, ...trapGuardGun,],
};
exports.tritri = {
  PARENT: [exports.genericTank],
  LABEL: "Nudger",
  BODY: {
    HEALTH: base.HEALTH * 0.8,
    SHIELD: base.SHIELD * 0.8,
    DENSITY: base.DENSITY * 0.6,
  },
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, -3, -10, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront, ]),
        TYPE: exports.bullet,
      },
    },
  {
    POSITION: [6.5, 3, -1.8, 6.5, -3, -10, 0],
  },
    {
      POSITION: [18, 8, 1, 0, 3, 10, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront, ]),
        TYPE: exports.bullet,
      },
    },
  {
    POSITION: [6.5, 3, -1.8, 6.5, 3, 10, 0],
  },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 9, 1.7, 12, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [21, 8, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront, g.greaterDamage]),
    TYPE: exports.bullet,
    LABEL: "Front",
  },
 },
  {
    POSITION: [6.5, 3, -1.8, 6.5, 0, 0, 0],
  },
    {
      POSITION: [13, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
  {
    POSITION: [16, 8, 1, 0, 0, 150, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [16, 8, 1, 0, 0, 210, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -1, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 1, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.spectre = {
  PARENT: [exports.tri],
  LABEL: "Spectre",
  RESET_UPGRADES: true,
  IGNORE_COLLISION: true,
  INTANGIBLE: true,
  IS_CREEP: true,
  INVISIBLE: [0.006, 0.003],
  BODY: {
    HEALTH: base.HEALTH * 1.2,
    SHIELD: base.SHIELD * 0.8,
    DENSITY: base.DENSITY * 0.6,
  },
  GUNS: [
  {
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [18, 8, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront]),
    TYPE: exports.arenaBullet,
    LABEL: "Front",
  },
},
...triangleThrusterGuns,
],



  DANGER: 6,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: [exports.goodEye, { INDEPENDENT: true }],
    },
  ],
};
exports.boosttrap = {
  PARENT: [exports.genericTank],
  LABEL: "Trap-angle",
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    
    
    {
      POSITION: [15, 7, 1, 0, 0, 90, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.lesserReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 7, 1, 0, 0, 270, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 270, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.lesserReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [13, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    
  {
    POSITION: [16, 8, 1, 0, 0, 150, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [16, 8, 1, 0, 0, 210, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
    
  {
    POSITION: [13, 8, 1, 0, 0, 180, 0],
  },
  {
    POSITION: [4, 8, 1.7, 13, 0, 180, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.trap]),
      TYPE: exports.trap,
      STAT_CALCULATOR: gunCalcNames.trap,
    },
  }
  ],
};
exports.resister = {
  PARENT: [exports.genericTank],
  LABEL: "Resister",
  DANGER: 7,
  GUNS: [
    
    
    {
      POSITION: [15, 7, 1, 0, 0, 90, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.lesserReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 7, 1, 0, 0, 270, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 270, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.lesserReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    
  {
    POSITION: [13, 8, 1, 0, 0, 180, 0],
  },
  {
    POSITION: [4, 8, 1.7, 13, 0, 180, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.trap]),
      TYPE: exports.trap,
      STAT_CALCULATOR: gunCalcNames.trap,
    },
  },
    {
      POSITION: [20, 12, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.doubleHealth,
          g.lesserDamage,
        ]),
        TYPE: [exports.bullet, { LABEL: "Flare", MOTION_TYPE: "grow" }],
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    ...condorGuns,
{
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [23, 10, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.trifront]),
    TYPE: exports.bullet,
  },
},
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 12, 1, 0, 0, 0, 0],
  },
  {
    POSITION: [2, 12, 1.1, 18, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.trap, g.block,]),
      TYPE: exports.setBlock,
    },
  },
  ],
};
exports.tyrant = {

  PARENT: [exports.genericTank],
  LABEL: "Tyrant",
  BODY: {
    HEALTH: base.HEALTH * 0.8,
    SHIELD: base.SHIELD * 0.8,
    DENSITY: base.DENSITY * 0.6,
    DAMAGE: base.DAMAGE * 0.75,
  },
  DANGER: 7,
  GUNS: [

    {
      POSITION: [16, 8, 1, 0, -1, 145, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 1, -145, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
  {
    POSITION: [19, 8, 1, 0, 0, 160, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [19, 8, 1, 0, 0, -160, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -1, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 1, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  {
    POSITION: [14, 3, 1, 0, 6, 7, 0.75],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.doubleSize]),
      TYPE: exports.uncontrolledBeeDrone,
      LABEL: "Secondary",
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [14, 3, 1, 0, -6, -7, 0.25],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.doubleSize]),
      TYPE: exports.uncontrolledBeeDrone,
      LABEL: "Secondary",
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [24, 7, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter, g.hunter2]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [21, 11, 1, 0, 0, 0, 0.25],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter]),
      TYPE: exports.bullet,
    },
  }
  ],
  TURRETS: [
      {
        POSITION: [11, 0, 0, 0, 360, 1],
        TYPE: [exports.autoBasicTurret, { INDEPENDENT: true, COLOR: 5 }],
      },
  ]
}
exports.booster = {
  PARENT: [exports.genericTank],
  LABEL: "Booster",
  BODY: {
    HEALTH: base.HEALTH * 0.8,
    SHIELD: base.SHIELD * 0.8,
    DENSITY: base.DENSITY * 0.2,
  },
  DANGER: 7,
  GUNS: [
    ...triangleGun,
    {
      POSITION: [13, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    ...triangleThrusterGuns,
  ],
};
exports.duodecitank = {
  PARENT: [exports.genericTank],
  LABEL: "Trap-Booster",
  SPECIAL_EFFECT: "Legend",
  BODY: {
    HEALTH: base.HEALTH * 3,
    SHEILD: base.SHEILD * 2,
    DAMAGE: base.DAMAGE * 1.75,
    PENETRATION: base.PENETRATION * 1.5,
  },
  DANGER: 6,
  GUNS: [
    ...masterGun,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 7, 1, 0, 0, 90, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 7, 1, 0, 0, 270, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 270, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    ...triangleThrusterGuns,
    ...trapGuardGun,
  ],
};
exports.replicator = {
  PARENT: [exports.genericTank],
  LABEL: "Replicator",
  BODY: {
    HEALTH: base.HEALTH * 0.8,
    SHIELD: base.SHIELD * 0.8,
    DENSITY: base.DENSITY * 0.2,
  },
  DANGER: 7,
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner]),
        TYPE: exports.boosterMinion,
        STAT_CALCULATOR: gunCalcNames.drone,
        MAX_CHILDREN: 6,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 0, 0],
    },
    {
      POSITION: [13, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.tri,
          g.thruster,
          g.halfrecoil,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.tri,
          g.thruster,
          g.halfrecoil,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    ...triangleThrusterGuns,
  ],
};

exports.fighter = {
  PARENT: [exports.genericTank],
  LABEL: "Fighter",
  BODY: {
    DENSITY: base.DENSITY * 0.6,
  },
  DANGER: 7,
  GUNS: [
    ...triangleGun,
    {
      POSITION: [16, 8, 1, 0, -1, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 1, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront]),
        TYPE: exports.bullet,
      },
    },
    ...triangleThrusterGuns,
  ],
};
exports.spitter = {
  PARENT: [exports.genericTank],
  LABEL: "Spitter",
  BODY: {
    DENSITY: base.DENSITY * 0.6,
  },
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 5.5, 1, 0, 0, 0, 0],

      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.lowpower,
          g.lesserDamage,
          g.greaterReload,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [9, 8.5, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.lesserDamage]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    {
      POSITION: [12, 3.5, 1, 0, 2.75, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner, g.arty, g.minorDamage]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 3.5, 1, 0, -4.75, 90, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner, g.arty, g.minorDamage]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 3.5, 1, 0, 4.75, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner, g.arty, g.minorDamage]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 3.5, 1, 0, -2.75, -90, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner, g.arty, g.minorDamage]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 8, 1, 0, -1, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront, g.halfDamage]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 1, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront, g.halfDamage]),
        TYPE: exports.bullet,
      },
    },
    ...triangleThrusterGuns,
  ],
};
exports.lobber = {
  PARENT: [exports.genericTank],
  LABEL: "Lobber",
  BODY: {
    DENSITY: base.DENSITY * 0.6,
  },
  DANGER: 7,
  GUNS: [
    ...triangleGun,
  {
    POSITION: [18, 7.5, 1, , 0, 90, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic]),
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [16, 10, 1, 0, 0, 90, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile, g.lesserDamage]),
      TYPE: exports.launcherMissile,
    },
  },
  {
    POSITION: [18, 7.5, 1, , 0, -90, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic]),
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [16, 10, 1, 0, 0, -90, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile, g.lesserDamage]),
      TYPE: exports.launcherMissile,
    },
  },
    ...triangleThrusterGuns,
  ],
};
exports.cloner = {
  PARENT: [exports.genericTank],
  LABEL: "Cloner",
  BODY: {
    DENSITY: base.DENSITY * 0.6,
  },
  DANGER: 7,
  GUNS: [
    ...triangleGun,
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 8.5, 1, 10.5, 0, 90, 0],
    },
    {
      POSITION: [1.2, 10.5, 1, 14.8, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.bitmoreSize]),
        TYPE: exports.fighterdrone,
        STAT_CALCULATOR: gunCalcNames.drone,
        MAX_CHILDREN: 2,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 10.5, 1, 8, 0, 90, 0],
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 8.5, 1, 10.5, 0, -90, 0],
    },
    {
      POSITION: [1.2, 10.5, 1, 14.8, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.bitmoreSize]),
        TYPE: exports.fighterdrone,
        STAT_CALCULATOR: gunCalcNames.drone,
        MAX_CHILDREN: 2,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 10.5, 1, 8, 0, -90, 0],
    },
    ...triangleThrusterGuns,
  ],
};
exports.splatterer = {
  PARENT: [exports.genericTank],
  LABEL: "Splatterer",
  BODY: {
    DENSITY: base.DENSITY * 0.6,
  },
  DANGER: 7,
  GUNS: [
    ...triangleGun,
    ...miniShotGuns,
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [9.5, 10, 1, 6, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.doubleHealth,
          g.superReload,
        ]),
        TYPE: [exports.bullet, { BODY: { RANGE: 0 } }],
      },
    },
    {
      POSITION: [8, 10, -1.3, 4, 0, 90, 0],
    },
    {
      POSITION: [9.5, 10, 1, 6, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleSpray,
          g.doubleHealth,
          g.superReload,
        ]),
        TYPE: [exports.bullet, { BODY: { RANGE: 0 } }],
      },
    },
    {
      POSITION: [8, 10, -1.3, 4, 0, -90, 0],
    },
    ...triangleThrusterGuns,
  ],
};
exports.surfer = {
  PARENT: [exports.genericTank],
  LABEL: "Surfer",
  BODY: {
    DENSITY: base.DENSITY * 0.6,
  },
  DANGER: 7,
  GUNS: [
    ...triangleGun,
    {
      POSITION: [7, 7.5, 0.6, 7, -1, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 1, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    ...triangleThrusterGuns,
  ],
};

exports.bomber = {
  PARENT: [exports.genericTank],
  LABEL: "Bomber",
  BODY: {
    DENSITY: base.DENSITY * 0.6,
  },
  DANGER: 7,
  GUNS: [...triangleGun, ...triangleThrusterGuns, ...trapGuardGun],
};
exports.autotri = makeAuto(exports.tri);
exports.autotri.BODY = {
  SPEED: base.SPEED,
};
exports.falcon = {
  PARENT: [exports.genericTank],
  LABEL: "Falcon",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.8,
    FOV: base.FOV * 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [27, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.assass]),
        TYPE: exports.bullet,
        ALT_FIRE: true,
      },
    },
    {
      POSITION: [5, 8.5, -1.6, 8, 0, 0, 0],
    },
    ...birdGuns,
  ],
};
exports.armoredauto3 = {
  PARENT: [exports.genericTank],
  LABEL: "Titan-3",
  DANGER: 7,
  SHAPE: 6,
  SIZE: 17,
  HEALTH: 55,
  FACING_TYPE: "autospin",
  BODY: {
    // def
    ACCELERATION: 1,
    SPEED: 1,
    HEALTH: base.HEALTH * 1.5,
    DAMAGE: base.DAMAGE * 1.5,
    PENETRATION: base.PENETRATION * 1.5,
    SHIELD: base.SHIELD,
    REGEN: base.REGEN * 1.5,
    FOV: base.FOV * 1.1,
    DENSITY: base.DENSITY * 1.5,
    PUSHABILITY: 0.25,
    HETERO: 3,
  },
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [11, 8, 0, 0, 0, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [11, 8, 0, 120, 0, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [11, 8, 0, 240, 0, 0],
      TYPE: exports.smasherBody,
    },
  ],
};
exports.Mecha = {
  PARENT: [exports.genericTank],
  LABEL: "Mecha",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalTurret,
    },
  ],
};
exports.trapMecha = {
  PARENT: [exports.genericTank],
  LABEL: "Mecha Trapper",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalTrapTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalTrapTurret,
    },
  ],
};
exports.trapMechabara = {
  PARENT: [exports.genericTank],
  LABEL: "Mecha Barricade",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalTrapTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalTrapTurret,
    },
  ],
};
exports.machinegunMecha = {
  PARENT: [exports.genericTank],
  LABEL: "Mecha Machine Gun",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalMachineGunTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalMachineGunTurret,
    },
  ],
};
exports.gunnerMecha = {
  PARENT: [exports.genericTank],
  LABEL: "Mecha Gunner",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalGunnerTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalGunnerTurret,
    },
  ],
};
exports.swarmMecha = {
  PARENT: [exports.genericTank],
  LABEL: "Mecha Swarm",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalSwarmTurret1,
    },
    {
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalSwarmTurret2,
    },
  ],
};
exports.beeMecha = {
  PARENT: [exports.genericTank],
  LABEL: "Mecha Bee",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalBeeTurret,
    },
    {
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalBeeTurret,
    },
  ],
};
exports.auto3body2 = {
  PARENT: [exports.autoSmasherTurret4],
  LABEL: "Auto-3 body",
  FACING_TYPE: "autospin",
  CONTROLLERS: ["spin"],
  INDEPENDENT: false,
  SHAPE: 0,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.auto3Turret,
    },
  ],
};
exports.auto3body1 = {
  PARENT: [exports.genericTank],
  LABEL: "Full-Auto",
  DANGER: 7,
  SIZE: 17,
  FACING_TYPE: "autospin",
  BODY: {
    HEALTH: base.HEALTH * 2,
    SPEED: base.SPEED * 0.5,
  },
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.auto3body2,
    },
    {
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.strongAuto3Turret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.strongAuto3Turret,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.strongAuto3Turret,
    },
  ],
};
exports.hexaautobasic = {
  PARENT: [exports.basic],
  LABEL: "Hexa Auto Basic",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [50, 0, 0, 0, 0, 0],
      TYPE: exports.strongHexaAutoRing,
    },
  ],
};
exports.auto3 = {
  PARENT: [exports.genericTank],
  LABEL: "Auto-3",
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.auto3Turret,
    },
  ],
};
exports.autoauto3 = makeAuto(exports.auto3, "Full-Auto");
exports.auto5 = {
  PARENT: [exports.genericTank],
  LABEL: "Auto-5",
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.auto5Turret,
    },
    {
      POSITION: [11, 8, 0, 72, 190, 0],
      TYPE: exports.auto5Turret,
    },
    {
      POSITION: [11, 8, 0, 144, 190, 0],
      TYPE: exports.auto5Turret,
    },
    {
      POSITION: [11, 8, 0, 216, 190, 0],
      TYPE: exports.auto5Turret,
    },
    {
      POSITION: [11, 8, 0, 288, 190, 0],
      TYPE: exports.auto5Turret,
    },
  ],
};
exports.heavy3 = {
  BODY: {
    SPEED: base.SPEED * 0.95,
  },
  PARENT: [exports.genericTank],
  LABEL: "Mega-3",
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 8, 0, 0, 190, 0],
      TYPE: exports.mega3Turret,
    },
    {
      POSITION: [14, 8, 0, 120, 190, 0],
      TYPE: exports.mega3Turret,
    },
    {
      POSITION: [14, 8, 0, 240, 190, 0],
      TYPE: exports.mega3Turret,
    },
  ],
};
exports.sniper3 = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Assassin-3",
  BODY: {
    ACCELERATION: base.ACCEL * 0.6,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.25,
  },
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 8, 0, 0, 170, 0],
      TYPE: exports.assassin3Turret,
    },
    {
      POSITION: [13, 8, 0, 120, 170, 0],
      TYPE: exports.assassin3Turret,
    },
    {
      POSITION: [13, 8, 0, 240, 170, 0],
      TYPE: exports.assassin3Turret,
    },
  ],
};
exports.auto4 = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Auto-4",
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 6, 0, 45, 160, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [13, 6, 0, 135, 160, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [13, 6, 0, 225, 160, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [13, 6, 0, 315, 160, 0],
      TYPE: exports.auto4Turret,
    },
  ],
};

exports.flanktrap = {
  PARENT: [exports.genericTank],
  LABEL: "Trap Guard",
  STAT_NAMES: statnames.generic,
  DANGER: 7,
  GUNS: [...basicGun, ...trapGuardGun],
};
exports.autoflanktrap = makeAuto(exports.flanktrap);
exports.guntrap = {
  PARENT: [exports.genericTank],
  LABEL: "Gunner Trapper",
  DANGER: 7,
  STAT_NAMES: statnames.generic,
  BODY: {
    FOV: base.FOV * 1.25,
  },
  GUNS: [
    ...pelletGuns,
    {
      POSITION: [13, 11, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [4, 11, 1.7, 13, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.doubleHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.bushwhack = {
  PARENT: [exports.genericTank],
  LABEL: "Bushwhacker",
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.2,
  },
  DANGER: 7,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper]),
        TYPE: exports.bullet,
      },
    },
    ...trapGuardGun,
  ],
};

exports.gust = {
  PARENT: [exports.genericTank],
  LABEL: "Gust",
  DANGER: 8,
  BODY: {
    SPEED: base.SPEED * 0.9,
  },
  GUNS: [
    {
      POSITION: [5, 9, -1.6, 7, 0, 10, 0],
    },
    {
      POSITION: [5, 9, -1.6, 7, 0, -10, 0],
    },
  ],
};
for (let i = 0; i < 10; i++)
  exports.gust.GUNS.push({
    POSITION: [3, 2.5, 1, 13.75, 0, i * 4 - 20, i / 20],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.gunner,
        g.mini,
        g.lesserReload,
        g.halfRecoil,
      ]),
      TYPE: exports.bullet,
    },
  });
for (let i = 0; i < 10; i++)
  exports.gust.GUNS.push({
    POSITION: [3, 2.5, 1, 13.75, 0, 20 - i * 4, (i + 10) / 20],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.gunner,
        g.mini,
        g.lesserReload,
        g.halfRecoil,
      ]),
      TYPE: exports.bullet,
    },
  });
exports.gust.GUNS.push({
  POSITION: [5, 9, -1.6, 7, 0, 0, 0],
});
exports.experimenter = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Experimenter",
  SPECIAL_EFFECT: "experiment",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.15,
  },
  MAX_CHILDREN: 3,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.slingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4, 10, 1, 10.5, 0, 0, 0],
    },

    {
      POSITION: [3, 12, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [2, 10, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.greaterHealth,
          g.greaterReload,
        ]),
        TYPE: [exports.experimenterStationedTurret, { PERSISTS_AFTER_DEATH: true }],
        ALT_FIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};

exports.scientist = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Scientist",
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "experiment",
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.15,
  },
  MAX_CHILDREN: 3,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.slingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      POSITION: [5, 12, 1, 12, 0, 0, 0],
    },
    {
      POSITION: [6, 9, 1.3, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.greaterHealth,
          g.greaterReload,
        ]),
        TYPE: [exports.scientistStationedTurret, { PERSISTS_AFTER_DEATH: true }],

        ALT_FIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 16.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.researcher = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Researcher",
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "experiment",
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.15,
  },
  MAX_CHILDREN: 3,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.slingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 12, 1, 10.5, 0, 0, 0],
    },

    {
      POSITION: [3, 13, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [5, 11, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.greaterHealth,
          g.greaterReload,
        ]),
        TYPE: [exports.researcherStationedTurret, { PERSISTS_AFTER_DEATH: true }],

        ALT_FIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 7, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.inventor = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Inventor",
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "experiment",
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.15,
  },
  MAX_CHILDREN: 10,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.slingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4, 12, 1, 10.5, 0, 0, 0],
    },

    {
      POSITION: [2, 13, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [8, 11, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.halfReload, g.greaterSize]),
        TYPE: [exports.inventorStationedTurret, { PERSISTS_AFTER_DEATH: true }],

        ALT_FIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [5, 7, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.physicist = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Physicist",
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "experiment",
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.15,
  },
  MAX_CHILDREN: 3,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.slingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 12, 1, 10.5, 0, 0, 0],
    },

    {
      POSITION: [3, 13, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [5, 11, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.greaterHealth,
          g.greaterReload,
        ]),
        TYPE: [exports.physicistStationedTurret, { PERSISTS_AFTER_DEATH: true }],

        ALT_FIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 7, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.betascientist = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Beta Scientist",
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "experiment",
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.15,
  },
  MAX_CHILDREN: 3,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.slingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      POSITION: [5, 12, 1, 12, 0, 0, 0],
    },
    {
      POSITION: [7, 10, 0.3, 13, 0, 0, 0],
    },
    {
      POSITION: [6, 9, 1.3, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.greaterHealth,
          g.superReload,
        ]),
        TYPE: [exports.betaScientistStationedTurret, { PERSISTS_AFTER_DEATH: true }],

        ALT_FIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 16.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.betaresearcher = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Beta Researcher",
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "experiment",
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.15,
  },
  MAX_CHILDREN: 3,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.slingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 12, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [5, 12, 1.5, 13.5, 0, 0, 0],
    },
    {
      POSITION: [3, 13, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [5, 11, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.greaterHealth,
          g.superReload,
        ]),
        TYPE: [exports.betaResearcherStationedTurret, { PERSISTS_AFTER_DEATH: true }],

        ALT_FIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 7, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.betainventor = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Beta Inventor",
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "experiment",
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.15,
  },
  MAX_CHILDREN: 10,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.slingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4, 12, 1, 10.5, 0, 0, 0],
    },

    {
      POSITION: [2, 13, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [8, 11, 1.3, 18, 0, 0, 0],
    },
    {
      POSITION: [10, 11, 0.8, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.spawner,
          g.lesserReload,
          g.greaterSize,
        ]),
        TYPE: [exports.betaInventorStationedTurret, { PERSISTS_AFTER_DEATH: true }],

        ALT_FIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [5, 7, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.betaphysicist = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Beta Physicist",
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "experiment",
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.15,
  },
  MAX_CHILDREN: 3,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.slingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 12, 1, 10.5, 0, 0, 0],
    },

    {
      POSITION: [5, 12, 2, 9, 0, 0, 0],
    },
    {
      POSITION: [3, 13, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [5, 11, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.greaterHealth,
          g.superReload,
        ]),
        TYPE: [exports.betaPhysicistStationedTurret, { PERSISTS_AFTER_DEATH: true }],

        ALT_FIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 7, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.eggavenge = {
  PARENT: [exports.genericTank],
  LABEL: "Avenger",
  DANGER: 7,

  STAT_NAMES: statnames.drone,
  BODY: {
    FOV: 1.2,
  },
  MAX_CHILDREN: 5,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [4.5, 0, 0, 0, 360, 1],
      TYPE: [exports.egg, { INDEPENDENT: true, COLOR: 14 }],
    },
  ],
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 90, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.spawner,
          g.greaterSize,
          g.lesserHealth,
        ]),
        TYPE: exports.bansheeGuardMinion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 90, 0],
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 270, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 270, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.spawner,
          g.lesserHealth,
          g.greaterSize,
        ]),
        TYPE: exports.fullAutoGuardMinion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 270, 0],
    },
  ],
};
exports.squarespawner = {
  PARENT: [exports.genericTank],
  LABEL: "Quad-Spawner",
  DANGER: 7,
  SHAPE: 4,
  STAT_NAMES: statnames.drone,
  BODY: {
    FOV: 1.2,
  },
  MAX_CHILDREN: 4,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7.5, 0, 0, 0, 360, 1],
      TYPE: [exports.square, { INDEPENDENT: true, COLOR: 14 }],
    },
  ],
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 11.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [1.2, 13.5, 1, 14.8, 0, 0, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.spawner,
          g.pound,
          g.greaterSize,
          g.halfHealth,
        ]),
        TYPE: exports.cruiserProtectorMinion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 13.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.trianglespawner = {
  PARENT: [exports.genericTank],
  LABEL: "Tri-Spawner",
  DANGER: 7,
  SHAPE: 3,
  STAT_NAMES: statnames.drone,
  BODY: {
    FOV: 1.2,
  },
  MAX_CHILDREN: 3,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7, 0, 0, 0, 360, 1],
      TYPE: [exports.triangle, { INDEPENDENT: true, COLOR: 14 }],
    },
  ],
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 0, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.spawner,
          g.pound,
          g.destroy,
          g.lesserReload,
          g.minorHealth,
        ]),
        TYPE: [exports.trianglesenti1, { GROWTH_FACTOR: 2 }],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.pentagonspawner = {
  PARENT: [exports.genericTank],
  LABEL: "Penta-Spawner",
  DANGER: 7,
  SHAPE: 5,
  STAT_NAMES: statnames.drone,
  BODY: {
    FOV: 1.2,
  },
  MAX_CHILDREN: 2,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7.6, 0, 0, 0, 360, 1],
      TYPE: [exports.pentagon, { INDEPENDENT: true, COLOR: 14 }],
    },
  ],
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 13.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [1.2, 15.5, 1, 14.8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.superHealth,
          g.minorDamage,
          g.lesserReload,
          g.greaterSize,
        ]),
        TYPE: [exports.pentagonsenti1, { GROWTH_FACTOR: 1.5 }],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 15.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.hexaSpawner = {
  PARENT: [exports.genericTank],
  LABEL: "Hexa-Spawner",
  DANGER: 7,
  SHAPE: 6,
  STAT_NAMES: statnames.drone,
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: 1.2,
  },
  MAX_CHILDREN: 1,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.hexagon, { INDEPENDENT: true, COLOR: 14 }],
    },
  ],
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 14, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [2, 16, 1, 15.5, 0, 0, 0.15],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.doubleHealth,
          g.greaterHealth,
          // g.greaterReload,
        ]),
        TYPE: exports.hexasenti1,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 15, 1, 8, 0, 0, 0],
    },
  ],
};
exports.hexaSeer = {
  PARENT: [exports.genericTank],
  LABEL: "Hexa-Seer",
  DANGER: 7,
  SHAPE: 6,
  STAT_NAMES: statnames.drone,
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: 1.2,
  },
  MAX_CHILDREN: 2,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.hexagon, { INDEPENDENT: true, COLOR: 14 }],
    },
  ],
  GUNS: [
    {
      POSITION: [6, 11, 1.2, 8, 0, -90, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.destroy,
          g.over,
          g.doubleSize,
        ]),
        TYPE: exports.necroHexagonMinion,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 90, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.destroy,
          g.over,
          g.doubleSize,
        ]),
        TYPE: exports.necroHexagonMinion,
        AUTOFIRE: true,
        BODY: {
          ACCELERATION: 0.003,
        },
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 1,
      },
    },
  ],
};

exports.sentryseer = {
  PARENT: [exports.genericTank],
  LABEL: "Sentryseer",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.5,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.1,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.crasherSwarmDrone, { INDEPENDENT: true, COLOR: 5 }],
    },
  ],

  GUNS: [
    {
      POSITION: [6, 11, 1.2, 8, 0, 60, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.pound, g.over, g.doubleSize]),
        TYPE: exports.gunSentryDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 180, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.pound, g.over, g.doubleSize]),
        TYPE: exports.trapSentryDrone,
        AUTOFIRE: true,
        BODY: {
          ACCELERATION: 0.003,
        },
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 300, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.pound, g.over, g.doubleSize]),
        TYPE: exports.swarmSentryDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 1,
      },
    },
  ],
};
//Beta Poly spawners
exports.betaeggavenge = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "Avenger",
    DANGER: 7,

    STAT_NAMES: statnames.drone,
    BODY: {
      FOV: 1.2,
    },
    MAX_CHILDREN: 8,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [6.5, 0, 0, 0, 360, 1],
        TYPE: [exports.egg, { INDEPENDENT: true, COLOR: 14 }],
      },
      {
        POSITION: [4.5, 0, 0, 0, 360, 1],
        TYPE: [exports.egg, { INDEPENDENT: true, COLOR: 14 }],
      },
    ],
    GUNS: [
      {
        /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4.5, 10.5, 1, 10.5, 0, 90, 0],
      },
      {
        POSITION: [1.2, 12.5, 1, 14.8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.spawner,
            g.greaterSize,
            g.lesserHealth,
          ]),
          TYPE: exports.bansheeGuardMinion,
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [3.5, 12.5, 1, 8, 0, 90, 0],
      },
      {
        /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4.5, 10.5, 1, 10.5, 0, 270, 0],
      },
      {
        POSITION: [1.2, 12.5, 1, 14.8, 0, 270, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.spawner,
            g.lesserHealth,
            g.greaterSize,
          ]),
          TYPE: exports.fullAutoGuardMinion,
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [3.5, 12.5, 1, 8, 0, 270, 0],
      },
    ],
  },
  2,
  "Beta Avenger"
);
exports.betasquarespawner = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "Quad-Spawner",
    DANGER: 7,
    SHAPE: 4,
    STAT_NAMES: statnames.drone,
    BODY: {
      FOV: 1.2,
    },
    MAX_CHILDREN: 6,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7.5, 0, 0, 0, 360, 1],
        TYPE: [exports.square, { INDEPENDENT: true, COLOR: 14 }],
      },
    ],
    GUNS: [
      {
        /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4.5, 11.5, 1, 10.5, 0, 90, 0],
      },
      {
        POSITION: [1.2, 13.5, 1, 14.8, 0, 90, 0.1],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.spawner,
            g.pound,
            g.greaterSize,
            g.halfHealth,
          ]),
          TYPE: exports.cruiserProtectorMinion,
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [3.5, 13.5, 1, 8, 0, 90, 0],
      },
    ],
  },
  2,
  "Beta Quad-Spawner"
);
exports.betatrianglespawner = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "Tri-Spawner",
    DANGER: 7,
    SHAPE: 3,
    STAT_NAMES: statnames.drone,
    BODY: {
      FOV: 1.2,
    },
    MAX_CHILDREN: 3,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 0, 0, 0, 360, 1],
        TYPE: [exports.triangle, { INDEPENDENT: true, COLOR: 14 }],
      },
    ],
    GUNS: [
      {
        /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4.5, 10.5, 1, 10.5, 0, 90, 0],
      },
      {
        POSITION: [1.2, 12.5, 1, 14.8, 0, 90, 0.1],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.spawner,
            g.pound,
            g.destroy,
            g.lesserReload,
            g.minorHealth,
          ]),
          TYPE: [exports.trianglesenti1, { GROWTH_FACTOR: 2 }],
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [3.5, 12.5, 1, 8, 0, 90, 0],
      },
    ],
  },
  2,
  "Beta Tri-Spawner"
);
exports.betapentagonspawner = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "Penta-Spawner",
    DANGER: 7,
    SHAPE: 5,
    STAT_NAMES: statnames.drone,
    BODY: {
      FOV: 1.2,
    },
    MAX_CHILDREN: 2,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7.6, 0, 0, 0, 360, 1],
        TYPE: [exports.pentagon, { INDEPENDENT: true, COLOR: 14 }],
      },
    ],
    GUNS: [
      {
        /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4.5, 13.5, 1, 10.5, 0, 135, 0],
      },
      {
        POSITION: [1.2, 15.5, 1, 14.8, 0, 135, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.factory,
            g.pound,
            g.destroy,
            g.superHealth,
            g.minorDamage,
            g.lesserReload,
            g.greaterSize,
          ]),
          TYPE: [exports.pentagonsenti1, { GROWTH_FACTOR: 1.5 }],
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [3.5, 15.5, 1, 8, 0, 135, 0],
      },
    ],
  },
  2,
  "Beta Penta-Spawner"
);
exports.betahexaSpawner = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "Hexa-Spawner",
    DANGER: 7,
    SHAPE: 6,
    STAT_NAMES: statnames.drone,
    BODY: {
      SPEED: base.SPEED * 0.8,
      FOV: 1.2,
    },
    MAX_CHILDREN: 2,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [9, 0, 0, 0, 360, 1],
        TYPE: [exports.hexagon, { INDEPENDENT: true, COLOR: 14 }],
      },
    ],
    GUNS: [
      {
        /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5, 14, 1, 10.5, 0, 90, 0],
      },
      {
        POSITION: [2, 16, 1, 15.5, 0, 90, 0.15],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.factory,
            g.pound,
            g.destroy,
            g.doubleHealth,
            g.greaterHealth,
            // g.greaterReload,
          ]),
          TYPE: exports.hexasenti1,
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [4, 15, 1, 8, 0, 90, 0],
      },
    ],
  },
  2,
  "Beta Hexa-Spawner"
);
exports.betahexaSeer = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "Hexa-Seer",
    DANGER: 7,
    SHAPE: 6,
    STAT_NAMES: statnames.drone,
    BODY: {
      SPEED: base.SPEED * 0.8,
      FOV: 1.2,
    },
    MAX_CHILDREN: 2,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [9, 0, 0, 0, 360, 1],
        TYPE: [exports.hexagon, { INDEPENDENT: true, COLOR: 14 }],
      },
    ],
    GUNS: [
      {
        POSITION: [6, 11, 1.2, 8, 0, -90, 0.6],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.pound,
            g.destroy,
            g.over,
            g.doubleSize,
          ]),
          TYPE: exports.necroHexagonMinion,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
          MAX_CHILDREN: 1,
        },
      },
      {
        POSITION: [6, 11, 1.2, 8, 0, 90, 0.6],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.pound,
            g.destroy,
            g.over,
            g.doubleSize,
          ]),
          TYPE: exports.necroHexagonMinion,
          AUTOFIRE: true,
          BODY: {
            ACCELERATION: 0.003,
          },
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
          MAX_CHILDREN: 1,
        },
      },
    ],
  },
  2,
  "Beta Hexa-Seer"
);

exports.betasentryseer = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "Sentryseer",
    DANGER: 7,
    BODY: {
      ACCELERATION: base.ACCEL * 0.5,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.1,
    },
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [9, 0, 0, 0, 360, 1],
        TYPE: [exports.crasherSwarmDrone, { INDEPENDENT: true, COLOR: 5 }],
      },
    ],

    GUNS: [
      {
        POSITION: [6, 11, 1.2, 8, 0, 60, 0.6],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.pound,
            g.over,
            g.doubleSize,
          ]),
          TYPE: exports.gunSentryDrone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
          MAX_CHILDREN: 1,
        },
      },
      {
        POSITION: [6, 11, 1.2, 8, 0, 180, 0.6],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.pound,
            g.over,
            g.doubleSize,
          ]),
          TYPE: exports.trapSentryDrone,
          AUTOFIRE: true,
          BODY: {
            ACCELERATION: 0.003,
          },
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
          MAX_CHILDREN: 1,
        },
      },
      {
        POSITION: [6, 11, 1.2, 8, 0, 300, 0.6],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.pound,
            g.over,
            g.doubleSize,
          ]),
          TYPE: exports.swarmSentryDrone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
          MAX_CHILDREN: 1,
        },
      },
    ],
  },
  2,
  "Beta Sentryseer"
);
//End of Beta Poly spawners
exports.infestor = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.necro,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    SHAPE: 0,
    MAX_CHILDREN: 64,
    GUNS: [
      {
        POSITION: [13.2, 5.2, 1.4, 0, -5, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.halfReload,
            g.lesserDamage,
            g.mediumSpeed,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [13.2, 5.2, 1.4, 0, 5, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.halfReload,
            g.lesserDamage,
            g.mediumSpeed,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  2,
  "Infestor"
);
exports.eggento = {
    LABEL: "???",
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.necro,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    SHAPE: 0,
    GUNS: [
      {
        POSITION: [13.2, 5.2, 1.4, 0, -5, 135, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.halfReload,
            g.lesserDamage,
            g.mediumSpeed,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [13.2, 5.2, 1.4, 0, 5, 135, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.halfReload,
            g.lesserDamage,
            g.mediumSpeed,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [13.2, 5.2, 1.4, 0, -5, -135, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.halfReload,
            g.lesserDamage,
            g.mediumSpeed,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [13.2, 5.2, 1.4, 0, 5, -135, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.halfReload,
            g.lesserDamage,
            g.mediumSpeed,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },

    {
      POSITION: [14, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    ],
  };
exports.eggpen = {
    LABEL: "Egg Pen",
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.necro,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    SHAPE: 0,
    GUNS: [
      {
        POSITION: [13.2, 5.2, 1.4, 0, -5, 135, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.halfReload,
            g.lesserDamage,
            g.mediumSpeed,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [13.2, 5.2, 1.4, 0, 5, 135, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.halfReload,
            g.lesserDamage,
            g.mediumSpeed,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [13.2, 5.2, 1.4, 0, -5, -135, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.halfReload,
            g.lesserDamage,
            g.mediumSpeed,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [13.2, 5.2, 1.4, 0, 5, -135, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.halfReload,
            g.lesserDamage,
            g.mediumSpeed,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      POSITION: [14, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    ],
  };
exports.exorcist = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.necro,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    SHAPE: 5,
    MAX_CHILDREN: 10,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.doubleHealth,
            g.doubleReload,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.pentagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  "Exorcist"
);
exports.pentaento = 
  {
    LABEL: "???",
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.necro,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    SHAPE: 5,
    GUNS: [

    {
      POSITION: [14, 8, 1, 0, 0, 360 * 0/5, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 360 * 0/5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 360 * 2/5 + 36, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.doubleHealth,
            g.doubleReload,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.pentagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },

      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 360 * 3/5 + 36, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.doubleHealth,
            g.doubleReload,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.pentagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 360 * 3/5 + 36, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.doubleHealth,
            g.doubleReload,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.pentagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },

      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 360 * 1/5 + 36, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.doubleHealth,
            g.doubleReload,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.pentagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ]
};
exports.pentapen = 
  {
    LABEL: "Penta Pen",
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.necro,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    SHAPE: 5,
    GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      POSITION: [14, 8, 1, 0, 0, 360 * 0/5, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 360 * 0/5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 360 * 2/5 + 36, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.doubleHealth,
            g.doubleReload,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.pentagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },

      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 360 * 3/5 + 36, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.doubleHealth,
            g.doubleReload,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.pentagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 360 * 3/5 + 36, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.doubleHealth,
            g.doubleReload,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.pentagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },

      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 360 * 1/5 + 36, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.doubleHealth,
            g.doubleReload,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.pentagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ]
};
exports.occultist = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.necro,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    SHAPE: 6,
    MAX_CHILDREN: 5,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 0, 1],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.superHealth,
            g.superHealth,
            g.greaterReload,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.hexagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  3,
  "Occultist"
);
exports.hexaento =
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    LABEL: "???",
    STAT_NAMES: statnames.necro,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    SHAPE: 6,
    GUNS: [
      
    {
      POSITION: [14, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 360 * 2/6, 1],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.superHealth,
            g.superHealth,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.hexagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },

      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 360 * 4/6, 1],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.superHealth,
            g.superHealth,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.hexagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
exports.hexapen =
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    LABEL: "Hexa Pen",
    STAT_NAMES: statnames.necro,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    SHAPE: 6,
    GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      POSITION: [14, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 360 * 2/6, 1],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.superHealth,
            g.superHealth,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.hexagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },

      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 360 * 4/6, 1],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.superHealth,
            g.superHealth,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.hexagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
exports.enchanter = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.necro,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    SHAPE: 3,
    MAX_CHILDREN: 18,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9.5, 1.3, 8, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.greaterDamage,
            g.greaterReload,
            g.lesserSpeed,
          ]),
          TYPE: [exports.triangleChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 3,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  3,
  "Enchanter"
);
exports.triento =
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    LABEL: "???",
    STAT_NAMES: statnames.necro,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    SHAPE: 3,
    GUNS: [

    {
      POSITION: [14, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9.5, 1.3, 8, 0, 360 * 1/3 + 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.greaterDamage,
            g.greaterReload,
            g.lesserSpeed,
          ]),
          TYPE: [exports.triangleChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 3,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },

      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9.5, 1.3, 8, 0, 360 * 2/3 + 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.greaterDamage,
            g.greaterReload,
            g.lesserSpeed,
          ]),
          TYPE: [exports.triangleChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 3,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9.5, 1.3, 8, 0, 360 * 3/3 + 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.greaterDamage,
            g.greaterReload,
            g.lesserSpeed,
          ]),
          TYPE: [exports.triangleChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 3,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
exports.tripen =
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    LABEL: "Tri Pen",
    STAT_NAMES: statnames.necro,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    SHAPE: 3,
    GUNS: [

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 8, 1.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9.5, 1.3, 8, 0, 360 * 1/3 + 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.greaterDamage,
            g.greaterReload,
            g.lesserSpeed,
          ]),
          TYPE: [exports.triangleChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 3,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },

      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9.5, 1.3, 8, 0, 360 * 2/3 + 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.greaterDamage,
            g.greaterReload,
            g.lesserSpeed,
          ]),
          TYPE: [exports.triangleChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 3,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9.5, 1.3, 8, 0, 360 * 3/3 + 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.greaterDamage,
            g.greaterReload,
            g.lesserSpeed,
          ]),
          TYPE: [exports.triangleChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 3,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
exports.blunder = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    STAT_NAMES: statnames.necro,
    BODY: {
      ACCELERATION: base.ACCEL * 0.7,
      SPEED: base.SPEED * 0.8,
      FOV: base.FOV * 1.15,
    },
    SHAPE: 6,
    MAX_CHILDREN: 5,
    GUNS: [
      {
        /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4.5, 10.5, 1, 10.5, 0, 180, 0],
      },
      {
        POSITION: [1.2, 12.5, 1, 14.8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.spawner]),
          TYPE: exports.minion,
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [3.5, 12.5, 1, 8, 0, 180, 0],
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 0, 1],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.superHealth,
            g.superHealth,
            g.greaterReload,
            g.doubleSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.hexagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  3,
  "Blunder"
);
//MOCKUPS
exports.ultimas = {
  PARENT: [exports.genericTank],
  NAME: "Ultimas",
  LABEL: "U.M.S",
  SHAPE: 5,
  COLOR: 7,
  SIZE: 17,
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.xhunter,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.xhunter,
    },
    {
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.crossbow,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.crossbow,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.overlord,
    },
    {
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.overlord,
    },
    {
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.ranger,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.ranger,
    },
    {
      POSITION: [20, 0, 0, 0, 0, 1],
      TYPE: exports.ultimateMechanicalBody3,
    },
    {
      POSITION: [20, 0, -8, 0, 190, 1],
      TYPE: exports.ultimateMechanicalBody1,
    },
    {
      POSITION: [20, 0, 8, 0, 190, 1],
      TYPE: exports.ultimateMechanicalBody2,
    },
  ],
};
exports.teramas = {
  PARENT: [exports.genericTank],
  NAME: "Teramas",
  LABEL: "U.M.S",
  COLOR: 7,
  SIZE: 18,
  SHAPE: 6,
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalBuilderTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalBuilderTurret,
    },
    {
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalMachineGunTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalMachineGunTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.anni,
    },
    {
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.anni,
    },
    {
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.hexaSpawner,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.hexaSpawner,
    },
    {
      POSITION: [20, 0, 0, 0, 0, 1],
      TYPE: exports.ultimateMechanicalBody4,
    },
    {
      POSITION: [20, 0, -8, 0, 190, 1],
      TYPE: exports.ultimateMechanicalBody1,
    },
    {
      POSITION: [20, 0, 8, 0, 190, 1],
      TYPE: exports.ultimateMechanicalBody2,
    },
  ],
};
exports.popsquare = makeMulti(
  {
    PARENT: [exports.genericTank],
    SHAPE: 4,
    SIZE: 21,
    COLOR: 13,
    /*/  BODY: {
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED * 3,
    HEALTH: base.HEALTH * 10,
    DAMAGE: base.DAMAGE,
    PENETRATION: base.PENETRATION * 1.4,
    SHIELD: base.SHIELD * 2,
    REGEN: base.REGEN * 1.25,
    FOV: base.FOV * 2,
    DENSITY: base.DENSITY,
  },/*/
    GUNS: [
      {
        POSITION: [20, 8, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.stream]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [18, 8, 1, 0, 0, 0, 0.2],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.stream]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [16, 8, 1, 0, 0, 0, 0.4],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.stream]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [14, 8, 1, 0, 0, 0, 0.6],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.stream]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  4,
  "Protector of Squares"
);

exports.poptri = makeMulti(
  {
    PARENT: [exports.genericTank],
    SHAPE: 3,
    SIZE: 26,
    COLOR: 2,
    GUNS: [
      {
        POSITION: [10, 6, 1.5, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.pound,
            g.superReload,
            g.greaterReload,
          ]),
          TYPE: exports.uncontrolledSwarmDrone,
        },
      },
      {
        POSITION: [10, 6, 1, 0, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.factory]),
          TYPE: exports.minion,
          MAX_CHILDREN: 3,
        },
      },
    ],
  },
  3,
  "Protector of Triangles"
);
exports.stab = {
  PARENT: [exports.genericTank],
  LABEL: "Stabber",
  BODY: {
    SPEED: base.SPEED * 1.2,
    DAMAGE: base.DAMAGE * 0.9,
  },
  HAS_NO_RECOIL: true,
  STAT_NAMES: statnames.blade,
  GUNS: [
    {
      POSITION: [20, 15, 0.001, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.blade]),
        TYPE: [exports.bullet, { ALPHA: 0 }],
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [25, 15, 0.001, 0, 0, 0, 0],
    },
  ],
};
exports.utwister = makeMulti(
  {
    PARENT: [exports.genericTank],
    NAME: "Rainbow✿",
    ISBOSS: true,
    DANGER: 10,
    SIZE: 24,
    COLOR: 5,
    BODY: {
      ACCELERATION: base.ACCEL * 0.6,
      SPEED: base.SPEED * 0.8,
      HEALTH: base.HEALTH * 17.5,
      DAMAGE: base.DAMAGE * 6,
      PENETRATION: base.PENETRATION * 100,
      SHIELD: base.SHIELD * 2,
      REGEN: base.REGEN * 2,
      FOV: base.FOV * 3,
      DENSITY: base.DENSITY * 7,
      PUSHABLE: 0,
    },
    GUNS: [
      {
        POSITION: [18, 8, 2, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm]),
          TYPE: exports.uncontrolledSwarmDrone,
        },
      },
      {
        POSITION: [20, 13, 0.7, 0, 0, 45, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
          TYPE: exports.hyperMissile,
        },
      },
    ],
  },
  4,
  "Ultimate Twister"
);
exports.biggestcheese = {
  PARENT: [exports.genericTank],
  LABEL: "Biggest Cheese",
  DANGER: 6,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    SPEED: base.SPEED * 0.9,
    FOV: base.FOV * 1.25,
  },
  MAX_CHILDREN: 1,
  GUNS: [
    {
      POSITION: [22, 8, 10, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.cheese]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.police = {
  PARENT: [exports.genericTank],
  LABEL: "Undercover Cop",
  BODY: {
    HEALTH: 100,
    SHIELD: 100,
    DENSITY: base.DENSITY * 0.2,
  },
  DANGER: 7,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [4.5, 8, 0, 90, 270, 1],
      TYPE: [exports.policeTriangleSymbol1, { INDEPENDENT: true }],
    },
    {
      POSITION: [4.5, 0, -2.85, 1, 90, 1],
      TYPE: [exports.policeSquareSymbol1, { INDEPENDENT: true }],
    },
    {
      POSITION: [4.5, 0, 2.85, 1, 90, 1],
      TYPE: [exports.policeSquareSymbol2, { INDEPENDENT: true }],
    },
    {
      POSITION: [4.5, -8, 0, 90, 90, 1],
      TYPE: [exports.policeTriangleSymbol2, { INDEPENDENT: true }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.tri,
          g.trifront,
          g.doubleStats,
        ]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      POSITION: [13, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.tri,
          g.thruster,
          g.doubleStats,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.tri,
          g.thruster,
          g.doubleStats,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 0, 145, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.tri,
          g.thruster,
          g.doubleStats,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 0, 215, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.tri,
          g.thruster,
          g.doubleStats,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
  ],
};

exports.fulgareon = {
  PARENT: [exports.genericTank],
  NAME: "Fulgareon",
  LABEL: "U.M.S",
  SHAPE: 5,
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.hunter,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.hunter,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.overseer,
    },
    {
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.overseer,
    },
    {
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.ranger,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.ranger,
    },
    {
      POSITION: [20, 0, 0, 0, 0, 1],
      TYPE: exports.ultimateMechanicalBody3,
    },
    {
      POSITION: [20, 0, -8, 0, 190, 1],
      TYPE: exports.ultimateMechanicalBody1,
    },
    {
      POSITION: [20, 0, 8, 0, 190, 1],
      TYPE: exports.ultimateMechanicalBody2,
    },
  ],
};
//LEGENDARY CLASSES
exports.MechanicalPentagonSpawner = {
  PARENT: [exports.genericTank],
  LABEL: "Mechanical Penta-Spawner",
  SPECIAL_EFFECT: "Legend",
  DANGER: 7,
  SHAPE: 5,
  STAT_NAMES: statnames.drone,
  BODY: {
    SPEED: base.SPEED * 0.45,
    HEALTH: base.HEALTH * 1.5,
    DAMAGE: base.DAMAGE * 0.25,
    SHIELD: base.SHIELD * 2,
    REGEN: base.REGEN * 1,
  },
  MAX_CHILDREN: 1,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.pentagonBody, { INDEPENDENT: true }],
    },
    {
      POSITION: [14, 0, 0, 0, 360, 1],
      TYPE: [exports.pentagonBody, { INDEPENDENT: true }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.pentagon, { INDEPENDENT: true, COLOR: 14 }],
    },
  ],
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 11.5, 1, 0, 0, 35, 0],
    },
    {
      POSITION: [1.2, 13.5, 1, 14.8, 0, 35, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.superHealth,
          g.greaterHealth,
          g.bitmoreHealth,
          g.minorDamage,
          g.minorDamage,
          g.greaterReload,
          g.greaterSize,
        ]),
        TYPE: [exports.legendaryPentagonMinion1, { GROWTH_FACTOR: 2.5 }],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 13.5, 1, 8, 0, 35, 0],
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 11.5, 1, 0, 0, -35, 0],
    },
    {
      POSITION: [1.2, 13.5, 1, 14.8, 0, -35, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.superHealth,
          g.greaterHealth,
          g.bitmoreHealth,
          g.minorDamage,
          g.minorDamage,
          g.greaterReload,
          g.greaterSize,
        ]),
        TYPE: [exports.legendaryPentagonMinion2, { GROWTH_FACTOR: 2.5 }],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 13.5, 1, 8, 0, -35, 0],
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 11.5, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [1.2, 13.5, 1, 14.8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.superHealth,
          g.greaterHealth,
          g.bitmoreHealth,
          g.minorDamage,
          g.minorDamage,
          g.greaterReload,
          g.greaterSize,
        ]),
        TYPE: [exports.legendaryPentagonMinion3, { GROWTH_FACTOR: 2.5 }],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 13.5, 1, 8, 0, 180, 0],
    },
  ],
};
exports.tripwire = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    SHAPE: 6,
    SPECIAL_EFFECT: "Legend",
    BODY: {
      SPEED: base.SPEED * 0.5,
      HEALTH: base.HEALTH * 2,
      DAMAGE: base.DAMAGE * 1.1,
      SHIELD: base.SHIELD * 2.3,
      REGEN: base.REGEN * 1.5,
    },
    STAT_NAMES: statnames.trap,
    HAS_NO_RECOIL: true,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [10, 17, 0, -60, 180, 1],
        TYPE: [
          exports.assassin3Turret,
          { INDEPENDENT: false, CONTROLLERS: ["nearestDifferentMaster"] },
        ],
      },
      {
        POSITION: [10, 17, 0, 60, 180, 1],
        TYPE: [
          exports.assassin3Turret,
          { INDEPENDENT: false, CONTROLLERS: ["nearestDifferentMaster"] },
        ],
      },
      {
        POSITION: [10, 17, 0, 180, 180, 1],
        TYPE: [
          exports.assassin3Turret,
          { INDEPENDENT: false, CONTROLLERS: ["nearestDifferentMaster"] },
        ],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [1, 7, 1.7, 15, 0, 30, 0],
      },
      {
        POSITION: [1, 9, 1.1, 15, 0, -30, 0],
      },
      {
        POSITION: [17, 9, 1, 0, 0, 0, 0.5],
      },
      {
        POSITION: [5, 11, 1, 17, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
          TYPE: exports.leaperDrone,
          STAT_CALCULATOR: gunCalcNames.bullet,
        },
      },
      {
        POSITION: [1, 11, 1.1, 17, 0, 0, 0.5],
      },
      {
        POSITION: [12, 11, 1, 0, 0, 0, 0.5],
      },
    ],
  },
  3,
  "Tripwire"
);
exports.chaperzone = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    SHAPE: 6,
    SPECIAL_EFFECT: "Legend",
    CONTROLLERS: ["nearestDifferentMaster"],
    FACING_TYPE: "autospin",
    BODY: {
      SPEED: base.SPEED * 0.5,
      HEALTH: base.HEALTH * 2,
      DAMAGE: base.DAMAGE * 1.1,
      SHIELD: base.SHIELD * 2.3,
      REGEN: base.REGEN * 1.5,
    },
    STAT_NAMES: statnames.trap,
    HAS_NO_RECOIL: true,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [10, 8, 0, -60, 180, 1],
        TYPE: [
          exports.weakAutoSmasherTurret,
          { INDEPENDENT: false, CONTROLLERS: ["nearestDifferentMaster"] },
        ],
      },
      {
        POSITION: [10, 8, 0, 60, 180, 1],
        TYPE: [
          exports.weakAutoSmasherTurret,
          { INDEPENDENT: false, CONTROLLERS: ["nearestDifferentMaster"] },
        ],
      },
      {
        POSITION: [10, 8, 0, 180, 180, 1],
        TYPE: [
          exports.weakAutoSmasherTurret,
          { INDEPENDENT: false, CONTROLLERS: ["nearestDifferentMaster"] },
        ],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 9, 1, 0, 0, 30, 0],
      },
      {
        POSITION: [1, 7, 1.7, 15, 0, 30, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.block]),
          TYPE: exports.unsetBlock,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [15, 9, 1, 0, 0, -30, 0],
      },
      {
        POSITION: [1, 9, 1.1, 15, 0, -30, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.block]),
          TYPE: exports.unsetBlock,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [17, 9, 1, 0, 0, 0, 0.5],
      },
      {
        POSITION: [5, 11, 1, 12, 0, 0, 0.5],
      },
      {
        POSITION: [1, 11, 1.1, 17, 0, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.block, g.pound]),
          TYPE: exports.bosspillbox,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [12, 11, 1, 0, 0, 0, 0.5],
      },
    ],
  },
  3,
  "Chaper Zone"
);
exports.mechanistbody = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 0,
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
};
exports.mechanisthand1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  COLOR: 16,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 12, 0, 0, 0],
    },
    {
      POSITION: [20, 15, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic, 
          g.missile, 
          g.doubleReload,
          g.doubleReload,
          g.greaterDamage,
          g.greaterHealth,
          g.greaterPenetration,
          g.bitmoreSpeed
        ]),
        TYPE: exports.missile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [14, 0, 0, 0, 0, 1],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.mechanisthandsaw1,
    },
  ],
};
exports.mechanist = {
  LABEL: "Mechanist",
  SPECIAL_EFFECT: "Legend",
  DANGER: 7,
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 0.75,
    HEALTH: base.HEALTH * 1.25,
    DAMAGE: base.DAMAGE * 1.75,
    SHIELD: base.SHIELD * 2.5,
    REGEN: base.REGEN * 1.25,
  },
  GUNS: [
    {
      POSITION: [1.4, 15, 1, 14.8, 0, 180, 1.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.cheese,
          g.halfStats,
          g.lesserReload,
          g.lesserReload,
          g.doubleHealth,
          g.doublePenetration,
        ]),
        TYPE: exports.autoSmasherMinion,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [15.2, 4, 1, 0, 0, 180, 1.5],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 144, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.cheese,
          g.halfStats,
          g.lesserReload,
          g.lesserReload,
          g.doubleHealth,
          g.doublePenetration,
        ]),
        TYPE: exports.smasherMinion,
        MAX_CHILDREN: 1,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 216, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.cheese,
          g.halfStats,
          g.lesserReload,
          g.lesserReload,
          g.doubleHealth,
          g.doublePenetration,
        ]),
        TYPE: exports.smasherMinion,
        MAX_CHILDREN: 1,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 180, 1],
      TYPE: [exports.mechanisthand1, { COLOR: 13 }],
    },

    {
      POSITION: [17, 17, -17, -15, 180, 1],
      TYPE: [exports.mechanisthand1, { COLOR: 13 }],
    },
    {
      POSITION: [23, 0, 0, 30, 0, 0],
      TYPE: [exports.smasherBody2, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [15, 0, 0, 180, 180, 1],
      TYPE: [exports.smasherBody2, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [100, 0, 0, 30, 0, 0],
      TYPE: [exports.strongHexaAutoRing],
    },
  ],
};
exports.MassProducer = {
  PARENT: [exports.genericTank],
  LABEL: "Mass Producer",
  SPECIAL_EFFECT: "Legend",
  TYPE: "tank",
  ACCEPTS_SCORE: true,
  DANGER: 7,
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 0.55,
    HEALTH: base.HEALTH * 1.55,
    DAMAGE: base.DAMAGE * 0.75,
    SHIELD: base.SHIELD * 2,
    RELOAD: base.RELOAD * 3,
    PENETRATION: base.PENETRATION * 0.5,
    REGEN: base.REGEN * 1.5,
  },
  FACING_TYPE: "autospin",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.flank,]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.flank,]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.flank,]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.flank,]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.flank,]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.flank,]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 0, 0, 0, 360, 1],
      TYPE: exports.megaTrapTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 0, 90, 0],
      TYPE: exports.rebounderTurretC,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 60, 90, 0],
      TYPE: exports.shellerTurretC,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 120, 90, 0],
      TYPE: exports.fragmentorTurretC,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 180, 90, 0],
      TYPE: exports.bombarderTurretC,
    },
    {
      POSITION: [12, 8, 0, -120, 90, 0],
      TYPE: exports.constructionistTurretC,
    },
    {
      POSITION: [12, 8, 0, -60, 90, 0],
      TYPE: exports.originatorTurretC,
    },
  ],
};

exports.operator = {
  PARENT: [exports.genericTank],
  LABEL: "Operator",
  SPECIAL_EFFECT: "Legend",
  ACCEPTS_SCORE: true,
  TYPE: "tank",
  DANGER: 7,
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED,
    HEALTH: base.HEALTH * 1.75,
    DAMAGE: base.DAMAGE * 1.5,
    SHIELD: base.SHIELD * 1.75,
    REGEN: base.REGEN,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 180, 360, 1],
      TYPE: [
        exports.weakAutoSmasherTurret,
        { INDEPENDENT: true, CONTROLLERS: ["nearestDifferentMaster"] },
      ],
    },
  ],

  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, 0, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.halfReload,
        ]),
        TYPE: [exports.autoSmasherMinion, { DRAW_HEALTH: true }],
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 16, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [4, 16, 1.5, 14, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.doubleReload,
          g.superHealth,
        ]),
        TYPE: [exports.bosstrapbox, { INDEPENDENT: true }],
      },
    },
    {
      POSITION: [6, 14, -2, 2, 0, 60, 0],
    },
    {
      POSITION: [6, 14, -2, 2, 0, 300, 0],
    },
  ],
};
exports.conductor = {
  PARENT: [exports.genericTank],
  LABEL: "Conductor",
  SPECIAL_EFFECT: "Legend",
  DANGER: 7,
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 0.5,
    HEALTH: base.HEALTH * 1.5,
    DAMAGE: base.DAMAGE * 2.75,
    SHIELD: base.SHIELD * 3,
    REGEN: base.REGEN / 1.5,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [25, 0, 0, 180, 360, 0],
      TYPE: [exports.smasherBody3],
    },
    {
      POSITION: [15, 0, 0, 180, 360, 1],
      TYPE: [exports.smasherBody2],
    },
    {
      POSITION: [12, 0, 0, 180, 360, 1],
      TYPE: [exports.weakAutoSmasherTurret],
    },
  ],

  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 3.5, 1, 0, 7.25, 10, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.greaterReload,
          g.bitmoreDamage,
          g.minorRecoil,
        ]),
        TYPE: exports.smasherBullet,
      },
    },
    {
      POSITION: [12, 3.5, 1, 0, -7.25, -10, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.greaterReload,
          g.bitmoreDamage,
          g.minorRecoil,
        ]),
        TYPE: exports.smasherBullet,
      },
    },
    {
      POSITION: [16, 3.5, 1, 0, 3.75, 10, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.greaterReload,
          g.minorRecoil,
        ]),
        TYPE: exports.smasherBullet,
      },
    },
    {
      POSITION: [16, 3.5, 1, 0, -3.75, -10, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.greaterReload,
          g.minorRecoil,
        ]),
        TYPE: exports.smasherBullet,
      },
    },
    {
      POSITION: [18, 10, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.minorRecoil,
          g.lesserDamage
        ]),
        TYPE: exports.smasherBullet,
      },
    },
    {
      POSITION: [15, 18, 0.6, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.minorRecoil,
          g.lesserHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [13, 7.5, 0.6, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bitmoreReload]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [13, 7.5, 0.6, 0, 0, 120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bitmoreReload]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [13, 7.5, 0.6, 0, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bitmoreReload]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.creation = makeMulti({
  PARENT: [exports.genericTank],
  FACING_TYPE: "autospin",
  SPECIAL_EFFECT: "Legend",
  DANGER: 7,
  SHAPE: 8,
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 1,
    HEALTH: base.HEALTH * 2.5,
    DAMAGE: base.DAMAGE * 0.5,
    SHIELD: base.SHIELD * 3,
    REGEN: base.REGEN * 1.5,
  },
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 6, 0, 45, 160, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [13, 6, 0, 135, 160, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [13, 6, 0, 225, 160, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [13, 6, 0, 315, 160, 0],
      TYPE: exports.auto4Turret,
    },
      {
        /** SIZE     X       Y     ANGLE    ARC */
        POSITION: [25, 0, 0, 0, 360, 0],
        TYPE: exports.octagonShell,
      },
      {
        /** SIZE     X       Y     ANGLE    ARC */
        POSITION: [14.5, 0, 0, 0, 360, 1],
        TYPE: exports.octagonShell,
      },
    {
      POSITION: [12, 0, 0, 180, 360, 1],
      TYPE: [exports.creationrifle],
    },
  ],
  GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 12, 1, 0, 0, 0, 0],
      },
    {
  POSITION: [18, 8, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic]),
    TYPE: exports.Missile,
      },
    },
      {
        POSITION: [2, 12, 1.1, 18, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.block, g.halfRange,]),
          TYPE: exports.tankpillboxTwin,
        },
      },
  ],
 },
4,
"Creationist"
);
exports.technologist = {
  PARENT: [exports.genericTank],
  LABEL: "Technologist",
  FACING_TYPE: "autospin",
  SPECIAL_EFFECT: "Legend",
  DANGER: 7,
  SHAPE: 6,
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 0.5,
    HEALTH: base.HEALTH * 2.5,
    DAMAGE: base.DAMAGE * 1.5,
    SHIELD: base.SHIELD * 3,
    REGEN: base.REGEN * 1.5,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 180, 360, 1],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [12, 8, 0, 60, 190, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [12, 8, 0, -60, 190, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [12, 8, 0, 180, 190, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [10, 20, 0, 120, 110, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [10, 20, 0, -120, 110, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [10, 20, 0, 0, 110, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
  ],
  GUNS: [
    {
      POSITION: [15, 10, 1, 0, 0, 120, 0],
    },
    {
      POSITION: [4, 10, 1.7, 15.5, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.lesserSpeed,
          g.greaterSize,
          g.greaterPenetration,
          g.doubleHealth,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4, 10, 1.7, 13.5, 0, 120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.lesserSpeed,
          g.greaterSize,
          g.greaterPenetration,
          g.doubleHealth,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 10, 1, 0, 0, -120, 0],
    },
    {
      POSITION: [4, 10, 1.7, 15.5, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.lesserSpeed,
          g.greaterSize,
          g.greaterPenetration,
          g.doubleHealth,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4, 10, 1.7, 13.5, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.lesserSpeed,
          g.greaterSize,
          g.greaterPenetration,
          g.doubleHealth,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 10, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 10, 1.7, 15.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.lesserSpeed,
          g.greaterSize,
          g.greaterPenetration,
          g.doubleHealth,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4, 10, 1.7, 13.5, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.lesserSpeed,
          g.greaterSize,
          g.greaterPenetration,
          g.doubleHealth,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.EOA = {
  PARENT: [exports.genericTank],
  LABEL: "Embodiment of Annihilation",
  SPECIAL_EFFECT: "Legend",
  ACCEPTS_SCORE: true,
  TYPE: "deity",
  DANGER: 7,
  SIZE: 20,
  STAT_NAMES: statnames.generic,
  SKILL_CAP: [15, 15, 15, 15, 15, 15, 15, 15, 15, 15],
  BODY: {
    SPEED: base.SPEED * 0.75,
    HEALTH: base.HEALTH * 50,
    DAMAGE: base.DAMAGE * 1.5,
    SHIELD: base.SHIELD * 25,
    REGEN: base.REGEN * 1.5,
    PUSHABILITY: 0.2,
    DENSITY: base.DENSITY * 4.55,
  },
  INFECTOR: true,
  VOID_CREATION: 1,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 180, 360, 1],
      TYPE: [
        exports.weakAutoSmasherTurret,
        { INDEPENDENT: true, CONTROLLERS: ["nearestDifferentMaster"] },
      ],
    },
    {
      POSITION: [13, 8, 0, -60, 180, 0],
      TYPE: [
        exports.originatorTurret,
        { INDEPENDENT: true, CONTROLLERS: ["nearestDifferentMaster"] },
      ],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [13, 8, 0, 60, 180, 0],
      TYPE: [
        exports.bombarderTurret,
        { INDEPENDENT: true, CONTROLLERS: ["nearestDifferentMaster"] },
      ],
    },
  ],
  GUNS: [
    ...extraSideGuns,
    ...sideGuns,
    ...hunterGuns,
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, 120, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory]),
        TYPE: exports.auto3ArenaMinion,
        MAX_CHILDREN: 1,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 120, 0],
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, -120, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory]),
        TYPE: exports.auto3ArenaMinion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, -120, 0],
    },
    {
      POSITION: [13.2, 5.2, 1.4, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.halfHealth,
          g.lesserReload,
          g.lesserDamage,
          g.greaterSpeed,
        ]),
        TYPE: [exports.eggChip],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 8,
        STAT_CALCULATOR: gunCalcNames.necro,
      },
    },
    {
      POSITION: [13.2, 5.2, 1.4, 0, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.halfHealth,
          g.lesserReload,
          g.lesserDamage,
          g.greaterSpeed,
        ]),
        TYPE: [exports.eggChip],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 8,
        STAT_CALCULATOR: gunCalcNames.necro,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 12, 1.2, 8, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip]),
        TYPE: [exports.sunchip],
        AUTOFIRE: true,
        MAX_CHILDREN: 5,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
      },
    },
    {
      POSITION: [5, 12, 1.2, 8, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.sunchip]),
        TYPE: [exports.sunchip],
        AUTOFIRE: true,
        MAX_CHILDREN: 5,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
      },
    },
    {
      POSITION: [5, 12, -1.3, 7, 0, 0, 0],
    },
    {
      POSITION: [19, 8, 1, 0, -4, 152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 4, -152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, 180, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.halfReload,
        ]),
        TYPE: [exports.autoSmasherMinion, { DRAW_HEALTH: true }],
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 180, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 16, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [4, 16, 1.5, 14, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.doubleReload,
          g.superHealth,
        ]),
        TYPE: [exports.bosstrapbox, { INDEPENDENT: true }],
      },
    },
    {
      POSITION: [6, 14, -2, 2, 0, 60, 0],
    },
    {
      POSITION: [6, 14, -2, 2, 0, 300, 0],
    },
  ],
};
exports.switch1 = {
  PARENT: [exports.genericTank],
  LABEL: "Tank",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18.5, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.switch2 = makeMulti(
  {
    PARENT: [exports.genericTank],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18.5, 8, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  4,
  "Quad Tank"
);
exports.switch3 = {
  PARENT: [exports.genericTank],
  LABEL: "Flank Guard",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18.5, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16.5, 8, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.switch4 = {
  PARENT: [exports.genericTank],
  LABEL: "Quad-4",
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      POSITION: [11.5, 8, 0, 0, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.5, 8, 0, 90, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11.5, 8, 0, 180, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11.5, 8, 0, 270, 190, 0],
      TYPE: exports.auto3Turret,
    },
  ],
};
exports.switch5 = {
  PARENT: [exports.genericTank],
  LABEL: "Triple Shot",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18.5, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18.5, 8, 1, 0, 0, 45, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18.5, 8, 1, 0, 0, 315, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.switch6 = {
  PARENT: [exports.genericTank],
  LABEL: "Master",
  STAT_NAMES: statnames.drone,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: base.FOV * 1.15,
  },
  MAX_CHILDREN: 10,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 1, 0, 0, 0, 0],
      TYPE: exports.masterGun,
    },
    {
      POSITION: [16, 1, 0, 120, 0, 0],
      TYPE: [exports.masterGun, { INDEPENDENT: true }],
    },
    {
      POSITION: [16, 1, 0, 240, 0, 0],
      TYPE: [exports.masterGun, { INDEPENDENT: true }],
    },
  ],
};
exports.switch7 = {
  PARENT: [exports.genericTank],
  LABEL: "Pelleter",
  DANGER: 7,
  GUNS: [...pelletGuns],
};
exports.switch8 = makeAuto(exports.smash, "Auto-Smasher", {
  type: exports.oldAutoSmasherTurret,
  size: 10.5,
});
exports.switch8.SKILL_CAP = [
  smshskl,
  smshskl,
  smshskl,
  smshskl,
  smshskl,
  smshskl,
  smshskl,
  smshskl,
  smshskl,
  smshskl,
];
exports.imageMaker = {
  PARENT: [exports.genericTank],
  ALPHA: 0,
  LABEL: "",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 10, 1.2, 5.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.minorSpeed,
          //g.doubleSize,
          g.doubleSpray,
          g.minorRecoil,
          g.doubleSize,
        ]),
        TYPE: [exports.reaperAfterImage, { PERSISTS_AFTER_DEATH: true }],
        //AUTOFIRE: true,
        MAX_CHILDREN: 3,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};

exports.imageMakerO = {
  PARENT: [exports.genericTank],
  ALPHA: 0,
  LABEL: "",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 10, 1.2, 5.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.minorSpeed,
          //g.doubleSize,
          g.doubleSpray,
          g.minorRecoil,
          g.doubleSize,
        ]),
        TYPE: [exports.oracleAfterImage, { PERSISTS_AFTER_DEATH: true }],
        //AUTOFIRE: true,
        MAX_CHILDREN: 3,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
  
};
exports.hollowAfterImage = {
  PARENT: [exports.afterImage],
  ALPHA: 0.075,
  FACING_TYPE: "turnWithSpeed",
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },

    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 135, 0, 1],
      TYPE: [exports.evilEye, { INDEPENDENT: true }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 0, 1],
      TYPE: [exports.goodEye, { INDEPENDENT: true }],
    },
  ],
  GUNS: [

  {
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [18, 8, 1, 0, 0, 0, 0],
  },
  {
    POSITION: [16, 8, 1, 0, 0, -125, 0.1],
  },
  {
    POSITION: [16, 8, 1, 0, 0, 125, 0.1],
  },
    {
      POSITION: [8, 7.5, 0.6, 7, 4, 130, 0.5],
    },
    {
      POSITION: [8, 7.5, 0.6, 7, -4, -130, 0],
    },
    
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [17, 3, 1, 0, -6, -7, 0.2],
  },
  {
    POSITION: [17, 3, 1, 0, 6, 7, 0.6],
  },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 7, -2, 0, 0, 0, 0],
    },
    {
      POSITION: [20, 10, -2, 0, 0, 0, 0.25],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 180, 0],
    },
  ],
};
exports.hollowAfterImage2 = {
  PARENT: [exports.afterImage],
  ALPHA: 0.075,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },

    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 135, 0, 1],
      TYPE: [exports.evilEye, { INDEPENDENT: true }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 0, 1],
      TYPE: [exports.goodEye, { INDEPENDENT: true }],
    },
  ],
  GUNS: [

  {
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [18, 8, 1, 0, 0, 0, 0],
  },
  {
    POSITION: [16, 8, 1, 0, 0, -125, 0.1],
  },
  {
    POSITION: [16, 8, 1, 0, 0, 125, 0.1],
  },
    {
      POSITION: [8, 7.5, 0.6, 7, 4, 130, 0.5],
    },
    {
      POSITION: [8, 7.5, 0.6, 7, -4, -130, 0],
    },
    
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [17, 3, 1, 0, -6, -7, 0.2],
  },
  {
    POSITION: [17, 3, 1, 0, 6, 7, 0.6],
  },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 7, -2, 0, 0, 0, 0],
    },
    {
      POSITION: [20, 10, -2, 0, 0, 0, 0.25],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 180, 0],
    },
  ],
};
exports.imageMakerH = {
  CONTROLLERS: ["spin"],
  PARENT: [exports.genericTank],
  ALPHA: 0,
  LABEL: "",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 10, 1.2, 5.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.minorSpeed,
          //g.doubleSize,
          g.doubleSpray,
          g.doubleSpray,
          g.minorRecoil,
          g.minorRecoil,
          g.doubleSize,
          g.doubleReload,
          g.superRange,
        ]),
        TYPE: [exports.hollowAfterImage, { PERSISTS_AFTER_DEATH: true }],
        AUTOFIRE: true,
        MAX_CHILDREN: 3,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 10, 1.2, 5.5, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.minorSpeed,
          //g.doubleSize,
          g.doubleSpray,
          g.doubleSpray,
          g.minorRecoil,
          g.minorRecoil,
          g.doubleSize,
          g.doubleReload,
          g.superRange,
        ]),
        TYPE: [exports.hollowAfterImage2, { PERSISTS_AFTER_DEATH: true }],
        AUTOFIRE: true,
        MAX_CHILDREN: 3,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.FireMaker = {
  PARENT: [exports.genericTank],
  ALPHA: 0,
  LABEL: "",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 10, 1.2, 5.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.minorSpeed,
          //g.doubleSize,
          g.doubleSpray,
          g.minorRecoil,
          g.doubleSize,
        ]),
        TYPE: [exports.flameEffect, { PERSISTS_AFTER_DEATH: true }],
        //AUTOFIRE: true,
        MAX_CHILDREN: 3,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.imageMakerVR = {
  PARENT: [exports.genericTank],
  ALPHA: 0,
  LABEL: "",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 10, 1.2, 5.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          //g.doubleSize,
          g.doubleSpray,
          g.minorRecoil,
          g.doubleSize,
        ]),
        TYPE: [exports.voidRanarAfterImage, { PERSISTS_AFTER_DEATH: true }],
        MAX_CHILDREN: 3,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.abyssthrashimageMaker = {
  PARENT: [exports.genericTank],
  ALPHA: 0,
  LABEL: "",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 10, 1.2, 5.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.minorSpeed,
          //g.doubleSize,
          g.doubleSpray,
          g.minorRecoil,
          g.doubleSize,
        ]),
        TYPE: [
          exports.abyssalThrasherAfterImage,
          { PERSISTS_AFTER_DEATH: true },
        ],
        //AUTOFIRE: true,
        MAX_CHILDREN: 3,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};

exports.soulSnatcher = {
  PARENT: [exports.xhunter],
  LABEL: "Soul Snatcher",
  DANGER: 7,
  SPECIAL_EFFECT: "Legend",
  BODY: {
    SPEED: base.SPEED * 1.5,
    HEALTH: base.HEALTH * 1.25,
    DAMAGE: base.DAMAGE * 1,
    SHIELD: base.SHIELD * 1.5,
    REGEN: base.REGEN * 2,
  },

  VOID_CREATION: 1,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 8, 0, 90, 270, 0],
      TYPE: exports.snatcherTurret,
    },
    {
      POSITION: [14, 8, 0, 270, 270, 0],
      TYPE: exports.snatcherTurret,
    },
    {
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.strongAutoTurret],
    },
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: [exports.imageMaker],
    },
  ],
  GUNS: [
    ...pelletGuns,
    ...hunterGuns,
    
    {
      POSITION: [18, 14, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.hunter,
          g.greaterDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 12, -1.3, 7, 0, 0, 0],
    },
  ],
};

exports.reaper = {
  PARENT: [exports.xhunter],
  LABEL: "Reaper",
  DANGER: 7,
  SPECIAL_EFFECT: "Legend",
  BODY: {
    SPEED: base.SPEED * 1.5,
    HEALTH: base.HEALTH * 1.5,
    DAMAGE: base.DAMAGE * 1.3,
    SHIELD: base.SHIELD * 1.2,
    REGEN: base.REGEN * 2,
  },

  VOID_CREATION: 1,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: [exports.imageMaker],
    },
  ],
  GUNS: [
    ...extraSideGuns,
    ...sideGuns,
    ...hunterGuns,
    {
      POSITION: [5, 12, -1.3, 7, 0, 0, 0],
    },
  ],
};
exports.lighthouse = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  LABEL: "Oracle",
  SPECIAL_EFFECT: "Legend",
  BODY: {
    SPEED: base.SPEED * 1.5,
    HEALTH: base.HEALTH * 1.5,
    SHIELD: base.SHIELD * 1.2,
    REGEN: base.REGEN * 2,
  },

  VOID_CREATION: 1,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: [exports.imageMakerO],
    },
  ],
  GUNS: [
    ...extraSideGuns,
    ...sideGuns,
    ...beeGuns,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
        LABEL: "Front",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    ...cruiserGuns
  ]
};
exports.hollow = {
  PARENT: [exports.genericTank],
  LABEL: "Hollow",
  DANGER: 7,
  SPECIAL_EFFECT: "Legend",
  IS_CREEP: true,
  BODY: {
    SPEED: base.SPEED * 1.75,
    HEALTH: base.HEALTH * 0.85,
    DAMAGE: base.DAMAGE * 1.3,
    SHIELD: base.SHIELD * 1.52,
    REGEN: base.REGEN * 2,
  },

  VOID_CREATION: 1,
  INVISIBLE: [0.12, 0.06],
  ALPHA: 0.45,
  INTANGIBLE: true,
  IGNORE_COLLISION: true,
  TURRETS: [

    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: [exports.imageMakerH],
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },

    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 135, 0, 1],
      TYPE: [exports.evilEye, { INDEPENDENT: true }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 0, 1],
      TYPE: [exports.goodEye, { INDEPENDENT: true }],
    },
  ],
  GUNS: [

  {
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [18, 8, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront]),
    TYPE: exports.arenaBullet,
    LABEL: "Front",
  },
},
  {
    POSITION: [16, 8, 1, 0, 0, -130, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [16, 8, 1, 0, 0, 130, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
    {
      POSITION: [8, 7.5, 0.6, 7, 4, 130, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.doubleSpeed]),
        TYPE: [exports.revenantSwarm],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [8, 7.5, 0.6, 7, -4, -130, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.doubleSpeed]),
        TYPE: [exports.revenantSwarm],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    ...hollowSideGuns,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 7, -2, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter, g.hunter2, g.minorRecoil]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [20, 10, -2, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter, g.minorRecoil]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.hollowDrone,
        MAX_CHILDREN: 4,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, smshskl, smshskl, smshskl, smshskl, smshskl, smshskl, smshskl, smshskl, smshskl],
};
exports.necrotyrant = makeMulti(
  {
    PARENT: [exports.underseer],
    DANGER: 7,
    STAT_NAMES: statnames.drone,
    SPECIAL_EFFECT: "Legend",
    BODY: {
      SPEED: base.SPEED * 1.5,
      HEALTH: base.HEALTH * 1.5,
      DAMAGE: base.DAMAGE,
      SHIELD: base.SHIELD * 1.5,
      REGEN: base.REGEN * 2,
    },
    MAX_CHILDREN: 0,
    INFECTOR: true,
    GUNS: [
      {
        POSITION: [13.2, 5.2, 1.4, 0, 0, 30, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.lesserReload,
            g.lesserDamage,
            g.greaterSpeed,
            g.superReload,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [13.2, 5.2, 1.4, 0, 0, 150, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.lesserReload,
            g.lesserDamage,
            g.greaterSpeed,
            g.superReload,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5, 12, 1.2, 8, 0, 45, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.sunchip, g.superReload]),
          TYPE: [exports.sunchip],
          AUTOFIRE: true,
          MAX_CHILDREN: 5,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [5, 12, 1.2, 8, 0, 135, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.sunchip, g.superReload]),
          TYPE: [exports.sunchip],
          AUTOFIRE: true,
          MAX_CHILDREN: 5,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9.5, 1.3, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.greaterHealth,
            g.greaterReload,
            g.lesserSpeed,
            g.superReload,
          ]),
          TYPE: [exports.triangleChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 3,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9.5, 1.3, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.greaterHealth,
            g.greaterReload,
            g.lesserSpeed,
            g.superReload,
          ]),
          TYPE: [exports.triangleChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 3,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.doubleHealth,
            g.doubleReload,
            g.doubleSize,
            g.halfSpeed,
            g.superReload,
          ]),
          TYPE: [exports.pentagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
    SHAPE: 0,
    MAX_CHILDREN: 0,
  },
  2,
  "Necro Tyrant"
);
exports.ognecrotyrant = makeMulti(
  {
    PARENT: [exports.underseer],
    DANGER: 7,
    STAT_NAMES: statnames.drone,
    SPECIAL_EFFECT: "Legend",
    BODY: {
      SPEED: base.SPEED * 1.5,
      HEALTH: base.HEALTH * 1.5,
      DAMAGE: base.DAMAGE * 0.85,
      SHIELD: base.SHIELD * 1.5,
      REGEN: base.REGEN * 2,
    },
    MAX_CHILDREN: 0,
    INFECTOR: true,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4.5, 9.5, 1.3, 8, 0, -40, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.greaterDamage,
            g.greaterReload,
            g.lesserSpeed,
          ]),
          TYPE: [exports.triangleChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 4,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4.5, 9.5, 1.3, 8, 0, 40, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.greaterDamage,
            g.greaterReload,
            g.lesserSpeed,
          ]),
          TYPE: [exports.triangleChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 4,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 12, 1.2, 8, 0, 65, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.sunchip, g.superReload]),
          TYPE: [exports.sunchip],
          AUTOFIRE: true,
          MAX_CHILDREN: 5,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [5, 12, 1.2, 8, 0, 90, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.sunchip, g.superReload]),
          TYPE: [exports.sunchip],
          AUTOFIRE: true,
          MAX_CHILDREN: 5,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 12, 1.2, 8, 0, -65, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.sunchip, g.superReload]),
          TYPE: [exports.sunchip],
          AUTOFIRE: true,
          MAX_CHILDREN: 5,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [5, 12, 1.2, 8, 0, -90, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.sunchip, g.superReload]),
          TYPE: [exports.sunchip],
          AUTOFIRE: true,
          MAX_CHILDREN: 5,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [13.2, 5.2, 1.4, 0, 5, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.lesserReload,
            g.lesserDamage,
            g.greaterSpeed,
            g.superReload,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [13.2, 5.2, 1.4, 0, -5, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.lesserReload,
            g.lesserDamage,
            g.greaterSpeed,
            g.superReload,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [13.2, 5.2, 1.4, 0, 5, -90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.lesserReload,
            g.lesserDamage,
            g.greaterSpeed,
            g.superReload,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [13.2, 5.2, 1.4, 0, -5, -90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.halfHealth,
            g.lesserReload,
            g.lesserDamage,
            g.greaterSpeed,
            g.superReload,
          ]),
          TYPE: [exports.eggChip],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 8,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.doubleHealth,
            g.doubleReload,
            g.doubleSize,
            g.halfSpeed,
            g.lesserReload,
          ]),
          TYPE: [exports.pentagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 2,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.doubleHealth,
            g.doubleReload,
            g.doubleSize,
            g.halfSpeed,
            g.halfReload
          ]),
          TYPE: [exports.pentagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 3,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
    SHAPE: 0,
    MAX_CHILDREN: 0,
  },
  1,
  "Og Necro Tyrant"
);
exports.rebel = {
  PARENT: [exports.beekeeper, exports.spike],
  LABEL: "Rebel",
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 1.5,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.5,
    SHIELD: base.SHIELD * 2,
    REGEN: base.REGEN * 1.25,
  },
  SKILL_CAP: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
  SPECIAL_EFFECT: "Legend",
  RESET_UPGRADES: true,
  GUNS: [
    ...beeGuns,
    ...pounderGun,
    {
      POSITION: [19, 8, 1, 0, -4, 152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 4, -152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
  ],
};
exports.mortarRebel = {
  PARENT: [exports.mortar, exports.spike],
  LABEL: "Mortar Rebel",
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 1.5,
    HEALTH: base.HEALTH * 1.5,
    DAMAGE: base.DAMAGE * 1.5,
    SHIELD: base.SHIELD * 1.5,
    REGEN: base.REGEN * 1.5,
  },
  SKILL_CAP: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
  SPECIAL_EFFECT: "Legend",
  RESET_UPGRADES: true,
  GUNS: [
    ...extraSideGuns,
    ...sideGuns,
    ...pounderGun,
    {
      POSITION: [19, 8, 1, 0, -4, 152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 4, -152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
  ],
};
exports.annihilatorRebel = {
  PARENT: [exports.anni, exports.megaSmasher],
  LABEL: "Annihilator Rebel",
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 1.5,
    HEALTH: base.HEALTH * 1.5,
    DAMAGE: base.DAMAGE * 1.5,
    SHIELD: base.SHIELD * 1.5,
    REGEN: base.REGEN * 1.5,
  },
  SKILL_CAP: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
  SPECIAL_EFFECT: "Legend",
  RESET_UPGRADES: true,
  GUNS: [
    {
      POSITION: [20.5, 19.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.anni]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, -4, 152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 4, -152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [25, 0, 0, 0, 360, 0],
      TYPE: exports.megaSmasherBody,
    },
  ],
};
exports.swarmRebel = {
  PARENT: [exports.battleship, exports.megaSmasher],
  LABEL: "Swarm Rebel",
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 1.5,
    HEALTH: base.HEALTH * 1.5,
    DAMAGE: base.DAMAGE * 1.5,
    SHIELD: base.SHIELD * 1.5,
    REGEN: base.REGEN * 1.5,
  },
  SKILL_CAP: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
  SPECIAL_EFFECT: "Legend",
  RESET_UPGRADES: true,
  GUNS: [
    ...basicGun,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8, 7.5, 0.6, 7, 0, -20, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.carrier]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [8, 7.5, 0.6, 7, 0, 20, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.carrier]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 2, 40, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.carrier]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -2, -40, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.carrier]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [19, 8, 1, 0, -4, 152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 4, -152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [25, 0, 0, 0, 360, 0],
      TYPE: exports.megaSmasherBody,
    },
  ],
};
//Tera classes
exports.teraOperator = {
  PARENT: [exports.genericTank],
  LABEL: "Tetra-Operator",
  SPECIAL_EFFECT: "Legend",
  SHAPE: [
    [-1, -1],
    [0, -0.7],
    [1, -1],
    [1, 1],
    [-0, 0.7],
    [-1, 1],
  ],
  DANGER: 7,
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 0.75,
    HEALTH: base.HEALTH * 2.75,
    DAMAGE: base.DAMAGE * 1.5,
    SHIELD: base.SHIELD * 2.5,
    REGEN: base.REGEN * 1.5,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 360, 360, 1],
      TYPE: [exports.smasherBody],
    },
    {
      POSITION: [10, 10, 0, 90, 120, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [10, 10, 0, -90, 120, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [10, 10, 0, 90, 120, 0],
      TYPE: [exports.trapTurret],
    },
    {
      POSITION: [10, 10, 0, -90, 120, 0],
      TYPE: [exports.trapTurret],
    },
  ],
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 2, 1, 0, -5.5, 0, 0.3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 2, 1, 0, 5.5, 0, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, 0, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.anni,
          g.halfReload,
        ]),
        TYPE: [exports.autoSmasherMinion, { DRAW_HEALTH: true }],
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 16, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [4, 16, 1.5, 14, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.doubleReload,
          g.superHealth,
        ]),
        TYPE: [exports.bosstrapbox, { INDEPENDENT: true }],
      },
    },
    {
      POSITION: [6, 14, -2, 2, 0, 60, 0],
    },
    {
      POSITION: [6, 14, -2, 2, 0, 300, 0],
    },
  ],
};
exports.teraReaper = {
  PARENT: [exports.xhunter, exports.mortar],
  LABEL: "Tetra-Reaper",
  DANGER: 7,
  HAS_NO_RECOIL: true,
  SPECIAL_EFFECT: "Legend",
  BODY: {
    SPEED: base.SPEED * 1.5,
    HEALTH: base.HEALTH * 1.7,
    DAMAGE: base.DAMAGE * 1.6,
    SHIELD: base.SHIELD,
    REGEN: base.REGEN * 2,
  },
  VOID_CREATION: 1,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 90, 270, 0],
      TYPE: exports.weakAutoSmasherTurret,
    },
    {
      POSITION: [11, 8, 0, 270, 270, 0],
      TYPE: exports.weakAutoSmasherTurret,
    },
    {
      POSITION: [11, 8, 0, 90, 270, 0],
      TYPE: exports.assassin3Turret,
    },
    {
      POSITION: [11, 8, 0, 270, 270, 0],
      TYPE: exports.assassin3Turret,
    },
    {
      POSITION: [30, 0, 0, 0, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.starBody],
    },
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: [exports.imageMaker],
    },
  ],
  GUNS: [
    ...extraSideGuns,
    ...twinGuns,
    ...sideGuns,
    ...hunterGuns,
    ...builderGun,
    ...beeGuns,
    ...pounderGun,
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [5, 12, -1.3, 0, 0, 0, 0],
    },
  ],
};

exports.teranecrotyrant = makeMulti(
  {
    PARENT: [exports.underseer],
    DANGER: 7,
    SIZE: 15,
    STAT_NAMES: statnames.drone,
    SPECIAL_EFFECT: "Legend",
    BODY: {
      SPEED: base.SPEED * 1,
      HEALTH: base.HEALTH * 2.5,
      DAMAGE: base.DAMAGE,
      SHIELD: base.SHIELD * 1.2,
      REGEN: base.REGEN * 2.4,
    },
    MAX_CHILDREN: 0,
    INFECTOR: true,
    GUNS: [
      {
        POSITION: [15.2, 8.2, 1.4, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.lesserReload,
            g.lesserDamage,
            g.greaterSpeed,
            g.superReload,
          ]),
          TYPE: [exports.infectiousBansheeGuardMinion],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 2,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [13.2, 8.2, 1.4, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.lesserReload,
            g.lesserDamage,
            g.greaterSpeed,
            g.superReload,
          ]),
          TYPE: [exports.infectiousBansheeGuardMinion],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 1,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 16, 1.2, 8, 0, -35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.sunchip, g.superReload]),
          TYPE: [exports.infectiousBuzzerProtectorMinion],
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [4, 16, 1.2, 8, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.sunchip, g.superReload]),
          TYPE: [exports.infectiousBuzzerProtectorMinion],
          AUTOFIRE: true,
          MAX_CHILDREN: 2,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 16, 1.2, 8, 0, -35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.greaterHealth,
            g.greaterReload,
            g.lesserSpeed,
            g.superReload,
            g.greaterHealth,
          ]),
          TYPE: [exports.infectiousOverBasicKeeperMinion],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 1,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 16, 1.2, 8, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.greaterHealth,
            g.greaterReload,
            g.lesserSpeed,
            g.superReload,
            g.greaterHealth,
          ]),
          TYPE: [exports.infectiousOverBasicKeeperMinion],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          MAX_CHILDREN: 2,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [2, 16, 1, 10.5, 0, 120, 0.15],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.factory,
            g.pound,
            g.destroy,
            g.doubleHealth,
            g.greaterHealth,
            g.greaterReload,
          ]),
          TYPE: exports.hexasenti1,
          MAX_CHILDREN: 1,
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [4, 15, 1, 8, 0, 120, 0],
      },
      {
        POSITION: [2, 16, 1, 10.5, 0, -120, 0.15],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.factory,
            g.pound,
            g.destroy,
            g.doubleHealth,
            g.greaterHealth,
            g.greaterReload,
          ]),
          TYPE: exports.hexasenti2,
          MAX_CHILDREN: 1,
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [4, 15, 1, 8, 0, -120, 0],
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 17, 1.3, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.doubleHealth,
            g.doubleReload,
            g.greaterHealth,
            g.halfSpeed,
            g.superReload,
          ]),
          TYPE: [exports.infectiousCrossbowSentinelMinion],
          AUTOFIRE: true,
          MAX_CHILDREN: 4,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
    TURRETS: [
      {
        /** SIZE     X       Y     ANGLE    ARC */
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: exports.smasherBody,
      },
      {
        POSITION: [15, 0, 0, 0, 0, 1],
        TYPE: exports.smasherBody,
      },
    ],
    SHAPE: 0,
    MAX_CHILDREN: 0,
  },
  1,
  "Tetra Necro Tyrant"
);
//Mythical Classes
exports.real = {
  PARENT: [exports.genericTank],
  LABEL: "Tenk",
  BODY: {
    ACCELERATION: base.ACCEL * 0.5,
    SPEED: base.SPEED * 0.8,
    FOV: base.FOV * 1.75,
  },
  SHAPE: -2,
  GUNS: [
    {
      POSITION: [50, 5, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.assass,
          g.doubleSpeed,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.reassembler = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Reassembler",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.15,
  },
  GUNS: [
    ...pounderGun,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 14, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [2, 16, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [1, 16, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.greaterReload,
          g.greaterHealth,
        ]),
        TYPE: exports.REASpillbox,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3, 16, 1, 8, 0, 0, 0],
    },
  ],
};
exports.pyritenought = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    SHAPE: 4,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [9, 0, 0, 0, 360, 1],
        TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [23, 7, 1, 0, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.mach,
            g.lowpower,
            g.halfStats,
            g.greaterReload,
            g.minorRecoil,
          ]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [12, 10, 1.4, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.greaterReload]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [5, 4, 1.4, 6, 7, -90, 0.3],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.mach,
            g.lesserStats,
            g.greaterReload,
          ]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [5, 4, 1.4, 8, 7, -90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.mach,
            g.lesserStats,
            g.greaterReload,
          ]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [5, 4, 1.4, 10, 7, -90, 0.75],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.mach,
            g.lesserStats,
            g.greaterReload,
          ]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [5, 4, 1.4, 6, -7, -90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.mach,
            g.lesserStats,
            g.greaterReload,
          ]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [5, 4, 1.4, 8, -7, -90, 0.3],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.mach,
            g.lesserStats,
            g.greaterReload,
          ]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [5, 4, 1.4, 10, -7, -90, 0.75],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.mach,
            g.lesserStats,
            g.greaterReload,
          ]),
          TYPE: exports.bullet,
        },
      },
      //
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5, 11, 1, 10.5, 0, 0, 0],
      },
      {
        POSITION: [3, 14, 1, 15.5, 0, 0, 0],
      },
      {
        POSITION: [2, 14, 1.3, 18, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.block,
            g.superReload,
            g.greaterHealth,
          ]),
          TYPE: exports.bosspillbox,
          MAX_CHILDREN: 4,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [4, 14, 1, 8, 0, 0, 0],
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

        POSITION: [15, 5, 1, 0, 8, 0, 0],
      },
      {
        POSITION: [4, 5, 1.35, 15.6, 8, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.halfDamage,
            g.halfHealth,
            g.halfReload,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [4, 5, 1.35, 13.6, 8, 0, 1 / 3],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.halfDamage,
            g.halfHealth,
            g.halfReload,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

        POSITION: [15, 5, 1, 0, -8, 0, 0],
      },
      {
        POSITION: [4, 5, 1.35, 15.6, -8, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.halfDamage,
            g.halfHealth,
            g.halfReload,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [4, 5, 1.35, 13.6, -8, 0, 1 / 3],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.halfDamage,
            g.halfHealth,
            g.halfReload,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
  },
  2,
  "Pyritenought"
);
//ENEMY AND BOSS TURRETS
exports.terrestrialUltraTrapper = {
  PARENT: [exports.autoTurret, exports.ultratrap],
  BODY: { FOV: 2.5 },
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [5, 16.6, 1.7, 13.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.anni,
          g.superReload,
          g.greaterReload,
          g.greaterSize,
          g.halfSpeed,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.miniterrestrialUltraTrapper = {
  PARENT: [exports.autoTurret, exports.ultratrap],
  BODY: { FOV: 2.5 },
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [5, 16.6, 1.7, 13.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.greaterSize,
          g.halfSpeed,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.terrestrialPillbox = {
  PARENT: [exports.autoTurret, exports.ultratrap],
  BODY: { FOV: 2.5 },
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 20, 1, 0, 0, 0, 0],
    },
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 16, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [5, 16.6, 1.7, 13.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.anni,
          g.superReload,
          g.greaterReload,
          g.doubleSize,
          g.bitmoreSize,
          g.halfRange,
          g.lesserHealth,
        ]),
        TYPE: exports.terrestrialpillbox,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.celestialUltraTrapper = {
  PARENT: [exports.autoTurret, exports.ultratrap],
  BODY: { FOV: 3 },
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15.5, 17, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [5, 16, 1.7, 15.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.anni,
          g.superReload,
          g.greaterReload,
          g.greaterSize,
          g.halfSpeed,
          g.superReload,
          g.doubleHealth,
          g.greaterDamage,
          g.halfReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};

exports.Kronostriple = {
  PARENT: [exports.auto3Turret],
  DANGER: 7,
  BODY: {
    FOV: base.FOV * 3,
  },
  LABEL: "Kronos Triplet Turret",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 10, 1, 0, 5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 10, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [21, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.kronosSkimTurret = {
  PARENT: [exports.auto3Turret],
  LABEL: "",
  COLOR: 6,
  BODY: { FOV: 8 },
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 14, 1.5, 16.5, 0, 0, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.missile,
          g.superReload,
          g.greaterSpeed,
        ]),
        TYPE: exports.kronosMissile,
      },
    },
    {
      POSITION: [17, 15, 1.6, 0, 0, 0, 0],
    },
  ],
};
exports.kronosCarrierTurret = {
  PARENT: [exports.auto3Turret, exports.carrier],
  BODY: { FOV: 5 },
  COLOR: 6,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.superDamage, g.superReload]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 2, 30, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.superDamage, g.superReload]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -2, -30, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.superDamage, g.superReload]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.kronosUltraTrapper = {
  PARENT: [exports.autoTurret, exports.ultratrap],
  BODY: { FOV: 3 },
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15.5, 17, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [5, 16, 1.7, 15.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.anni,
          g.superReload,
          g.greaterReload,
          g.greaterSize,
          g.greaterSpeed,
          g.doubleReload,
          g.doubleHealth,
          g.doubleRange,
          g.greaterDamage,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.REUltraTrapper = {
  PARENT: [exports.autoTurret, exports.ultratrap],
  BODY: { FOV: 3 },
  COLOR: 10,
  INDEPENDENT: false,
  GUNS: [
    {
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10.5, 17, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [5, 16, 1.7, 12.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.anni,
          g.superReload,
          g.greaterReload,
          g.greaterSize,
          g.halfSpeed,
          g.superReload,
          g.doubleHealth,
          g.greaterDamage,
          g.doubleHealth,
          g.doubleHealth,
          g.greaterDamage,
          g.doubleHealth,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [5, 16, 1.7, 10.5, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.anni,
          g.superReload,
          g.greaterReload,
          g.greaterSize,
          g.halfSpeed,
          g.superReload,
          g.doubleHealth,
          g.greaterDamage,
          g.doubleHealth,
          g.doubleHealth,
          g.greaterDamage,
          g.doubleHealth,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.anomalyBounce = {
  PARENT: [exports.bounce],
  COLOR: 19,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 1, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.bounce,
          g.minorRecoil,
          g.lesserRecoil,
          g.superReload,
          g.greaterReload,
        ]),
        TYPE: [exports.bullet, { ALPHA: 0 }],
      },
    },
  ],
};
exports.skimbossturret = {
  PARENT: [exports.autoTurret],
  LABEL: "",
  BODY: { FOV: 2.5 },
  COLOR: 2,
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.superHealth,
          g.superReload,
          g.superReload,
        ]),
        TYPE: exports.hyperMissile,
      },
    },
    {
      POSITION: [17, 15, 1, 0, 0, 0, 0],
    },
  ],
};
exports.rogueskimturret = {
  PARENT: [exports.autoTurret],
  INDEPENDENT: false,
  LABEL: "",
  BODY: { FOV: 2.5 },
  COLOR: 10,
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.superHealth,
          g.superReload,
          g.superReload,
        ]),
        TYPE: exports.rogueMissile,
      },
    },
    {
      POSITION: [17, 15, 1, 0, 0, 0, 0],
    },
  ],
};
exports.trimalgambossturret = {
  PARENT: [exports.autoTurret],
  LABEL: "",
  BODY: { FOV: 2.5 },
  COLOR: 19,
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16.5, 13, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.superHealth,
          g.superReload,
          g.superReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.epilepticskimbossturret = {
  PARENT: [exports.autoTurret],
  LABEL: "",
  BODY: { FOV: 2.5 },
  COLOR: 20,
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.superHealth,
          g.superHealth,
          g.superReload,
          g.superReload,
        ]),
        TYPE: exports.auto3Missile,
      },
    },
    {
      POSITION: [17, 15, 1, 0, 0, 0, 0],
    },
  ],
};
exports.shinyskimbossturret = {
  PARENT: [exports.autoTurret],
  LABEL: "",
  BODY: { FOV: 2.5 },
  COLOR: 1,
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.superHealth,
          g.superHealth,
          g.superReload,
          g.superReload,
        ]),
        TYPE: exports.autoMissile,
      },
    },
    {
      POSITION: [17, 15, 1, 0, 0, 0, 0],
    },
  ],
};
exports.autoskimbossturret = {
  PARENT: [exports.autoTurret],
  LABEL: "",
  BODY: { FOV: 2.5 },
  COLOR: 2,
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.superHealth,
          g.superReload,
          g.superReload,
        ]),
        TYPE: exports.autoMissile,
      },
    },
    {
      POSITION: [17, 15, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [10, 9, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [17, 10, 1, 0, 0, 0, 0],
    },
  ],
};
exports.nesterBoomerTurret = {
  PARENT: [exports.autoTurret, exports.boomer],
  COLOR: 14,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 10, 1, 14, 0, 0, 0],
    },
    {
      POSITION: [6, 10, -1.5, 7, 0, 0, 0],
    },
    {
      //POSITION: [  12,    15,      1,      0,      0,      0,      0,   ],
      //    }, {
      POSITION: [2, 10, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.boomerang,
          g.superReload,
          g.lesserHealth,
        ]),
        TYPE: exports.boomerang,
      },
    },
  ],
};
exports.highlordBoomerTurret = {
  PARENT: [exports.auto3Turret, exports.boomer],
  COLOR: 7,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 10, 1, 14, 0, 0, 0],
    },
    {
      POSITION: [6, 10, -1.5, 7, 0, 0, 0],
    },
    {
      //POSITION: [  12,    15,      1,      0,      0,      0,      0,   ],
      //    }, {
      POSITION: [2, 10, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.boomerang,
          g.superReload,
          g.lesserHealth,
        ]),
        TYPE: exports.boomerang,
      },
    },
  ],
};
exports.nesterBarracBoomerTurret = {
  PARENT: [exports.auto3Turret, exports.boomer],
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 10, 1, 12, 0, 0, 0],
    },
    {
      POSITION: [6, 10, -1.5, 7, 0, 0, 0],
    },
    {
      //POSITION: [  12,    15,      1,      0,      0,      0,      0,   ],
      //    }, {
      POSITION: [4, 10, 1.3, 27, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.boomerang,
          g.superReload,
          g.halfDamage,
          g.doubleReload,
        ]),
        TYPE: exports.boomerang,
      },
    },
    {
      POSITION: [4, 10, 1.3, 22, 0, 0, 0.33333333333],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.boomerang,
          g.superReload,
          g.halfDamage,
          g.doubleReload,
        ]),
        TYPE: exports.boomerang,
      },
    },
    {
      POSITION: [4, 10, 1.3, 17, 0, 0, 0.67],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.boomerang,
          g.superReload,
          g.halfDamage,
          g.doubleReload,
        ]),
        TYPE: exports.boomerang,
      },
    },
  ],
};
exports.legNesterBoomerTurret = {
  PARENT: [exports.auto3Turret, exports.boomer],
  COLOR: 0,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 10, 1, 12, 0, 0, 0],
    },
    {
      POSITION: [6, 10, -1.5, 7, 0, 0, 0],
    },
    {
      //POSITION: [  12,    15,      1,      0,      0,      0,      0,   ],
      //    }, {
      POSITION: [4, 10, 1.3, 27, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.boomerang,
          g.superReload,
          g.halfDamage,
          g.doubleReload,
        ]),
        TYPE: exports.boomerang,
      },
    },
    {
      POSITION: [4, 10, 1.3, 22, 0, 0, 0.33333333333],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.boomerang,
          g.superReload,
          g.halfDamage,
          g.doubleReload,
        ]),
        TYPE: exports.boomerang,
      },
    },
    {
      POSITION: [4, 10, 1.3, 17, 0, 0, 0.67],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.boomerang,
          g.superReload,
          g.halfDamage,
          g.doubleReload,
        ]),
        TYPE: exports.boomerang,
      },
    },
  ],
};
exports.shinyBarricadeTurret = {
  PARENT: [exports.autoTurret, exports.barricade],
  COLOR: 1,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [6, 7, 1.35, 19.6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.halfStats]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4.5, 7, 1.35, 16.6, 0, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.halfStats]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3.2, 7, 1.35, 13.6, 0, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.halfStats]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.shinyArtilleryTurret = {
  PARENT: [exports.autoTurret, exports.artillery],
  COLOR: 1,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 3, 1, 0, -6, -7, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.doubleDamage,
          g.halfStats,
        ]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [17, 3, 1, 0, 6, 7, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.nail,
          g.power,
          g.halfSpeed,
          g.doubleDamage,
          g.halfStats,
        ]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.halfStats]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.bishopAutoTurret = {
  PARENT: [exports.autoTurret],
  COLOR: 15,
  BODY: { FOV: 2.5 },
};
exports.bishopAssassinTurret = {
  PARENT: [exports.autoTurret, exports.assassin],
  COLOR: 15,
  BODY: { FOV: 3.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [27, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.assass,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 8.5, -1.6, 8, 0, 0, 0],
    },
  ],
};
exports.defenderSniperTurret = {
  PARENT: [exports.auto3Turret, exports.sniper],
  COLOR: 2,
  BODY: { FOV: 3 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.lesserDamage,
          g.superReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.warshipSniperTurret = {
  PARENT: [exports.auto3Turret, exports.sniper],
  COLOR: 5,
  BODY: { FOV: 3 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [21, 14.55, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.pound,
          g.bitmoreSpeed,
          g.lesserDamage,
          g.superReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.epilepticdefenderSniperTurret = {
  PARENT: [exports.auto3Turret, exports.crossbow],
  COLOR: 20,
  BODY: { FOV: 3 },
  GUNS: [
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [9, 3.5, 1, 4, -2, -32, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.rifle,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [9, 3.5, 1, 4, 2, 32, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.rifle,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [15.5, 3.5, 1, 0, -2.3, -19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.rifle,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [15.5, 3.5, 1, 0, 2.3, 19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.rifle,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, 3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.rifle,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, -3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.rifle,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.sniper,
          g.rifle,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.shinydefenderSniperTurret = {
  PARENT: [exports.auto3Turret, exports.crossbow],
  COLOR: 1,
  BODY: { FOV: 3 },
  GUNS: [
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [20, 9, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.rifle]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.legionaryCrasherSwarmBody = {
  PARENT: [exports.genericTank],
  LABEL: "Battleship",
  COLOR: 5,
  CONTROLLERS: ["nearestDifferentMaster"],
  SHAPE: 3,
  DANGER: 7,
  INDEPENDENT: true,
  STAT_NAMES: statnames.swarm,
  FACING_TYPE: "autospin",
  BODY: {
    ACCELERATION: base.ACCEL,
    FOV: base.FOV * 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [3.5, 9.5, 0.6, 7, 5, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.doubleReload,
          g.doubleHealth,
          g.greaterSpeed,
        ]),
        TYPE: exports.uncontrolledSwarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [3.5, 9.5, 0.6, 7, -5, -60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.doubleReload,
          g.doubleHealth,
          g.greaterSpeed,
        ]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [3.5, 9.5, 0.6, 7, 5, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.doubleReload,
          g.doubleHealth,
          g.greaterSpeed,
        ]),
        TYPE: exports.uncontrolledSwarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [3.5, 9.5, 0.6, 7, -5, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.doubleReload,
          g.doubleHealth,
          g.greaterSpeed,
        ]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [3.5, 9.5, 0.6, 7, 5, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.doubleReload,
          g.doubleHealth,
          g.greaterSpeed,
        ]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [3.5, 9.5, 0.6, 7, -5, 60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.doubleReload,
          g.doubleHealth,
          g.greaterSpeed,
        ]),
        TYPE: exports.uncontrolledSwarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [10, 10, 0, 0, 150, 0],
      TYPE: [exports.autoSmasherTurret, {
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  })}],
    },
    {
      POSITION: [10, 10, 0, -120, 150, 0],
      TYPE: [exports.autoSmasherTurret, {
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  })}],
    },
    {
      POSITION: [10, 10, 0, 120, 150, 0],
      TYPE: [exports.autoSmasherTurret, {
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  })}],
    },
  ],
};
exports.legionarySprayerTurret = {
  PARENT: [exports.auto3Turret, exports.basic],
  COLOR: 5,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [23, 7, 1, 0, 0, 0, 0],

      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.mach,
          g.minorRecoil,
          g.greaterReload,
          g.doubleHealth,
          g.greaterDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 10, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.mach,
          g.minorRecoil,
          g.greaterReload,
          g.doubleHealth,
          g.greaterDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.shinylegionarySprayerTurret = {
  PARENT: [exports.auto3Turret, exports.basic],
  COLOR: 1,
  SHAPE: 3,
  BODY: { FOV: 2.5 },
  TURRETS: [
    {
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.triangleSaw1],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21.5, 8, 1.4, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.lesserHealth,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [23, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.mach, g.minorRecoil]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 10, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.ShinylegionarySprayerBody2 = {
  PARENT: [exports.genericTank],
  LABEL: "Battleship",
  COLOR: 1,
  CONTROLLERS: ["alwaysFire"],
  SHAPE: 3,
  DANGER: 7,
  INDEPENDENT: true,
  STAT_NAMES: statnames.swarm,
  FACING_TYPE: "autospin",
  BODY: {
    ACCELERATION: base.ACCEL,
    FOV: base.FOV * 1.2,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5.5, 9.5, 0.6, 7, 0, -60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [3.5, 9.5, 0.6, 7, 5, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed]),
        TYPE: exports.uncontrolledSwarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [3.5, 9.5, 0.6, 7, -5, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed]),
        TYPE: exports.uncontrolledSwarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [5.5, 9.5, 0.6, 7, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [3.5, 9.5, 0.6, 7, 5, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed]),
        TYPE: exports.uncontrolledSwarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [3.5, 9.5, 0.6, 7, -5, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [5.5, 9.5, 0.6, 7, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [3.5, 9.5, 0.6, 7, 5, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [3.5, 9.5, 0.6, 7, -5, 60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed]),
        TYPE: exports.uncontrolledSwarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: [exports.triangleSaw1],
    },
    {
      POSITION: [10, 10, 0, 0, 150, 0],
      TYPE: exports.autoSmasherTripleTurret,
    },
    {
      POSITION: [10, 10, 0, -120, 150, 0],
      TYPE: exports.autoSmasherTripleTurret,
    },
    {
      POSITION: [10, 10, 0, 120, 150, 0],
      TYPE: exports.autoSmasherTripleTurret,
    },
  ],
};
exports.eliteSprayerTurret = {
  PARENT: [exports.auto3Turret, exports.basic],
  COLOR: 5,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [23, 7, 1, 0, 0, 0, 0],

      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.lowpower,
          g.lesserDamage,
          g.greaterReload,
          g.minorRecoil,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 10, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.eliteMiniTurret = {
  PARENT: [exports.auto3Turret, exports.basic],
  COLOR: 5,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.lesserHealth, ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, 0, 0, 0.333],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.lesserHealth, ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 0, 0.667],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.lesserHealth, ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.eliteStreamTurret = {
  PARENT: [exports.auto3Turret, exports.basic],
  COLOR: 5,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [26, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.stream,]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [24, 8, 1, 0, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.stream, ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 8, 1, 0, 0, 0, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.stream,]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, 0, 0, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.stream, ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 0, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.stream,]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.eliteBasicTurret = {
  PARENT: [exports.auto3Turret, exports.basic],
  COLOR: 5,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.lesserHealth,
          g.lesserDamage,
          g.superReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.eliteSniperTurret = {
  PARENT: [exports.defenderSniperTurret],
  COLOR: 5,
};
exports.highlordAssassinTurret = {
  PARENT: [exports.assassin3Turret],
  COLOR: 7,
};
exports.celestialArtilleryTurret = {
  PARENT: [exports.auto3Turret, exports.machine],
  COLOR: 16,
  BODY: { FOV: 3 },
  GUNS: [
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [15, 3, 1, 0, -6, -7, 0.2],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.gunner,
        g.arty,
        g.nail,
        g.power,
        g.bitmoreRange
      ]),
      TYPE: exports.bullet,
      LABEL: "Secondary",
    },
  },
  {
    POSITION: [15, 3, 1, 0, 6, 7, 0.6],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([
        g.basic,
        g.gunner,
        g.arty,
        g.nail,
        g.power,
        g.bitmoreRange
      ]),
      TYPE: exports.bullet,
      LABEL: "Secondary",
    },
  },
     {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [20, 12, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.doubleRange, g.greaterSpeed, g.lesserHealth, g.lesserPenetration, g.greaterReload]),
      TYPE: exports.bullet,
    },
  },
  ],
};
exports.eliteMachineTurret = {
  PARENT: [exports.auto3Turret, exports.machine],
  COLOR: 5,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 10, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.elitePelleterTurret = {
  PARENT: [exports.autoTurret, exports.switch7],
  COLOR: 5,
  BODY: { FOV: 2.5 },
  INDEPENDENT: false,
  GUNS: [
    {
      POSITION: [19, 2, 1, 0, -2.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 2, 1, 0, 2.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 11, 1, 0, 0, 0, 0],
    },
  ],
};
exports.squaredPelleterTurret = {
  PARENT: [exports.autoTurret, exports.switch7],
  COLOR: 16,
  BODY: { FOV: 2.5 },
  INDEPENDENT: false,
  GUNS: [
    {
      POSITION: [19, 2, 1, 0, -2.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfHealth,
          g.lesserPenetration,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 2, 1, 0, 2.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfHealth,
          g.lesserPenetration,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 11, 1, 0, 0, 0, 0],
    },
  ],
};
exports.nesterTwisterTurret = {
  PARENT: [exports.autoTurret, exports.twister],
  COLOR: 14,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      POSITION: [18, 2.5, 5, 1, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 13.3, -1.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.doubleReload,
        ]),
        TYPE: exports.tisterMissile,
      },
    },
  ],
};
exports.hypernesterTwisterTurret = {
  PARENT: [exports.autoTurret, exports.twister],
  COLOR: 14,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      POSITION: [18, 2.5, 5, 1, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 13.3, -1.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.doubleReload,
        ]),
        TYPE: exports.hyperTwisterMissile,
      },
    },
  ],
};
exports.nesterSwarmerTurret = {
  PARENT: [exports.autoTurret, exports.swarmer],
  COLOR: 14,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [11, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
        TYPE: [exports.hive, { MOTION_TYPE: "slow" }],
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [12, 12, 1, 5, 0, 0, 0],
    },
  ],
};
exports.aresSwarmerTurret = {
  PARENT: [exports.nesterSwarmerTurret],
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.doubleReload,
          g.greaterReload,
          g.doubleSpeed,
          g.greaterRange,
        ]),
        TYPE: [exports.miniHive, { MOTION_TYPE: "slow" }],
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
};
exports.gersemiCruiserTurret = {
  PARENT: [exports.auto3Turret, exports.cruiser],
  BODY: { FOV: 2.5 },
  COLOR: 1,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8, 7.5, 0.6, 7, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.juliusCruiserTurret = {
  PARENT: [exports.auto3Turret, exports.cruiser],
  BODY: { FOV: 2.5 },
  COLOR: 16,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8, 8.5, 0.6, 7, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound, g.greaterSpeed, g.greaterSize]),
        TYPE: exports.eggSwarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.gersemiGunnerTurret = {
  PARENT: [exports.auto3Turret, exports.gunner],
  BODY: { FOV: 2.5 },
  COLOR: 1,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 3.5, 1, 0, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.puregunner,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.ezekielSkimmerTurret = {
  PARENT: [exports.auto3Turret, exports.skimmer],
  BODY: { FOV: 2.5 },
  COLOR: 2,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [17, 15, 1, 0, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.doubleReload,
          g.greaterReload,
        ]),
        TYPE: exports.missile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
};
exports.zaphkielSkimmerTurret = {
  PARENT: [exports.auto3Turret, exports.skimmer],
  BODY: { FOV: 2.5 },
  COLOR: 2,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [17, 15, 1, 0, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.doubleReload,
          g.greaterReload,
        ]),
        TYPE: exports.hyperMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
};
exports.seleneTwisterTurret = {
  PARENT: [exports.auto3Turret, exports.twister],
  BODY: { FOV: 2.5 },
  COLOR: 13,
  GUNS: [
    {
      POSITION: [18, 2.5, 5, 1, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 13.3, -1.5, 0, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.doubleReload,
          g.greaterReload,
          g.lesserStats,
        ]),
        TYPE: exports.hyperTwisterMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
};
exports.miniseleneTwisterTurret = {
  PARENT: [exports.auto3Turret, exports.twister],
  BODY: { FOV: 2.5 },
  COLOR: 13,
  INDEPENDANT: false,
  GUNS: [
    {
      POSITION: [18, 2.5, 5, 1, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 13.3, -1.5, 0, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.halfStats,
          g.greaterReload,
        ]),
        TYPE: exports.twisterMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
};
exports.erisRocketeerTurret = {
  PARENT: [exports.auto3Turret, exports.rocketeer],
  BODY: { FOV: 2.5 },
  COLOR: 5,
  GUNS: [
    {
      POSITION: [20, 3, 4, 1, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 11.5, -1.6, 0, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.halfDamage,
          g.doubleReload,
          g.greaterReload,
        ]),
        TYPE: exports.rocket,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
};
exports.nesterCruiserTurret = {
  PARENT: [exports.auto3Turret, exports.cruiser],
  BODY: { FOV: 2.5 },
  COLOR: 14,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.halfDamage, g.lesserHealth]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.halfDamage, g.lesserHealth]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.freyjaCruiserTurret = {
  PARENT: [exports.auto3Turret, exports.cruiser],
  BODY: { FOV: 2.5 },
  COLOR: 16,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.doubleStats,]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.doubleStats,]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.NapoleonCruiserTurret = {
  PARENT: [exports.auto3Turret, exports.cruiser],
  BODY: { FOV: 3.5 },
  COLOR: 16,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 25, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.doubleDamage, g.doubleReload]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -25, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.doubleDamage, g.doubleReload]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.hellwarkBeeTurret = {
  PARENT: [exports.auto3Turret, exports.cruiser],
  BODY: { FOV: 3.5 },
  COLOR: 16,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 4, 0.9, 7, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.greaterSize, g.bitmoreSize, g.greaterDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [6, 4, 0.9, 7, 0, 40, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.greaterSize, g.bitmoreSize, g.greaterDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [6, 4, 0.9, 7, 0, -40, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.greaterSize, g.bitmoreSize, g.greaterDamage]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.erebusPentaTurret = {
  PARENT: [exports.autoTurret],
  BODY: { FOV: 3.5 },
  COLOR: 16,
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 13.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [1.2, 15.5, 1, 14.8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.superHealth,
          g.minorDamage,
          g.lesserReload,
        ]),
        TYPE: [exports.pentagonsenti1, { GROWTH_FACTOR: 1.5 }],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      }
    },
    {
      POSITION: [3.5, 15.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.nesterBarricadeTurret = {
  PARENT: [exports.shinyBarricadeTurret],
  BODY: { FOV: 2.5 },
  COLOR: 14,
};
exports.nesterPelleterTurret = {
  PARENT: [exports.elitePelleterTurret],
  COLOR: 14,
};
exports.voidNesterMinigunTurret = {
  PARENT: [exports.shinyBarricadeTurret],
  BODY: { FOV: 2.5 },
  COLOR: 19,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, 0, 0, 0.333],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 0, 0.667],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 140, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.lesserHealth]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -140, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.lesserHealth]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.legnesterPelleterTurret = {
  PARENT: [exports.elitePelleterTurret],
  COLOR: 0,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      /*/POSITION: [12, 3.5, 1, 0, 7.25, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 3.5, 1, 0, -7.25, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner]),
        TYPE: exports.bullet,
      },
    },
    {/*/
      POSITION: [16, 3.5, 1, 0, 3.75, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 3.5, 1, 0, -3.75, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 5.5, 0.6, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.mach, g.twin, g.puregunner]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [12, 12, 1, 0, 0, 0, 0.25],
    },
  ],
};
exports.amalgamSniperTurret = {
  PARENT: [exports.defenderSniperTurret],
  COLOR: 19,
};
exports.barracudaSniperTurret = {
  PARENT: [exports.defenderSniperTurret],
  COLOR: 5,
};
exports.amalgamHyperSkimmer = {
  PARENT: [exports.skimbossturret],
  COLOR: 19,
};
//ENEMIES
exports.eggCrasher = {
  PARENT: [exports.enemy, exports.meleeEnemy],
  LABEL: "Egg Crasher",
  TYPE: "crasher",
  COLOR: 5,
  VALUE: 30,
  SHAPE: 0,
  SIZE: 5,
  VARIES_IN_SIZE: true,
  SKILL: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  BODY: {
    FOV: 1,
    REGEN: 0,
    SPEED: 5,
    ACCEL: 0.5,
    HEALTH: 1,
    DAMAGE: 3,
    PENETRATION: 5,
    PUSHABILITY: 2,
    DENSITY: 2,
    RESIST: 1,
  },
  GIVE_KILL_MESSAGE: false,
};
exports.squareCrasher = {
  PARENT: [exports.eggCrasher],
  LABEL: "Square Crasher",
  VALUE: 120,
  SHAPE: 4,
  SIZE: 10,
};
exports.triangleCrasher = {
  PARENT: [exports.eggCrasher],
  LABEL: "Triangle Crasher",
  VALUE: 600,
  SHAPE: 3,
  SIZE: 10,
};
exports.pentagonCrasher = {
  PARENT: [exports.eggCrasher],
  LABEL: "Pentagon Crasher",
  VALUE: 3000,
  SHAPE: 5,
  SIZE: 15,
  BODY: {
    HEALTH: 10,
  },
};
exports.hexagonCrasher = {
  PARENT: [exports.eggCrasher],
  LABEL: "Hexagon Crasher",
  VALUE: 15000,
  SHAPE: 6,
  SIZE: 29,
  BODY: {
    SPEED: 4.5,
    HEALTH: 200,
    DAMAGE: 5,
    SHIELD: 25,
    DENSITY: 2.2,
  },
  GIVE_KILL_MESSAGE: true,
};
exports.shinyEggCrasher = {
  PARENT: [exports.eggCrasher],
  LABEL: "Shiny Egg Crasher",
  VALUE: 3000,
  COLOR: 1,
  SIZE: 8,
  BODY: {
    SPEED: 4,
    HEALTH: 10,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.75, 0, 0, 45, 360, 1],
      TYPE: [exports.greenEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.shinySquareCrasher = {
  PARENT: [exports.squareCrasher],
  LABEL: "Shiny Square Crasher",
  VALUE: 12000,
  COLOR: 1,
  SIZE: 10.5,
  BODY: {
    SPEED: 4,
    HEALTH: 25,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 360, 1],
      TYPE: [exports.greenSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.shinyTriangleCrasher = {
  PARENT: [exports.triangleCrasher],
  LABEL: "Shiny Triangle Crasher",
  COLOR: 1,
  VALUE: 60000,
  SIZE: 10.5,
  BODY: {
    SPEED: 4,
    HEALTH: 50,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 180, 360, 1],
      TYPE: [exports.greenTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.shinyPentagonCrasher = {
  PARENT: [exports.pentagonCrasher],
  LABEL: "Shiny Pentagon Crasher",
  VALUE: 300000,
  COLOR: 1,
  SIZE: 15.5,
  BODY: {
    SPEED: 4,
    HEALTH: 230,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16.25, 0, 0, 180, 360, 1],
      TYPE: [exports.greenPentagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.shinyHexagonCrasher = {
  PARENT: [exports.hexagonCrasher],
  LABEL: "Shiny Hexagon Crasher",
  VALUE: 1500000,
  SIZE: 29.5,
  COLOR: 1,
  BODY: {
    SPEED: 4,
    HEALTH: 720,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 90, 360, 1],
      TYPE: [exports.greenHexagon, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.legendaryEggCrasher = {
  PARENT: [exports.shinyEggCrasher],
  LABEL: "Legendary Egg Crasher",
  COLOR: 0,
  VALUE: 4500,
  SIZE: 11.25,
  BODY: {
    SPEED: 4,
    DAMAGE: 7,
    HEALTH: 30,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.75, 0, 0, 45, 360, 1],
      TYPE: [exports.tealEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 0, 0, 0, 360, 1],
      TYPE: [exports.tealEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.legendarySquareCrasher = {
  PARENT: [exports.shinySquareCrasher],
  LABEL: "Legendary Square Crasher",
  COLOR: 0,
  VALUE: 18000,
  SIZE: 12,
  BODY: {
    SPEED: 4,
    DAMAGE: 7,
    HEALTH: 90,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 360, 1],
      TYPE: [exports.tealSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8, 0, 0, 0, 360, 1],
      TYPE: [exports.tealSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.legendaryTriangleCrasher = {
  PARENT: [exports.shinyTriangleCrasher],
  LABEL: "Legendary Triangle Crasher",
  COLOR: 0,
  VALUE: 90000,
  SIZE: 12,
  BODY: {
    SPEED: 4,
    DAMAGE: 7,
    HEALTH: 100,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 180, 360, 1],
      TYPE: [exports.tealTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5.25, 0, 0, 0, 360, 1],
      TYPE: [exports.tealTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.legendaryPentagonCrasher = {
  PARENT: [exports.shinyPentagonCrasher],
  LABEL: "Legendary Pentagon Crasher",
  COLOR: 0,
  VALUE: 450000,
  SIZE: 16,
  BODY: {
    SPEED: 4,
    DAMAGE: 7,
    HEALTH: 650,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16.25, 0, 0, 180, 360, 1],
      TYPE: [exports.tealPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12.75, 0, 0, 0, 360, 1],
      TYPE: [exports.tealPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
  ],
};
exports.legendaryHexagonCrasher = {
  PARENT: [exports.shinyHexagonCrasher],
  LABEL: "Legendary Hexagon Crasher",
  COLOR: 0,
  VALUE: 2250000,
  SIZE: 30,
  BODY: {
    SPEED: 4,
    DAMAGE: 7,
    HEALTH: 1230,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 90, 360, 1],
      TYPE: [exports.tealHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.tealHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
  ],
};
exports.shadowEggCrasher = {
  PARENT: [exports.legendaryEggCrasher],
  LABEL: "Shadow Egg Crasher",
  COLOR: 19,
  VALUE: 6750,
  ALPHA: 0.25,
 // IGNORE_COLLISION: true,
  BODY: {
    SPEED: 7.5,
    HEALTH: 45,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 30, 360, 0],
      TYPE: exports.smasherBody2,
    },
  ],
};
exports.shadowSquareCrasher = {
  PARENT: [exports.legendarySquareCrasher],
  LABEL: "Shadow Square Crasher",
  COLOR: 19,
  VALUE: 27000,
  ALPHA: 0.25,
//  IGNORE_COLLISION: true,
  BODY: {
    SPEED: 7.5,
    HEALTH: 120,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 30, 360, 0],
      TYPE: exports.smasherBody2,
    },
  ],
};
exports.shadowTriangleCrasher = {
  PARENT: [exports.legendaryTriangleCrasher],
  LABEL: "Shadow Triangle Crasher",
  COLOR: 19,
  VALUE: 135000,
  ALPHA: 0.25,
 // IGNORE_COLLISION: true,
  BODY: {
    SPEED: 7.5,
    HEALTH: 150,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 30, 360, 0],
      TYPE: exports.smasherBody2,
    },
  ],
};
exports.shadowPentagonCrasher = {
  PARENT: [exports.legendaryPentagonCrasher],
  LABEL: "Shadow Pentagon Crasher",
  COLOR: 19,
  VALUE: 750000,
  ALPHA: 0.25,
 // IGNORE_COLLISION: true,
  BODY: {
    SPEED: 7.5,
    HEALTH: 1050,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 30, 360, 0],
      TYPE: exports.smasherBody2,
    },
  ],
};
exports.shadowHexagonCrasher = {
  PARENT: [exports.legendaryHexagonCrasher],
  LABEL: "Shadow Hexagon Crasher",
  COLOR: 19,
  VALUE: 3375000,
  ALPHA: 0.25,
 // IGNORE_COLLISION: true,
  BODY: {
    SPEED: 7.5,
    HEALTH: 3000,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 30, 360, 0],
      TYPE: exports.smasherBody2,
    },
  ],
};
exports.rainbowEggCrasher = {
  PARENT: [exports.legendaryEggCrasher],
  LABEL: "Rainbow Egg Crasher",
  COLOR: 36,
  VALUE: 9000,
  SIZE: 12,
  BODY: {
    SPEED: 5,
    HEALTH: 60,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.75, 0, 0, 45, 360, 1],
      TYPE: [exports.rainEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 0, 0, 0, 360, 1],
      TYPE: [exports.rainEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [2, 0, 0, 0, 360, 1],
      TYPE: [exports.rainEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.rainbowSquareCrasher = {
  PARENT: [exports.legendarySquareCrasher],
  LABEL: "Rainbow Square Crasher",
  COLOR: 36,
  VALUE: 36000,
  SIZE: 13.5,
  BODY: {
    SPEED: 5,
    HEALTH: 160,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 360, 1],
      TYPE: [exports.rainSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8, 0, 0, 0, 360, 1],
      TYPE: [exports.rainSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 0, 0, 45, 360, 1],
      TYPE: [exports.rainSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
  ],
};
exports.rainbowTriangleCrasher = {
  PARENT: [exports.legendaryTriangleCrasher],
  LABEL: "Rainbow Triangle Crasher",
  COLOR: 36,
  VALUE: 180000,
  SIZE: 13.5,
  BODY: {
    SPEED: 5,
    HEALTH: 200,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 180, 360, 1],
      TYPE: [exports.rainTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5.25, 0, 0, 0, 360, 1],
      TYPE: [exports.rainTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [2.5, 0, 0, 180, 360, 1],
      TYPE: [exports.rainTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.rainbowPentagonCrasher = {
  PARENT: [exports.legendaryPentagonCrasher],
  LABEL: "Rainbow Pentagon Crasher",
  COLOR: 36,
  VALUE: 900000,
  SIZE: 20,
  BODY: {
    SPEED: 5,
    HEALTH: 1400,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16.25, 0, 0, 180, 360, 1],
      TYPE: [exports.rainPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12.75, 0, 0, 0, 360, 1],
      TYPE: [exports.rainPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9.75, 0, 0, 180, 360, 1],
      TYPE: [exports.rainPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
  ],
};
exports.rainbowHexagonCrasher = {
  PARENT: [exports.legendaryHexagonCrasher],
  LABEL: "Rainbow Hexagon Crasher",
  COLOR: 36,
  VALUE: 4500000,
  SIZE: 35,
  BODY: {
    SPEED: 5,
    HEALTH: 5000,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16.25, 0, 0, 90, 360, 1],
      TYPE: [exports.rainHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.75, 0, 0, 0, 360, 1],
      TYPE: [exports.rainHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12.75, 0, 0, 90, 360, 1],
      TYPE: [exports.rainHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
  ],
};

exports.abyssalSphereCrasher = {
  PARENT: [exports.voidlordBoss, exports.rainbowEggCrasher],
  LABEL: "Abyssal Sphere-Crasher",
  COLOR: 19,
  VALUE: 3000000,
  SKILL: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  SIZE: 22,
  BODY: {
    SPEED: 5,
    HEALTH: 1000,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [20.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody2,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.75, 0, 0, 45, 360, 1],
      TYPE: [exports.blackEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 0, 0, 0, 360, 1],
      TYPE: [exports.blackEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [2, 0, 0, 0, 360, 1],
      TYPE: [exports.blackEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [0.75, 0, 0, 0, 360, 1],
      TYPE: [exports.blackEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.abyssalCubeCrasher = {
  PARENT: [exports.voidlordBoss, exports.rainbowSquareCrasher],
  LABEL: "Abyssal Cube-Crasher",
  COLOR: 19,
  VALUE: 4000000,
  SKILL: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  SIZE: 25,
  BODY: {
    SPEED: 5,
    HEALTH: 3000,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [20.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody2,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 360, 1],
      TYPE: [exports.blackSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8, 0, 0, 0, 360, 1],
      TYPE: [exports.blackSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 0, 0, 45, 360, 1],
      TYPE: [exports.blackSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [2.75, 0, 0, 0, 360, 1],
      TYPE: [exports.blackSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.abyssalTetraCrasher = {
  PARENT: [exports.voidlordBoss, exports.rainbowTriangleCrasher],
  LABEL: "Abyssal Tetra-Crasher",
  COLOR: 19,
  VALUE: 5000000,
  SKILL: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  SIZE: 25,
  BODY: {
    SPEED: 5,
    HEALTH: 6000,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [20.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody2,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 180, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5.25, 0, 0, 0, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [2.5, 0, 0, 180, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [1.25, 0, 0, 0, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.abyssalDodecaCrasher = {
  PARENT: [exports.voidlordBoss, exports.rainbowPentagonCrasher],
  LABEL: "Abyssal Dodeca-Crasher",
  COLOR: 19,
  VALUE: 6000000,
  SKILL: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  SIZE: 25,
  BODY: {
    SPEED: 5,
    HEALTH: 10000,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [20.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody2,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16.25, 0, 0, 180, 360, 1],
      TYPE: [exports.blackPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12.75, 0, 0, 0, 360, 1],
      TYPE: [exports.blackPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9.75, 0, 0, 180, 360, 1],
      TYPE: [exports.blackPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7.25, 0, 0, 0, 360, 1],
      TYPE: [exports.blackPentagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
  ],
};
exports.abyssalHexaCrasher = {
  PARENT: [exports.voidlordBoss, exports.rainbowHexagonCrasher],
  LABEL: "Abyssal Hexa-Crasher",
  COLOR: 19,
  VALUE: 7000000,
  SKILL: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  SIZE: 62,
  BODY: {
    SPEED: 5,
    HEALTH: 15000,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [20.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody2,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17.5, 0, 0, 90, 360, 1],
      TYPE: [exports.blackHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14.75, 0, 0, 0, 360, 1],
      TYPE: [exports.blackHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12.75, 0, 0, 90, 360, 1],
      TYPE: [exports.blackHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.25, 0, 0, 0, 360, 1],
      TYPE: [exports.blackHexagon, { INDEPENDENT: true, COLOR: 1 }],
      COLOR: 5,
    },
  ],
};

exports.eggSentry = {
  PARENT: [exports.eggCrasher],
  LABEL: "Egg Sentry",
  SIZE: 8,
  SKILL: skillSet({
    rld: 0.6,
    dam: 0.5,
    pen: 0.4,
    str: 0.4,
    spd: 1,
    atk: 0,
    hlt: 0,
    shi: 0,
    rgn: 0,
    mob: 0,
  }),
  VALUE: 300,
  BODY: {
    FOV: 0.8,
    PENETRATION: 3,
    DAMAGE: 3,
    HEALTH: 10,
  },
  GIVE_KILL_MESSAGE: true,
};
exports.eggBasicSentry = {
  PARENT: [exports.eggSentry],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.lesserStats]),
        WAIT_TO_CYCLE: true,
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.eggSorcererSentry = {
  PARENT: [exports.eggSentry],
  MAX_CHILDREN: 25,
  BODY: {
    SPEED: 2.5,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [3.8, 9, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.minorHealth,
          g.minorReload,
          g.lesserDamage,
          g.superSpeed,
          g.greaterSpeed,
          g.minorSize,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [3.8, 9, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.minorHealth,
          g.minorReload,
          g.lesserDamage,
          g.superSpeed,
          g.greaterSpeed,
          g.minorSize,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
      },
    },
  ],
};
exports.eggAutoSentry = makeAuto(exports.eggSentry, "Egg Sentry");
exports.squareSentry = {
  PARENT: [exports.squareCrasher],
  LABEL: "Square Sentry",
  SIZE: 13,
  VALUE: 1200,
  SKILL: skillSet({
    rld: 0.5,
    dam: 0.6,
    pen: 0.5,
    str: 0.5,
    spd: 1,
    atk: 0,
    hlt: 0,
    shi: 0,
    rgn: 0,
    mob: 0,
  }),
  BODY: {
    FOV: 0.8,
    PENETRATION: 3,
    DAMAGE: 4,
    HEALTH: 10,
  },
  GIVE_KILL_MESSAGE: true,
};
exports.squareTwinSentry = {
  PARENT: [exports.squareSentry],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.lesserStats]),
        TYPE: exports.bullet,
      },
    },
    {
      /* LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.lesserStats]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.squareSniperSentry = {
  PARENT: [exports.squareSentry],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserStats]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.squareAuto2Sentry = {
  PARENT: [exports.squareSentry],
  TURRETS: [
    {
      POSITION: [12, 9, 0, 0, 160, 0],
      TYPE: exports.autoTurret,
    },
    {
      POSITION: [12, 9, 0, 180, 160, 0],
      TYPE: exports.autoTurret,
    },
  ],
};

exports.triangleSentry = {
  PARENT: [exports.triangleCrasher],
  LABEL: "Triangle Sentry",
  SIZE: 13,
  SKILL: skillSet({
    rld: 0.4,
    dam: 1,
    pen: 0.8,
    str: 0.8,
    spd: 1,
    atk: 0,
    hlt: 0,
    shi: 0,
    rgn: 0,
    mob: 0,
  }),
  VALUE: 6000,
  BODY: {
    FOV: 0.8,
    PENETRATION: 3,
    DAMAGE: 5,
    HEALTH: 10,
  },
  GIVE_KILL_MESSAGE: true,
};
exports.triangleSwarmSentry = {
  PARENT: [exports.triangleSentry],
  GUNS: [
    {
      POSITION: [7, 14, 0.6, 7, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.trianglePounderSentry = makeAuto(
  exports.triangleSentry,
  "Triangle Sentry",
  {
    type: exports.heavySentryGun,
    size: 12,
  }
);
exports.triangleTrapperSentry = makeAuto(
  exports.triangleSentry,
  "Triangle Sentry",
  {
    type: exports.sentryTrapTurret,
    size: 12,
  }
);
exports.pentagonSentry = {
  PARENT: [exports.pentagonCrasher],
  LABEL: "Pentagon Sentry",
  SIZE: 18,
  VALUE: 30000,
  SKILL: skillSet({
    rld: 0.3,
    dam: 1,
    pen: 0.9,
    str: 0.9,
    spd: 1,
    atk: 0,
    hlt: 0,
    shi: 0,
    rgn: 0,
    mob: 0,
  }),
  BODY: {
    FOV: 0.6,
    PENETRATION: 3,
    DAMAGE: 5,
    HEALTH: 100,
  },
  GIVE_KILL_MESSAGE: true,
};

exports.pentagonSwarmerSentry = {
  PARENT: [exports.pentagonSentry],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.lesserDamage,
          g.doubleReload,
        ]),
        TYPE: exports.hive,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
};

exports.pentagonTriAngleSentry = {
  PARENT: [exports.pentagonSentry],
  GUNS: [...triangleGun, ...triangleThrusterGuns],
};

exports.pentagonHunterSentry = {
  PARENT: [exports.pentagonSentry],
  GUNS: [...hunterGuns],
};
exports.hexagonSentry = {
  PARENT: [exports.hexagonCrasher],
  LABEL: "Hexagon Sentry",
  SIZE: 32,
  VALUE: 150000,
  SKILL: skillSet({
    rld: 0.2,
    dam: 1,
    pen: 1,
    str: 1,
    spd: 1,
    atk: 0,
    hlt: 0,
    shi: 0,
    rgn: 0,
    mob: 0,
  }),
  BODY: {
    FOV: 0.6,
    HEALTH: 500,
    SHIELD: 25,
    DENSITY: 2.2,
  },
  GIVE_KILL_MESSAGE: true,
};
exports.hexagonBuilderSentry = {
  PARENT: [exports.hexagonSentry],
  GUNS: [...builderGun],
};
exports.hexagonHexaTankSentry = makeMulti(
  {
    PARENT: [exports.hexagonSentry],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 8, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
          TYPE: exports.bullet,
        },
      },

      {
        POSITION: [18, 8, 1, 0, 0, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  3,
  "Hexagon Sentry"
);
exports.hexagonMachineGunSentry = {
  PARENT: [exports.hexagonSentry],
  GUNS: [...machineGun],
};
exports.shinyEggSentry = {
  PARENT: [exports.shinyEggCrasher, exports.eggSentry],
  LABEL: "Shiny Egg Sentry",
  COLOR: 1,
  SIZE: 9,
  SKILL: skillSet({
    rld: 0.7,
    dam: 0.5,
    pen: 0.5,
    str: 0.5,
    spd: 1,
    atk: 0,
    hlt: 0,
    shi: 0,
    rgn: 0,
    mob: 0,
  }),
  VALUE: 30000,
  BODY: {
    FOV: 0.8,
    PENETRATION: 3,
    DAMAGE: 4,
    HEALTH: 50,
  },
  GIVE_KILL_MESSAGE: true,
};
exports.shinyEggNoviceSentry = {
  PARENT: [exports.shinyEggSentry],
  GUNS: [...noviceGun],
};
exports.shinyEggSorcererDriveSentry = {
  PARENT: [exports.shinyEggSentry],
  MAX_CHILDREN: 25,
  BODY: {
    SPEED: 2.5,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [3.8, 9, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.minorHealth,
          g.minorReload,
          g.lesserDamage,
          g.superSpeed,
          g.greaterSpeed,
          g.minorSize,
        ]),
        TYPE: exports.autoSterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [3.8, 9, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.minorHealth,
          g.minorReload,
          g.lesserDamage,
          g.superSpeed,
          g.greaterSpeed,
          g.minorSize,
        ]),
        TYPE: exports.autoSterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
      },
    },
  ],
};
exports.shinyEggTwinAutoSentry = {
  PARENT: [exports.shinyEggSentry],
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.75, 0, 0, 45, 360, 1],
      TYPE: [exports.greenEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.weakAutoSmasherTurret, { INDEPENDENT: true }],
    },
  ],
};
exports.shinySquareSentry = {
  PARENT: [exports.shinySquareCrasher, exports.squareSentry],
  LABEL: "Shiny Square Sentry",
  COLOR: 1,
  SIZE: 13,
  VALUE: 120000,
  SKILL: skillSet({
    rld: 0.6,
    dam: 0.6,
    pen: 0.6,
    str: 0.6,
    spd: 1,
    atk: 0,
    hlt: 0,
    shi: 0,
    rgn: 0,
    mob: 0,
  }),
  BODY: {
    FOV: 0.8,
    PENETRATION: 3,
    DAMAGE: 5,
    HEALTH: 200,
  },
};
exports.shinySquareTripleShotSentry = {
  PARENT: [exports.shinySquareSentry],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 8, 1, 0, -2, -20, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent, g.lesserStats]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 2, 20, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent, g.lesserStats]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.bent, g.lesserStats]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.shinySquareRangerSentry = {
  PARENT: [exports.shinySquareSentry],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [32, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.assass,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 8.5, -1.6, 8, 0, 0, 0],
    },
  ],
};
exports.shinySquareAuto2PelleterSentry = {
  PARENT: [exports.shinySquareSentry],
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 360, 1],
      TYPE: [exports.greenSquare, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [12, 9, 0, 0, 160, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [12, 9, 0, 180, 160, 0],
      TYPE: exports.auto4Turret,
    },
  ],
};

exports.shinyTriangleSentry = {
  PARENT: [exports.shinyTriangleCrasher, exports.triangleSentry],
  LABEL: "Shiny Triangle Sentry",
  COLOR: 1,
  SIZE: 20,
  SKILL: skillSet({
    rld: 0.5,
    dam: 1,
    pen: 0.9,
    str: 0.9,
    spd: 1,
    atk: 0,
    hlt: 0,
    shi: 0,
    rgn: 0,
    mob: 0,
  }),
  VALUE: 600000,
  BODY: {
    SPEED: 4,
    ACCEL: 0.4,
    PENETRATION: 2.75,
    DAMAGE: 7,
    HEALTH: 500,
  },
};
exports.shinyTriangleSwarmSentry = {
  PARENT: [exports.shinyTriangleSentry],
  GUNS: [
    {
      POSITION: [6, 14, -0.6, 7, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.mach,
          g.superDamage,
          g.superHealth,
          g.superReload,
        ]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};

exports.shinyTriangleBarricadeSentry = makeAuto(
  exports.shinyTriangleSentry,
  "Shiny Sentry",
  {
    type: exports.shinyBarricadeTurret,
    size: 12,
  }
);

exports.shinyTriangleArtillerySentry = makeAuto(
  exports.shinyTriangleSentry,
  "Shiny Sentry",
  {
    type: exports.shinyArtilleryTurret,
    size: 12,
  }
);

exports.shinyPentagonSentry = {
  PARENT: [exports.shinyPentagonCrasher, exports.pentagonSentry],
  LABEL: "Shiny Pentagon Sentry",
  COLOR: 1,
  SIZE: 18,
  VALUE: 3000000,
  SKILL: skillSet({
    rld: 0.4,
    dam: 1,
    pen: 1,
    str: 1,
    spd: 1,
    atk: 0,
    hlt: 0,
    shi: 0,
    rgn: 0,
    mob: 0,
  }),
  BODY: {
    FOV: 0.6,
    PENETRATION: 3,
    DAMAGE: 5,
    HEALTH: 2000,
  },
};

exports.shinyPentagonSwarmerDriveSentry = {
  PARENT: [exports.shinyPentagonSentry],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.lesserDamage,
          g.doubleReload,
        ]),
        TYPE: exports.driveHive,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16.25, 0, 0, 180, 360, 1],
      TYPE: [exports.greenPentagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};

exports.shinyPentagonAutoTriAngleSentry = {
  PARENT: [exports.shinyPentagonSentry],
  GUNS: [...triangleGun, ...triangleThrusterGuns],
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16.25, 0, 0, 180, 360, 1],
      TYPE: [exports.greenPentagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.autoTurret, { INDEPENDENT: true }],
    },
  ],
};

exports.shinyPentagonAutoHunterSentry = {
  PARENT: [exports.shinyPentagonSentry],
  GUNS: [...hunterGuns],
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16.25, 0, 0, 180, 360, 1],
      TYPE: [exports.greenPentagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.autoTurret, { INDEPENDENT: true }],
    },
  ],
};
exports.shinyHexagonSentry = {
  PARENT: [exports.shinyHexagonCrasher, exports.hexagonSentry],
  LABEL: "Shiny Hexagon Sentry",
  COLOR: 1,
  SIZE: 33,
  VALUE: 15000000,
  SKILL: skillSet({
    rld: 0.3,
    dam: 1,
    pen: 1,
    str: 1,
    spd: 1,
    atk: 0,
    hlt: 0,
    shi: 0,
    rgn: 0,
    mob: 0,
  }),
  BODY: {
    FOV: 0.6,
    HEALTH: 5000,
    SHIELD: 25,
    DENSITY: 2.2,
  },
};
exports.shinyHexagonAutoBuilderSentry = {
  PARENT: [exports.shinyHexagonSentry],
  GUNS: [...builderGun],
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 90, 360, 1],
      TYPE: [exports.greenHexagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.autoTurret, { INDEPENDENT: true }],
    },
  ],
};
exports.shinyHexagonAutoHexaTankSentry = makeMulti(
  {
    PARENT: [exports.shinyHexagonSentry],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 8, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
          TYPE: exports.bullet,
        },
      },

      {
        POSITION: [18, 8, 1, 0, 0, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
          TYPE: exports.bullet,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [20, 0, 0, 0, 360, 0],
        TYPE: exports.smasherBody,
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [17, 0, 0, 90, 360, 1],
        TYPE: [exports.greenHexagon, { INDEPENDENT: true, COLOR: 1 }],
      },
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [11, 0, 0, 0, 360, 1],
        TYPE: [exports.autoTurret, { INDEPENDENT: true }],
      },
    ],
  },
  3,
  "Hexagon Sentry"
);
exports.shinyHexagonAutoMachineGunSentry = {
  PARENT: [exports.shinyHexagonSentry],
  GUNS: [...machineGun],
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 90, 360, 1],
      TYPE: [exports.greenHexagon, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.autoTurret, { INDEPENDENT: true }],
    },
  ],
};
exports.guard = {
  PARENT: [exports.enemy, exports.rangedEnemy],
  LABEL: "Guard",
  TYPE: "crasher",
  DANGER: 4,
  COLOR: 6,
  SHAPE: 0,
  SIZE: 14.6,
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 0.8, //bullet damage
    pen: 0.6, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  VALUE: 614,
  VARIES_IN_SIZE: true,
  GIVE_KILL_MESSAGE: false,
  BODY: {
    FOV: 0.75,
    ACCEL: 0.003,
    PENETRATION: 3,
    SPEED: base.SPEED,
    DAMAGE: 5,
    HEALTH: 10,
    SHIELD: base.SHIELD * 0.5,
    REGEN: 0.025,
  },
};

exports.protector = {
  PARENT: [exports.guard],
  LABEL: "Protector",
  DANGER: 5,
  COLOR: 13,
  SHAPE: 4,
  SIZE: 15,
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 1, //bullet damage
    pen: 0.6, //bullet penetration
    str: 1, //bullet health
    atk: 0, //bullet speed
    spd: 0.6, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  VALUE: 3067,
  BODY: {
    FOV: 0.75,
    ACCEL: 0.003,
    PENETRATION: 3,
    SPEED: base.SPEED * 0.7,
    DAMAGE: 6,
    HEALTH: 30,
    SHIELD: base.SHIELD * 0.6,
    REGEN: 0.02,
  },
  GIVE_KILL_MESSAGE: true,
};

exports.keeper = {
  PARENT: [exports.protector],
  LABEL: "Keeper",
  DANGER: 6,
  COLOR: 2,
  SHAPE: 3,
  SIZE: 13,
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 1.2, //bullet damage
    pen: 1, //bullet penetration
    str: 1, //bullet health
    atk: 0, //bullet speed
    spd: 0.4, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  VALUE: 15334,
  BODY: {
    FOV: 0.75,
    ACCEL: 0.003,
    PENETRATION: 3,
    SPEED: base.SPEED * 0.55,
    DAMAGE: 7,
    HEALTH: 70,
    SHIELD: base.SHIELD * 0.7,
    REGEN: 0.015,
  },
};
exports.sentinel = {
  PARENT: [exports.keeper],
  LABEL: "Sentinel",
  COLOR: 14,
  SHAPE: 5,
  SIZE: 15,
  SKILL: skillSet({
    rld: 1.2, //reload
    dam: 1.4, //bullet damage
    pen: 1.2, //bullet penetration
    str: 1.2, //bullet health
    atk: 0, //bullet speed
    spd: 0.2, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  VALUE: 25000,
  BODY: {
    FOV: 0.8,
    ACCEL: 0.003,
    PENETRATION: 3,
    SPEED: base.SPEED * 0.4,
    DAMAGE: 8,
    HEALTH: 100,
    SHIELD: base.SHIELD * 0.8,
    REGEN: 0.01,
  },
};
exports.auto3Guard = {
  PARENT: [exports.guard],
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.lesserAutoTurret],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.auto3EggTurret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.auto3EggTurret,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.auto3EggTurret,
    },
  ],
};
exports.bansheeGuard = {
  PARENT: [exports.guard],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */ POSITION: [10, 8, 0, 0, 80, 0],
      TYPE: exports.bansheeEggTurret,
    },
    {
      POSITION: [10, 8, 0, 120, 80, 0],
      TYPE: exports.bansheeEggTurret,
    },
    {
      POSITION: [10, 8, 0, 240, 80, 0],
      TYPE: exports.bansheeEggTurret,
    },
  ],
  GUNS: [
    {
      POSITION: [6, 11, 1.2, 8, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.lesserDamage,
          g.lesserHealth,
          g.halfSize,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.lesserDamage,
          g.lesserHealth,
          g.halfSize,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.lesserDamage,
          g.lesserHealth,
          g.halfSize,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
  ],
};
exports.spawnerGuard = {
  PARENT: [exports.guard],
  MAX_CHILDREN: 4,
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.minion]),
        TYPE: exports.minion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.swarmerProtector = {
  PARENT: [exports.protector],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.lesserStats,
          g.halfDamage,
          g.greaterHealth,
          g.doublePenetration,
          g.doubleReload,
        ]),
        TYPE: exports.hive,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
};

exports.cruiserProtector = {
  PARENT: [exports.protector],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.minion,
          g.doubleHealth,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.minion,
          g.doubleHealth,
        ]),

        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};

exports.beekeeperProtector = {
  PARENT: [exports.protector],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 3, 1, 0, -6, -7, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.lesserStats,
          g.lesserDamage,
          g.doubleSize,
        ]),
        TYPE: exports.uncontrolledBeeDrone,
      },
    },
    {
      POSITION: [14, 3, 1, 0, 6, 7, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.lesserStats,
          g.lesserDamage,
          g.doubleSize,
        ]),
        TYPE: exports.uncontrolledBeeDrone,
      },
    },
    {
      POSITION: [19, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.halfDamage,
          g.halfHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.commanderKeeper = {
  PARENT: [exports.keeper],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [11, 8.5, 0.6, 7, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.halfDamage,
          g.halfHealth,
          g.lesserDamage,
        ]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [11, 8.5, 0.6, 7, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.halfDamage,
          g.halfHealth,
          g.lesserDamage,
        ]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [11, 8.5, 0.6, 7, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.halfDamage,
          g.halfHealth,
          g.lesserDamage,
        ]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.over,
          g.halfStats,
          g.doublePenetration,
        ]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.over,
          g.halfStats,
          g.doublePenetration,
        ]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.over,
          g.halfStats,
          g.doublePenetration,
        ]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 1,
      },
    },
  ],
};
exports.overKeeper = {
  PARENT: [exports.keeper],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 11, 1.2, 8, 0, 125, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.over,
          g.halfStats,
          g.doublePenetration,
        ]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 235, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over, g.halfStats]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.halfDamage, g.halfHealth]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.directorKeeper = {
  PARENT: [exports.keeper],
  MAX_CHILDREN: 5,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.over,
          g.halfDamage,
          g.halfHealth,
          g.doublePenetration,
        ]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.skimmerSentinel = {
  PARENT: [exports.sentinel],
  GUNS: [
    {
      POSITION: [20, 10, 1, , 0, , 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 13, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.halfDamage,
          g.lesserHealth,
          g.doubleReload,
        ]),
        TYPE: exports.sentinelMissile2,
      },
    },
  ],
};
exports.crossbowSentinel = {
  PARENT: [exports.sentinel],
  GUNS: [
    {
      POSITION: [15.5, 3.5, 1, 0, -2.3, -19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.halfHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15.5, 3.5, 1, 0, 2.3, 19.5, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.halfHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, 3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.halfHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 4.5, 1, 0, -3.7, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.arty,
          g.crossbow,
          g.halfHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.rifle,
          g.crossbow,
          g.crossbow2,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};

exports.minigunSentinel = {
  PARENT: [exports.sentinel],
  GUNS: [
    {
      POSITION: [14.5, 7.5, 0.6, 0, 5.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
          g.lesserReload,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12.5, 7.5, 0.5, 0, 5.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
          g.lesserReload,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14.5, 7.5, 0.6, 0, -5.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
          g.lesserReload,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12.5, 7.5, 0.5, 0, -5.5, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
          g.lesserReload,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22.3, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
          g.lesserReload,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20.3, 8, 1, 0, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
          g.lesserReload,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18.3, 8, 1, 0, 0, 0, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.minorRecoil,
          g.minion,
          g.doublePenetration,
          g.lesserReload,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.spark = {
  PARENT: [exports.enemy, exports.rangedEnemy],
  LABEL: "Spark",
  DANGER: 3,
  COLOR: 31,
  VALUE: 100,
  SHAPE: -3,
  SIZE: 10,
  FACING_TYPE: "autospin",
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 5,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.3, //reload
    dam: 0.3, //bullet damage
    pen: 0.3, //bullet penetration
    str: 0.3, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0.3, //max health
    shi: 0.3, //shield capacity
    rgn: 0.3, //shield regeneration
    mob: 0.3, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  GUNS: [
    {
      POSITION: [13, 7, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 7, 1, 0, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 7, 1, 0, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.flame = {
  PARENT: [exports.enemy, exports.rangedEnemy],
  LABEL: "Flame",
  DANGER: 3,
  COLOR: 31,
  VALUE: 1500,
  SHAPE: -3,
  SIZE: 20,
  FACING_TYPE: "autospin",
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 50,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.3, //reload
    dam: 0.3, //bullet damage
    pen: 0.3, //bullet penetration
    str: 0.3, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0.3, //max health
    shi: 0.3, //shield capacity
    rgn: 0.3, //shield regeneration
    mob: 0.3, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  GUNS: [
    {
      POSITION: [13, 7, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 7, 1, 0, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 7, 1, 0, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [11, 9, 1, 0, 0, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [11, 9, 1, 0, 0, 60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [11, 9, 1, 0, 0, -60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.torch = {
  PARENT: [exports.enemy, exports.rangedEnemy],
  LABEL: "Torch",
  DANGER: 3,
  COLOR: 31,
  VALUE: 1500,
  SHAPE: -3,
  SIZE: 20,
  FACING_TYPE: "autospin",
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 50,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.3, //reload
    dam: 0.3, //bullet damage
    pen: 0.3, //bullet penetration
    str: 0.3, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0.3, //max health
    shi: 0.3, //shield capacity
    rgn: 0.3, //shield regeneration
    mob: 0.3, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.auto3Turret],
    },
  ],
};
exports.torch2 = {
  PARENT: [exports.enemy, exports.rangedEnemy],
  LABEL: "Torch",
  DANGER: 3,
  COLOR: 31,
  VALUE: 1500,
  SHAPE: -3,
  SIZE: 20,
  FACING_TYPE: "autospin",
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 50,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.3, //reload
    dam: 0.3, //bullet damage
    pen: 0.3, //bullet penetration
    str: 0.3, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0.3, //max health
    shi: 0.3, //shield capacity
    rgn: 0.3, //shield regeneration
    mob: 0.3, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.auto4Turret],
    },
  ],
};
exports.torch3 = {
  PARENT: [exports.enemy, exports.rangedEnemy],
  LABEL: "Torch",
  DANGER: 3,
  COLOR: 31,
  VALUE: 1500,
  SHAPE: -3,
  SIZE: 20,
  FACING_TYPE: "autospin",
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 50,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.3, //reload
    dam: 0.3, //bullet damage
    pen: 0.3, //bullet penetration
    str: 0.3, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0.3, //max health
    shi: 0.3, //shield capacity
    rgn: 0.3, //shield regeneration
    mob: 0.3, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.mega3Turret],
    },
  ],
};
exports.campfire = {
  PARENT: [exports.enemy],
  LABEL: "Camp Fire",
  DANGER: 3,
  COLOR: 31,
  VALUE: 15000,
  SHAPE: -3,
  SIZE: 30,
  FACING_TYPE: "autospin",
  VARIES_IN_SIZE: true,
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.mega3Turret],
    },
  ],
  GUNS: [
    {
      POSITION: [13, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 7, 1, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 7, 1, 0, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [11, 9, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [11, 9, 1, 0, 0, 120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [11, 9, 1, 0, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.campfire2 = {
  PARENT: [exports.enemy],
  LABEL: "Camp Fire",
  DANGER: 3,
  COLOR: 10,
  VALUE: 20000,
  SHAPE: -3,
  SIZE: 30,
  FACING_TYPE: "autospin",
  VARIES_IN_SIZE: true,
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.director],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.director],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.director],
    },
    {
      POSITION: [11, 7, 0, 60, 160, 0],
      TYPE: [exports.launcherTurret],
    },
    {
      POSITION: [11, 7, 0, -60, 160, 0],
      TYPE: [exports.launcherTurret],
    },
    {
      POSITION: [11, 7, 0, 180, 160, 0],
      TYPE: [exports.launcherTurret],
    },
  ],
  GUNS: [
    {
      POSITION: [13, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [13, 7, 1, 0, 0, 120, 0],
    },
    {
      POSITION: [13, 7, 1, 0, 0, -120, 0],
    },
    {
      POSITION: [2, 7, 1.4, 12.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.mechtrap,
      },
    },
    {
      POSITION: [2, 7, 1.4, 12.5, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.mechtrap,
      },
    },
    {
      POSITION: [2, 7, 1.4, 12.5, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.mechtrap,
      },
    },
    {
      POSITION: [11, 9, 1, 0, 0, 0, 0.5],
    },
    {
      POSITION: [11, 9, 1, 0, 0, 120, 0.5],
    },
    {
      POSITION: [11, 9, 1, 0, 0, -120, 0.5],
    },
  ],
};
exports.cursedflame = {
  PARENT: [exports.enemy],
  LABEL: "Cursed Flame",
  DANGER: 3,
  COLOR: 10,
  VALUE: 10000,
  SHAPE: -3,
  SIZE: 30,
  FACING_TYPE: "autospin",
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 1000,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.3, //reload
    dam: 0.3, //bullet damage
    pen: 0.3, //bullet penetration
    str: 0.3, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0.3, //max health
    shi: 0.3, //shield capacity
    rgn: 0.3, //shield regeneration
    mob: 0.3, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.autoSmasherTurret],
    },
  ],
  GUNS: [
    {
      POSITION: [13, 7, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 7, 1, 0, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 7, 1, 0, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [11, 9, 1, 0, 0, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [11, 9, 1, 0, 0, 60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [11, 9, 1, 0, 0, -60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.Lasher = {
  PARENT: [exports.enemy, exports.rangedEnemy],
  LABEL: "Lasher",
  TYPE: "thrasher",
  DANGER: 3,
  COLOR: 17,
  VALUE: 200,
  SHAPE: 8,
  SIZE: 15,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 15,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: false,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bossPillboxTurret],
    },
  ],
};
exports.peliser = {
  PARENT: [exports.Lasher],
  LABEL: "Peliser",
  DANGER: 3,
  COLOR: 17,
  VALUE: 20000,
  SHAPE: -5,
  SIZE: 35,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 500,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  GUNS: [
    {
      POSITION: [20, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 13, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.Lunger = {
  PARENT: [exports.Lasher],
  LABEL: "Lunger",
  DANGER: 6,
  SIZE: 37.5,
  FACING_TYPE: "autospin",
  VALUE: 30000,
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1, //bullet damage
    pen: 0.5, //bullet penetration
    str: 1, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 500,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 8, 0, 180, 270, 0],
      TYPE: exports.weakAutoSmasherTurret,
    },
    {
      POSITION: [10, 8, 0, -90, 270, 0],
      TYPE: exports.weakAutoSmasherTurret,
    },
    {
      POSITION: [10, 8, 0, 0, 270, 0],
      TYPE: exports.weakAutoSmasherTurret,
    },
    {
      POSITION: [10, 8, 0, 90, 270, 0],
      TYPE: exports.weakAutoSmasherTurret,
    },
  ],
};
exports.acoa = {
  PARENT: [exports.Lasher],
  LABEL: "acoa",
  DANGER: 6,
  SIZE: 37.5,
  FACING_TYPE: "autospin",
  VALUE: 100000,
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1, //bullet damage
    pen: 0.5, //bullet penetration
    str: 1, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 700,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 8, 0, 135, 130, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [10, 8, 0, -45, 130, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [10, 8, 0, -135, 130, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [10, 8, 0, 45, 130, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [10, 8, 0, 180, 130, 0],
      TYPE: exports.weakAutoSmasherTurret,
    },
    {
      POSITION: [10, 8, 0, -90, 130, 0],
      TYPE: exports.weakAutoSmasherTurret,
    },
    {
      POSITION: [10, 8, 0, 0, 130, 0],
      TYPE: exports.weakAutoSmasherTurret,
    },
    {
      POSITION: [10, 8, 0, 90, 130, 0],
      TYPE: exports.weakAutoSmasherTurret,
    },
  ],
};
exports.Leaper = {
  PARENT: [exports.Lasher],
  LABEL: "Leaper",
  TYPE: "thrasher",
  VALUE: 1200,
  SHAPE: 7,
  SIZE: 20,
  BODY: {
    HEALTH: 55,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: false,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.weakAutoSmasherTurret],
    },
  ],
};
exports.Crusher = {
  PARENT: [exports.Lasher],
  LABEL: "Crusher",
  TYPE: "thrasher",
  VALUE: 17500,
  SHAPE: 7,
  SIZE: 30,
  BODY: {
    HEALTH: 105,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0, //bullet damage
    pen: 0, //bullet penetration
    str: 0, //bullet health
    spd: 0, //bullet speed
    atk: 0.3, //body damage
    hlt: 0.3, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0.3, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: false,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bounce],
    },
    {
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: [exports.spikeBody],
    },
  ],
};
exports.revolutionist = {
  PARENT: [exports.enemy, exports.rangedEnemy],
  LABEL: "Revolutionist",
  TYPE: "revolution",
  DANGER: 3,
  COLOR: 10,
  VALUE: 2000,
  SHAPE: 0,
  SIZE: 10,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 1,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 50,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.3, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.3, //bullet health
    spd: 0.3, //bullet speed
    atk: 0.3, //body damage
    hlt: 0.3, //max health
    shi: 0.3, //shield capacity
    rgn: 0.1, //shield regeneration
    mob: 0.1, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: false,
  GUNS: [
    {
      POSITION: [17, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.lesserDamage]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 2, -157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, -2, 157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
  ],
};
exports.demonstrator = {
  PARENT: [exports.revolutionist],
  LABEL: "Demonstrator",
  VALUE: 5000,
  BODY: {
    SPEED: 1,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 50,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: false,
  GUNS: [
    ...sideGuns,
    ...pounderGun,
    {
      POSITION: [19, 8, 1, 0, 2, -157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, -2, 157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19 == 20, 10, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
  ],
};
exports.minionegg = {
  PARENT: [exports.rangedEnemy],
  LABEL: "Egg node",
  DANGER: 3,
  HAS_NO_RECOIL: true,
  COLOR: 6,
  VALUE: 100,
  SIZE: 15,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 10,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  GUNS: [
    {
      POSITION: [15, 8, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.minionegg5 = {
  PARENT: [exports.rangedEnemy],
  LABEL: "Egg node",
  DANGER: 3,
  HAS_NO_RECOIL: true,
  COLOR: 6,
  VALUE: 100,
  SIZE: 15,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 10,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  GUNS: [
    {
      POSITION: [15, 8, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.minionegg6 = {
  PARENT: [exports.rangedEnemy],
  LABEL: "Egg node",
  DANGER: 3,
  HAS_NO_RECOIL: true,
  COLOR: 6,
  VALUE: 2000,
  SIZE: 15,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 200,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 1, 0, 5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.minionegg2 = {
  PARENT: [exports.rangedEnemy],
  LABEL: "Egg node",
  DANGER: 3,
  HAS_NO_RECOIL: true,
  COLOR: 6,
  VALUE: 100,
  SIZE: 15,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 100,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  GUNS: [
    {
      POSITION: [15, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 1, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 1, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.minionegg3 = {
  PARENT: [exports.rangedEnemy],
  LABEL: "Egg node",
  DANGER: 3,
  HAS_NO_RECOIL: true,
  COLOR: 6,
  VALUE: 100,
  SIZE: 15,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 100,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  GUNS: [
    {
      POSITION: [15, 8, 0.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: exports.uncontrolledSwarmDrone,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 0.5, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: exports.uncontrolledSwarmDrone,
      },
    },
    {
      POSITION: [15, 8, 0.5, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: exports.uncontrolledSwarmDrone,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 0.5, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: exports.uncontrolledSwarmDrone,
      },
    },
  ],
};
exports.minionegg4 = {
  PARENT: [exports.rangedEnemy],
  LABEL: "Egg node",
  DANGER: 3,
  HAS_NO_RECOIL: true,
  COLOR: 6,
  VALUE: 1000,
  SIZE: 15,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 500,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody],
    },
  ],
  GUNS: [
    {
      POSITION: [15, 8, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.thrasher = {
  PARENT: [exports.enemy, exports.rangedEnemy],
  LABEL: "Thrasher",
  TYPE: "thrasher",
  DANGER: 3,
  COLOR: 19,
  VALUE: 200,
  SHAPE: 0,
  SIZE: 15,
  VARIES_IN_SIZE: true,
  BODY: {
    SPEED: 7,
    ACCELERATION: 0.5,
    PENETRATION: 7.5,
    HEALTH: 5,
    SHIELD: 2.5,
    REGEN: 1,
    DAMAGE: 3.5,
    PUSHABILITY: 0.5,
    DENSITY: 5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: false,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.autoTurret],
    },
  ],
};
exports.anomaly = {
  PARENT: [exports.meleeEnemy, exports.thrasher],
  LABEL: "Void Anomaly",
  DANGER: 6,
  SIZE: 17.5,
  VALUE: 25000,
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 0.2, //bullet damage
    pen: 0.2, //bullet penetration
    str: 0.2, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    FOV: 0.8,
    ACCEL: 0.003,
    SPEED: base.SPEED,
    HEALTH: 360,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bounce],
    },
  ],
};
exports.hardshellanomaly = {
  PARENT: [exports.meleeEnemy, exports.thrasher],
  LABEL: "Hardshell Void Anomaly",
  DANGER: 6,
  SIZE: 19.5,
  VALUE: 35000,
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 0.2, //bullet damage
    pen: 0.2, //bullet penetration
    str: 0.2, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    FOV: 0.8,
    ACCEL: 0.003,
    SPEED: base.SPEED,
    HEALTH: 460,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bounce],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody],
    },
  ],
};
exports.Mechab = {
  PARENT: [exports.thrasher],
  LABEL: "Void Anomaly",
  VALUE: 10000,
  DANGER: 6,
  SIZE: 17.5,
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1, //bullet damage
    pen: 0.5, //bullet penetration
    str: 1, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 45,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalTurret,
    },
  ],
};
exports.trapMechab = {
  PARENT: [exports.thrasher],
  LABEL: "Void Anomaly",
  VALUE: 10000,
  DANGER: 6,
  SIZE: 17.5,
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1, //bullet damage
    pen: 0.5, //bullet penetration
    str: 1, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 45,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalTrapTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalTrapTurret,
    },
  ],
};
exports.trapMechabarab = {
  PARENT: [exports.thrasher],
  LABEL: "Void Anomaly",
  VALUE: 10000,
  DANGER: 6,
  SIZE: 17.5,
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1, //bullet damage
    pen: 0.5, //bullet penetration
    str: 1, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 45,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalTrapTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalTrapTurret,
    },
  ],
};
exports.buildMechab = {
  PARENT: [exports.thrasher],
  LABEL: "Void Anomaly",
  VALUE: 10000,
  DANGER: 6,
  SIZE: 17.5,
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1, //bullet damage
    pen: 0.5, //bullet penetration
    str: 1, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 45,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalBuilderTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalBuilderTurret,
    },
  ],
};
exports.AlfabuildMechab = {
  PARENT: [exports.thrasher],
  LABEL: "Void Anomaly",
  VALUE: 100000,
  DANGER: 6,
  SIZE: 24.5,
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1, //bullet damage
    pen: 0.5, //bullet penetration
    str: 1, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 75,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalBuilderTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalBuilderTurret,
    },
  ],
};
exports.machinegunMechab = {
  PARENT: [exports.thrasher],
  LABEL: "Void Anomaly",
  VALUE: 10000,
  DANGER: 6,
  SIZE: 17.5,
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1, //bullet damage
    pen: 0.5, //bullet penetration
    str: 1, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 45,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalMachineGunTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalMachineGunTurret,
    },
  ],
};
exports.gunnerMechab = {
  PARENT: [exports.thrasher],
  LABEL: "Void Anomaly",
  VALUE: 10000,
  DANGER: 6,
  SIZE: 17.5,
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1, //bullet damage
    pen: 0.5, //bullet penetration
    str: 1, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 45,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalGunnerTurret,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalGunnerTurret,
    },
  ],
};
exports.swarmMechab = {
  PARENT: [exports.thrasher],
  LABEL: "Void Anomaly",
  VALUE: 10000,
  DANGER: 6,
  SIZE: 17.5,
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1, //bullet damage
    pen: 0.5, //bullet penetration
    str: 1, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 45,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalSwarmTurret1,
    },
    {
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalSwarmTurret2,
    },
  ],
};
exports.beeMechab = {
  PARENT: [exports.thrasher],
  LABEL: "Void Anomaly",
  VALUE: 10000,
  DANGER: 6,
  SIZE: 17.5,
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1, //bullet damage
    pen: 0.5, //bullet penetration
    str: 1, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 45,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.mechanicalBeeTurret,
    },
    {
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.mechanicalBeeTurret,
    },
  ],
};
exports.aoc = {
  PARENT: [exports.thrasher],
  LABEL: "Void Anomaly",
  DANGER: 6,
  SIZE: 17.5,
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1, //bullet damage
    pen: 0.5, //bullet penetration
    str: 1, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 45,
  },
  VALUE: 10000,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 90, 270, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 270, 270, 0],
      TYPE: exports.auto3Turret,
    },
  ],
};

exports.aokaol = {
  PARENT: [exports.thrasher],
  LABEL: "Void Anomaly",
  DANGER: 6,
  SIZE: 17.5,
  VALUE: 10000,
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1, //bullet damage
    pen: 0.5, //bullet penetration
    str: 1, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 60,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 8, 0, 90, 270, 0],
      TYPE: exports.mega3Turret,
    },
    {
      POSITION: [14, 8, 0, 270, 270, 0],
      TYPE: exports.mega3Turret,
    },
  ],
};
exports.glitch = {
  PARENT: [exports.thrasher],
  LABEL: "Void Anomaly",
  DANGER: 6,
  SIZE: 17.5,
  VALUE: 10000,
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 0.2, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.2, //bullet health
    spd: 0.2, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 30,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.autoSmasherTurret],
    },
  ],
};
//BOSS PARTS
exports.zombie = {
  PARENT: [exports.genericTank],
  LABEL: "Zombie",
  TYPE: "zombie",
  BODY: {
    FOV: 0.75,
    ACCEL: 0.003,
    PENETRATION: 3,
    SPEED: base.SPEED/2,
    DAMAGE: 5,
    HEALTH: 200,
    REGEN: 0,
  },
  CONTROLLERS: ["nearestDifferentMaster", "mapTargetToGoal"],
  AI: { NO_LEAD: true },
  FACING_TYPE: "looseToTarget",
  COLOR: 41,
  LEVEL: 45,
};
exports.zombieBarricade = {
  PARENT: [exports.zombie, exports.barricade],
  TYPE: "zombie",
  COLOR: 41,
  LEVEL: 45,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [6, 7, 1.35, 19.6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.halfDamage,
          g.halfHealth,
          g.halfReload,
          g.doubleReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4.5, 7, 1.35, 16.6, 0, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.halfDamage,
          g.halfHealth,
          g.halfReload,
          g.doubleReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3.2, 7, 1.35, 13.6, 0, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.halfDamage,
          g.halfHealth,
          g.halfReload,
          g.doubleReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.zombieTrapper = {
  PARENT: [exports.zombie, exports.trapper],
  TYPE: "zombie",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.doubleReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.zombieEngineer = {
  PARENT: [exports.zombie, exports.engineer],
  TYPE: "zombie",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [3, 14, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.doubleReload]),
        TYPE: exports.bosspillbox,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
};
exports.zombieBuilder = {
  PARENT: [exports.zombie, exports.builder],
  TYPE: "zombie",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 12, 1.1, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.doubleReload]),
        TYPE: exports.unsetBlock,
      },
    },
  ],
};
exports.zombieConstructor = {
  PARENT: [exports.zombie, exports.constructer],
  TYPE: "zombie",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 18, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 18, 1.2, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.construct,
          g.doubleReload,
        ]),
        TYPE: exports.unsetBlock,
      },
    },
  ],
};
exports.zombiePounder = {
  PARENT: [exports.zombie, exports.pound],
  TYPE: "zombie",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.doubleReload]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.zombieBoomer = {
  PARENT: [exports.zombie, exports.boomer],
  TYPE: "zombie",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 10, 1, 14, 0, 0, 0],
    },
    {
      POSITION: [6, 10, -1.5, 7, 0, 0, 0],
    },
    {
      POSITION: [2, 10, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.boomerang,
          g.doubleReload,
        ]),
        TYPE: exports.boomerang,
      },
    },
  ],
};
exports.zombieHexaTrapper = makeMulti(
  {
    PARENT: [exports.zombie, exports.hexatra],
    TYPE: "zombie",
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 7, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [3, 7, 1.7, 15, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap, g.doubleReload]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [15, 7, 1, 0, 0, 60, 0.5],
      },
      {
        POSITION: [3, 7, 1.7, 15, 0, 60, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap, g.doubleReload]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
  },
  3,
  ""
);

exports.zombieSkimmer = {
  PARENT: [exports.zombie, exports.skimmer],
  TYPE: "zombie",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [17, 15, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.doubleReload,
        ]),
        TYPE: exports.missile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
};
exports.zombieAnnihilator = {
  PARENT: [exports.zombie, exports.anni],
  TYPE: "zombie",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20.5, 19.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.zombieStreamliner = {
  PARENT: [exports.zombie, exports.stream],
  TYPE: "zombie",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [25, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.stream,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [23, 8, 1, 0, 0, 0, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.stream,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [21, 8, 1, 0, 0, 0, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.stream,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 0, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.stream,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17, 8, 1, 0, 0, 0, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mini,
          g.stream,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.zombieBigCheese = {
  PARENT: [exports.zombie, exports.cheese],
  TYPE: "zombie",
  CONTROLERS: ["nearestDifferentMaster", "mapTargetToGoal"],
  FACING_TYPE: "looseToTarget",
  COLOR: 41,
  LEVEL: 45,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10.5, 18, 1.2, 5.5, 0, 0, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.cheese, g.doubleReload]),
        TYPE: [exports.drone, { DRAW_HEALTH: true }],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.zombieRifle = {
  PARENT: [exports.zombie, exports.rifle],
  TYPE: "zombie",
  CONTROLERS: ["nearestDifferentMaster", "mapTargetToGoal"],
  FACING_TYPE: "looseToTarget",
  COLOR: 41,
  LEVEL: 45,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 4.5, 1, 0, 3.7, 0, 1 / 3],
    },
    {
      POSITION: [20, 4.5, 1, 0, -3.7, 0, 1 / 3],
    },
    {
      POSITION: [24, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.rifle,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.zombieCruiser = {
  PARENT: [exports.zombie, exports.cruiser],
  TYPE: "zombie",
  CONTROLERS: ["nearestDifferentMaster", "mapTargetToGoal"],
  FACING_TYPE: "looseToTarget",
  COLOR: 41,
  LEVEL: 45,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 4, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.doubleReload]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.doubleReload]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.zombieOverlord = makeMulti(
  {
    PARENT: [exports.zombie, exports.overlord],
    TYPE: "zombie",
    CONTROLERS: ["nearestDifferentMaster", "mapTargetToGoal"],
    FACING_TYPE: "looseToTarget",
    COLOR: 41,
    LEVEL: 45,
    GUNS: [
      {
        POSITION: [6, 12, 1.2, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone, g.over, g.doubleReload]),
          TYPE: exports.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
        },
      },
    ],
  },
  4,
  "Zombie"
);

exports.zombieSwarmer = {
  PARENT: [exports.zombie, exports.swarmer],
  TYPE: "zombie",
  CONTROLERS: ["nearestDifferentMaster", "mapTargetToGoal"],
  FACING_TYPE: "looseToTarget",
  COLOR: 41,
  LEVEL: 45,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.lesserDamage,
          g.doubleReload,
        ]),
        TYPE: exports.hive,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
};
exports.zombieRocketeer = {
  PARENT: [exports.zombie, exports.rocketeer],
  TYPE: "zombie",
  CONTROLERS: ["nearestDifferentMaster", "mapTargetToGoal"],
  FACING_TYPE: "looseToTarget",
  COLOR: 41,
  LEVEL: 45,
  GUNS: [
    {
      POSITION: [20, 3, 4, 1, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 11.5, -1.6, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.halfDamage,
          g.doubleReload,
        ]),
        TYPE: exports.rocket,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
};
exports.zombieAnimator = {
  PARENT: [exports.zombie, exports.animator],
  TYPE: "zombie",
  CONTROLERS: ["nearestDifferentMaster", "mapTargetToGoal"],
  FACING_TYPE: "looseToTarget",
  COLOR: 41,
  LEVEL: 45,
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5.4, 13, 1, 10.5, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.halfDamage,
          g.superHealth,
          g.superReload,
          g.superReload,
        ]),
        TYPE: [exports.pounderMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      },
    },

    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [2.4, 16, 1, 15.5, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.halfDamage,
          g.superHealth,
          g.lesserSize,
          g.superReload,
          g.superReload,
        ]),
        TYPE: [exports.flankGuardMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      },
    },

    {
      POSITION: [4.4, 16, 1, 8, 0, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.halfDamage,
          g.superHealth,
          g.lesserSize,
          g.superReload,
          g.superReload,
        ]),
        TYPE: [exports.trapperMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      },
    },
  ],
};
let zombieTitanArray1 = [];
let zombie1;
for (let i = 0; i < 8; i++) {
  switch (i) {
    case 0:
      zombie1 = exports.zombieBarricade;
      break;
    case 1:
      zombie1 = exports.zombieTrapper;
      break;
    case 2:
      zombie1 = exports.zombieEngineer;
      break;
    case 3:
      zombie1 = exports.zombieBuilder;
      break;
    case 4:
      zombie1 = exports.zombieConstructor;
      break;
    case 5:
      zombie1 = exports.zombiePounder;
      break;
    case 6:
      zombie1 = exports.zombieBoomer;
      break;
    case 7:
      zombie1 = exports.zombieHexaTrapper;
      break;
  }
  zombieTitanArray1.push(
    {
      POSITION: [4.75, 9, 0, i * (360 / 8), 175, 0],
      TYPE: [zombie1],
    },
    {
      POSITION: [4.75, 8, 0, i * (360 / 8), 175, 1],
      TYPE: [exports.zombie],
    },
    {
      POSITION: [4.75, 7.85, 0, i * (360 / 8) + 22.5, 175, 1],
      TYPE: [exports.zombie],
    }
  );
}
let zombieTitanArray2 = [];
let zombie2;
for (let i = 0; i < 6; i++) {
  switch (i) {
    case 0:
      zombie2 = exports.zombieSkimmer;
      break;
    case 1:
      zombie2 = exports.zombieAnnihilator;
      break;
    case 2:
      zombie2 = exports.zombieStreamliner;
      break;
    case 3:
      zombie2 = exports.zombieBigCheese;
      break;
    case 4:
      zombie2 = exports.zombieRifle;
      break;
    case 5:
      zombie2 = exports.zombieCruiser;
      break;
  }
  zombieTitanArray2.push(
    {
      POSITION: [7, 9, 0, i * (360 / 6), 180, 0],
      TYPE: [zombie2],
    },
    {
      POSITION: [7, 8, 0, i * (360 / 6), 180, 1],
      TYPE: [exports.zombie],
    },
    {
      POSITION: [7, 7.85, 0, i * (360 / 6) + 30, 180, 1],
      TYPE: [exports.zombie],
    }
  );
}
let zombieTitanArray3 = [];
let zombie3;
for (let i = 0; i < 3; i++) {
  switch (i) {
    case 0:
      zombie3 = exports.zombieOverlord;
      break;
    case 1:
      zombie3 = exports.zombieSwarmer;
      break;
    case 2:
      zombie3 = exports.zombieRocketeer;
      break;
  }
  zombieTitanArray3.push(
    {
      POSITION: [7, 7.85, 0, i * (360 / 3), 180, 0],
      TYPE: [exports.zombieAnimator],
    },
    {
      POSITION: [6.75, 2.75, 0, i * (360 / 3), 270, 1],
      TYPE: [exports.zombie],
    },
    {
      POSITION: [6.75, 7.5, 0, i * (360 / 3) - 35, 270, 1],
      TYPE: [zombie3],
    }
  );
}
exports.snowstorm = (() => {
  var guns = [],
    u = 3;
  for (var i = 0; i < u; i++) {
    guns.push({
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 10, 1.4, 8, 0, (360 * i) / u, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.mach]),
        TYPE: exports.bullet,
      },
    });
  }
  return {
    PARENT: [exports.genericTank],
    LABEL: "Snowstorm",
    BODY: {
      SPEED: base.SPEED * 1.1,
    },
    GUNS: guns,
  };
})();
exports.elite_fort_snow = {
  PARENT: [exports.hexanomal],
  COLOR: 5,
  INDEPENDENT: true,
  CONTROLLERS: ["alwaysFire"],
  SPIN_RATE: -0.02,
};
exports.sanct_healer = makeMulti(
  {
    PARENT: [exports.restorer],
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [14.5, 0, 0, 0, 360, 1],
        TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [7, 8, -0.5, 14, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.flank,
            g.halfSpeed,
            g.halfRange,
          ]),
          TYPE: exports.healerBullet,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 8, 1, 0, 0, 0, 0],
      },
    ],
  },
  3,
  ""
);
exports.sanct_rep_healer = makeMulti(
  {
    PARENT: [exports.restorer],
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [14.5, 0, 0, 0, 360, 1],
        TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [16, 8, 1, 0, 0, 180, 1],
      },
      {
        POSITION: [7, 8, -0.5, 12, 0, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.halfSpeed]),
          TYPE: exports.repairBullet,
        },
      },
      {
        POSITION: [7, 8, -0.5, 14, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.flank,
            g.halfSpeed,
            g.halfRange,
          ]),
          TYPE: exports.healerBullet,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 8, 1, 0, 0, 0, 0],
      },
    ],
  },
  3,
  ""
);
exports.sanctuary_snow = {
  PARENT: [exports.sanct_healer],
  COLOR: 16,
  INDEPENDENT: true,
  CONTROLLERS: ["spin", "alwaysFire"],
  SPIN_RATE: -0.02,
};
exports.repsanctuary_snow = {
  PARENT: [exports.sanct_rep_healer],
  COLOR: 16,
  INDEPENDENT: true,
  CONTROLLERS: ["spin", "alwaysFire"],
  SPIN_RATE: -0.02,
};
exports.destroyerDominationTurret = {
  PARENT: [exports.genericTank],
  LABEL: "Destroyer Domination Turret",
  HAS_NO_RECOIL: true,
  BODY: {
    SPEED: 0,
    ACCELERATION: 0,
    SHIELD: base.SHIELD * 2,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 2,
    REGEN: base.REGEN * 3,
    FOV: base.FOV * 1.5,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 0,
  },
  SKILL_CAP: [
    smshskl, //reload
    smshskl, //Penetration
    smshskl, //bullet hp
    smshskl, //bullet dmg
    smshskl, //bullet spd
    smshskl, //shield
    smshskl, //body dmg
    smshskl, // body hp
    smshskl, //shield regen
    0, //body speed
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.destroy,
          g.single,
          g.superStats,
          g.superReload,
          g.superReload,
          g.superReload,
          g.minorSpeed,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.destroyerSanctuaryTurret = {
  PARENT: [exports.genericTank],
  LABEL: "Destroyer Sanctuary Turret",
  HAS_NO_RECOIL: true,
  BODY: {
    SPEED: 0,
    ACCELERATION: 0,
    SHIELD: base.SHIELD * 2,
    HEALTH: base.HEALTH * 2.25,
    DAMAGE: base.DAMAGE * 2.1,
    REGEN: base.REGEN * 3,
    FOV: base.FOV * 1.5,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 0,
  },
  SKILL_CAP: [
    smshskl, //reload
    smshskl, //Penetration
    smshskl, //bullet hp
    smshskl, //bullet dmg
    smshskl, //bullet spd
    smshskl, //shield
    smshskl, //body dmg
    smshskl, // body hp
    smshskl, //shield regen
    0, //body speed
  ],
  TURRETS: [
    {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.sanctuary_snow,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.destroy,
          g.single,
          g.superStats,
          g.superReload,
          g.superReload,
          g.superReload,
          g.minorSpeed,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.destroyerAntiBossTurret = {
  PARENT: [exports.genericTank],
  LABEL: "Destroyer Anti-Boss Turret",
  HAS_NO_RECOIL: true,
  SIZE: 18.5,
  BODY: {
    SPEED: 0,
    ACCELERATION: 0,
    SHIELD: base.SHIELD * 2,
    HEALTH: base.HEALTH * 2.5,
    DAMAGE: base.DAMAGE * 2.25,
    REGEN: base.REGEN * 3.5,
    FOV: base.FOV * 1.5,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 0,
  },
  SKILL_CAP: [
    smshskl, //reload
    smshskl, //Penetration
    smshskl, //bullet hp
    smshskl, //bullet dmg
    smshskl, //bullet spd
    smshskl, //shield
    smshskl, //body dmg
    smshskl, // body hp
    smshskl, //shield regen
    0, //body speed
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
    {
      POSITION: [8.5, 0, 0, 30, 180, 1],
      TYPE: exports.sanct_rep_healer,
    },
    {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.sanctuary_snow,
    },

  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.destroy,
          g.single,
          g.superStats,
          g.superReload,
          g.superReload,
          g.superReload,
          g.minorSpeed,
          g.lesserReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.droneDominationTurret = makeMulti(
  {
  PARENT: [exports.genericTank],
  HAS_NO_RECOIL: true,
  BODY: {
    SPEED: 0,
    ACCELERATION: 0,
    SHIELD: base.SHIELD * 2,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 0.75,
    REGEN: base.REGEN * 3,
    FOV: base.FOV * 1.35,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 0,
  },
  SKILL_CAP: [
    smshskl, //reload
    smshskl, //Penetration
    smshskl, //bullet hp
    smshskl, //bullet dmg
    smshskl, //bullet spd
    smshskl, //shield
    smshskl, //body dmg
    smshskl, // body hp
    smshskl, //shield regen
    0, //body speed
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        MAX_CHILDREN: 3,
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
},
3,
"Drone Domination Turret",
);
exports.droneCommanderTurret = makeMulti(
  {
  PARENT: [exports.genericTank],
  HAS_NO_RECOIL: true,
  SIZE: 15.5,
  BODY: {
    SPEED: 0,
    ACCELERATION: 0,
    SHIELD: base.SHIELD * 2,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1,
    REGEN: base.REGEN * 3,
    FOV: base.FOV * 1.35,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 0,
  },
  SKILL_CAP: [
    smshskl, //reload
    smshskl, //Penetration
    smshskl, //bullet hp
    smshskl, //bullet dmg
    smshskl, //bullet spd
    smshskl, //shield
    smshskl, //body dmg
    smshskl, // body hp
    smshskl, //shield regen
    0, //body speed
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        MAX_CHILDREN: 3,
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
},
3,
"Drone Commander Turret",
);
exports.droneBossCrusherTurret = {
  PARENT: [exports.genericTank],
  LABEL: "Drone Boss Crusher Turret",
  SIZE: 18.5,
  HAS_NO_RECOIL: true,
  BODY: {
    SPEED: 0,
    ACCELERATION: 0,
    SHIELD: base.SHIELD * 2,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1,
    REGEN: base.REGEN * 3,
    FOV: base.FOV * 1.35,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 0,
  },
  SKILL_CAP: [
    smshskl, //reload
    smshskl, //Penetration
    smshskl, //bullet hp
    smshskl, //bullet dmg
    smshskl, //bullet spd
    smshskl, //shield
    smshskl, //body dmg
    smshskl, // body hp
    smshskl, //shield regen
    0, //body speed
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        MAX_CHILDREN: 3,
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        MAX_CHILDREN: 3,
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        MAX_CHILDREN: 3,
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 45, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, -45, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 135, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, -135, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10.5, 18, 1.2, 5.5, 0, 0, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.cheese]),
        MAX_CHILDREN: 1,
        TYPE: [exports.drone, { 
          TYPE: "minion", 
          DRAW_HEALTH: true }],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.nailerDominationTurret = {
  PARENT: [exports.genericTank],
  LABEL: "Nailer Domination Turret",
  HAS_NO_RECOIL: true,
  BODY: {
    SPEED: 0,
    ACCELERATION: 0,
    SHIELD: base.SHIELD * 2,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 1.5,
    REGEN: base.REGEN * 3,
    FOV: base.FOV * 1.5,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 0,
  },
  SKILL_CAP: [
    smshskl, //reload
    smshskl, //Penetration
    smshskl, //bullet hp
    smshskl, //bullet dmg
    smshskl, //bullet spd
    smshskl, //shield
    smshskl, //body dmg
    smshskl, // body hp
    smshskl, //shield regen
    0, //body speed
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 3, 1, 0, -2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.lesserSize,
          g.greaterDamage,
          g.halfRange,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14.5, 3, 1, 0, 2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.lesserSize,
          g.greaterDamage,
          g.halfRange,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 3, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.lesserSize,
          g.greaterDamage,
          g.halfRange,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.nailerSanctuaryTurret = {
  PARENT: [exports.genericTank],
  LABEL: "Nailer Sanctuary Turret",
  HAS_NO_RECOIL: true,
  SIZE: 15.5,
  BODY: {
    SPEED: 0,
    ACCELERATION: 0,
    SHIELD: base.SHIELD * 2,
    HEALTH: base.HEALTH * 2.25,
    DAMAGE: base.DAMAGE * 1.6,
    REGEN: base.REGEN * 3,
    FOV: base.FOV * 1.5,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 0,
  },
  SKILL_CAP: [
    smshskl, //reload
    smshskl, //Penetration
    smshskl, //bullet hp
    smshskl, //bullet dmg
    smshskl, //bullet spd
    smshskl, //shield
    smshskl, //body dmg
    smshskl, // body hp
    smshskl, //shield regen
    0, //body speed
  ],
  TURRETS: [
    {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.sanctuary_snow,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 3, 1, 0, -2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.lesserSize,
          g.greaterDamage,
          g.halfRange
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14.5, 3, 1, 0, 2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.lesserSize,
          g.greaterDamage,
          g.halfRange,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 3, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.lesserSize,
          g.greaterDamage,
          g.halfRange
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.nailerAntiBossTurret = {
  PARENT: [exports.genericTank],
  LABEL: "Nailer Anti-Boss Turret",
  HAS_NO_RECOIL: true,
  SIZE: 18.5,
  BODY: {
    SPEED: 0,
    ACCELERATION: 0,
    SHIELD: base.SHIELD * 2,
    HEALTH: base.HEALTH * 2.5,
    DAMAGE: base.DAMAGE * 1.75,
    REGEN: base.REGEN * 3.5,
    FOV: base.FOV * 1.5,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 0,
  },
  SKILL_CAP: [
    smshskl, //reload
    smshskl, //Penetration
    smshskl, //bullet hp
    smshskl, //bullet dmg
    smshskl, //bullet spd
    smshskl, //shield
    smshskl, //body dmg
    smshskl, // body hp
    smshskl, //shield regen
    0, //body speed
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
    {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.repsanctuary_snow,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 3, 1, 0, -2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.lesserSize,
          g.greaterDamage,
          g.bitmoreSpeed,
          g.halfRange,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14.5, 3, 1, 0, 2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.lesserSize,
          g.greaterDamage,
          g.halfRange,
          g.bitmoreSpeed
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 3, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.lesserSize,
          g.greaterDamage,
          g.halfRange,
          g.bitmoreSpeed
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.trapperDominationDefense = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "Trapper Domination Defense",
    HAS_NO_RECOIL: true,
    BODY: {
      SPEED: 0,
      ACCELERATION: 0,
      SHIELD: base.SHIELD * 2,
      HEALTH: base.HEALTH * 2,
      DAMAGE: base.DAMAGE * 2,
      REGEN: base.REGEN * 3,
      FOV: base.FOV * 1.5,
      DENSITY: base.DENSITY * 3,
      PUSHABILITY: 0,
    },
    SKILL_CAP: [
      smshskl, //reload
      smshskl, //Penetration
      smshskl, //bullet hp
      smshskl, //bullet dmg
      smshskl, //bullet spd
      smshskl, //shield
      smshskl, //body dmg
      smshskl, // body hp
      smshskl, //shield regen
      0, //body speed
    ],
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [21.5, 0, 0, 0, 361, 0],
        TYPE: exports.dominatorBody,
      },
    ],
    GUNS: [
      /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [12, 3.5, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [1.3, 3.5, 1.7, 12, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.trap,
          g.hexatrap,
          g.superStats,
          g.lesserSpeed,
          g.superReload,
          g.superReload,
          g.superReload,
          g.greaterRange,
          g.minorDamage,
          g.greaterHealth,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
  },
  8,
  "Trapper Defense"
);
exports.trapperSanctuaryDefense = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "Trapper Sanctuary Defense",
    HAS_NO_RECOIL: true,
    SIZE: 15.5,
    BODY: {
      SPEED: 0,
      ACCELERATION: 0,
      SHIELD: base.SHIELD * 2,
      HEALTH: base.HEALTH * 2.25,
      DAMAGE: base.DAMAGE * 2.1,
      REGEN: base.REGEN * 3,
      FOV: base.FOV * 1.5,
      DENSITY: base.DENSITY * 3,
      PUSHABILITY: 0,
    },
    SKILL_CAP: [
      smshskl, //reload
      smshskl, //Penetration
      smshskl, //bullet hp
      smshskl, //bullet dmg
      smshskl, //bullet spd
      smshskl, //shield
      smshskl, //body dmg
      smshskl, // body hp
      smshskl, //shield regen
      0, //body speed
    ],
    TURRETS: [
    {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.sanctuary_snow,
    },
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [21.5, 0, 0, 0, 361, 0],
        TYPE: exports.dominatorBody,
      },
    ],
    GUNS: [
      /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [12, 3.5, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [1.3, 3.5, 1.7, 12, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.trap,
          g.hexatrap,
          g.superStats,
          g.lesserSpeed,
          g.superReload,
          g.superReload,
          g.superReload,
          g.greaterRange,
          g.minorDamage,
          g.greaterHealth,
          g.bitmoreHealth,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
  },
  8,
  "Trapper Sanctuary Defense"
);
exports.trapperAntiBossDefense = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "Trapper Sanctuary Defense",
    HAS_NO_RECOIL: true,
    SIZE: 18.5,
    BODY: {
      SPEED: 0,
      ACCELERATION: 0,
      SHIELD: base.SHIELD * 2,
      HEALTH: base.HEALTH * 2.5,
      DAMAGE: base.DAMAGE * 2.25,
      REGEN: base.REGEN * 3.5,
      FOV: base.FOV * 1.5,
      DENSITY: base.DENSITY * 3,
      PUSHABILITY: 0,
    },
    SKILL_CAP: [
      smshskl, //reload
      smshskl, //Penetration
      smshskl, //bullet hp
      smshskl, //bullet dmg
      smshskl, //bullet spd
      smshskl, //shield
      smshskl, //body dmg
      smshskl, // body hp
      smshskl, //shield regen
      0, //body speed
    ],
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [21.5, 0, 0, 0, 361, 0],
        TYPE: exports.dominatorBody,
      },
    {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.repsanctuary_snow,
    },
    ],
    GUNS: [
      /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [12, 3.5, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [1.3, 3.5, 1.7, 12, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.trap,
          g.hexatrap,
          g.superStats,
          g.lesserSpeed,
          g.superReload,
          g.superReload,
          g.superReload,
          g.greaterRange,
          g.minorDamage,
          g.greaterHealth,
          g.greaterHealth,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
  },
  8,
  "Trapper Anti-Boss Defense"
);//wacha doin pal
exports.turretParagon = {
  PARENT: [exports.trapperAntiBossDefense],
  LABEL: "Turret Paragon",
  HAS_NO_RECOIL: true,
  SIZE: 20,
  BODY: {
    RECOIL: 0,
    SPEED: 0,
    ACCELERATION: 0,
    SHIELD: base.SHIELD * 2,
    HEALTH: base.HEALTH * 2.75,
    DAMAGE: base.DAMAGE * 1.75,
    REGEN: base.REGEN * 3.5,
    FOV: base.FOV * 1.7,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 0,
  },
  SKILL_CAP: [
    smshskl, //reload
    smshskl, //Penetration
    smshskl, //bullet hp
    smshskl, //bullet dmg
    smshskl, //bullet spd
    smshskl, //shield
    smshskl, //body dmg
    smshskl, // body hp
    smshskl, //shield regen
    0, //body speed
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
    {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.repsanctuary_snow,
    },
    {
      POSITION: [8.5, 0, 0, 0, 360, 1],
      TYPE: exports.repsanctuary_snow,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 75, 0, 180, 361, 0],
      TYPE: exports.DomOrb3,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 75, 0, 60, 361, 0],
      TYPE: exports.DomOrb2,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 75, 0, -60, 361, 0],
      TYPE: exports.DomOrb1,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        MAX_CHILDREN: 3,
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        MAX_CHILDREN: 3,
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over]),
        MAX_CHILDREN: 3,
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 135, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, -135, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
      {
        POSITION: [12, 3.5, 1, 0, 0, 90, 0],
      },
      {
        POSITION: [1.3, 3.5, 1.7, 12, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.trap,
          g.hexatrap,
          g.superStats,
          g.lesserSpeed,
          g.superReload,
          g.superReload,
          g.superReload,
          g.greaterRange,
          g.minorDamage,
          g.greaterHealth,
          g.greaterHealth,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [12, 3.5, 1, 0, 0, 45, 0],
      },
      {
        POSITION: [1.3, 3.5, 1.7, 12, 0, 45, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.trap,
          g.hexatrap,
          g.superStats,
          g.lesserSpeed,
          g.superReload,
          g.superReload,
          g.superReload,
          g.greaterRange,
          g.minorDamage,
          g.greaterHealth,
          g.greaterHealth,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [12, 3.5, 1, 0, 0, 135, 0],
      },
      {
        POSITION: [1.3, 3.5, 1.7, 12, 0, 135, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.trap,
          g.hexatrap,
          g.superStats,
          g.lesserSpeed,
          g.superReload,
          g.superReload,
          g.superReload,
          g.greaterRange,
          g.minorDamage,
          g.greaterHealth,
          g.greaterHealth,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [12, 3.5, 1, 0, 0, -90, 0],
      },
      {
        POSITION: [1.3, 3.5, 1.7, 12, 0, -90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.trap,
          g.hexatrap,
          g.superStats,
          g.lesserSpeed,
          g.superReload,
          g.superReload,
          g.superReload,
          g.greaterRange,
          g.minorDamage,
          g.greaterHealth,
          g.greaterHealth,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [12, 3.5, 1, 0, 0, -45, 0],
      },
      {
        POSITION: [1.3, 3.5, 1.7, 12, 0, -45, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.trap,
          g.hexatrap,
          g.superStats,
          g.lesserSpeed,
          g.superReload,
          g.superReload,
          g.superReload,
          g.greaterRange,
          g.minorDamage,
          g.greaterHealth,
          g.greaterHealth,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [12, 3.5, 1, 0, 0, -135, 0],
      },
      {
        POSITION: [1.3, 3.5, 1.7, 12, 0, -135, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.trap,
          g.hexatrap,
          g.superStats,
          g.lesserSpeed,
          g.superReload,
          g.superReload,
          g.superReload,
          g.greaterRange,
          g.minorDamage,
          g.greaterHealth,
          g.greaterHealth,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [12, 3.5, 1, 0, 0, 180, 0],
      },
      {
        POSITION: [1.3, 3.5, 1.7, 12, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.trap,
          g.hexatrap,
          g.superStats,
          g.lesserSpeed,
          g.superReload,
          g.superReload,
          g.superReload,
          g.greaterRange,
          g.minorDamage,
          g.greaterHealth,
          g.greaterHealth,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.destroy,
          g.single,
          g.superStats,
          g.superReload,
          g.superReload,
          g.superReload,
          g.minorSpeed,
          g.lesserReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 3, 1, 0, -2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.greaterDamage,
          g.bitmoreSpeed,
          g.halfRange,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14.5, 3, 1, 0, 2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.greaterDamage,
          g.halfRange,
          g.bitmoreSpeed
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 3, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.greaterDamage,
          g.halfRange,
          g.bitmoreSpeed,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};

exports.StrongholdTurret = {
  PARENT: [exports.experimenterStationedTurret], 
  INDEPENDANT: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 2.5, 1, 0, -2, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 2.5, 1, 0, 2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserHealth,
        ]),
        TYPE: exports.bullet,
      },
    },

    {
      POSITION: [5.5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.Stronghold = makeMulti(
  {
  PARENT: [exports.genericTank],
  DANGER: 7,
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "experiment",
  HAS_NO_RECOIL: true,
    SIZE: 17.5,
    BODY: {
      SPEED: 0.2,
      ACCELERATION: 0,
      SHIELD: base.SHIELD * 2.5,
      HEALTH: base.HEALTH * 2.75,
      DAMAGE: base.DAMAGE * 2.1,
      REGEN: base.REGEN * 3,
      FOV: base.FOV * 1.5,
      DENSITY: base.DENSITY * 3,
      PUSHABILITY: 0,
    },
    SKILL_CAP: [
      smshskl, //reload
      smshskl, //Penetration
      smshskl, //bullet hp
      smshskl, //bullet dmg
      smshskl, //bullet spd
      smshskl, //shield
      smshskl, //body dmg
      smshskl, // body hp
      smshskl, //shield regen
      0, //body speed
    ],
  MAX_CHILDREN: 8,
  TURRETS: [
  {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [25, 0, 0, 0, 360, 0],
      TYPE: [exports.StrongholdTurret, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.slingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4, 12, 1, 10.5, 0, 0, 0],
    },

    {
      POSITION: [2, 13, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [8, 11, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.halfReload, g.greaterSize]),
        TYPE: [exports.experimenterStationedTurretNOGROWTH, { PERSISTS_AFTER_DEATH: true }],
        ALT_FIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [5, 7, -1.8, 6.5, 0, 0, 0],
    },
    ],
  },
  4,
  "Stronghold"
);
exports.Stationaryexperimenter = makeMulti(
  {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Inventor",
  STAT_NAMES: statnames.trap,
  SPECIAL_EFFECT: "experiment",
  HAS_NO_RECOIL: true,
  SIZE: 15.5,
    BODY: {
      SPEED: 0.2,
      ACCELERATION: 0,
      SHIELD: base.SHIELD * 2,
      HEALTH: base.HEALTH * 2.25,
      DAMAGE: base.DAMAGE * 2.1,
      REGEN: base.REGEN * 3,
      FOV: base.FOV * 1.5,
      DENSITY: base.DENSITY * 3,
      PUSHABILITY: 0,
    },
    SKILL_CAP: [
      smshskl, //reload
      smshskl, //Penetration
      smshskl, //bullet hp
      smshskl, //bullet dmg
      smshskl, //bullet spd
      smshskl, //shield
      smshskl, //body dmg
      smshskl, // body hp
      smshskl, //shield regen
      0, //body speed
    ],
  MAX_CHILDREN: 8,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.slingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4, 12, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [8, 11, 1.3, 10, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.halfReload, g.greaterSize]),
        TYPE: [exports.inventorStationedTurret, { PERSISTS_AFTER_DEATH: true }],

        ALT_FIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [5, 7, -1.8, 6.5, 0, 0, 0],
    },
    ],
  },
  4,
  "Stationary Experimenter"
);
exports.elite_spin_snow = {
  PARENT: [exports.cyclone],
  LABEL: "",
  COLOR: 5,
  INDEPENDENT: true,
  CONTROLLERS: ["spin", "alwaysFire"],
};
exports.elite_sprayer2_snow = {
  PARENT: [exports.snowstorm],
  LABEL: "",
  COLOR: 5,
  INDEPENDENT: true,
  CONTROLLERS: ["spin", "alwaysFire"],
};
let ABPautoTurretArray = [];
for (let i = 0; i < 5; i++) {
  ABPautoTurretArray.push({
    POSITION: [7, 12, 0, i * (360 / 5) + 360 / 5 / 2, 180, 0],
    TYPE: [exports.assassin3Turret],
  });
}
let AAPautoTurretArray = [];
for (let i = 0; i < 5; i++) {
  AAPautoTurretArray.push({
    POSITION: [7, 12, 0, i * (360 / 5) + 360 / 5 / 2, 180, 0],
    TYPE: [exports.autoSmasherTurret],
  });
}
let eternalTrapTurretArray = [];
for (let i = 0; i < 11; i++) {
  eternalTrapTurretArray.push({
    POSITION: [6, 9, 0, i * (360 / 11) + 360 / 11 / 2, 0, 0],
    TYPE: [
      exports.celestialTrapTurret,
      { CONTROLERS: ["nearestDifferentMaster"] },
    ],
  });
}
let ragnarokTrapTurretArray = [];
for (let i = 0; i < 11; i++) {
  ragnarokTrapTurretArray.push({
    POSITION: [4, 9, 0, i * (360 / 11) + 360 / 11 / 2, 0, 0],
    TYPE: [
      exports.celestialTrapTurret,
      { CONTROLERS: ["nearestDifferentMaster"] },
    ],
  });
}
let kronosTrapTurretArray = [];
for (let i = 0; i < 12; i++) {
  kronosTrapTurretArray.push({
    POSITION: [5.5, 9, 0, i * (360 / 12) + 360 / 12 / 2, 0, 0],
    TYPE: [exports.kronosUltraTrapper],
  });
}
let rogueEternalTrapTurretArray = [];
for (let i = 0; i < 6; i++) {
  rogueEternalTrapTurretArray.push({
    POSITION: [7.5, 9, 0, i * (360 / 6) + 360 / 6 / 2, 0, 0],
    TYPE: [exports.REUltraTrapper],
  });
}
let celestialTrapTurretArray = [];
for (let i = 0; i < 9; i++) {
  celestialTrapTurretArray.push({
    POSITION: [5.5, 9, 0, i * (360 / 9) + 360 / 9 / 2, 0, 0],
    TYPE: [exports.celestialUltraTrapper],
  });
}
let minicelestialTrapTurretArray = [];
for (let i = 0; i < 5; i++) {
  minicelestialTrapTurretArray.push({
    POSITION: [5.5, 9, 0, i * (360 / 5) + 360 / 5 / 2, 0, 0],
    TYPE: [exports.celestialUltraTrapper],
  });
}
let terrestrialTrapTurretArray = [];
for (let i = 0; i < 7; i++) {
  terrestrialTrapTurretArray.push({
    POSITION: [5.5, 9, 0, i * (360 / 7) + 360 / 7 / 2, 0, 0],
    TYPE: [exports.terrestrialUltraTrapper],
  });
}
let miniterrestrialTrapTurretArray = [];
for (let i = 0; i < 5; i++) {
  miniterrestrialTrapTurretArray.push({
    POSITION: [8, 6.5, 0, i * (360 / 5) + 360 / 5 / 2, 0, 0],
    TYPE: [exports.miniterrestrialUltraTrapper],
  });
}
let terrestrialPillboxTurretArray = [];
for (let i = 0; i < 7; i++) {
  terrestrialPillboxTurretArray.push({
    POSITION: [5.5, 9, 0, i * (360 / 7) + 360 / 7 / 2, 0, 0],
    TYPE: [exports.terrestrialPillbox],
  });
}

exports.rainbowsterileEggChipbody = {
  PARENT: [exports.sterileSunchip],
  COLOR: 36,
  SHAPE: 0,
};
exports.rainbowsterileEggChip = {
  PARENT: [exports.sterileSunchip],
  COLOR: 36,
  SHAPE: 0,
  BODY: {
    HEALTH: 1,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.75, 0, 0, 45, 360, 1],
      TYPE: [exports.rainEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5, 0, 0, 0, 360, 1],
      TYPE: [exports.rainEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [2, 0, 0, 0, 360, 1],
      TYPE: [exports.rainEgg, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
//BOSSES
//RARE ELITES
exports.trueblackCircle = {
  PARENT: [exports.genericTank],
  COLOR: 9,
  INDEPENDENT: true,
};
exports.blackTriangle = {
  PARENT: [exports.triangle],
  COLOR: 17,
  INDEPENDENT: true,
};
exports.darkCircle = {
  PARENT: [exports.genericTank],
  COLOR: 17,
  INDEPENDENT: true,
};
exports.hardshellBullet = {
  PARENT: [exports.bullet],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.blackCircle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: [exports.blackCircle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.Machinebuilder = {
  PARENT: [exports.genericTank],
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 10, 1.4, 8, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1.4, 20, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.machgun, g.lesserHealth]),
        TYPE: exports.trap,
      },
    },
  ],
};
exports.hardshellBulletTest = {
  PARENT: [exports.genericTank],
  LABEL: "Hardshell Shooter",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 14, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.greaterHealth,
        ]),
        TYPE: exports.hardshellBullet,
      },
    },
  ],
};
exports.LeliteSprayerSnow = makeMulti(
  {
    PARENT: [exports.auto3Turret, exports.basic],
    COLOR: 0,
    BODY: { FOV: 2.5 },
    INDEPENDENT: true,
    CONTROLLERS: ["spin", "alwaysFire"],
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [15, 0, 0, 0, 360, 1],
        TYPE: [exports.blackCircle, { INDEPENDENT: true, COLOR: 1 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [23, 7, 1, 0, 0, 180, 0],

        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.mach,
            g.lowpower,
            g.halfDamage,
            g.greaterReload,
            g.minorRecoil,
            g.lesserStats,
          ]),
          TYPE: exports.bullet,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [12, 10, 1.4, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.lesserStats]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  3,
  "Shiny spinner"
);
exports.legendaryBarricadeTurret = {
  PARENT: [exports.autoTurret, exports.barricade],
  COLOR: 0,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [6, 7, 1.35, 19.6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.halfStats]),
        TYPE: exports.setBlock,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4.5, 7, 1.35, 16.6, 0, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.halfStats]),
        TYPE: exports.setBlock,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3.2, 7, 1.35, 13.6, 0, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.halfStats]),
        TYPE: exports.setBlock,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.grenadierTurret = {
  PARENT: [exports.autoTurret, exports.barricade],
  COLOR: 16,
  GUNS: [
  {
    POSITION: [20, 10, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic]),
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 13, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile, g.doubleReload, g.lesserStats,]),
      TYPE: exports.lesserGrenadierMissile,
    },
  }
  ],
};
exports.legendaryArtilleryTurret = {
  PARENT: [exports.autoTurret, exports.artillery],
  COLOR: 0,
  GUNS: [
    ...sideGuns,
    ...extraSideGuns,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.LeliteSprayerTurret = {
  PARENT: [exports.auto3Turret, exports.basic],
  COLOR: 0,
  SHAPE: 3,
  HAS_NO_RECOIL: true,
  BODY: { FOV: 2.5 },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 6, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.lowpower,
          g.halfDamage,
          g.greaterReload,
          g.minorRecoil,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.lesserStats]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 10, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.lesserStats]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.LelitePelleterTurret = {
  PARENT: [exports.autoTurret, exports.switch7],
  COLOR: 0,
  SHAPE: 3,
  BODY: { FOV: 2.5 },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [14, 0, 0, 0, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
  GUNS: [
    {
      POSITION: [19, 2, 1, 0, -2.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 2, 1, 0, 2.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [21, 3, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 11, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [16, 4.5, 1, 0, 7.25, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 4.5, 1, 0, -7.75, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 4.5, 1, 0, 7.25, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 4.5, 1, 0, -7.75, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 4.5, 1, 0, 7.25, 0, 3 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 4.5, 1, 0, -7.75, 0, 3 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.Lelite_fort_snow = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    COLOR: 0,
    INDEPENDENT: true,
    CONTROLLERS: ["spin", "alwaysFire"],
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [15, 0, 0, 0, 360, 1],
        TYPE: [exports.blackCircle, { INDEPENDENT: true, COLOR: 1 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 8, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [2, 10, 1, 13, 0, 0, 0],
      },
      {
        POSITION: [1, 10, 1.2, 15, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.block,
            g.greaterSpeed,
            g.hexatrap,
          ]),
          TYPE: exports.bosspillbox,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [12, 10, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [18, 12, 1, 0, 0, 60, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.flank]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  3,
  ""
);
exports.LeliteTriTurret = {
  PARENT: [exports.auto3Turret, exports.triple],
  COLOR: 0,
  SHAPE: 3,
  BODY: { FOV: 2.5 },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.lesserHealth,
          g.lesserDamage,
          g.superReload,
          g.twin,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.lesserHealth,
          g.lesserDamage,
          g.superReload,
          g.twin,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.lesserHealth,
          g.lesserDamage,
          g.superReload,
          g.twin,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.Lbigauto4Turret = {
  PARENT: [exports.auto3Turret],
  COLOR: 0,
  SHAPE: 3,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.pound, g.destroy]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 5, 1, 0, -4.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.triple]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 5, 1, 0, 4.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.triple]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 5, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.triple]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.Lelite_spin_snow = makeMulti(
  {
    PARENT: [exports.cyclone],
    LABEL: "",
    COLOR: 0,
    INDEPENDENT: true,
    CONTROLLERS: ["spin", "alwaysFire"],
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [15, 0, 0, 0, 360, 1],
        TYPE: [exports.blackCircle, { INDEPENDENT: true, COLOR: 1 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 3.5, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [15, 3.5, 1, 0, 0, 30, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.hardshellBullet,
        },
      },
      {
        POSITION: [15, 3.5, 1, 0, 0, 60, 0.25],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [15, 3.5, 1, 0, 0, 90, 0.75],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  6,
  "Legendary spinner"
);
exports.Lelite_spawner_sentryG = {
  PARENT: [exports.drone],
  LABEL: "Sentry",
  BODY: {
    SPEED: 2,
  },
  SHAPE: 3,
  DRAW_HEALTH: true,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [14, 0, 0, 0, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [12, 0, 0, 180, 360, 1],
      TYPE: [
        exports.legendaryArtilleryTurret,
        { HAS_NO_RECOIL: true, INDEPENDENT: true },
      ],
    },
  ],
};
exports.Lelite_spawner_sentryS = {
  PARENT: [exports.drone],
  LABEL: "Sentry",
  SHAPE: 3,
  BODY: {
    SPEED: 2,
  },
  DRAW_HEALTH: true,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [14, 0, 0, 0, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
  GUNS: [
    {
      POSITION: [7, 14, 1.2, 7, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.superDamage,
          g.superHealth,
          g.superReload,
        ]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 14, 1.2, 7, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.superDamage,
          g.superHealth,
          g.superReload,
        ]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 14, 1.2, 7, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.superDamage,
          g.superHealth,
          g.superReload,
        ]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.Lelite_spawner_sentryT = {
  PARENT: [exports.drone],
  LABEL: "Sentry",
  BODY: {
    SPEED: 2,
  },
  SHAPE: 3,
  DRAW_HEALTH: true,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [14, 0, 0, 0, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [12, 0, 0, 180, 360, 1],
      TYPE: [
        exports.legendaryBarricadeTurret,
        {
          HAS_NO_RECOIL: true,
          CONTROLLERS: ["nearestDifferentMaster"],
          INDEPENDENT: true,
        },
      ],
    },
  ],
};

exports.LeliteSniperTurret = {
  PARENT: [exports.auto3Turret, exports.crossbow],
  COLOR: 0,
  SHAPE: 3,
  BODY: { FOV: 3 },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
};
exports.LeliteMachineTurret = {
  PARENT: [exports.auto3Turret, exports.machine],
  COLOR: 0,
  SHAPE: 3,
  BODY: { FOV: 2.5 },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 14, 1.4, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.machgun,
          g.greaterHealth,
          g.greaterHealth,
        ]),
        TYPE: exports.hardshellBullet,
      },
    },
    {
      POSITION: [3, 14, 1, 20, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun, g.greaterHealth]),
        TYPE: exports.autoBullet,
      },
    },
    {
      POSITION: [12, 10, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun, g.greaterHealth]),
        TYPE: exports.autoullet,
      },
    },
  ],
};
exports.LelitePillBox = {
  LABEL: "Pillbox",
  PARENT: [exports.unsetBlock],
  SHAPE: 3,
  FACING_TYPE: "autospin",
  CONTROLLERS: ["nearestDifferentMaster"],
  BODY: {
    SPEED: 1,
  },
  TURRETS: [
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 10, 0, -60, 140, 0],
      TYPE: exports.legendaryArtilleryTurret,
    },
    {
      POSITION: [11, 10, 0, 60, 140, 0],
      TYPE: exports.legendaryArtilleryTurret,
    },
    {
      POSITION: [11, 10, 0, 180, 360, 0],
      TYPE: exports.legendaryArtilleryTurret,
    },
  ],
};
exports.Lelite = {
  PARENT: [exports.triangleSentry, exports.neutralBoss],
  LABEL: "Legendary Elite Crasher",
  FACING_TYPE: "autospin",
  REGEN_TYPE: "shieldOnly",
  SIZE: 50,
  COLOR: 0,
  VALUE: 1000000,
  DANGER: 9,
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 1, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    FOV: 1.3,
    SPEED: 0.55,
    HEALTH: 500,
    REGEN: 0.01,
  },
};
exports.Lelite_swarmer = makeMulti(
  {
    PARENT: [exports.neutralMeleeBoss, exports.Lelite],
    LABEL: "Guardian",
    MAX_CHILDREN: 275,
    FACING_TYPE: "smoothToTarget",
    BODY: {
      FOV: 1.5,
      SPEED: 1.5,
      HEALTH: 500,
    },
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: [exports.blackTriangle],
      },
      {
        POSITION: [16, 0, 0, 0, 0, 1],
        TYPE: [exports.blackTriangle],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [6, 12, 1.33, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.over,
            g.mach,
            g.greaterDamage,
            g.greaterDamage,
            g.lesserReload,
            g.halfSize,
          ]),
          TYPE: exports.crasherSwarmDrone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.swarm,
          WAIT_TO_CYCLE: true,
        },
      },
      {
        POSITION: [5, 13, 1.33, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.over,
            g.mach,
            g.greaterDamage,
            g.greaterDamage,
            g.lesserReload,
            g.halfSize,
          ]),
          TYPE: exports.crasherSwarmDrone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.swarm,
          WAIT_TO_CYCLE: true,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 14, 1.33, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.over,
            g.mach,
            g.greaterDamage,
            g.greaterDamage,
            g.lesserReload,
            g.halfSize,
          ]),
          TYPE: exports.crasherSwarmDrone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.swarm,
          WAIT_TO_CYCLE: true,
        },
      },
    ],
  },
  3,
  "Legendary Guardian"
);
exports.Lelite_destroyer = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.Lelite],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [7, 14, 1, 6, 0, 180, 1],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.pound,
            g.destroy,
            g.anni,
            g.superHealth,
            g.greaterReload,
            g.halfSpeed,
          ]),
          TYPE: exports.bullet,
          LABEL: "Devastator",
        },
      },
      {
        POSITION: [6, 15, 1, 6, 0, 180, 2 / 3],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.pound,
            g.destroy,
            g.anni,
            g.superHealth,
            g.superHealth,
            g.greaterReload,
            g.halfSpeed,
          ]),
          TYPE: exports.bullet,
          LABEL: "Devastator",
        },
      },
      {
        POSITION: [5, 16, 1, 6, 0, 180, 1 / 3],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.pound,
            g.destroy,
            g.anni,
            g.superHealth,
            g.superHealth,
            g.superHealth,
            g.greaterReload,
            g.halfSpeed,
          ]),
          TYPE: exports.bullet,
          LABEL: "Devastator",
        },
      },
    ],
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [23, 0, 0, 0, 360, 0],
        TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
      },
      {
        POSITION: [11, 0, 0, 180, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, 60, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, -60, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, 180, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, 60, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, -60, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, 0, 360, 1],
        TYPE: [exports.Lbigauto4Turret, { INDEPENDENT: true, COLOR: 5 }],
      },
    ],
  },
  3,
  "Legendary Elite Destroyer"
);
exports.Lelite_gunner = {
  PARENT: [exports.neutralRangedBoss, exports.Lelite],
  LABEL: "Legendary Elite Gunner",
  FACING_TYPE: "smoothToTarget",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 16, 1.3, 0, 0, 180, 0],
    },
    {
      POSITION: [17, 16, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [14, 16, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [4, 16, 1.7, 14, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.pound,
          g.destroy,
          g.greaterHealth,
          g.lesserSize,
        ]),
        TYPE: [exports.LelitePillBox, { INDEPENDENT: true }],
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [16, 10, 1.3, 0, 0, 180, 0],
    },
    {
      POSITION: [6, 14, -2, 2, 0, 60, 0],
    },
    {
      POSITION: [6, 14, -2, 2, 0, 300, 0],
    },
  ],

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [14, 0, 0, 0, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 8, 0, 60, 180, 0],
      TYPE: [exports.LelitePelleterTurret],
    },
    {
      POSITION: [14, 8, 0, 300, 180, 0],
      TYPE: [exports.LelitePelleterTurret],
    },
  ],
};
exports.Lelite_machine = {
  PARENT: [exports.neutralRangedBoss, exports.Lelite],
  LABEL: "Legendary Elite Machine",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [17, 0, 0, 180, 360, 1],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.blackTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [14, 10, 0, 180, 190, 0],
      TYPE: [exports.LeliteMachineTurret],
    },
    {
      POSITION: [14, 10, 0, 60, 190, 0],
      TYPE: [exports.LeliteMachineTurret],
    },
    {
      POSITION: [14, 10, 0, -60, 190, 0],
      TYPE: [exports.LeliteMachineTurret],
    },
  ],
};
exports.Lelite_sprayer = {
  PARENT: [exports.neutralRangedBoss, exports.Lelite],
  LABEL: "Legendary Elite Sprayer",
  TURRETS: [
    {
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: exports.blackTriangle,
    },
    {
      POSITION: [10, 0, 0, 30, 360, 1],
      TYPE: exports.LeliteSprayerSnow,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [6, 10, 7, 180, 100, 0],
      TYPE: [exports.LeliteSprayerTurret],
    },
    {
      POSITION: [6, 10, 7, 60, 100, 0],
      TYPE: [exports.LeliteSprayerTurret],
    },
    {
      POSITION: [6, 10, 7, -60, 100, 0],
      TYPE: [exports.LeliteSprayerTurret],
    },
    {
      POSITION: [6, 10, -7, 180, 100, 0],
      TYPE: [exports.LeliteSprayerTurret],
    },
    {
      POSITION: [6, 10, -7, 60, 100, 0],
      TYPE: [exports.LeliteSprayerTurret],
    },
    {
      POSITION: [6, 10, -7, -60, 100, 0],
      TYPE: [exports.LeliteSprayerTurret],
    },
    {
      POSITION: [8, 10, 0, -60, 100, 0],
      TYPE: [exports.LeliteSprayerTurret],
    },
    {
      POSITION: [8, 10, 0, 180, 100, 0],
      TYPE: [exports.LeliteSprayerTurret],
    },
    {
      POSITION: [8, 10, 0, 60, 100, 0],
      TYPE: [exports.LeliteSprayerTurret],
    },
  ],
};
exports.Lelite_spinner = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.Lelite],
    LABEL: "Legendary Elite Cyclone",
    FACING_TYPE: "autospin",
    SPIN_RATE: 0.05,
    BODY: {
      FOV: 0.7,
      SPEED: 0.3,
    },
    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [10, 4, 1, -4, 12.5, 252, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [10, 4, 1, 4, 2.5, 250, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [10, 4, 1, 0, 7.5, 251, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [12, 2, 1, -4, 12.5, 252, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [12, 2, 1, 4, 2.5, 250, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [12, 2, 1, 0, 7.5, 251, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [11, 2, 1.6, -4, 12.5, 252, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.hardshellBullet,
        },
      },
      {
        POSITION: [11, 2, 1.6, 4, 2.5, 250, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.hardshellBullet,
        },
      },
      {
        POSITION: [11, 2, 1.6, 0, 7.5, 251, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.hardshellBullet,
        },
      },
      {
        POSITION: [5, 27, 0.6, 5.5, 0, 180, 0],
      },
    ],
    TURRETS: [
      {
        POSITION: [23, 0, 0, 0, 360, 0],
        TYPE: exports.blackTriangle,
      },
      {
        POSITION: [15, 0, 0, 0, 360, 1],
        TYPE: exports.Lelite_spin_snow,
      },
      {
        POSITION: [8.5, 0, 0, 30, 360, 1],
        TYPE: exports.Lelite_spin_snow,
      },
    ],
  },
  3,
  "Legendary Elite Cyclone"
);
exports.Lelite_battleship = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.Lelite],
    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [7, 18, 0.6, 8, 0, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.doubleReload]),
          TYPE: exports.swarmDrone,
        },
      },
      {
        POSITION: [8, 10, 0.6, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.doubleReload]),
          TYPE: exports.swarmDrone,
        },
      },
      {
        POSITION: [6, 6, 0.6, 8, 4, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.halfHealth,
            g.halfDamage,
            g.doubleReload,
          ]),
          TYPE: exports.swarmDrone,
        },
      },
      {
        POSITION: [6, 6, 0.6, 8, -4, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.halfHealth,
            g.halfDamage,
            g.doubleReload,
          ]),
          TYPE: exports.swarmDrone,
        },
      },
      {
        POSITION: [4, 6, 0.6, 8, 8, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.halfHealth,
            g.halfDamage,
            g.doubleReload,
          ]),
          TYPE: exports.swarmDrone,
        },
      },
      {
        POSITION: [4, 6, 0.6, 8, -8, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.halfHealth,
            g.halfDamage,
            g.doubleReload,
          ]),
          TYPE: exports.swarmDrone,
        },
      },
      {
        POSITION: [4, 6, 0.6, 8, 0, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.halfHealth,
            g.halfDamage,
            g.doubleReload,
          ]),
          TYPE: exports.swarmDrone,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [15, 0, 0, 0, 360, 1],
        TYPE: exports.blackTriangle,
      },
      {
        POSITION: [5, 8, 0, 0, 190, 1],
        TYPE: [exports.LeliteSniperTurret],
      },
      {
        POSITION: [5, 8, 0, 120, 190, 1],
        TYPE: [exports.LeliteSniperTurret],
      },
      {
        POSITION: [5, 8, 0, 240, 190, 1],
        TYPE: [exports.LeliteSniperTurret],
      },
    ],
  },
  3,
  "Legendary Elite Battleship"
);
exports.Lelite_fortress = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.Lelite],
    BODY: {
      SPEED: 0.05,
    },
    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [11, 8, 1, 0, 0, 60, 0],
      },
      {
        POSITION: [1, 8, 1.2, 11, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.block, g.pound]),
          TYPE: exports.unsetBlock,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [15, 0, 0, 0, 360, 1],
        TYPE: exports.blackTriangle,
      },
      {
        POSITION: [8.5, 0, 0, 30, 360, 1],
        TYPE: exports.Lelite_fort_snow,
      },
      /*  SIZE     X       Y     ANGLE    ARC */
      {
        POSITION: [5.5, 8, 8, 60, 120, 0],
        TYPE: [exports.LeliteTriTurret],
      },
      {
        POSITION: [5.5, 8, 8, 180, 120, 0],
        TYPE: [exports.LeliteTriTurret],
      },
      {
        POSITION: [5.5, 8, 8, 300, 120, 0],
        TYPE: [exports.LeliteTriTurret],
      },
      {
        POSITION: [5.5, 8, -8, 60, 120, 0],
        TYPE: [exports.LeliteTriTurret],
      },
      {
        POSITION: [5.5, 8, -8, 180, 120, 0],
        TYPE: [exports.LeliteTriTurret],
      },
      {
        POSITION: [5.5, 8, -8, 300, 120, 0],
        TYPE: [exports.LeliteTriTurret],
      },
    ],
  },
  3,
  "Legendary Elite Trap Guard"
);
exports.Lelite_spawner = {
  PARENT: [exports.neutralRangedBoss, exports.Lelite],
  LABEL: "Legendary Elite Spawner",
  GUNS: [
    {
      POSITION: [10, 14, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [10, 14, 1, 0, 0, 60, 0],
    },
    {
      POSITION: [10, 14, 1, 0, 0, 300, 0],
    },
    {
      POSITION: [9, 14, 1.7, 0, 0, 180, 0],
    },
    {
      POSITION: [9, 14, 1.7, 0, 0, 60, 0],
    },
    {
      POSITION: [9, 14, 1.7, 0, 0, 300, 0],
    },
    {
      POSITION: [2, 18, 1, 10, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.destroy,
          g.over,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.Lelite_spawner_sentryG,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [2, 18, 1, 10, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.destroy,
          g.over,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.Lelite_spawner_sentryS,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [2, 18, 1, 10, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.destroy,
          g.over,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.Lelite_spawner_sentryT,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [12, 16, 0.7, 0, 0, 180, 0],
    },
    {
      POSITION: [12, 16, 0.7, 0, 0, 60, 0],
    },
    {
      POSITION: [12, 16, 0.7, 0, 0, 300, 0],
    },
    {
      POSITION: [10, 16, 1.3, 0, 0, 180, 0],
    },
    {
      POSITION: [10, 16, 1.3, 0, 0, 60, 0],
    },
    {
      POSITION: [10, 16, 1.3, 0, 0, 300, 0],
    },
  ],
  TURRETS: [
    {
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: exports.blackTriangle,
    },
    {
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.LelitePelleterTurret,
    },
  ],
};
exports.SeliteSprayerSnow = makeMulti(
  {
    PARENT: [exports.auto3Turret, exports.basic],
    COLOR: 1,
    BODY: { FOV: 2.5 },
    INDEPENDENT: true,
    CONTROLLERS: ["spin", "alwaysFire"],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [23, 7, 1, 0, 0, 180, 0],

        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.mach,
            g.lowpower,
            g.halfDamage,
            g.greaterReload,
            g.minorRecoil,
            g.lesserStats,
          ]),
          TYPE: exports.bullet,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [12, 10, 1.4, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.lesserStats]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  3,
  "Shiny spinner"
);
exports.SeliteSprayerTurret = {
  PARENT: [exports.auto3Turret, exports.basic],
  COLOR: 1,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 6, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.lowpower,
          g.halfDamage,
          g.greaterReload,
          g.minorRecoil,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.lesserStats]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 10, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mach, g.lesserStats]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.SelitePelleterTurret = {
  PARENT: [exports.autoTurret, exports.switch7],
  COLOR: 1,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      POSITION: [19, 2, 1, 0, -2.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 2, 1, 0, 2.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.lesserDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 11, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [12, 4.5, 1, 0, 7.25, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 4.5, 1, 0, -7.75, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.Selite_fort_snow = makeMulti(
  {
    PARENT: [exports.genericTank],
    DANGER: 7,
    COLOR: 1,
    INDEPENDENT: true,
    CONTROLLERS: ["spin", "alwaysFire"],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 10, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [1, 10, 1.2, 15, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.block,
            g.greaterSpeed,
            g.hexatrap,
          ]),
          TYPE: exports.unsetBlock,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [18, 8, 1, 0, 0, 60, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.flank]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  3,
  ""
);
exports.SeliteTwinTurret = {
  PARENT: [exports.auto3Turret, exports.basic],
  COLOR: 1,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.lesserHealth,
          g.lesserDamage,
          g.superReload,
          g.twin,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.lesserHealth,
          g.lesserDamage,
          g.superReload,
          g.twin,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.Sbigauto4Turret = {
  PARENT: [exports.auto3Turret],
  COLOR: 1,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 5, 1, 0, -4.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.triple]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 5, 1, 0, 4.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.triple]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 5, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.triple]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.Selite_spin_snow = makeMulti(
  {
    PARENT: [exports.cyclone],
    LABEL: "",
    COLOR: 1,
    INDEPENDENT: true,
    CONTROLLERS: ["spin", "alwaysFire"],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 3.5, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [15, 3.5, 1, 0, 0, 30, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [15, 3.5, 1, 0, 0, 60, 0.25],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [15, 3.5, 1, 0, 0, 90, 0.75],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  4,
  "Shiny spinner"
);
exports.Selite_spawner_sentryG = {
  PARENT: [exports.drone],
  LABEL: "Sentry",
  BODY: {
    SPEED: 2,
  },
  SHAPE: 3,
  DRAW_HEALTH: true,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 180, 360, 1],
      TYPE: [exports.greenTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [12, 0, 0, 180, 360, 1],
      TYPE: [
        exports.shinyArtilleryTurret,
        { HAS_NO_RECOIL: true, INDEPENDENT: true },
      ],
    },
  ],
};
exports.Selite_spawner_sentryS = {
  PARENT: [exports.drone],
  LABEL: "Sentry",
  SHAPE: 3,
  BODY: {
    SPEED: 2,
  },
  DRAW_HEALTH: true,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 180, 360, 1],
      TYPE: [exports.greenTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
  ],
  GUNS: [
    {
      POSITION: [7, 14, 0.6, 7, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.superDamage,
          g.superHealth,
          g.superReload,
        ]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.Selite_spawner_sentryT = {
  PARENT: [exports.drone],
  LABEL: "Sentry",
  BODY: {
    SPEED: 2,
  },
  SHAPE: 3,
  DRAW_HEALTH: true,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 180, 360, 1],
      TYPE: [exports.greenTriangle, { INDEPENDENT: true, COLOR: 1 }],
    },
    {
      POSITION: [12, 0, 0, 180, 360, 1],
      TYPE: [
        exports.shinyBarricadeTurret,
        {
          HAS_NO_RECOIL: true,
          CONTROLLERS: ["nearestDifferentMaster"],
          INDEPENDENT: true,
        },
      ],
    },
  ],
};

exports.SeliteSniperTurret = {
  PARENT: [exports.auto3Turret, exports.ranger],
  COLOR: 1,
  BODY: { FOV: 3 },
};
exports.SeliteMachineTurret = {
  PARENT: [exports.auto3Turret, exports.machine],
  COLOR: 1,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [3, 14, 1, 20, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 10, 1.4, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.Selite = {
  PARENT: [exports.triangleSentry, exports.neutralBoss],
  LABEL: "Shiny Elite Crasher",
  FACING_TYPE: "autospin",
  REGEN_TYPE: "shieldOnly",
  SIZE: 30,
  COLOR: 1,
  VALUE: 500000,
  DANGER: 9,
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 1, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    FOV: 1.3,
    SPEED: 0.55,
    HEALTH: 300,
    REGEN: 0.01,
  },
};
exports.Selite_swarmer = makeMulti(
  {
    PARENT: [exports.neutralMeleeBoss, exports.Selite],
    LABEL: "Guardian",
    MAX_CHILDREN: 75,
    FACING_TYPE: "smoothToTarget",
    BODY: {
      FOV: 1.5,
      SPEED: 1.5,
      HEALTH: 500,
    },
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: [exports.blackTriangle],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [0, 12, 1.33, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.over,
            g.mach,
            g.greaterDamage,
            g.lesserReload,
            g.halfSize,
          ]),
          TYPE: exports.crasherSwarmDrone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.swarm,
          WAIT_TO_CYCLE: true,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 12, 1.33, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.over,
            g.mach,
            g.greaterDamage,
            g.lesserReload,
            g.halfSize,
          ]),
          TYPE: exports.crasherSwarmDrone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.swarm,
          WAIT_TO_CYCLE: true,
        },
      },
    ],
  },
  3,
  "Shiny Guardian"
);
exports.Selite_destroyer = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.Selite],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [6, 15, 1, 6, 0, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.pound,
            g.destroy,
            g.anni,
            g.superHealth,
            g.superHealth,
            g.greaterReload,
            g.halfSpeed,
          ]),
          TYPE: exports.bullet,
          LABEL: "Devastator",
        },
      },
      {
        POSITION: [5, 16, 1, 6, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.pound,
            g.destroy,
            g.anni,
            g.superHealth,
            g.superHealth,
            g.superHealth,
            g.greaterReload,
            g.halfSpeed,
          ]),
          TYPE: exports.bullet,
          LABEL: "Devastator",
        },
      },
    ],
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [11, 0, 0, 180, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, 60, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, -60, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, 0, 360, 1],
        TYPE: [exports.Sbigauto4Turret, { INDEPENDENT: true, COLOR: 5 }],
      },
    ],
  },
  3,
  "Shiny Elite Destroyer"
);
exports.Selite_gunner = {
  PARENT: [exports.neutralRangedBoss, exports.Selite],
  LABEL: "Shiny Elite Gunner",
  FACING_TYPE: "smoothToTarget",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 16, 1.3, 0, 0, 180, 0],
    },
    {
      POSITION: [14, 16, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [4, 16, 1.5, 14, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.pound, g.destroy]),
        TYPE: [exports.bosspillboxTwin, { INDEPENDENT: true }],
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [16, 10, 1.3, 0, 0, 180, 0],
    },
    {
      POSITION: [6, 14, -2, 2, 0, 60, 0],
    },
    {
      POSITION: [6, 14, -2, 2, 0, 300, 0],
    },
  ],

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 8, 0, 60, 180, 0],
      TYPE: [exports.SelitePelleterTurret],
    },
    {
      POSITION: [14, 8, 0, 300, 180, 0],
      TYPE: [exports.SelitePelleterTurret],
    },
  ],
};
exports.Selite_machine = {
  PARENT: [exports.neutralRangedBoss, exports.Selite],
  LABEL: "Shiny Elite Machine",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 6, 0, 180, 190, 0],
      TYPE: [exports.SeliteMachineTurret],
    },
    {
      POSITION: [14, 6, 0, 60, 190, 0],
      TYPE: [exports.SeliteMachineTurret],
    },
    {
      POSITION: [14, 6, 0, -60, 190, 0],
      TYPE: [exports.SeliteMachineTurret],
    },
  ],
};
exports.Selite_sprayer = {
  PARENT: [exports.neutralRangedBoss, exports.Selite],
  LABEL: "Shiny Elite Sprayer",
  TURRETS: [
    {
      POSITION: [8, 0, 0, 30, 360, 1],
      TYPE: exports.SeliteSprayerSnow,
    },

    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 6, 6, 180, 100, 0],
      TYPE: [exports.SeliteSprayerTurret],
    },
    {
      POSITION: [9, 6, 6, 60, 100, 0],
      TYPE: [exports.SeliteSprayerTurret],
    },
    {
      POSITION: [9, 6, 6, -60, 100, 0],
      TYPE: [exports.SeliteSprayerTurret],
    },
    {
      POSITION: [9, 6, -6, 180, 100, 0],
      TYPE: [exports.SeliteSprayerTurret],
    },
    {
      POSITION: [9, 6, -6, 60, 100, 0],
      TYPE: [exports.SeliteSprayerTurret],
    },
    {
      POSITION: [9, 6, -6, -60, 100, 0],
      TYPE: [exports.SeliteSprayerTurret],
    },
  ],
};
exports.Selite_spinner = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.Selite],
    LABEL: "Shiny Elite Cyclone",
    FACING_TYPE: "autospin",
    SPIN_RATE: 0.05,
    VALUE: 300000,
    BODY: {
      FOV: 0.7,
      SPEED: 0.3,
    },
    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [10, 4, 1, -4, 12.5, 252, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [10, 4, 1, 4, 2.5, 250, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [10, 4, 1, 0, 7.5, 251, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [12, 2, 1, -4, 12.5, 252, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [12, 2, 1, 4, 2.5, 250, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [12, 2, 1, 0, 7.5, 251, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [5, 27, 0.6, 5.5, 0, 180, 0],
      },
    ],
    TURRETS: [
      {
        POSITION: [8.5, 0, 0, 30, 360, 1],
        TYPE: exports.Selite_spin_snow,
      },
    ],
  },
  3,
  "Shiny Elite Cyclone"
);
exports.Selite_battleship = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.Selite],
    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [6, 6, 0.6, 8, 4, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.halfHealth,
            g.halfDamage,
            g.doubleReload,
          ]),
          TYPE: exports.swarmDrone,
        },
      },
      {
        POSITION: [6, 6, 0.6, 8, -4, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.halfHealth,
            g.halfDamage,
            g.doubleReload,
          ]),
          TYPE: exports.swarmDrone,
        },
      },
      {
        POSITION: [4, 6, 0.6, 8, 8, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.halfHealth,
            g.halfDamage,
            g.doubleReload,
          ]),
          TYPE: exports.swarmDrone,
        },
      },
      {
        POSITION: [4, 6, 0.6, 8, -8, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.halfHealth,
            g.halfDamage,
            g.doubleReload,
          ]),
          TYPE: exports.swarmDrone,
        },
      },
      {
        POSITION: [4, 6, 0.6, 8, 0, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.halfHealth,
            g.halfDamage,
            g.doubleReload,
          ]),
          TYPE: exports.swarmDrone,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [5, 8, 0, 0, 190, 1],
        TYPE: [exports.SeliteSniperTurret],
      },
      {
        POSITION: [5, 8, 0, 120, 190, 1],
        TYPE: [exports.SeliteSniperTurret],
      },
      {
        POSITION: [5, 8, 0, 240, 190, 1],
        TYPE: [exports.SeliteSniperTurret],
      },
    ],
  },
  3,
  "Shiny Elite Battleship"
);
exports.Selite_fortress = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.Selite],
    VALUE: 300000,
    BODY: {
      SPEED: 0.05,
      HEALTH: 225,
    },
    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [11, 8, 1, 0, 0, 60, 0],
      },
      {
        POSITION: [1, 8, 1.2, 11, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.block, g.pound]),
          TYPE: exports.unsetBlock,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [8.5, 0, 0, 30, 360, 1],
        TYPE: exports.Selite_fort_snow,
      },
      /*  SIZE     X       Y     ANGLE    ARC */
      {
        POSITION: [5.5, 8, 8, 60, 120, 0],
        TYPE: [exports.SeliteTwinTurret],
      },
      {
        POSITION: [5.5, 8, 8, 180, 120, 0],
        TYPE: [exports.SeliteTwinTurret],
      },
      {
        POSITION: [5.5, 8, 8, 300, 120, 0],
        TYPE: [exports.SeliteTwinTurret],
      },
      {
        POSITION: [5.5, 8, -8, 60, 120, 0],
        TYPE: [exports.SeliteTwinTurret],
      },
      {
        POSITION: [5.5, 8, -8, 180, 120, 0],
        TYPE: [exports.SeliteTwinTurret],
      },
      {
        POSITION: [5.5, 8, -8, 300, 120, 0],
        TYPE: [exports.SeliteTwinTurret],
      },
    ],
  },
  3,
  "Shiny Elite Trap Guard"
);
exports.Selite_spawner = {
  PARENT: [exports.neutralRangedBoss, exports.Selite],
  LABEL: "Shiny Elite Spawner",
  GUNS: [
    {
      POSITION: [10, 14, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [10, 14, 1, 0, 0, 60, 0],
    },
    {
      POSITION: [10, 14, 1, 0, 0, 300, 0],
    },
    {
      POSITION: [2, 18, 1, 10, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.destroy,
          g.over,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.Selite_spawner_sentryG,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [2, 18, 1, 10, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.destroy,
          g.over,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.Selite_spawner_sentryS,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [2, 18, 1, 10, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.destroy,
          g.over,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.Selite_spawner_sentryT,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [12, 16, 0.7, 0, 0, 180, 0],
    },
    {
      POSITION: [12, 16, 0.7, 0, 0, 60, 0],
    },
    {
      POSITION: [12, 16, 0.7, 0, 0, 300, 0],
    },
    {
      POSITION: [14, 16, 0.3, 0, 0, 180, 0],
    },
    {
      POSITION: [14, 16, 0.3, 0, 0, 60, 0],
    },
    {
      POSITION: [14, 16, 0.3, 0, 0, 300, 0],
    },
  ],
  TURRETS: [
    {
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.SelitePelleterTurret,
    },
  ],
};
//NORM BOSSES
exports.elite = {
  PARENT: [exports.neutralBoss, exports.triangleSentry],
  LABEL: "Elite Crasher",
  FACING_TYPE: "autospin",
  //REGEN_TYPE: "shieldOnly",
  SIZE: 26.5,
  VALUE: 250000,
  DANGER: 9,
  IS_ENEMY: false,
  TYPE: "neutralBoss",
  TIER: 1,
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 1, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    FOV: 1.2,
    SPEED: 0.55,
    HEALTH: 150,
    REGEN: 0.01,
  },
};
exports.barracuda = {
  PARENT: [exports.neutralMeleeBoss, exports.elite],
  LABEL: "The Theta Crasher",
  NAME: "Barracuda",
  VALUE: 300000,
  FACING_TYPE: "smoothToTarget",
  SIZE: 45,
  BODY: {
    FOV: 1.5,
    SPEED: 1.5,
    HEALTH: 750,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 5, 1.33, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.over,
          g.mach,
          g.greaterDamage,
          g.lesserReload,
          g.halfSize,
          g.bitmoreSpeed,
          g.greaterSpeed,
        ]),
        TYPE: exports.crasherSwarmDrone,
        MAX_CHILDREN: 35,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
        WAIT_TO_CYCLE: true,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 5, 1.33, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.over,
          g.mach,
          g.greaterDamage,
          g.lesserReload,
          g.halfSize,
          g.bitmoreSpeed,
          g.greaterSpeed,
        ]),
        TYPE: exports.crasherSwarmDrone,
        MAX_CHILDREN: 36,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
        WAIT_TO_CYCLE: true,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [2.5, 5, 1.5, 8, -9.25, 180, 1.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.over,
          g.mach,
          g.greaterDamage,
          g.bitmoreReload,
          g.lesserSpeed,
          g.doubleSize,
          g.greaterHealth,
          g.greaterDamage,
          g.greaterSpeed,
          
        ]),
        TYPE: exports.alphacrasherSwarmDrone,
        MAX_CHILDREN: 5,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
        WAIT_TO_CYCLE: true,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [2.5, 5, 1.5, 8, 9.25, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.over,
          g.mach,
          g.greaterDamage,
          g.bitmoreReload,
          g.lesserSpeed,
          g.doubleSize,
          g.greaterHealth,
          g.greaterDamage,
          g.greaterSpeed,
        ]),
        TYPE: exports.alphacrasherSwarmDrone,
        MAX_CHILDREN: 5,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
        WAIT_TO_CYCLE: true,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [3.5, 5, 1.5, 8, -5.25, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.over,
          g.mach,
          g.greaterDamage,
          g.bitmoreHealth,
          g.greaterSize,
          g.bitmoreDamage,
          g.greaterSpeed
        ]),
        TYPE: exports.betacrasherSwarmDrone,
        MAX_CHILDREN: 18,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
        WAIT_TO_CYCLE: true,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [3.5, 5, 1.5, 8, 5.25, 180, 1.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.over,
          g.mach,
          g.greaterDamage,
          g.bitmoreHealth,
          g.greaterSize,
          g.bitmoreDamage,
          g.greaterSpeed,
        ]),
        TYPE: exports.betacrasherSwarmDrone,
        MAX_CHILDREN: 18,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
        WAIT_TO_CYCLE: true,
      },
    },
    {
      POSITION: [10, 4, 1, 4, 0, 150, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [10, 4, 1, 4, 0, -150, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [8.5, 4, 1, 4, 0, -165, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [8.5, 4, 1, 4, 0, 165, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [10, 4, 1, 4, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
  ],
    TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10.5, 0, 0, 180, 0, 1],
      TYPE: [exports.pinkTriangle,],
    },
      {
        POSITION: [4.5, 9.5, 0, 0, 190, 1],
        TYPE: [exports.barracudaSniperTurret],
      },
      {
        POSITION: [4.5, 9.5, 0, 120, 190, 1],
        TYPE: [exports.barracudaSniperTurret],
      },
      {
        POSITION: [4.5, 9.5, 0, 240, 190, 1],
        TYPE: [exports.barracudaSniperTurret],
      },
      {
        POSITION: [3, 6.75, 0, 140, 190, 1],
        TYPE: [exports.barracudaSniperTurret],
      },
      {
        POSITION: [3, 6.75, 0, 100, 190, 1],
        TYPE: [exports.barracudaSniperTurret],
      },
      {
        POSITION: [3, 6.75, 0, 220, 190, 1],
        TYPE: [exports.barracudaSniperTurret],
      },
      {
        POSITION: [3, 6.75, 0, 260, 190, 1],
        TYPE: [exports.barracudaSniperTurret],
      },
      {
        POSITION: [3, 6.75, 0, 20, 190, 1],
        TYPE: [exports.barracudaSniperTurret],
      },
      {
        POSITION: [3, 6.75, 0, -20, 190, 1],
        TYPE: [exports.barracudaSniperTurret],
      },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5.25, 0, 0, 0, 0, 1],
      TYPE: [exports.pinkTriangle,],
    },
      {
        POSITION: [4, 4.75, 0, 180, 190, 1],
        TYPE: [exports.barracudatriple],
      },
      {
        POSITION: [4, 4.75, 0, 60, 190, 1],
        TYPE: [exports.barracudatriple],
      },
            {
        POSITION: [4, 4.75, 0, 300, 190, 1],
        TYPE: [exports.barracudatriple],
      },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [5.25, 0, 0, 0, 360, 1],
      TYPE: [exports.barracudarifle,],
    },
  ],
};
exports.elite_swarmer = {
  PARENT: [exports.neutralMeleeBoss, exports.elite],
  LABEL: "Guardian",
  VALUE: 300000,
  MAX_CHILDREN: 75,
  FACING_TYPE: "smoothToTarget",
  BODY: {
    FOV: 1.5,
    SPEED: 1.5,
    HEALTH: 400,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 12, 1.33, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.over,
          g.mach,
          g.greaterDamage,
          g.lesserReload,
          g.halfSize,
        ]),
        TYPE: exports.crasherSwarmDrone,
        AUTOFIRE: true,

        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
        WAIT_TO_CYCLE: true,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4, 12, 1.33, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.over,
          g.mach,
          g.greaterDamage,
          g.lesserReload,
          g.halfSize,
        ]),
        TYPE: exports.crasherSwarmDrone,
        AUTOFIRE: true,

        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
        WAIT_TO_CYCLE: true,
      },
    },
  ],
};
exports.elite_destroyer = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.elite],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5, 16, 1, 6, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.pound,
            g.destroy,
            g.anni,
            g.superHealth,
            g.superHealth,
            g.superHealth,
            g.doubleReload,
            g.halfSpeed,
          ]),
          TYPE: exports.bullet,
          LABEL: "Devastator",
        },
      },
    ],
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [11, 0, 0, 180, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, 60, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, -60, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, 0, 360, 1],
        TYPE: [exports.bigAuto4Turret, { INDEPENDENT: true, COLOR: 5 }],
      },
    ],
  },
  3,
  "Elite Destroyer"
);
exports.elite_Shadowgunner = {
  PARENT: [exports.neutralRangedBoss, exports.elite],
  LABEL: "Elite Shadow Gunner",
  ALPHA: 0.75,
  VALUE: 1500000,
  COLOR: 19,
  SIZE: 40,
  FACING_TYPE: "smoothToTarget",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 16, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [15, 7, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [6, 7, 1.35, 19.6, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4.5, 7, 1.35, 16.6, 0, 180, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3.2, 7, 1.35, 13.6, 0, 180, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4, 16, 1.5, 14, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.pound,
          g.destroy,
          g.anni,
        ]),
        TYPE: [exports.bosspillboxTwin, { INDEPENDENT: true }],
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 14, -2, 2, 0, 60, 0],
    },
    {
      POSITION: [6, 14, -2, 2, 0, 300, 0],
    },
    {
      POSITION: [12, 3.5, 1, 0, 7.25, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.puregunner,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 3.5, 1, 0, -7.25, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.puregunner,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 3.5, 1, 0, 3.75, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.puregunner,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 3.5, 1, 0, -3.75, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.puregunner,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 3.5, 1, 0, 5.75, 0, 3 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.puregunner,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 3.5, 1, 0, -5.75, 0, 3 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.puregunner,
          g.lesserStats,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 8, 0, 60, 180, 0],
      TYPE: [exports.elitePelleterTurret],
    },
    {
      POSITION: [14, 8, 0, 300, 180, 0],
      TYPE: [exports.elitePelleterTurret],
    },
    {
      POSITION: [14, 8, 0, 60, 180, 0],
      TYPE: [exports.autoTurret],
    },
    {
      POSITION: [14, 8, 0, 300, 180, 0],
      TYPE: [exports.autoTurret],
    },
    {
      POSITION: [8, 8, 0, 60, 180, 0],
      TYPE: [exports.autoTurret],
    },
    {
      POSITION: [8, 8, 0, 300, 180, 0],
      TYPE: [exports.autoTurret],
    },
    {
      POSITION: [11, 0, 0, 180, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
    {
      POSITION: [11, 0, 0, 60, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
    {
      POSITION: [11, 0, 0, -60, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
  ],
};
exports.elite_gunner = {
  PARENT: [exports.neutralRangedBoss, exports.elite],
  LABEL: "Elite Gunner",
  FACING_TYPE: "smoothToTarget",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 16, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [4, 16, 1.5, 14, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.pound, g.destroy]),
        TYPE: [exports.bosspillbox, { INDEPENDENT: true }],
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 14, -2, 2, 0, 60, 0],
    },
    {
      POSITION: [6, 14, -2, 2, 0, 300, 0],
    },
  ],

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 8, 0, 60, 180, 0],
      TYPE: [exports.elitePelleterTurret],
    },
    {
      POSITION: [14, 8, 0, 300, 180, 0],
      TYPE: [exports.elitePelleterTurret],
    },
  ],
};
exports.elite_machine = {
  PARENT: [exports.neutralRangedBoss, exports.elite],
  LABEL: "Elite Machine",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 6, 0, 180, 190, 0],
      TYPE: [exports.eliteMachineTurret],
    },
    {
      POSITION: [14, 6, 0, 60, 190, 0],
      TYPE: [exports.eliteMachineTurret],
    },
    {
      POSITION: [14, 6, 0, -60, 190, 0],
      TYPE: [exports.eliteMachineTurret],
    },
  ],
};
exports.elite_sprayer = {
  PARENT: [exports.neutralRangedBoss, exports.elite],
  LABEL: "Elite Sprayer",
  TURRETS: [
    {
      POSITION: [6, 0, 0, 30, 360, 1],
      TYPE: exports.elite_sprayer2_snow,
    },

    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 6, 6, 180, 100, 0],
      TYPE: [exports.eliteSprayerTurret],
    },
    {
      POSITION: [9, 6, 6, 60, 100, 0],
      TYPE: [exports.eliteSprayerTurret],
    },
    {
      POSITION: [9, 6, 6, -60, 100, 0],
      TYPE: [exports.eliteSprayerTurret],
    },
    {
      POSITION: [9, 6, -6, 180, 100, 0],
      TYPE: [exports.eliteSprayerTurret],
    },
    {
      POSITION: [9, 6, -6, 60, 100, 0],
      TYPE: [exports.eliteSprayerTurret],
    },
    {
      POSITION: [9, 6, -6, -60, 100, 0],
      TYPE: [exports.eliteSprayerTurret],
    },
  ],
};
exports.elite_streamliner = {
  PARENT: [exports.neutralRangedBoss, exports.elite],
  LABEL: "Elite Streamliner",
  TURRETS: [
    {
      POSITION: [10, 0, 0, 30, 360, 1],
      TYPE: exports.eliteStreamTurret,
    },

    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 6, 6, 180, 100, 0],
      TYPE: [exports.eliteMiniTurret],
    },
    {
      POSITION: [10, 6, 6, 60, 100, 0],
      TYPE: [exports.eliteMiniTurret],
    },
    {
      POSITION: [10, 6, 6, -60, 100, 0],
      TYPE: [exports.eliteMiniTurret],
    },
    {
      POSITION: [10, 6, -6, 180, 100, 0],
      TYPE: [exports.eliteMiniTurret],
    },
    {
      POSITION: [10, 6, -6, 60, 100, 0],
      TYPE: [exports.eliteMiniTurret],
    },
    {
      POSITION: [10, 6, -6, -60, 100, 0],
      TYPE: [exports.eliteMiniTurret],
    },
  ],
};
(exports.elite_spinner = {
  PARENT: [exports.neutralRangedBoss, exports.elite],

  LABEL: "Elite Cyclone",
  FACING_TYPE: "autospin",
  SPIN_RATE: 0.05,
  VALUE: 300000,
  BODY: {
    FOV: 0.7,
    SPEED: 0.3,
  },
  GUNS: [
    /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */

    {
      POSITION: [12, 2, 1, -4, 12.5, 12, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 2, 1, 4, 2.5, 10, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 2, 1, 0, 7.5, 11, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 2, 1, -4, 12.5, 132, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 2, 1, 4, 2.5, 130, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 2, 1, 0, 7.5, 131, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 2, 1, -4, 12.5, 252, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 2, 1, 4, 2.5, 250, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 2, 1, 0, 7.5, 251, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.nail, g.cyclone]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 27, 0.6, 5.5, 0, 60, 0],
    },
    {
      POSITION: [5, 27, 0.6, 5.5, 0, 300, 0],
    },
    {
      POSITION: [5, 27, 0.6, 5.5, 0, 180, 0],
    },
  ],
  TURRETS: [
    {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.elite_spin_snow,
    },
  ],
});
exports.elite_battleship = makeMulti(
    {
      PARENT: [exports.neutralRangedBoss, exports.elite],
      GUNS: [
        /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
        {
          POSITION: [4, 6, 0.6, 8, 8, 180, 0.5],
          PROPERTIES: {
            SHOOT_SETTINGS: combineStats([
              g.swarm,
              g.halfHealth,
              g.halfDamage,
              g.doubleReload,
            ]),
            TYPE: exports.swarmDrone,
          },
        },
        {
          POSITION: [4, 6, 0.6, 8, -8, 180, 0.5],
          PROPERTIES: {
            SHOOT_SETTINGS: combineStats([
              g.swarm,
              g.halfHealth,
              g.halfDamage,
              g.doubleReload,
            ]),
            TYPE: exports.swarmDrone,
          },
        },
        {
          POSITION: [4, 6, 0.6, 8, 0, 180, 0],
          PROPERTIES: {
            SHOOT_SETTINGS: combineStats([
              g.swarm,
              g.halfHealth,
              g.halfDamage,
              g.doubleReload,
            ]),
            TYPE: exports.swarmDrone,
          },
        },
      ],
      TURRETS: [
        {
          POSITION: [5, 8, 0, 0, 190, 1],
          TYPE: [exports.eliteSniperTurret],
        },
        {
          POSITION: [5, 8, 0, 120, 190, 1],
          TYPE: [exports.eliteSniperTurret],
        },
        {
          POSITION: [5, 8, 0, 240, 190, 1],
          TYPE: [exports.eliteSniperTurret],
        },
      ],
    },
    3,
    "Elite Battleship"
);
exports.elite_fortress = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.elite],
    VALUE: 300000,
    BODY: {
      SPEED: 0.05,
      HEALTH: 225,
    },
    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [11, 7, 1, 0, 0, 60, 0],
      },
      {
        POSITION: [3, 6.5, 1.7, 11, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.pound]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [8.5, 0, 0, 30, 360, 1],
        TYPE: exports.elite_fort_snow,
      },
      /*  SIZE     X       Y     ANGLE    ARC */
      {
        POSITION: [5.5, 8, 8, 60, 120, 0],
        TYPE: [exports.eliteBasicTurret],
      },
      {
        POSITION: [5.5, 8, 8, 180, 120, 0],
        TYPE: [exports.eliteBasicTurret],
      },
      {
        POSITION: [5.5, 8, 8, 300, 120, 0],
        TYPE: [exports.eliteBasicTurret],
      },
      {
        POSITION: [5.5, 8, -8, 60, 120, 0],
        TYPE: [exports.eliteBasicTurret],
      },
      {
        POSITION: [5.5, 8, -8, 180, 120, 0],
        TYPE: [exports.eliteBasicTurret],
      },
      {
        POSITION: [5.5, 8, -8, 300, 120, 0],
        TYPE: [exports.eliteBasicTurret],
      },
    ],
  },
  3,
  "Elite Trap Guard"
);
exports.elite_spawner = {
  PARENT: [exports.neutralRangedBoss, exports.elite],
  LABEL: "Elite Spawner",
  GUNS: [
    {
      POSITION: [10, 14, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [10, 14, 1, 0, 0, 60, 0],
    },
    {
      POSITION: [10, 14, 1, 0, 0, 300, 0],
    },
    {
      POSITION: [2, 18, 1, 10, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.over,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.gunSentryDrone,
        AUTOFIRE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [2, 18, 1, 10, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.over,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.swarmSentryDrone,
        AUTOFIRE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [2, 18, 1, 10, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.over,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.trapSentryDrone,
        AUTOFIRE: true,
        MAX_CHILDREN: 3,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.elitePelleterTurret,
    },
  ],
};
exports.elite_warkspawner = {
  PARENT: [exports.highlordRangedBoss],
  LABEL: "Bulwark Factory",
  VALUE: 300000,
  SHAPE: 8,
  SIZE: 25,
  GUNS: [
    {
      POSITION: [16, 14, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 18, 1, 16, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.bulwarkMinion,
        AUTOFIRE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [9, 17, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 17, 1.4, 9, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, -8, 0, 360, 360, 1],
      TYPE: exports.autoTurret,
    },
  ],
};
exports.elite_warship = makeMulti(
    {

  SIZE: 28.5,
  VALUE: 275000,
  DANGER: 9,
  IS_ENEMY: false,
  TYPE: "neutralBoss",
  TIER: 2,
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 1, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    FOV: 1.2,
    SPEED: 0.75,
    HEALTH: 175,
    REGEN: 0.01,
  },
      PARENT: [exports.neutralRangedBoss, exports.elite],
      GUNS: [
        /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
        {
          POSITION: [4, 6, 0.6, 8, 8, 180, 0.5],
          PROPERTIES: {
            SHOOT_SETTINGS: combineStats([
              g.swarm,
              g.halfHealth,
              g.halfDamage,
              g.doubleReload,
              g.greaterSpeed,
            ]),
            TYPE: exports.uncontrolledSwarmDrone,
          },
        },
        {
          POSITION: [4, 6, 0.6, 8, -3, 180, 0.5],
          PROPERTIES: {
            SHOOT_SETTINGS: combineStats([
              g.swarm,
              g.halfHealth,
              g.halfDamage,
              g.doubleReload,
            ]),
            TYPE: exports.swarmDrone,
          },
        },
        {
          POSITION: [4, 6, 0.6, 8, -8, 180, 0],
          PROPERTIES: {
            SHOOT_SETTINGS: combineStats([
              g.swarm,
              g.halfHealth,
              g.halfDamage,
              g.doubleReload,
            ]),
            TYPE: exports.swarmDrone,
          },
        },
        {
          POSITION: [4, 6, 0.6, 8, 3, 180, 0],
          PROPERTIES: {
            SHOOT_SETTINGS: combineStats([
              g.swarm,
              g.halfHealth,
              g.halfDamage,
              g.doubleReload,
              g.greaterSpeed,
            ]),
            TYPE: exports.uncontrolledSwarmDrone,
          },
        },
      ],
      TURRETS: [
        {
          POSITION: [5, 8, 0, 0, 190, 1],
          TYPE: [exports.warshipSniperTurret],
        },
        {
          POSITION: [5, 8, 0, 120, 190, 1],
          TYPE: [exports.warshipSniperTurret],
        },
        {
          POSITION: [5, 8, 0, 240, 190, 1],
          TYPE: [exports.warshipSniperTurret],
        },
      ],
    },
    3,
    "Elite Warship"
);
exports.minion_warkspawner = {
  PARENT: [exports.minion],
  LABEL: "Bulwark Factory",
  SHAPE: 8,
  BODY: {
    SPEED: base.SPEED / 3,
  },
  GUNS: [
    {
      POSITION: [16, 14, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 18, 1, 16, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner]),
        TYPE: exports.bulwarkMinion,
        AUTOFIRE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [9, 17, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 17, 1.4, 9, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, -8, 0, 360, 360, 1],
      TYPE: exports.autoTurret,
    },
  ],
};
exports.Doomwark = {
  PARENT: [exports.highlordRangedBoss],
  DANGER: 7,
  VALUE: 3000000,
  NAME: "Doomwark",
  LABEL: "HL-Amalgamation",
  BODY: {
    HEALTH: base.HEALTH * 200,
    DAMAGE: base.DAMAGE * 1.1,
    ACCEL: base.ACCEL * 0.8,
  },
  TURRETS: [
    {
      POSITION: [12, 7, 0, 90, 360, 1],
      TYPE: exports.autoWarkTurret,
    },
    {
      POSITION: [12, 7, 0, -90, 360, 1],
      TYPE: exports.autoWarkTurret,
    },
    {
      POSITION: [13, 7, 0, 150, 120, 0],
      TYPE: exports.barricadeTurret,
    },
    {
      POSITION: [13, 7, 0, -150, 120, 0],
      TYPE: exports.barricadeTurret,
    },
    {
      POSITION: [15, 7, 0, 180, 120, 0],
      TYPE: exports.barricadeTurret,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 7.5, 0.6, 7, 0, 140, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.battleShip]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -140, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.battleShip]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 6, 0, 140, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.battleShip]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },
    {
      POSITION: [7, 9.5, 0.6, 6, 0, -140, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.battleShip]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [24, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.uberDamage,
          g.superSpeed,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.spawner,
          g.superHealth,
          g.greaterSize,
          g.halfReload,
        ]),
        TYPE: exports.minion_warkspawner,
        MAX_CHILDREN: 3,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
    {
      POSITION: [20, 8, 1, 0, 5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.uberDamage,
          g.superSpeed,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.uberDamage,
          g.superSpeed,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.castaway = {
  PARENT: [exports.guardianRangedBoss],
  LABEL: "Castaways",
  NAME: "Magnus",
  COLOR: 10,
  SHAPE: 6,
  SIZE: 28.5,
  VALUE: 1250000,
  BODY: {
    FOV: 2,
    SPEED: 0.1,
    HEALTH: 3000,
    SHIELD: 50,
  },
  GUNS: [

    {
      POSITION: [21, 8, 1, 0, -4, 157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [21, 8, 1, 0, 4, -157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, -4, 152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 4, -152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -160.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 160.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [10, 12, 1, 0, 0, 60, 0],
    },
    {
      POSITION: [2, 11, 1, 10, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.destroy,
          g.over,
          g.halfStats,
          g.doubleSpeed,
          g.greaterSize,
        ]),
        TYPE: exports.swarmBlueDrone,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [10, 12, 1, 0, 0, -60, 0],
    },
    {
      POSITION: [2, 11, 1, 10, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.destroy,
          g.over,
          g.halfStats,
          g.doubleSpeed,
          g.greaterSize,
        ]),
        TYPE: exports.swarmBlueDrone,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
      },
    },

  {
    POSITION: [12.5, 3, 1, 0, 7, 10, 0.75],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.doubleSize]),
      TYPE: exports.uncontrolledBeeDrone,
      LABEL: "Secondary",
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [12.5, 3, 1, 0, -7, -10, 0.25],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.doubleSize]),
      TYPE: exports.uncontrolledBeeDrone,
      LABEL: "Secondary",
    },
  },
  {
    POSITION: [14.5, 3, 1, 0, 5.5, 7, 0.75],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.doubleSize]),
      TYPE: exports.uncontrolledBeeDrone,
      LABEL: "Secondary",
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [14.5, 3, 1, 0, -5.5, -7, 0.25],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.doubleSize]),
      TYPE: exports.uncontrolledBeeDrone,
      LABEL: "Secondary",
    },
  },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.bitmoreDamage,
          g.bitmoreHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [10, 12, 1, 0, 0, 120, 0],
    },
    {
      POSITION: [2, 11, 1, 10, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.destroy,
          g.over,
          g.halfStats,
          g.doubleSpeed,
          g.greaterSize,
        ]),
        TYPE: exports.gunBlueDrone,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [10, 12, 1, 0, 0, -120, 0],
    },
    {
      POSITION: [2, 11, 1, 10, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.destroy,
          g.over,
          g.halfStats,
          g.doubleSpeed,
          g.greaterSize,
        ]),
        TYPE: exports.gunBlueDrone,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
      },
    },
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [20, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [20, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [20, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
  ],
};
exports.roguepalisade = makeMulti(
  {
    PARENT: [exports.guardianRangedBoss],
    SPECIAL_EFFECT: "palisadeEvolve",
    FACING_TYPE: "autospin",
    COLOR: 10,
    SHAPE: 6,
    SIZE: 28.5,
    VALUE: 250000,
    BODY: {
      FOV: 2,
      SPEED: 0.1,
      HEALTH: 500,
      SHIELD: 50,
    },
    GUNS: [
      {
        POSITION: [0, 6, -1.6, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.spawner, g.greaterHealth]),
          TYPE: exports.minion,
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          WAIT_TO_CYCLE: true,
        },
      },
      {
        POSITION: [4, 6, -1.6, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.factory, g.doubleHealth]),
          TYPE: [exports.minion, { INDEPENDENT: true }],
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          WAIT_TO_CYCLE: true,
        },
      },
    ],
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [5, 10, 0, 30, 110, 0],
        TYPE: exports.rogueTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 90, 110, 0],
        TYPE: exports.rogueTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 150, 110, 0],
        TYPE: exports.rogueTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 210, 110, 0],
        TYPE: exports.rogueTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 270, 110, 0],
        TYPE: exports.rogueTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 330, 110, 0],
        TYPE: exports.rogueTrapTurret,
      },
    ],
  },
  6,
  "Rogue Palisade"
);
exports.roguecitadel = makeMulti(
  {
    PARENT: [exports.guardianRangedBoss],
    FACING_TYPE: "autospin",
    COLOR: 10,
    SHAPE: 6,
    SIZE: 30,
    VALUE: 500000,
    BODY: {
      FOV: 2,
      SPEED: 0.15,
      HEALTH: 750,
      SHIELD: 75,
    },
    GUNS: [
      {
        POSITION: [0, 6, -1.6, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.spawner, g.mediumHealth]),
          TYPE: exports.citadelMinion,
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          WAIT_TO_CYCLE: true,
        },
      },
      {
        POSITION: [4, 6, -1.6, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.factory, g.doubleHealth, g.bitmoreHealth]),
          TYPE: [exports.citadelMinion, { INDEPENDENT: true }],
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          MAX_CHILDREN: 2,
          SYNCS_SKILLS: true,
          WAIT_TO_CYCLE: true,
        },
      },
    ],
    TURRETS: [

      {
        /** SIZE     X       Y     ANGLE    ARC */
        POSITION: [27.5, 0, 0, 0, 360, 0],
        TYPE: exports.citadelShell,
      },
      {
        /** SIZE     X       Y     ANGLE    ARC */
        POSITION: [17.5, 0, 0, 0, 360, 1],
        TYPE: exports.citadelShell,
      },
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [5, 10, 0, 30, 110, 0],
        TYPE: exports.citadelTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 90, 110, 0],
        TYPE: exports.citadelTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 150, 110, 0],
        TYPE: exports.citadelTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 210, 110, 0],
        TYPE: exports.citadelTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 270, 110, 0],
        TYPE: exports.citadelTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 330, 110, 0],
        TYPE: exports.citadelTrapTurret,
      },
    ],
  },
  6,
  "Rogue Citadel"
);
exports.rareEggBoss = {
  PARENT: [exports.neutralBoss],
  VALUE: 2500000,
  BODY: {
    FOV: 1,
    SPEED: 1,
    HEALTH: 1000,
    SHIELD: base.SHIELD * 1.25,
    REGEN: 0,
  },
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 0.6, //bullet damage
    pen: 0.6, //bullet penetration
    str: 0.9, //bullet health
    atk: 0, //bullet speed
    spd: 1, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 45,
  COLOR: 36,
  SHAPE: 0,
};
exports.eggBoss = {
  PARENT: [exports.neutralBoss],
  VALUE: 100000,
  BODY: {
    FOV: 1,
    SPEED: 1,
    HEALTH: 100,
    SHIELD: base.SHIELD * 1.25,
    REGEN: 0.025,
  },
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 0.6, //bullet damage
    pen: 0.6, //bullet penetration
    str: 0.9, //bullet health
    atk: 0, //bullet speed
    spd: 1, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 25,
  COLOR: 6,
  SHAPE: 0,
};
exports.squareBoss = {
  PARENT: [exports.neutralBoss],
  VALUE: 175000,
  BODY: {
    FOV: 1.1,
    SPEED: 0.8,
    HEALTH: 125,
    SHIELD: base.SHIELD,
    REGEN: 0.01,
  },
  SKILL: skillSet({
    rld: 0.6, //reload
    dam: 0.7, //bullet damage
    pen: 0.7, //bullet penetration
    str: 0.9, //bullet health
    atk: 0, //bullet speed
    spd: 0.8, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 25,
  COLOR: 13,
  SHAPE: 4,
};
exports.shinySquareBoss = {
  PARENT: [exports.neutralBoss],
  VALUE: 1250000,
  BODY: {
    FOV: 1.1,
    SPEED: 0.8,
    HEALTH: 425,
    SHIELD: base.SHIELD,
    REGEN: 0,
  },
  SKILL: skillSet({
    rld: 0.6, //reload
    dam: 0.7, //bullet damage
    pen: 0.7, //bullet penetration
    str: 0.9, //bullet health
    atk: 0, //bullet speed
    spd: 0.8, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 35,
  COLOR: 1,
  SHAPE: 4,
};
exports.triangleBoss = {
  PARENT: [exports.neutralBoss],
  VALUE: 200000,
  BODY: {
    FOV: 1.2,
    SPEED: 0.55,
    HEALTH: 150,
    SHIELD: base.SHIELD * 0.75,
    REGEN: 0.0025,
  },
  SKILL: skillSet({
    rld: 0.4, //reload
    dam: 0.8, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.9, //bullet health
    atk: 0, //bullet speed
    spd: 0.6, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 26,
  COLOR: 2,
  SHAPE: 3,
};
exports.upgradedtriangleBoss = {
  PARENT: [exports.triangleBoss],
  VALUE: 2500000,
  BODY: {
    FOV: 1.2,
    SPEED: 0.55,
    HEALTH: 650,
    SHIELD: base.SHIELD * 0.75,
    REGEN: 0.0025,
  },
  SKILL: skillSet({
    rld: 0.4, //reload
    dam: 0.8, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.9, //bullet health
    atk: 0, //bullet speed
    spd: 0.6, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 32,
  COLOR: 2,
  SHAPE: 3,
};
exports.pentagonBoss = {
  PARENT: [exports.neutralBoss],
  VALUE: 250000,
  BODY: {
    FOV: 1.3,
    SPEED: 0.4,
    HEALTH: 200,
    SHIELD: base.SHIELD * 0.5,
    REGEN: 0.001,
  },
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1, //bullet damage
    pen: 1, //bullet penetration
    str: 1, //bullet health
    atk: 0, //bullet speed
    spd: 0.4, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 45,
  COLOR: 14,
  SHAPE: 5,
  ORBIT_DISTANCE: 300,
};
exports.legpentagonBoss = {
  PARENT: [exports.neutralBoss],
  VALUE: 2500000,
  BODY: {
    FOV: 1.3,
    SPEED: 0.4,
    HEALTH: 1200,
    SHIELD: base.SHIELD * 0.5,
    REGEN: 0,
  },
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1, //bullet damage
    pen: 1, //bullet penetration
    str: 1, //bullet health
    atk: 0, //bullet speed
    spd: 0.4, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 65,
  COLOR: 0,
  SHAPE: 5,
  ORBIT_DISTANCE: 300,
};
exports.hexagonBoss = {
  PARENT: [exports.neutralBoss],
  VALUE: 300000,
  AI_TARGET: "mostDeadly",
  BODY: {
    FOV: 1.4,
    SPEED: 0.3,
    HEALTH: 300,
    SHIELD: base.SHIELD * 0.25,
    REGEN: 0.001,
  },
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1.1, //bullet damage
    pen: 1.1, //bullet penetration
    str: 1.1, //bullet health
    atk: 0, //bullet speed
    spd: 0.3, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 50,
  COLOR: 15,
  SHAPE: 6,
  ORBIT_DISTANCE: 350,
};
exports.weakHexagonBoss = {
  PARENT: [exports.neutralBoss],
  VALUE: 100000,
  AI_TARGET: "mostDeadly",
  BODY: {
    FOV: 1.4,
    SPEED: 0.3,
    HEALTH: 200,
    SHIELD: base.SHIELD * 0.25,
    REGEN: 0.001,
  },
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 0.9, //bullet damage
    pen: 0.9, //bullet penetration
    str: 0.9, //bullet health
    atk: 0, //bullet speed
    spd: 0.3, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 23,
  COLOR: 15,
  SHAPE: 6,
  ORBIT_DISTANCE: 350,
};
exports.septagonBoss = {
  PARENT: [exports.neutralBoss],
  VALUE: 500000,
  BODY: {
    FOV: 1.5,
    SPEED: 0.3,
    HEALTH: 500,
    SHIELD: base.SHIELD * 0.2,
    REGEN: 0.001,
  },
  SKILL: skillSet({
    rld: 0.1, //reload
    dam: 1.2, //bullet damage
    pen: 1.2, //bullet penetration
    str: 1.2, //bullet health
    atk: 0, //bullet speed
    spd: 0.2, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 55,
  COLOR: 11,
  SHAPE: 7,
  ORBIT_DISTANCE: 400,
};
exports.octagonBoss = {
  PARENT: [exports.neutralBoss],
  VALUE: 1000000,
  BODY: {
    FOV: 1.6,
    SPEED: 0.2,
    HEALTH: 750,
    SHIELD: base.SHIELD * 0.1,
  },
  SKILL: skillSet({
    rld: 0.1, //reload
    dam: 1.3, //bullet damage
    pen: 1.1, //bullet penetration
    str: 1.1, //bullet health
    atk: 0, //bullet speed
    spd: 0.3, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 60,
  COLOR: 4,
  SHAPE: 8,
  ORBIT_DISTANCE: 450,
};
exports.nonagonBoss = {
  PARENT: [exports.neutralBoss],
  VALUE: 2000000,
  BODY: {
    FOV: 2,
    SPEED: 0.1,
    HEALTH: 1000,
    SHIELD: base.SHIELD * 0.1,
    REGEN: 0,
  },
  SKILL: skillSet({
    rld: 0.1, //reload
    dam: 1.3, //bullet damage
    pen: 1.1, //bullet penetration
    str: 1.1, //bullet health
    atk: 0, //bullet speed
    spd: 0.3, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 65,
  COLOR: 18,
  SHAPE: 9,
  ORBIT_DISTANCE: 500,
};
exports.Legionary = {
  PARENT: [exports.triangleSentry, exports.neutralBoss],
  FACING_TYPE: "autospin",
  //REGEN_TYPE: "shieldOnly",
  SIZE: 110,
  VALUE: 4000000,
  DANGER: 9,
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    FOV: 1.2,
    SPEED: 0.55,
    HEALTH: 5000,
    REGEN: 0,
  },
};
exports.shinyLegionary = {
  PARENT: [exports.Legionary],
  FACING_TYPE: "autospin",
  COLOR: 1,
  //REGEN_TYPE: "shieldOnly",
  SIZE: 130,
  VALUE: 10000000,
  DANGER: 12,
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1, //bullet damage
    pen: 1, //bullet penetration
    str: 1, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    FOV: 1.2,
    SPEED: 0.55,
    HEALTH: 10000,
    REGEN: 0.01,
  },
};
exports.shinylegion = {
  PARENT: [exports.triangleSentry, exports.neutralBoss],
  LABEL: "Shiny Elite Legion",
  FACING_TYPE: "autospin",
  //REGEN_TYPE: "shieldOnly",
  SIZE: 30.5,
  VALUE: 500000,
  DANGER: 9,
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 1, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    FOV: 1.2,
    SPEED: 0.55,
    HEALTH: 100,
    REGEN: 0.01,
  },
};
exports.legion = {
  PARENT: [exports.triangleSentry, exports.neutralBoss],
  LABEL: "Elite Legion",
  FACING_TYPE: "autospin",
  //REGEN_TYPE: "shieldOnly",
  SIZE: 26.5,
  VALUE: 250000,
  DANGER: 9,
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 1, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    FOV: 1.2,
    SPEED: 0.55,
    HEALTH: 50,
    REGEN: 0.01,
  },
};
exports.Legion_sprayer = {
  PARENT: [exports.neutralRangedBoss, exports.legion],
  LABEL: "Elite Legion",
  TURRETS: [
    {
      POSITION: [6, 0, 0, 30, 360, 1],
      TYPE: exports.elite_sprayer2_snow,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 6, 6, 180, 100, 0],
      TYPE: [exports.eliteSprayerTurret],
    },
    {
      POSITION: [9, 6, 6, 60, 100, 0],
      TYPE: [exports.eliteSprayerTurret],
    },
    {
      POSITION: [9, 6, 6, -60, 100, 0],
      TYPE: [exports.eliteSprayerTurret],
    },
    {
      POSITION: [9, 6, -6, 180, 100, 0],
      TYPE: [exports.eliteSprayerTurret],
    },
    {
      POSITION: [9, 6, -6, 60, 100, 0],
      TYPE: [exports.eliteSprayerTurret],
    },
    {
      POSITION: [9, 6, -6, -60, 100, 0],
      TYPE: [exports.eliteSprayerTurret],
    },
  ],
};
exports.Selite_legion = {
  PARENT: [exports.neutralRangedBoss, exports.shinylegion],
  LABEL: "Shiny Elite Sprayer",
  TURRETS: [
    {
      POSITION: [8, 0, 0, 30, 360, 1],
      TYPE: exports.SeliteSprayerSnow,
    },

    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 6, 6, 180, 100, 0],
      TYPE: [exports.SeliteSprayerTurret],
    },
    {
      POSITION: [9, 6, 6, 60, 100, 0],
      TYPE: [exports.SeliteSprayerTurret],
    },
    {
      POSITION: [9, 6, 6, -60, 100, 0],
      TYPE: [exports.SeliteSprayerTurret],
    },
    {
      POSITION: [9, 6, -6, 180, 100, 0],
      TYPE: [exports.SeliteSprayerTurret],
    },
    {
      POSITION: [9, 6, -6, 60, 100, 0],
      TYPE: [exports.SeliteSprayerTurret],
    },
    {
      POSITION: [9, 6, -6, -60, 100, 0],
      TYPE: [exports.SeliteSprayerTurret],
    },
  ],
};
exports.kronosboss = {
  PARENT: [exports.neutralRangedBoss],
  LABEL: "Eternal",
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  AI_TARGET: "mostDeadly",
  FACING_TYPE: "autospin",
  VALUE: 5000000,
  BODY: {
    FOV: 3,
    SPEED: 0.25,
    HEALTH: 8000,
    SHIELD: base.SHIELD * 0.2,
    REGEN: 0,
    PUSHABILITY: 0,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1.3, //bullet damage
    pen: 1.3, //bullet penetration
    str: 0.8, //bullet health
    atk: 0.5, //bullet speed
    spd: 0.2, //body damage
    hlt: 0.1, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 160,
  SHAPE: 12,
  ORBIT_DISTANCE: 500,
  TURRETS: [...kronosTrapTurretArray],
};
exports.REboss = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss],
    LABEL: "Rogue Eternal",
    CONTROLLERS: ["nearestDifferentMaster", "minion"],
    AI_TARGET: "mostDeadly",
    FACING_TYPE: "autospin",
    VALUE: 5000000,
    BODY: {
      FOV: 3,
      SPEED: 0.25,
      HEALTH: 7000,
      SHIELD: base.SHIELD * 0.2,
      REGEN: 0,
      PUSHABILITY: 0,
    },
    SKILL: skillSet({
      rld: 0, //reload
      dam: 1.3, //bullet damage
      pen: 1.3, //bullet penetration
      str: 1.3, //bullet health
      atk: 0, //bullet speed
      spd: 0.2, //body damage
      hlt: 0.1, //max health
      shi: 0, //shield capacity
      rgn: 0, //shield regeneration
      mob: 0, //movement speed
    }),
    SIZE: 195,
    SHAPE: 11,
    ORBIT_DISTANCE: 500,
    TURRETS: [...rogueEternalTrapTurretArray],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5.5, 7.25, 0.7, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.minion,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
          ]),
          TYPE: [exports.roguepalisade],
          MAX_CHILDREN: 1,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
        },
      },
    ],
  },
  6,
  ""
);
let RECrossbowLayer = [];
for (let i = 0; i < 6; i++) {
  RECrossbowLayer.push({
    POSITION: [9, 7.5, 0, i * (360 / 6) + 360 / 6 / 2, 90, 0],
    TYPE: [exports.rogueEternalCrossbowTurret],
  });
}
let REmissileLayer = [];
for (let i = 0; i < 6; i++) {
  REmissileLayer.push({
    POSITION: [7, 9.5, 0, i * (360 / 6) + 360 / 6 / 2, 90, 0],
    TYPE: [exports.RESkimTurret],
  });
}
let RESkimmerLayer = [];
for (let i = 0; i < 6; i++) {
  RESkimmerLayer.push({
    POSITION: [5.5, 9, 0, i * (360 / 6) + 360 / 6 / 2, 90, 0],
    TYPE: [exports.REredistributor],
  });
}
exports.RECrossbowLayer = {
  PARENT: [exports.kronosboss],
  LABEL: "",
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "mostDeadly",
  FACING_TYPE: "toTarget",
  SHAPE: 6,
  COLOR: 10,
  SPIN_RATE: -0.075,
  TURRETS: [...RECrossbowLayer],
};
exports.REmissileboLayer = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 6,
  COLOR: 10,
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "mostDeadly",
  FACING_TYPE: "toTarget",
  BODY: { FOV: 2.5 },
  SPIN_RATE: -0.075,
  INDEPENDENT: false,
  TURRETS: [
    ...REmissileLayer,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [exports.RECrossbowLayer],
    },
  ],
};
exports.REMissileLayer = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 6,
  COLOR: 10,
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "mostDeadly",
  FACING_TYPE: "toTarget",
  BODY: { FOV: 2.5 },
  SPIN_RATE: -0.075,
  INDEPENDENT: false,
  TURRETS: [
    ...RESkimmerLayer,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [16, 0, 0, 0, 360, 1],
      TYPE: [exports.REmissileboLayer],
    },
  ],
};
let kronosTripletLayer = [];
for (let i = 0; i < 5; i++) {
  kronosTripletLayer.push({
    POSITION: [9, 7.5, 0, i * (360 / 5) + 360 / 5 / 2, 90, 0],
    TYPE: [exports.Kronostriple],
  });
}
let kronosSwarmLayer = [];
for (let i = 0; i < 7; i++) {
  kronosSwarmLayer.push({
    POSITION: [7, 9.5, 0, i * (360 / 7) + 360 / 7 / 2, 90, 0],
    TYPE: [exports.kronosCarrierTurret],
  });
}
let kronosSkimmerLayer = [];
for (let i = 0; i < 9; i++) {
  kronosSkimmerLayer.push({
    POSITION: [5.5, 9, 0, i * (360 / 9) + 360 / 9 / 2, 90, 0],
    TYPE: [exports.kronosSkimTurret],
  });
}
exports.kronosTripletLayer = {
  PARENT: [exports.kronosboss],
  LABEL: "",
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "mostDeadly",
  FACING_TYPE: "toTarget",
  SHAPE: 5,
  COLOR: 6,
  SPIN_RATE: -0.075,
  TURRETS: [...kronosTripletLayer],
};
exports.kronosSwarmLayer = {
  PARENT: [exports.kronosboss],
  LABEL: "",
  SHAPE: 7,
  COLOR: 6,
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "mostDeadly",
  FACING_TYPE: "toTarget",
  BODY: { FOV: 2.5 },
  SPIN_RATE: -0.075,
  INDEPENDENT: false,
  TURRETS: [
    ...kronosSwarmLayer,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [exports.kronosTripletLayer],
    },
  ],
};
exports.kronosMissileLayer = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 9,
  COLOR: 6,
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "mostDeadly",
  FACING_TYPE: "toTarget",
  BODY: { FOV: 2.5 },
  SPIN_RATE: -0.075,
  INDEPENDENT: false,
  TURRETS: [
    ...kronosSkimmerLayer,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [16, 0, 0, 0, 360, 1],
      TYPE: [exports.kronosSwarmLayer],
    },
  ],
};
exports.ragnarokboss = {
  PARENT: [exports.neutralRangedBoss],
  LABEL: "Eternal",
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  AI_TARGET: "mostDeadly",
  FACING_TYPE: "autospin",
  VALUE: 5000000,
  BODY: {
    FOV: 3,
    SPEED: 0.25,
    HEALTH: 7800,
    SHIELD: base.SHIELD * 0.2,
    REGEN: 0,
    PUSHABILITY: 0,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1.3, //bullet damage
    pen: 1.3, //bullet penetration
    str: 1.3, //bullet health
    atk: 0, //bullet speed
    spd: 0.2, //body damage
    hlt: 0.1, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 155,
  SHAPE: 11,
  ORBIT_DISTANCE: 300,
  TURRETS: [...ragnarokTrapTurretArray],
};
let ragnarkGunnertLayer = [];
for (let i = 0; i < 5; i++) {
  ragnarkGunnertLayer.push({
    POSITION: [9, 7.5, 0, i * (360 / 5) + 360 / 5 / 2, 90, 0],
    TYPE: [exports.ragnarokgunnerTurret],
  });
}
let ragnarokSwarmLayer = [];
for (let i = 0; i < 5; i++) {
  ragnarokSwarmLayer.push({
    POSITION: [7.5, 9.5, 0, i * (360 / 5) + 360 / 5 / 2, 90, 0],
    TYPE: [exports.ragnarokgunnerTurret],
  });
}
let ragnarokSkimmerLayer = [];
for (let i = 0; i < 7; i++) {
  ragnarokSkimmerLayer.push({
    POSITION: [7, 10, 0, i * (360 / 7) + 360 / 7 / 2, 90, 0],
    TYPE: [exports.ragnaroksmasherTurret],
  });
}
exports.ragnarogunnertLayer = {
  PARENT: [exports.kronosboss],
  LABEL: "",
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "mostDeadly",
  FACING_TYPE: "toTarget",
  SHAPE: 5,
  COLOR: 0,
  SPIN_RATE: -0.075,
  TURRETS: [...ragnarokSwarmLayer],
};
exports.ragnarokSwarmLayer = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 7,
  COLOR: 0,
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "mostDeadly",
  FACING_TYPE: "toTarget",
  BODY: { FOV: 2.5 },
  SPIN_RATE: -0.075,
  INDEPENDENT: false,
  TURRETS: [
    ...ragnarokSkimmerLayer,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [exports.ragnarogunnertLayer],
    },
  ],
};
exports.ragnaroksSpawnerLayer = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "",
    SHAPE: 9,
    COLOR: 0,
    CONTROLLERS: ["nearestDifferentMaster", "spin"],
    AI_TARGET: "leastDeadly",
    FACING_TYPE: "toTarget",
    BODY: { FOV: 2.5 },
    SPIN_RATE: -0.075,
    INDEPENDENT: false,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [16, 0, 0, 0, 360, 1],
        TYPE: [exports.ragnarokSwarmLayer],
      },
    ],
    GUNS: [
      {
        POSITION: [2.75, 4.25, 0.7, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.greaterDamage,
            g.cheese,
            g.lesserSpeed,
            g.greaterReload,
            g.lesserSize,
            g.lesserSize,
            g.lesserSize,
          ]),
          TYPE: [
            exports.gemChip,
            {
              INDEPENDENT: true,
              BODY: { FOV: 2 },
              DRAW_HEALTH: true,
            },
          ],
          MAX_CHILDREN: 2,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },//beans and cornbread
  9,
  "Eternal"
);
//MEGA BOSSES
exports.rogueEternal = makeMulti(
  {
    PARENT: [exports.kronosboss],
    COLOR: 10,
    SHAPE: 6,
    TURRETS: [
      ...rogueEternalTrapTurretArray,
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [15, 0, 0, 0, 360, 1],
        TYPE: [exports.REMissileLayer],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.5, 10.25, 0.7, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.minion,
            g.halfSize,
            g.halfSize,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.halfHealth,
            g.oneTimeUse,
          ]),
          TYPE: [exports.roguepalisade],
          MAX_CHILDREN: 1,
          AUTOFIRE: true,
        },
      },
    ],
  },
  6,
  ""
);
exports.kronos = {
  PARENT: [exports.kronosboss],
  NAME: "Kronos",
  COLOR: 6,
  TURRETS: [
    ...kronosTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.kronosMissileLayer],
    },
  ],
};
exports.ragnarok = {
  PARENT: [exports.ragnarokboss],
  NAME: "Ragnarok",
  COLOR: 0,
  ORBIT_DISTANCE: 500,
  TURRETS: [
    ...ragnarokTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: [exports.ragnaroksSpawnerLayer],
    },
  ],
};
exports.shinylegionarysprayer = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.shinyLegionary],
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: [exports.triangleSaw1],
      },
      {
        POSITION: [15, 8, 0, 180, 100, 0],
        TYPE: [exports.shinylegionarySprayerTurret],
      },
      {
        POSITION: [15, 8, 0, 60, 100, 0],
        TYPE: [exports.shinylegionarySprayerTurret],
      },
      {
        POSITION: [15, 8, 0, -60, 100, 0],
        TYPE: [exports.shinylegionarySprayerTurret],
      },
      {
        POSITION: [15, 0, 0, 180, 360, 1],
        TYPE: [
          exports.ShinylegionarySprayerBody2,
          { INDEPENDENT: true, COLOR: 5 },
        ],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5, 19, 0.8, 6, 0, 180, 0],
      },
      {
        POSITION: [5, 12.6, 1, 11, 0, 120, 0],
      },
      {
        POSITION: [6, 12.6, 1.7, 15, 0, 120, 0],
      },
      {
        POSITION: [3, 23.6, 1, 21, 0, 120, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.block,
            g.destroy,
            g.anni,
            g.superHealth,
            g.lesserSize,
            g.greaterReload,
            g.greaterSpeed,
            g.greaterSpeed,
            g.greaterSpeed,
            g.greaterSpeed,
          ]),
          TYPE: exports.bosspillboxTrio,
          LABEL: "Devastator",
        },
      },
      {
        POSITION: [0, 12, 1, 0, 0, 120, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.minion,
            g.halfSize,
            g.halfSize,
            g.oneTimeUse,
          ]),
          TYPE: exports.Selite_legion,
          LABEL: "Devastator",
        },
      },
    ],
  },
  3,
  "Shiny Legionary Crasher"
);
  exports.terrestrialBoss = {
  PARENT: [exports.neutralRangedBoss],
  LABEL: "Terrestrial",
  VALUE: 1000000,
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  AI_TARGET: "mostDeadly",
  FACING_TYPE: "spin",
  SPIN_RATE: 0.002,
  HAS_NO_RECOIL: true,
  BODY: {
    FOV: 2.5,
    SPEED: 0.5,
    HEALTH: 1500,
    SHIELD: base.SHIELD * 0.2,
    REGEN: 0,
    PUSHABILITY: 0,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1.3, //bullet damage
    pen: 1.3, //bullet penetration
    str: 1.3, //bullet health
    atk: 0, //bullet speed
    spd: 0.2, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 50,
  SHAPE: 7,
  ORBIT_DISTANCE: 250,
  TURRETS: [...terrestrialTrapTurretArray],
};
exports.celestialBoss = {
  PARENT: [exports.terrestrialBoss],
  LABEL: "Celestial",
  VALUE: 2000000,
  BODY: {
    FOV: 3,
    SPEED: 0.25,
    HEALTH: 3000,
    SHIELD: base.SHIELD * 0.2,
    REGEN: 0,
    PUSHABILITY: 0,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1.3, //bullet damage
    pen: 1.3, //bullet penetration
    str: 1.3, //bullet health
    atk: 0, //bullet speed
    spd: 0.2, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 60,
  SHAPE: 9,
  ORBIT_DISTANCE: 300,
  TURRETS: [
 ...celestialTrapTurretArray
 ],
};
let paladinTopLayer = [];
for (let i = 0; i < 5; i++) {
  paladinTopLayer.push({
    POSITION: [9, 7.5, 0, i * (360 / 5) + 360 / 5 / 2, 180, 0],
    TYPE: [exports.aresSwarmerTurret],
  });
}
let freyjaTopLayer = [];
for (let i = 0; i < 5; i++) {
  freyjaTopLayer.push({
    POSITION: [10, 7.5, 0, i * (360 / 5) + 360 / 5 / 2, 180, 0],
    TYPE: [exports.freyja4Turret],
  });
}
let nyxTopLayer = [];
for (let i = 0; i < 5; i++) {
  nyxTopLayer.push({
    POSITION: [10, 7.5, 0, i * (360 / 5) + 360 / 5 / 2, 180, 0],
    TYPE: [exports.erisRocketeerTurret],
  });
}
let zaphkielTopLayer = [];
for (let i = 0; i < 5; i++) {
  zaphkielTopLayer.push({
    POSITION: [10, 7.5, 0, i * (360 / 5) + 360 / 5 / 2, 180, 0],
    TYPE: [exports.zaphkielSkimmerTurret],
  });
}
let theiaTopLayer = [];
for (let i = 0; i < 5; i++) {
  theiaTopLayer.push({
    POSITION: [10, 7.5, 0, i * (360 / 5) + 360 / 5 / 2, 180, 0],
    TYPE: [exports.seleneTwisterTurret],
  });
}
let NapoleonTopLayer = [];
for (let i = 0; i < 5; i++) {
  NapoleonTopLayer.push({
    POSITION: [9, 7.5, 0, i * (360 / 5) + 360 / 5 / 2, 180, 0],
    TYPE: [exports.celestialArtilleryTurret],
  });
}
let juliusTopLayer = [];
for (let i = 0; i < 5; i++) {
  juliusTopLayer.push({
    POSITION: [9, 7.5, 0, i * (360 / 5) + 360 / 5 / 2, 180, 0],
    TYPE: [exports.juliusLauncherTurret],
  });
}
exports.paladinTopLayer = {
  PARENT: [exports.celestialBoss],
  LABEL: "",
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "leastDeadly",
  FACING_TYPE: "toTarget",
  SHAPE: 5,
  COLOR: 14,
  SPIN_RATE: 0.001,
  TURRETS: [...paladinTopLayer],
};
exports.freyjaTopLayer = {
  PARENT: [exports.celestialBoss],
  LABEL: "",
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "leastDeadly",
  FACING_TYPE: "toTarget",
  SHAPE: 5,
  COLOR: 1,
  SPIN_RATE: 0.001,
  TURRETS: [...freyjaTopLayer],
};
exports.nyxTopLayer = {
  PARENT: [exports.celestialBoss],
  LABEL: "",
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "leastDeadly",
  FACING_TYPE: "toTarget",
  SHAPE: 5,
  COLOR: 5,
  SPIN_RATE: 0.001,
  TURRETS: [...nyxTopLayer],
};
exports.zaphkielTopLayer = {
  PARENT: [exports.celestialBoss],
  LABEL: "",
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "leastDeadly",
  FACING_TYPE: "toTarget",
  SHAPE: 5,
  COLOR: 2,
  SPIN_RATE: 0.001,
  TURRETS: [...zaphkielTopLayer],
};
exports.theiaTopLayer = {
  PARENT: [exports.celestialBoss],
  LABEL: "",
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "leastDeadly",
  FACING_TYPE: "toTarget",
  SHAPE: 5,
  COLOR: 13,
  SPIN_RATE: 0.001,
  TURRETS: [...theiaTopLayer],
};
exports.paladinMiddleLayer = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "",
    SHAPE: 7,
    COLOR: 14,
    CONTROLLERS: ["nearestDifferentMaster", "spin"],
    AI_TARGET: "mostDeadly",
    FACING_TYPE: "toTarget",
    BODY: { FOV: 2.5 },
    SPIN_RATE: -0.075,
    INDEPENDENT: false,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [12, 0, 0, 0, 360, 1],
        TYPE: [exports.paladinTopLayer],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.5, 7.25, 1.2, 8, 0, 25.5, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.greaterDamage,
            g.minorSpeed,
            g.greaterReload,
            //g.lesserSize,
          ]),
          TYPE: [
            exports.sterilePentagonChip,
            {
              INDEPENDENT: true,
              BODY: { FOV: 2 },
            },
          ],
          MAX_CHILDREN: 2,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  7,
  ""
);
exports.zaphkielMiddleLayer = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "",
    SHAPE: 7,
    COLOR: 2,
    CONTROLLERS: ["nearestDifferentMaster", "spin"],
    AI_TARGET: "mostDeadly",
    FACING_TYPE: "toTarget",
    BODY: { FOV: 2.5 },
    SPIN_RATE: -0.075,
    INDEPENDENT: false,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [12, 0, 0, 0, 360, 1],
        TYPE: [exports.zaphkielTopLayer],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.5, 7.25, 1.2, 8, 0, 25.5, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.minorSpeed,
            g.lesserSize,
          ]),
          TYPE: [
            exports.sterileTriangleChip,
            {
              INDEPENDENT: true,
              BODY: { FOV: 2 },
            },
          ],
          MAX_CHILDREN: 5,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  7,
  ""
);
exports.theiaMiddleLayer = makeMulti(
  {
    PARENT: [exports.genericTank], 
    LABEL: "",
    SHAPE: 7,
    COLOR: 13,
    CONTROLLERS: ["nearestDifferentMaster", "spin"],
    AI_TARGET: "mostDeadly",
    FACING_TYPE: "toTarget",
    BODY: { FOV: 2.5 },
    SPIN_RATE: -0.075,
    INDEPENDENT: false,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [12, 0, 0, 0, 360, 1],
        TYPE: [exports.theiaTopLayer],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.5, 7.25, 1.2, 8, 0, 25.5, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.minorSpeed,
            g.lesserSize,
            g.halfHealth,
            g.halfReload,
          ]),
          TYPE: [
            exports.sterileSunchip,
            {//oh
              INDEPENDENT: true,
              BODY: { FOV: 2 },
            },
          ],
          MAX_CHILDREN: 12,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  7,
  ""
);
exports.nyxMiddleLayer = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "",
    SHAPE: 7,
    COLOR: 5,
    CONTROLLERS: ["nearestDifferentMaster", "spin"],
    AI_TARGET: "mostDeadly",
    FACING_TYPE: "toTarget",
    BODY: { FOV: 2.5 },
    SPIN_RATE: -0.075,
    INDEPENDENT: false,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [12, 0, 0, 0, 360, 1],
        TYPE: [exports.nyxTopLayer],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 11, 0.6, 8, 0, 25.5, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.factory,
            g.superHealth,
            g.superReload,
            g.halfSize,
            g.bitLessSize,
            g.superReload,
          ]),
          TYPE: [
            exports.minion,
            {
              INDEPENDENT: true,
              BODY: { FOV: 2 },
            },
          ],
          MAX_CHILDREN: 3,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  7,
  ""
);
exports.freyjaMiddleLayer = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "",
    SHAPE: 7,
    COLOR: 1,
    CONTROLLERS: ["nearestDifferentMaster", "spin"],
    AI_TARGET: "mostDeadly",
    FACING_TYPE: "toTarget",
    BODY: { FOV: 2.5 },
    SPIN_RATE: -0.075,
    INDEPENDENT: false,
    TURRETS: [
      {
        POSITION: [7.6, 9.5, 0, 28, 110, 0],
        TYPE: [exports.freyjaCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 79, 110, 0],
        TYPE: [exports.freyjaCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 130, 110, 0],
        TYPE: [exports.freyjaCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 181, 110, 0],
        TYPE: [exports.freyjaCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 232, 110, 0],
        TYPE: [exports.freyjaCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 283, 110, 0],
        TYPE: [exports.freyjaCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 334, 110, 0],
        TYPE: [exports.freyjaCruiserTurret],
      },
    ],
    GUNS: [],
  },
  7,
  ""
);
exports.paladin = {
  PARENT: [exports.celestialBoss],
  NAME: "Paladin",
  COLOR: 14,
  TURRETS: [
    ...celestialTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.paladinMiddleLayer],
    },
  ],
};
exports.zaphkiel = {
  PARENT: [exports.celestialBoss],
  NAME: "Zaphkiel",
  COLOR: 2,
  TURRETS: [
    ...celestialTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.zaphkielMiddleLayer],
    },
  ],
};
exports.theia = {
  PARENT: [exports.celestialBoss],
  NAME: "Theia",
  COLOR: 13,
  TURRETS: [
    ...celestialTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.theiaMiddleLayer],
    },
  ],
};
exports.freyja = {
  PARENT: [exports.celestialBoss],
  NAME: "Freyja",
  COLOR: 1,
  TURRETS: [
    ...celestialTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.freyjaMiddleLayer],
    },
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [9, 0, 0, 25.5, 360, 1],
        TYPE: [exports.freyjaTopLayer],
      },
  ],
};
exports.nyx = {
  PARENT: [exports.celestialBoss],
  NAME: "Nyx",
  COLOR: 5,
  TURRETS: [
    ...celestialTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.nyxMiddleLayer],
    },
  ],
};
exports.NapoleonTopLayer = {
  PARENT: [exports.celestialBoss],
  LABEL: "",
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "leastDeadly",
  FACING_TYPE: "toTarget",
  SHAPE: 5,
  COLOR: 10,
  SPIN_RATE: 0.001,
  TURRETS: [...NapoleonTopLayer],
};
exports.juliusTopLayer = {
  PARENT: [exports.celestialBoss],
  LABEL: "",
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "leastDeadly",
  FACING_TYPE: "toTarget",
  SHAPE: 5,
  COLOR: 10,
  SPIN_RATE: 0.001,
  TURRETS: [...juliusTopLayer],
};
exports.juliusMiddleLayer = makeMulti(
  {
    PARENT: [exports.celestialBoss],
    LABEL: "",
    SHAPE: 7,
    COLOR: 10,
    CONTROLLERS: ["nearestDifferentMaster", "spin"],
    AI_TARGET: "mostDeadly",
    FACING_TYPE: "toTarget",
    BODY: { FOV: 2.5 },
    SPIN_RATE: -0.075,
    INDEPENDENT: false,
    TURRETS: [
      {
        POSITION: [7.6, 9.5, 0, 28, 110, 0],
        TYPE: [exports.juliusCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 79, 110, 0],
        TYPE: [exports.juliusCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 130, 110, 0],
        TYPE: [exports.juliusCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 181, 110, 0],
        TYPE: [exports.juliusCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 232, 110, 0],
        TYPE: [exports.juliusCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 283, 110, 0],
        TYPE: [exports.juliusCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 334, 110, 0],
        TYPE: [exports.juliusCruiserTurret],
      },
    ],
    GUNS: [],
  },
  7,
  ""
);
exports.NapoleonMiddleLayer = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "",
    SHAPE: 7,
    COLOR: 10,
    CONTROLLERS: ["nearestDifferentMaster", "spin"],
    AI_TARGET: "mostDeadly",
    FACING_TYPE: "toTarget",
    BODY: { FOV: 2.5 },
    SPIN_RATE: -0.075,
    INDEPENDENT: false,
    TURRETS: [
      {
        POSITION: [7.6, 9.5, 0, 28, 110, 0],
        TYPE: [exports.NapoleonCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 79, 110, 0],
        TYPE: [exports.NapoleonCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 130, 110, 0],
        TYPE: [exports.NapoleonCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 181, 110, 0],
        TYPE: [exports.NapoleonCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 232, 110, 0],
        TYPE: [exports.NapoleonCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 283, 110, 0],
        TYPE: [exports.NapoleonCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 334, 110, 0],
        TYPE: [exports.NapoleonCruiserTurret],
      },
    ],
    GUNS: [],
  },
  7,
  ""
);
exports.Napoleon = {
  PARENT: [exports.celestialBoss],
  NAME: "Napoleon",
  LABEL: "Rogue Celestial",
  FACING_TYPE: "autospin",
  COLOR: 10,
  TURRETS: [
    ...celestialTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.NapoleonMiddleLayer],
    },
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [9, 0, 0, 25.5, 360, 1],
        TYPE: [exports.NapoleonTopLayer],
      },
  ],
};
exports.julius = {
  PARENT: [exports.celestialBoss],
  NAME: "Julius",
  LABEL: "Rogue Celestial",
  FACING_TYPE: "autospin",
  COLOR: 10,
  TURRETS: [
    ...celestialTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.juliusMiddleLayer],
    },
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [9, 0, 0, 25.5, 360, 1],
        TYPE: [exports.juliusTopLayer],
      },
  ],
};
let aresTopLayer = [];
for (let i = 0; i < 3; i++) {
  aresTopLayer.push({
    POSITION: [9, 7.5, 0, i * (360 / 3) + 360 / 3 / 2, 180, 0],
    TYPE: [exports.aresSwarmerTurret],
  });
}
exports.aresTopLayer = {
  PARENT: [exports.terrestrialBoss],
  LABEL: "",
  CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "leastDeadly",
  FACING_TYPE: "toTarget",
  SHAPE: 3,
  COLOR: 14,
  SPIN_RATE: 0.001,
  TURRETS: [...aresTopLayer],
};
exports.aresMiddleLayer = makeMulti(
  {
    PARENT: [exports.genericTank],
    LABEL: "",
    SHAPE: 5,
    COLOR: 14,
    CONTROLLERS: ["nearestDifferentMaster", "spin"],
  AI_TARGET: "mostDeadly",
    FACING_TYPE: "toTarget",
    BODY: { FOV: 2.5 },
    SPIN_RATE: -0.075,
    INDEPENDENT: false,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [12, 0, 0, 0, 360, 1],
        TYPE: [exports.aresTopLayer],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.5, 7.25, 1.2, 8, 0, 36, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.doubleDamage,
            g.minorSpeed,
            g.greaterReload,
            g.lesserSize,
            g.lesserStats,
            g.greaterSize,
          ]),
          TYPE: [
            exports.sterilePentagonChip,
            {
              INDEPENDENT: true,
              BODY: { FOV: 2 },
            },
          ],
          MAX_CHILDREN: 1,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  ""
);

exports.ares = {
  PARENT: [exports.terrestrialBoss],
  NAME: "Ares",
  COLOR: 14,
  TURRETS: [
    ...terrestrialTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.aresMiddleLayer],
    },
  ],
};
let gersemiTopLayer = [];
for (let i = 0; i < 3; i++) {
  gersemiTopLayer.push({
    POSITION: [9, 7.5, 0, i * (360 / 3) + 360 / 3 / 2, 180, 0],
    TYPE: [exports.gersemiGunnerTurret],
  });
}
let gersemiMiddleLayer = [];
for (let i = 0; i < 5; i++) {
  gersemiMiddleLayer.push({
    POSITION: [9, 7.5, 0, i * (360 / 5) + 360 / 5 / 2, 180, 0],
    TYPE: [exports.gersemiCruiserTurret],
  });
}
exports.gersemiTopLayer = {
  PARENT: [exports.aresTopLayer],
  COLOR: 1,
  SHAPE: 3,
  SPIN_RATE: 0.001,
  TURRETS: [...gersemiTopLayer],
};
exports.gersemiMiddleLayer = {
  PARENT: [exports.aresMiddleLayer],
  SHAPE: 7,
  COLOR: 1,
  GUNS: [],
  TURRETS: [
    ...gersemiMiddleLayer,
  ],
};

exports.gersemi = {
  PARENT: [exports.terrestrialBoss],
  NAME: "Gersemi",
  COLOR: 1,
  TURRETS: [
    ...terrestrialTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.gersemiMiddleLayer],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.gersemiTopLayer],
    },
  ],
};
let erebusTopLayer = [];
for (let i = 0; i < 3; i++) {
  erebusTopLayer.push({
    POSITION: [9, 7.5, 0, i * (360 / 3) + 360 / 3 / 2, 180, 0],
    TYPE: [exports.grenadierTurret],
  });
}
exports.erebusTopLayer = {
  PARENT: [exports.aresTopLayer],
  COLOR: 18,
  SHAPE: 3,
  TURRETS: [...erebusTopLayer],
};
exports.erebusMiddleLayer = makeMulti(
  {
    PARENT: [exports.aresMiddleLayer],
    SHAPE: 5,
    COLOR: 18,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [12, 0, 0, 0, 360, 1],
        TYPE: [exports.erebusTopLayer],
      },
    ],
    GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 6.5, 1, 8.5, 0, 36, 0],
    },
    {
      POSITION: [1.2, 8.5, 1, 13, 0, 36, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.doubleHealth,
          g.minorDamage,
          g.lesserReload,
        ]),
        TYPE: [
          exports.pentagonsenti1,
          { GROWTH_FACTOR: 1.5,
              INDEPENDENT: true,
              BODY: { FOV: 2 },
            },
        ],
        STAT_CALCULATOR: gunCalcNames.drone,

        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      }
    },
    {
      POSITION: [3.5, 8.5, 1, 8, 0, 36, 0],
    },
    ],
  },
  5,
  ""
);
exports.erebus = {
  PARENT: [exports.terrestrialBoss],
  NAME: "Erebus",
  COLOR: 18,
  TURRETS: [
    ...terrestrialPillboxTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.erebusMiddleLayer],
    },
  ],
};

let ezekielTopLayer = [];
for (let i = 0; i < 3; i++) {
  ezekielTopLayer.push({
    POSITION: [9, 7.5, 0, i * (360 / 3) + 360 / 3 / 2, 180, 0],
    TYPE: [exports.ezekielSkimmerTurret],
  });
}

exports.ezekielTopLayer = {
  PARENT: [exports.aresTopLayer],
  COLOR: 2,
  SHAPE: 3,
  TURRETS: [...ezekielTopLayer],
};
exports.ezekielMiddleLayer = makeMulti(
  {
    PARENT: [exports.aresMiddleLayer],
    SHAPE: 5,
    COLOR: 2,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [12, 0, 0, 0, 360, 1],
        TYPE: [exports.ezekielTopLayer],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3, 9, 1.2, 8, 0, 36, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserHealth,
            g.lesserReload,
            //g.greaterDamage,
            g.lesserSpeed,
            g.lesserSize,
            g.lesserStats,
          ]),
          TYPE: [
            exports.sterileTriangleChip,
            {
              INDEPENDENT: true,
              BODY: { FOV: 2 },
            },
          ],
          MAX_CHILDREN: 3,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  ""
);

exports.ezekiel = {
  PARENT: [exports.terrestrialBoss],
  NAME: "Ezekiel",
  COLOR: 2,
  TURRETS: [
    ...terrestrialTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.ezekielMiddleLayer],
    },
  ],
};
let seleneTopLayer = [];
for (let i = 0; i < 3; i++) {
  seleneTopLayer.push({
    POSITION: [9, 7, 0, i * (360 / 3) + 360 / 3 / 2, 180, 0],
    TYPE: [exports.seleneTwisterTurret],
  });
}
exports.seleneTopLayer = {
  PARENT: [exports.aresTopLayer],
  COLOR: 13,
  SHAPE: 3,
  TURRETS: [...seleneTopLayer],
};
let miniseleneTopLayer = [];
for (let i = 0; i < 3; i++) {
  miniseleneTopLayer.push({
    POSITION: [9, 7.5, 0, i * (360 / 3) + 360 / 3 / 2, 180, 0],
    TYPE: [exports.miniseleneTwisterTurret],
  });
}
exports.seleneTopLayer = {
  PARENT: [exports.aresTopLayer],
  COLOR: 13,
  SHAPE: 3,
  TURRETS: [...seleneTopLayer],
};
exports.miniseleneTopLayer = {
  PARENT: [exports.aresTopLayer],
  COLOR: 13,
  SHAPE: 3,
  TURRETS: [...miniseleneTopLayer],
};
exports.seleneMiddleLayer = makeMulti(
  {
    PARENT: [exports.aresMiddleLayer],
    SHAPE: 5,
    COLOR: 13,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [12, 0, 0, 0, 360, 1],
        TYPE: [exports.seleneTopLayer],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 8, 1.2, 8, 0, 36, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.halfDamage,
            g.halfHealth,
            g.halfReload,
            //g.lesserSize,
          ]),
          TYPE: [
            exports.sterileSunchip,
            {
              INDEPENDENT: true,
              BODY: { FOV: 2 },
            },
          ],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
          MAX_CHILDREN: 4,
        },
      },
    ],
  },
  5,
  ""
);
exports.miniseleneMiddleLayer = makeMulti(
  {
    PARENT: [exports.aresMiddleLayer],
    SHAPE: 4,
    FACING_TYPE: "autospin",
    COLOR: 13,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [12, 0, 0, 0, 360, 1],
        TYPE: [exports.miniseleneTopLayer],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 8, 1.2, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip
          ]),
          TYPE: [
            exports.sunchip,
            {
              INDEPENDENT: true,
              BODY: { FOV: 2 },
            },
          ],
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
          MAX_CHILDREN: 4,
        },
      },
    ],
  },
  4,
  ""
);
exports.selene = {
  PARENT: [exports.terrestrialBoss],
  NAME: "Selene",
  COLOR: 13,
  TURRETS: [
    ...terrestrialTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.seleneMiddleLayer],
    },
  ],
};
exports.miniselene = {
  PARENT: [exports.genericTank],
  NAME: "Mini Selene",
  LABEL: "Mini Terrestrial",
  SHAPE: 5,
  COLOR: 13,
  SIZE: 24,
  FACING_TYPE: "spin",
  SPIN_RATE: 0.002,
  HAS_NO_RECOIL: true,
  BODY: {
    FOV: base.FOV * 1.5,
    SPEED: base.SPEED * 0.4,
    HEALTH: base.HEALTH * 2,
    SHIELD: base.SHIELD * 1.2,
    REGEN: base.REGEN * 1.3,
    PUSHABILITY: 0,
  },
  TURRETS: [
    ...miniterrestrialTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.miniseleneMiddleLayer],
    },
  ],
};
let erisTopLayer = [];
for (let i = 0; i < 3; i++) {
  erisTopLayer.push({
    POSITION: [9, 7.5, 0, i * (360 / 3) + 360 / 3 / 2, 180, 0],
    TYPE: [exports.erisRocketeerTurret],
  });
}
exports.erisTopLayer = {
  PARENT: [exports.aresTopLayer],
  COLOR: 5,
  TURRETS: [...erisTopLayer],
};
exports.erisMiddleLayer = makeMulti(
  {
    PARENT: [exports.aresMiddleLayer],
    COLOR: 5,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [12, 0, 0, 0, 360, 1],
        TYPE: [exports.erisTopLayer],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.5, 9, 1.2, 8, 0, 36, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.factory,
            g.superHealth,
            g.superReload,
            g.halfSize,
          ]),
          TYPE: [
            exports.minion,
            {
              INDEPENDENT: true,
              BODY: { FOV: 2 },
            },
          ],
          MAX_CHILDREN: 1,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  ""
);

exports.eris = {
  PARENT: [exports.terrestrialBoss],
  NAME: "Eris",
  COLOR: 5,
  TURRETS: [
    ...terrestrialTrapTurretArray,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.erisMiddleLayer],
    },
  ],
};
exports.sorcerer = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.eggBoss],
    FACING_TYPE: "autospin",
    HAS_NO_RECOIL: true,
    TYPE: "neutralBoss",
    TIER: 1,
    MAX_CHILDREN: 180,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [0, 9, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.minorHealth,
            g.minorReload,
            g.halfDamage,
            g.greaterSpeed,
            g.minorSize,
          ]),
          TYPE: exports.sterileEggChip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.8, 9, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.minorHealth,
            g.minorReload,
            g.halfDamage,
            g.greaterSpeed,
            g.minorSize,
          ]),
          TYPE: exports.sterileEggChip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  2,
  "Sorcerer"
);
exports.oblivion = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.eggBoss],
    FACING_TYPE: "autospin",
    VALUE: 200000,
    BODY: {
      RELOAD: base.RELOAD * 0.75,
      FOV: 2,
    },
    GUNS: [
      {/*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [1, 7, 1, 14.5, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.pound,
            g.destroy,
            g.anni,
            g.superHealth,
            g.minorSpeed,
            g.lesserSpeed,
          ]),
          TYPE: exports.bullet,
          LABEL: "Devastator",
        },
      },
      {
        POSITION: [3, 7, 1, 13.1, 0, 0, 0],
      }
    ],
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [5, 10, 0, 30, 110, 0],
        TYPE: exports.eggTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 90, 110, 0],
        TYPE: exports.eggTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 150, 110, 0],
        TYPE: exports.eggTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 210, 110, 0],
        TYPE: exports.eggTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 270, 110, 0],
        TYPE: exports.eggTrapTurret,
      },
      {
        POSITION: [5, 10, 0, 330, 110, 0],
        TYPE: exports.eggTrapTurret,
      },
      {
        /** SIZE     X       Y     ANGLE    ARC */
        POSITION: [25, 0, 0, 0, 360, 0],
        TYPE: exports.EggShell,
      },
    ],
  },
  6,
  "Ruiner"
);
exports.sorcererturret = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.rareEggBoss],
    FACING_TYPE: "autospin",
    SPIN_RATE: -0.1,
    HAS_NO_RECOIL: true,
    MAX_CHILDREN: 180,
    GUNS: [
      {
        //
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [0, 9, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.minorHealth,
            g.minorReload,
            g.halfDamage,
            g.greaterSpeed,
            g.minorSize,
          ]),
          TYPE: exports.sterileEggChip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.8, 9, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.minorHealth,
            g.minorReload,
            g.halfDamage,
            g.greaterSpeed,
            g.minorSize,
          ]),
          TYPE: exports.sterileEggChip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  2,
  "Sorcerer"
);
exports.raresorcerer = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.rareEggBoss],
    FACING_TYPE: "autospin",
    SPIN_RATE: 0.05,
    HAS_NO_RECOIL: true,
    MAX_CHILDREN: 180,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3, 12, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserHealth,
            g.lesserReload,
            g.halfDamage,
            g.greaterSpeed,
            g.minorSize,
          ]),
          TYPE: exports.rainbowsterileEggChip,
          AUTOFIRE: true,

          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.8, 9, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserHealth,
            g.lesserReload,
            g.halfDamage,
            g.greaterSpeed,
            g.minorSize,
          ]),
          TYPE: exports.rainbowsterileEggChip,
          AUTOFIRE: true,

          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4.8, 6, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserHealth,
            g.lesserReload,
            g.halfDamage,
            g.greaterSpeed,
            g.minorSize,
          ]),
          TYPE: exports.rainbowsterileEggChip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [23, 0, 0, 0, 360, 0],
        TYPE: exports.smasherBody,
      },
      {
        POSITION: [16, 0, 0, 0, 360, 1],
        TYPE: exports.smasherBody,
      },
      {
        POSITION: [15, 0, 0, 0, 360, 1],
        TYPE: exports.sorcererturret,
      },
    ],
  },
  4,
  "Rainbow Sorcerer"
);
exports.summoner = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.squareBoss],
    TYPE: "neutralBoss",
    TIER: 2,
    FACING_TYPE: "autospin",
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 8, 1.2, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.halfDamage,
            g.halfHealth,
            g.halfReload,
            //g.lesserSize,
          ]),
          TYPE: exports.sterileSunchip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
          MAX_CHILDREN: 15,
        },
      },
    ],
  },
  4,
  "Summoner"
);
exports.SummonerLegionUpperHalf = makeMulti(
  {
    PARENT: [exports.squareBoss],
    SHAPE: 4,
    FACING_TYPE: "autospin",
    HEALTH: 125,
    INDEPENDENT: true,
    COLOR: 13,
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [23, 0, 0, 0, 0, 0, 0],
        TYPE: exports.cubedSaw1,
      },
      {
        POSITION: [18, 0, 0, 45, 0, 1],
        TYPE: exports.cubedSaw1,
      },
      {
        POSITION: [14, 0, 0, 0, 360, 1],
        TYPE: exports.weakAutoSmasherTurret,
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [2, 5, 0.7, 10, 5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [2, 5, 0.7, 10, -5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [2, 5, 0.7, 10, 5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [2, 5, 0.7, 10, -5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [4, 8, 0.7, 10, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm, g.pound, g.destroy]),
          TYPE: exports.beeDrone,
        },
      },
    ],
  },
  4,
  "Elite Hive Swarm Protector"
);
exports.SummonerLegionBottomHalf = {
    PARENT: [exports.squareBoss],
    SHAPE: 4,
    FACING_TYPE: "autospin",
    HEALTH: 125,
    INDEPENDENT: true,
    COLOR: 13,
    TURRETS: [
      {
        POSITION: [7, 8, 0, 0, 120, 0],
        TYPE: exports.barricadeTurret,
      },
      {
        POSITION: [5, 6.5, 6, 0, 120, 0],
        TYPE: exports.trapperMinion,
      },
      {
        POSITION: [5, 6.5, -6, 0, 120, 0],
        TYPE: exports.trapperMinion,
      },
      //
      {
        POSITION: [7, 8, 0, -90, 120, 0],
        TYPE: exports.barricadeTurret,
      },
      {
        POSITION: [5, 6.5, 6, -90, 120, 0],
        TYPE: exports.trapperMinion,
      },
      {
        POSITION: [5, 6.5, -6, -90, 120, 0],
        TYPE: exports.trapperMinion,
      },
      //
      {
        POSITION: [7, 8, 0, 90, 120, 0],
        TYPE: exports.barricadeTurret,
      },
      {
        POSITION: [5, 6.5, 6, 90, 120, 0],
        TYPE: exports.trapperMinion,
      },
      {
        POSITION: [5, 6.5, -6, 90, 120, 0],
        TYPE: exports.trapperMinion,
      },
      //
      {
        POSITION: [7, 8, 0, 180, 120, 0],
        TYPE: exports.barricadeTurret,
      },
      {
        POSITION: [5, 6.5, 6, 180, 120, 0],
        TYPE: exports.trapperMinion,
      },
      {
        POSITION: [5, 6.5, -6, 180, 120, 0],
        TYPE: exports.trapperMinion,
      },
    ],
  };
exports.Legionsummoner = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.squareBoss],
    TYPE: "neutralBoss",
    TIER: 5,
    FACING_TYPE: "autospin",
    VALUE: 2750000,
  BODY: {
    FOV: 1.1,
    SPEED: 0.4,
    HEALTH: 4500,
    SHIELD: base.SHIELD * 8,
    REGEN: 0.1,
  },
  SKILL: skillSet({
    rld: 0.6, //reload
    dam: 0.7, //bullet damage
    pen: 0.7, //bullet penetration
    str: 0.9, //bullet health
    atk: 0, //bullet speed
    spd: 0.8, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0.4, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 45,
  COLOR: 13,
  SHAPE: 4,
  TURRETS: [
   {
      /*********  SIZE      X       Y     ANGLE    ARC */
      POSITION: [24, 0, 0, 0, 360, 0],
      TYPE: exports.SummonerLegionBottomHalf,
    },
    {
      /*********  SIZE      X       Y     ANGLE    ARC */
      POSITION: [16, 0, 0, 0, 360, 1],
      TYPE: exports.SummonerLegionUpperHalf,
    },
    {
      /*********  SIZE      X       Y     ANGLE    ARC */
      POSITION: [10, 9, 0, 45, 190, 0],
      TYPE: exports.arenaTurret,
    },
    {
      /*********  SIZE      X       Y     ANGLE    ARC */
      POSITION: [10, 9, 0, -45, 190, 0],
      TYPE: exports.arenaTurret,
    },
    {
      /*********  SIZE      X       Y     ANGLE    ARC */
      POSITION: [10, 9, 0, 135, 190, 0],
      TYPE: exports.arenaTurret,
    },
    {
      /*********  SIZE      X       Y     ANGLE    ARC */
      POSITION: [10, 9, 0, -135, 190, 0],
      TYPE: exports.arenaTurret,
    },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 12, 1.2, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserSize,
          ]),
          TYPE: exports.autoSunchip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
          MAX_CHILDREN: 5,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5, 8, 1.2, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.halfDamage,
            g.halfHealth,
            g.halfReload,
            g.lesserSize,
          ]),
          TYPE: exports.sterileSunchip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
          MAX_CHILDREN: 15,
        },
      },
    ],
  },
  4,
  "Legionary Summoner"
);
exports.hellwark = {
  PARENT: [exports.neutralRangedBoss, exports.squareBoss],
  DANGER: 8,
  LAYER: 2,
  LABEL: "Hellwark",
  VALUE: 300000,
  BODY: {
    FOV: 1.5,
    HEALTH: 200,
    DAMAGE: base.DAMAGE * 1.1,
    ACCEL: base.ACCEL * 0.8,
  },
  SKILL: skillSet({
    rld: 1, //reload
    dam: 0.9, //bullet damage
    pen: 0.9, //bullet penetration
    str: 0.9, //bullet health
    atk: 0, //bullet speed
    spd: 0.3, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 6, 1, 0, 6, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.triple, g.pound, g.greaterSpeed, g.bitLessReload,]),
        TYPE: exports.bullet,
        LAYER: 0,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -6, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.triple, g.pound, g.greaterSpeed, g.bitLessReload,]),
        TYPE: exports.bullet,
        LAYER: 0,

      },
    },
    {
      POSITION: [16, 6, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.triple, g.pound, g.greaterSpeed, g.bitLessReload,]),
        TYPE: exports.bullet,
        LAYER: 0,

      },
    },
    {
      POSITION: [16, 6, 1, 1, 5.5, 180, 0],
    },
    {
      POSITION: [2, 6, 1.1, 17, 5.5, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.doubleStats, g.pound]),
        TYPE: exports.unsetBlock,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      POSITION: [16, 6, 1, 1, -5.5, 180, 0],
    },
    {
      POSITION: [2, 6, 1.1, 17, -5.5, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.doubleStats, g.pound]),
        TYPE: exports.unsetBlock,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 5.5, 1, 5, 0, 180, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 5.5, 1, 5, 0, 180, 0.5],
    },
    {
      POSITION: [3, 5.5, 1.7, 20, 0, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.doubleStats, g.pound, g.minorSpeed,]),
        TYPE: exports.mechtrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
   TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [10.5, 8, 0, 90, 190, 0],
      TYPE: exports.hellwarkBeeTurret,
    },
   {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [10.5, 8, 0, -90, 190, 0],
      TYPE: exports.hellwarkBeeTurret,
    },
      {
        POSITION: [20, 0, 0, 45, 0, 0],
        TYPE: exports.shellsquare,
        LAYER: 1,
      },
    ],
};
exports.squaredpelleter =
  {
    PARENT: [exports.neutralRangedBoss, exports.squareBoss],
    TYPE: "neutralBoss",
    LABEL: "Conjurer",
    TIER: 2,
    FACING_TYPE: "autospin",
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 8, 1.2, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserStats,
          ]),
          TYPE: exports.sterileSunchip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
          MAX_CHILDREN: 15,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 8, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserStats,
          ]),
          TYPE: exports.sterileSunchip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
          MAX_CHILDREN: 15,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 8, 1.2, 8, 0, -90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserStats,
          ]),
          TYPE: exports.sterileSunchip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
          MAX_CHILDREN: 15,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 8, 1.2, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserStats,
          ]),
          TYPE: exports.sterileSunchip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
          MAX_CHILDREN: 15,
        },
      },
    ],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, 45, 180, 0],
      TYPE: [exports.squaredPelleterTurret],
    },
    {
      POSITION: [12, 8, 0, 135, 180, 0],
      TYPE: [exports.squaredPelleterTurret],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 8, 0, -45, 180, 0],
      TYPE: [exports.squaredPelleterTurret],
    },
    {
      POSITION: [12, 8, 0, -135, 180, 0],
      TYPE: [exports.squaredPelleterTurret],
    },
      {
        POSITION: [11, 0, 0, 0, 360, 1],
        TYPE: [exports.squaredtriplet, { INDEPENDENT: true, COLOR: 5 }],
      },
  ],

};
exports.splitedsummoner = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.squareBoss],
    COLOR: 1,
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: exports.cubedSaw1,
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 8, 1.2, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.halfDamage,
            g.halfHealth,
            g.halfReload,
            //g.lesserSize,
          ]),
          TYPE: exports.sunchip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
          MAX_CHILDREN: 5,
        },
      },
    ],
  },
  4,
  "Summoner"
);
exports.Rook = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.octagonBoss],
    FACING_TYPE: "autospin",
    BODY: { REGEN: 0 },
    SHAPE: 8,
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [12, 8, 0, 0, 190, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [12, 8, 0, 90, 190, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [12, 8, 0, 180, 190, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [12, 8, 0, -90, 190, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [13, 8, 0, 0, 190, 0],
        TYPE: exports.auto4Turret,
      },
      {
        POSITION: [13, 8, 0, 90, 190, 0],
        TYPE: exports.auto4Turret,
      },
      {
        POSITION: [13, 8, 0, 180, 190, 0],
        TYPE: exports.auto4Turret,
      },
      {
        POSITION: [13, 8, 0, -90, 190, 0],
        TYPE: exports.auto4Turret,
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [7, 9.5, 0.6, 7, 0, 0, 0.8],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.halfDamage]),
          TYPE: exports.swarmDrone,
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
    ],
  },
  8,
  "Cleric"
);
exports.trianglesenti1W = {
  PARENT: [exports.minion],
  SHAPE: 3,
  TURRETS: [],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 11, 1.2, 8, 0, 125, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over, g.minion]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 235, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.over, g.minion]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 2,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.minion]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.trianglesenti2W = makeMulti(
  {
    PARENT: [exports.minion],
    SHAPE: 3,
    TURRETS: [],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [11, 8.5, 0.6, 7, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.minion]),
          TYPE: [exports.swarmDrone, { CONTROLLERS: ["canRepel"] }],
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
      {
        POSITION: [6, 11, 1.2, 8, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone, g.over, g.minion]),
          TYPE: exports.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
          MAX_CHILDREN: 1,
        },
      },
    ],
  },
  3,
  "Sentinel"
);
exports.trianglesenti3W = {
  PARENT: [exports.minion],
  SHAPE: 3,
  TURRETS: [],
  MAX_CHILDREN: 5,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.over,
          g.lesserReload,
          g.minion,
        ]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.dronetri2turret = {
  PARENT: [exports.genericTank],
  LABEL: "Delta Triangle Drone Sentinel",
  SHAPE: 3,
  HEALTH: 250,
  SIZE: 25,
  SPEED: 4,
  MAX_CHILDREN: 9,
  IGNORE_COLLISION: true,
  COLOR: 6,
  BODY: {
    DAMAGE: base.DAMAGE * 2.5,
    FOV: 1.25,
    HEALTH: 1250,
    PENETRATION: 1,
    REGEN: 1,
    RESIST: 1.7,
  },
  GUNS: [
    {
      POSITION: [5, 11, 1, 10.5, 0, 180, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.power,
          g.pound,
          g.destroy,
          g.anni,
        ]),
        TYPE: exports.trianglesenti1W,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 180, 0],
    },
    {
      POSITION: [5, 11, 1, 10.5, 0, 60, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.power,
          g.pound,
          g.destroy,
          g.anni,
        ]),
        TYPE: exports.trianglesenti2W,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 60, 0],
    },
    {
      POSITION: [5, 11, 1, 10.5, 0, -60, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.power,
          g.pound,
          g.destroy,
          g.anni,
        ]),
        TYPE: exports.trianglesenti3W,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, -60, 0],
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */

      POSITION: [15, 0, 0, 0, 360, 360, 1],
      TYPE: exports.oldAutoSmasherTurret,
    },
    {
      POSITION: [15, 0, 0, 0, 360, 360, 1],
      TYPE: exports.autoSmasherTurret,
    },
  ],
};
exports.GODskimbossturret = {
  PARENT: [exports.autoTurret],
  LABEL: "",
  BODY: { FOV: 2.5 },
  COLOR: 6,
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.superHealth,
          g.superHealth,
          g.superHealth,
          g.superHealth,
          g.superReload,
        ]),
        TYPE: exports.autoMissile,
      },
    },
    {
      POSITION: [17, 15, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [17, 15, 1.3, 0, 0, 0, 0],
    },
    {
      POSITION: [10, 9, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [17, 10, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [15, 9, 0.5, 0, 0, 0, 0],
    },
  ],
};
exports.Omega_skimmer = {
  PARENT: [exports.neutralRangedBoss, exports.triangleBoss],
  LABEL: "Aether Skimmer",
  SIZE: 55,
  VALUE: 2000000,
  FACING_TYPE: "autospin",
  COLOR: 6,
  BODY: {
    FOV: 3.25,
    HEALTH: 3000,
    REGEN: -1,
    SPEED: 1.65,
  },
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 5, 0, 60, 170, 0],
      TYPE: exports.GODskimbossturret,
    },
    {
      POSITION: [15, 5, 0, 180, 170, 0],
      TYPE: exports.GODskimbossturret,
    },
    {
      POSITION: [15, 5, 0, 300, 170, 0],
      TYPE: exports.GODskimbossturret,
    },
    {
      POSITION: [17, 0, 0, 300, 0, 1],
      TYPE: exports.dronetri2turret,
    },
  ],
};
exports.splitsummoner = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.shinySquareBoss],
    COLOR: 1,
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        POSITION: [14, 0, 0, 45, 0, 1],
        TYPE: exports.splitedsummoner,
      },
      {
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: exports.cubedSaw1,
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 8, 1.2, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.halfDamage,
            g.halfHealth,
            g.halfReload,
            //g.lesserSize,
          ]),
          TYPE: exports.shinySunchip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
          MAX_CHILDREN: 10,
        },
      },
    ],
  },
  4,
  "Shiny Summoner"
);
exports.nesterBoomerTurret = {
  PARENT: [exports.autoTurret, exports.boomer],
  COLOR: 14,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 10, 1, 14, 0, 0, 0],
    },
    {
      POSITION: [6, 10, -1.5, 7, 0, 0, 0],
    },
    {
      //POSITION: [  12,    15,      1,      0,      0,      0,      0,   ],
      //    }, {
      POSITION: [2, 10, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.boomerang,
          g.superReload,
          g.lesserHealth,
        ]),
        TYPE: exports.boomerang,
      },
    },
  ],
};
exports.elite_skimmer = {
  PARENT: [exports.guardianRangedBoss, exports.triangleBoss],
  LABEL: "Elite Skimmer",
  FACING_TYPE: "autospin",
  TYPE: "neutralBoss",
  TIER: 1,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 5, 0, 60, 170, 0],
      TYPE: exports.skimbossturret,
    },
    {
      POSITION: [15, 5, 0, 180, 170, 0],
      TYPE: exports.skimbossturret,
    },
    {
      POSITION: [15, 5, 0, 300, 170, 0],
      TYPE: exports.skimbossturret,
    },
  ],
};
exports.rogue_skimmer = {
  PARENT: [exports.neutralRangedBoss, exports.triangleBoss],
  LABEL: "Rogue Skimmer",
  COLOR: 10,
  FACING_TYPE: "autospin",
  TYPE: "guardianBoss",
  TIER: 1,
  BROADCAST_MESSAGE: "A rebel boss has been defeated!",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 5, 0, 60, 170, 0],
      TYPE: exports.rogueskimturret,
    },
    {
      POSITION: [15, 5, 0, 180, 170, 0],
      TYPE: exports.rogueskimturret,
    },
    {
      POSITION: [15, 5, 0, 300, 170, 0],
      TYPE: exports.rogueskimturret,
    },
  ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 12, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [2, 12, 1.1, 18, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.block, g.superHealth]),
          TYPE: exports.unsetBlock,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 12, 1, 0, 0, 120, 0],
      },
      {
        POSITION: [2, 12, 1.1, 18, 0, 120, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.block, g.superHealth]),
          TYPE: exports.unsetBlock,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18, 12, 1, 0, 0, 240, 0],
      },
      {
        POSITION: [2, 12, 1.1, 18, 0, 240, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.block, g.superHealth]),
          TYPE: exports.unsetBlock,
        },
      },
    ],
};
exports.enchantress = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.triangleBoss],
    MAX_CHILDREN: 24,
    TYPE: "neutralBoss",
    TIER: 1,
    FACING_TYPE: "autospin",
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3, 9, 1.2, 8, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserHealth,
            g.lesserReload,
            //g.greaterDamage,
            g.lesserSpeed,
            g.lesserSize,
          ]),
          TYPE: exports.sterileTriangleChip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  3,
  "Enchantress"
);
exports.defender = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.triangleBoss],
    BODY: {
      HEALTH: 250,
    },
    VALUE: 250000,
    FACING_TYPE: "autospin",

    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [15, 9, 1, 0, 0, 60, 0],
      },
      {
        POSITION: [3, 9.5, 1.7, 13.5, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.pound,
            g.destroy,
            g.doubleHealth,
            g.greaterSize,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [5, 8, 0, 0, 190, 1],
        TYPE: [exports.defenderSniperTurret],
      },
      {
        POSITION: [5, 8, 0, 120, 190, 1],
        TYPE: [exports.defenderSniperTurret],
      },
      {
        POSITION: [5, 8, 0, 240, 190, 1],
        TYPE: [exports.defenderSniperTurret],
      },
      {
        POSITION: [8, 0, 0, 0, 360, 1],
        TYPE: exports.skimbossturret,
      },
    ],
  },
  3,
  "Defender"
);
exports.elite_slider = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.upgradedtriangleBoss],
    FACING_TYPE: "autospin",
    TYPE: "neutralBoss",
    SHAPE: -2,
    TIER: 1,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 4, 1, 0, 0, 150, 0],
      },
      {
        POSITION: [3, 4, 1.7, 15, 0, 150, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 4, 1, 0, 0, -150, 0],
      },
      {
        POSITION: [3, 4, 1.7, 15, 0, -150, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [7, 14, 0, 240, 190, 0],
        TYPE: [exports.smashatmo],
      },
      {
        POSITION: [7, 14, 0, 120, 190, 0],
        TYPE: [exports.smashatmo],
      },
      {
        POSITION: [7, 14, 0, 0, 190, 0],
        TYPE: [exports.smashatmo],
      },
      {
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: exports.spikeBody3,
      },
      {
        POSITION: [5, 9, 0, 240, 190, 1],
        TYPE: [exports.defenderSniperTurret],
      },
      {
        POSITION: [5, 9, 0, 0, 190, 1],
        TYPE: [exports.defenderSniperTurret],
      },
      {
        POSITION: [5, 9, 0, 120, 190, 1],
        TYPE: [exports.defenderSniperTurret],
      },
      {
        POSITION: [17, 0, 0, 300, 0, 1],
        TYPE: exports.enchantress,
      },
      {
        POSITION: [15, 0, 0, 300, 0, 1],
        TYPE: exports.spikeBody3,
      },
      {
        POSITION: [13, 0, 0, 300, 0, 1],
        TYPE: exports.defender,
      },
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [15, 5, 0, 60, 170, 0],
        TYPE: exports.autoskimbossturret,
      },
      {
        POSITION: [15, 5, 0, 180, 170, 0],
        TYPE: exports.autoskimbossturret,
      },
      {
        POSITION: [15, 5, 0, 300, 170, 0],
        TYPE: exports.autoskimbossturret,
      },
    ],
  },
  3,
  "The Shattering"
);
exports.elite_skimmerbutL = {
  PARENT: [exports.neutralRangedBoss, exports.triangleBoss],
  LABEL: "L ",
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 5, 0, 60, 170, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [15, 5, 0, 180, 170, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [15, 5, 0, 300, 170, 0],
      TYPE: exports.autoSmasherTurret,
    },
  ],
};
exports.Delta_skimmer = {
  PARENT: [exports.neutralRangedBoss, exports.upgradedtriangleBoss],
  LABEL: "Delta Skimmer",
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 5, 0, 60, 170, 0],
      TYPE: exports.autoskimbossturret,
    },
    {
      POSITION: [15, 5, 0, 180, 170, 0],
      TYPE: exports.autoskimbossturret,
    },
    {
      POSITION: [15, 5, 0, 300, 170, 0],
      TYPE: exports.autoskimbossturret,
    },
    {
      POSITION: [17, 0, 0, 300, 0, 1],
      TYPE: exports.enchantress,
    },
  ],
};
exports.witch = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.triangleBoss],
    FACING_TYPE: "autospin",
    BODY: {
      HEALTH: 250,
    },
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [19, 8, 1, 0, -2, -20, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.twin,
            g.bent,
            g.superHealth,
          ]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [19, 8, 1, 0, 2, 20, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.twin,
            g.bent,
            g.superHealth,
          ]),
          TYPE: exports.bullet,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3, 9, 1.2, 8, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserHealth,
            g.lesserReload,
            //g.greaterDamage,
            g.lesserSpeed,
            g.lesserSize,
          ]),
          TYPE: exports.sterileTriangleChip,
          AUTOFIRE: true,
          MAX_CHILDREN: 6,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  3,
  "Witch"
);
exports.defector = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.triangleBoss],
    DANGER: 7,
    BODY: {
      HEALTH: 250,
    },
    FACING_TYPE: "autospin",
    STAT_NAMES: statnames.drone,
    GUNS: [
      {
        POSITION: [15, 7, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [4, 7, 2.5, 15, 0, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.pound,
            g.destroy,
            g.doubleHealth,
            g.greaterSize,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [5.5, 12, 1, 8, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.pound,
            g.destroy,
            g.anni,
            g.greaterHealth,
          ]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [3.5, 12, 1.2, 8, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone]),
          TYPE: exports.drone,
          AUTOFIRE: true,
          MAX_CHILDREN: 3,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [14, 0, 0, 0, 360, 1],
        TYPE: exports.autoTurret,
      },
    ],
  },
  3,
  "Defector"
);
exports.exterminator = {
  PARENT: [exports.highlordRangedBoss],
  LABEL: "Exterminator",
  DANGER: 7,
  VALUE: 1000000,
  STAT_NAMES: statnames.generic,
  BODY: {
    FOV: base.FOV * 1.75,
    HEALTH: 450,
  },
  GUNS: [
    {
      POSITION: [7, 5, 1.2, 7, 0, -150, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.cheese]),
        TYPE: [exports.drone, { DRAW_HEALTH: true }],
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [7, 5, 1.2, 7, 0, 150, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.cheese]),
        TYPE: [exports.drone, { DRAW_HEALTH: true }],
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [13, 8, 1, 10, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.power,
          g.doubleHealth,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 7, 1, 0, 0, 170, 0],
    },
    {
      POSITION: [4, 7, 2.5, 15, 0, 170, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.doubleHealth,
          g.greaterSize,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 7, 1, 0, 0, -170, 0],
    },
    {
      POSITION: [4, 7, 2.5, 15, 0, -170, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.doubleHealth,
          g.greaterSize,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 9, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [4, 9, 2.5, 15, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.doubleHealth,
          g.greaterSize,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [7, 0, 6, 0, 360, 1],
      TYPE: [exports.highlordAssassinTurret],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody],
    },
    {
      POSITION: [7, 0, -6, 0, 360, 1],
      TYPE: [exports.highlordAssassinTurret],
    },
  ],
};
exports.minionenchantress = makeMulti(
  {
    PARENT: [exports.minion],
    MAX_CHILDREN: 6,
    SHAPE: 3,
    FACING_TYPE: "autospin",
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3, 9, 1.2, 8, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserHealth,
            g.lesserHealth,
            g.lesserReload,
            //g.greaterDamage,
            g.lesserSpeed,
            g.lesserSize,
          ]),
          TYPE: exports.sterileTriangleChip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  3,
  "Enchantress"
);
exports.shinydefender = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.triangleBoss],
    COLOR: 1,
    SIZE: 40,
    BODY: {
      HEALTH: 450,
    },
    VALUE: 125000,
    FACING_TYPE: "autospin",

    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [15, 12, 1, 0, 0, 60, 0],
      },
      {
        POSITION: [3, 12, 1.7, 13.5, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.pound,
            g.destroy,
            g.anni,
            g.doubleHealth,
            g.greaterSize,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [15, 0, 0, 180, 0, 1],
        TYPE: exports.spikeBody3,
      },
      {
        POSITION: [15, 0, 0, 0, 0, 1],
        TYPE: exports.spikeBody3,
      },
      {
        POSITION: [23, 0, 0, 180, 0, 0],
        TYPE: exports.spikeBody3,
      },
      {
        POSITION: [5, 8, 0, 0, 190, 1],
        TYPE: [exports.shinydefenderSniperTurret],
      },
      {
        POSITION: [5, 8, 0, 240, 190, 1],
        TYPE: [exports.shinydefenderSniperTurret],
      },
      {
        POSITION: [5, 8, 0, 120, 190, 1],
        TYPE: [exports.shinydefenderSniperTurret],
      },
      {
        POSITION: [8, 10, 0, 0, 190, 0],
        TYPE: [exports.auto3Turret],
      },
      {
        POSITION: [8, 10, 0, 120, 190, 0],
        TYPE: [exports.auto3Turret],
      },
      {
        POSITION: [8, 10, 0, 240, 190, 0],
        TYPE: [exports.auto3Turret],
      },
    ],
  },
  3,
  "Shiny Defender"
);
exports.epilepticdefender = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.triangleBoss],
    COLOR: 20,
    SIZE: 45,
    NAME: "Vendeer",
    BODY: {
      HEALTH: 750,
    },
    VALUE: 2000000,
    FACING_TYPE: "autospin",

    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [15, 9, 1, 0, 0, 60, 0],
      },
      {
        POSITION: [3, 14.5, 1.7, 13.5, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.pound,
            g.destroy,
            g.anni,
            g.doubleHealth,
            g.greaterSize,
          ]),
          TYPE: exports.mechtrap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [4, 8.5, 1.5, 7, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.minion,
            g.pound,
            g.destroy,
            g.anni,
            g.doubleHealth,
            g.superReload,
          ]),
          TYPE: exports.minionenchantress,
          MAX_CHILDREN: 1,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [15, 0, 0, 0, 0, 1],
        TYPE: exports.spikeBody3,
      },
      {
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: exports.spikeBody3,
      },
      {
        POSITION: [5, 8, 0, 0, 190, 1],
        TYPE: [exports.epilepticdefenderSniperTurret],
      },
      {
        POSITION: [5, 8, 0, 240, 190, 1],
        TYPE: [exports.epilepticdefenderSniperTurret],
      },
      {
        POSITION: [5, 8, 0, 120, 190, 1],
        TYPE: [exports.epilepticdefenderSniperTurret],
      },
      {
        POSITION: [8, 10, 0, 0, 190, 0],
        TYPE: [exports.auto4Turret],
      },
      {
        POSITION: [8, 10, 0, 120, 190, 0],
        TYPE: [exports.auto4Turret],
      },
      {
        POSITION: [8, 10, 0, 240, 190, 0],
        TYPE: [exports.auto4Turret],
      },
      {
        POSITION: [8, 10, 0, 0, 190, 0],
        TYPE: [exports.autoTurret],
      },
      {
        POSITION: [8, 10, 0, -120, 190, 0],
        TYPE: [exports.autoTurret],
      },
      {
        POSITION: [8, 10, 0, 120, 190, 0],
        TYPE: [exports.autoTurret],
      },
      {
        POSITION: [8, 10, 0, 240, 190, 0],
        TYPE: [exports.autoTurret],
      },
      /*/    {
      POSITION: [8, 0, 0, 0, 360, 1],
        TYPE: exports.epilepticskimbossturret,
      },/*/
    ],
  },
  3,
  "Epileptic Defender"
);
exports.exorcistor = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.pentagonBoss],
    FACING_TYPE: "autospin",
    MAX_CHILDREN: 15,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.5, 9, 1.2, 8, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.doubleDamage,
            g.minorSpeed,
            g.greaterReload,
            g.lesserSize,
          ]),
          TYPE: exports.sterilePentagonChip,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  "Exorcister"
);
exports.cultist = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.hexagonBoss],
    FACING_TYPE: "autospin",
    MAX_CHILDREN: 12,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 9, 1.3, 8, 0, 0, 1],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.sunchip,
            g.superHealth,
            g.superHealth,
            g.halfDamage,
            g.halfSize,
            g.halfSpeed,
          ]),
          TYPE: [exports.sterileHexagonChip],
          AUTOFIRE: true,
          MAX_CHILDREN: 2,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  6,
  "Cultist Centaurion"
);
exports.bishop = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.hexagonBoss],
    NAME: "Anicetus",
    FACING_TYPE: "autospin",
    VALUE: 2000000,
    TURRETS: [
      {
        POSITION: [5, 8, 0, 30, 190, 1],
        TYPE: [exports.bishopAutoTurret],
      },
      {
        POSITION: [5, 8, 0, 150, 190, 1],
        TYPE: [exports.bishopAutoTurret],
      },
      {
        POSITION: [5, 8, 0, 270, 190, 1],
        TYPE: [exports.bishopAutoTurret],
      },
      {
        POSITION: [5, 8, 0, 90, 190, 1],
        TYPE: [exports.bishopAutoTurret],
      },
      {
        POSITION: [5, 8, 0, 210, 190, 1],
        TYPE: [exports.bishopAutoTurret],
      },
      {
        POSITION: [5, 8, 0, 330, 190, 1],
        TYPE: [exports.bishopAutoTurret],
      },
      {
        POSITION: [8, 0, 0, 0, 360, 1],
        TYPE: [exports.bishopAssassinTurret],
      },
    ],
    GUNS: [
      {
        POSITION: [17, 3, 1, 0, 0, 30, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.gunner,
            g.arty,
            g.nail,
            g.power,
            g.halfSpeed,
            g.doubleDamage,
            g.halfStats,
          ]),
          TYPE: exports.bullet,
          LABEL: "Secondary",
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5, 11, 1, 10.5, 0, 0, 0],
      },
      {
        POSITION: [3, 14, 1, 15.5, 0, 0, 0],
      },
      {
        POSITION: [2, 14, 1.3, 18, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.block,
            g.destroy,
            g.anni,
            g.construct,
            g.superSpeed,
            g.superSpeed,
            g.minorDamage,
            g.superHealth,
            g.lesserRange,
          ]),
          TYPE: exports.bosspillboxTwin,
          SYNCS_SKILLS: true,
        },  
      },
      {
        POSITION: [4, 14, 1, 8, 0, 0, 0],
      },
    ],
  },
  6,
  "Bishop"
);
exports.heraTopLayer = makeMulti(
  {
    PARENT: [exports.septagonBoss],
    LABEL: "",
    CONTROLLERS: ["nearestDifferentMaster", "spin"],
    AI_TARGET: "mostDeadly",
    FACING_TYPE: "toTarget",
    BODY: { FOV: 2.5 },
    SPIN_RATE: -0.075,
    INDEPENDENT: false,
    TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 1],
      TYPE: exports.grayCircle,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.blackCircle,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: exports.droneAuraSymbol,
    },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.5, 7.25, 1.2, 8, 0, 25.5, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.greaterDamage,
            g.minorSpeed,
            g.lesserSpeed,
            g.greaterReload,
            //g.lesserSize,
          ]),
          TYPE: [
            exports.auraDrone,
            {
              INDEPENDENT: true,
              BODY: { FOV: 2 },
            },
          ],
          MAX_CHILDREN: 2,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  7,
  ""
);
exports.hera = makeMulti({
  PARENT: [exports.neutralRangedBoss, exports.septagonBoss],
  NAME: "Hera",
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8.5, 8, 0, 360 * 0/7 + 25.71, 190, 0],
      TYPE: exports.heraTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8.5, 8, 0, 360 * 1/7 + 25.71, 190, 0],
      TYPE: exports.heraTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8.5, 8, 0, 360 * 2/7 + 25.71, 190, 0],
      TYPE: exports.heraTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8.5, 8, 0, 360 * 3/7 + 25.71, 190, 0],
      TYPE: exports.heraTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8.5, 8, 0, 360 * 4/7 + 25.71, 190, 0],
      TYPE: exports.heraTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8.5, 8, 0, 360 * 5/7 + 25.71, 190, 0],
      TYPE: exports.heraTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8.5, 8, 0, 360 * 6/7 + 25.71, 190, 0],
      TYPE: exports.heraTurret,
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.heraTopLayer],
    },
  ],
  GUNS: [
    
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 1.5, 4.0, 0, 2.5, 0/7, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [7, 1.5, 4.0, 0, -2.5, 0/7, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [7, 1.5, 4.0, 3, 1.75, 0/7, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [7, 1.5, 4.0, 3, -1.75, 0/7, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [7, 1.5, 4.0, 6, 0, 0/7, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.machgun]),
        TYPE: exports.bullet,
      },
    },
  ],
},
7,
"Archmother",)
exports.Pawn = {
  PARENT: [exports.neutralRangedBoss, exports.hexagonBoss],
  LABEL: "Priest",
  SIZE: 30,
  TYPE: "neutralBoss",
  TIER: 1,
  FACING_TYPE: "autospin",
  VALUE: 200000,
  TURRETS: [
    {
      POSITION: [10, 8, 0, 0, 120, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [10, 8, 0, 120, 120, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [10, 8, 0, -120, 120, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.auto4Turret],
    },
  ],
};
exports.sardonyxPower0 = {
  PARENT: [exports.cheese],
  LABEL: "Hate",
  ALPHA: 0,
  COLOR: 19,
  CONTROLLERS: ["teleportToMaster", "alwaysFire", "nearestDifferentMaster"],
  DIE_AT_RANGE: true,
  BODY: {
    RANGE: 150,
    DAMAGE: 0,
    HEALTH: 10000,
  },
  SKILL: skillSet({
    rld: 320, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 32, //max health
    shi: 1, //shield capacity
    rgn: 1, //shield regeneration
    mob: 0.02, //movement speed
  }),
  DRAW_HEALTH: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10.5, 18, 1.2, 5.5, 0, 0, 2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minorStats,
          g.halfStats,
          g.minorSpeed,
          g.minorSpeed,
          g.minorSpeed,
          g.superHealth,
          g.superHealth,
        ]),
        TYPE: [
          exports.shadowEggCrasher,
          {
            PERSISTS_AFTER_DEATH: true,
            BODY: { REGEN: 0 },
            TYPE: "drone",
            IS_ENEMY: false,
            IS_PROJECTILE: true,
          },
        ],

        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};

exports.sardonyxPower1 = {
  PARENT: [exports.cheese],
  LABEL: "Anger",
  ALPHA: 0,
  COLOR: 19,
  CONTROLLERS: ["teleportToMaster", "alwaysFire", "nearestDifferentMaster"],
  DIE_AT_RANGE: true,
  BODY: {
    RANGE: 150,
    DAMAGE: 0,
    HEALTH: 10000,
  },
  SKILL: skillSet({
    rld: 320, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 32, //max health
    shi: 1, //shield capacity
    rgn: 1, //shield regeneration
    mob: 0.02, //movement speed
  }),
  DRAW_HEALTH: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10.5, 18, 1.2, 5.5, 0, 0, 2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minorStats,
          g.minorStats,
          g.minorSpeed,
          g.minorSpeed,
        ]),
        TYPE: [
          exports.abyssalSphereCrasher,
          {
            PERSISTS_AFTER_DEATH: true,
            BODY: { REGEN: 0 },
            TYPE: "drone",
            IS_ENEMY: false,
            IS_PROJECTILE: true,
          },
        ],

        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.sardonyxPower2 = {
  PARENT: [exports.corrupter],
  LABEL: "Consume",
  ALPHA: 0,
  COLOR: 3,
  CONTROLLERS: ["teleportToMaster", "alwaysFire", "nearestDifferentMaster"],
  DIE_AT_RANGE: true,
  BODY: {
    RANGE: 600,
    DAMAGE: 0,
    HEALTH: 10000,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 32, //max health
    shi: 1, //shield capacity
    rgn: 1, //shield regeneration
    mob: 0.02, //movement speed
  }),
  DRAW_HEALTH: false,
  TURRETS: [
    {
      POSITION: [12.5, 0, 0, 0, 360, 1],
      TYPE: [exports.corrupter, { CONTROLLERS: ["nearestDifferentMaster"] }],
    },
  ],
};
exports.sardonyxPower3 = {
  PARENT: [exports.genericTank],
  LABEL: "Bane",
  CONTROLLERS: ["teleportToMaster", "alwaysFire", "spin"],
  DIE_AT_RANGE: true,
  SPIN_RATE: 0.0752,
  COLOR: 33,
  BODY: {
    RANGE: 500,
    DAMAGE: 0,
    HEALTH: 10000,
  },
  ALPHA: 0,
  SKILL: skillSet({
    rld: 320, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 32, //max health
    shi: 1, //shield capacity
    rgn: 1, //shield regeneration
    mob: 0.02, //movement speed
  }),
  DRAW_HEALTH: false,

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.power, g.minorReload]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.sardonyxPower4 = {
  PARENT: [exports.genericTank],
  LABEL: "The Restless",
  CONTROLLERS: ["teleportToMaster", "alwaysFire", "nearestDifferentMaster"],
  DIE_AT_RANGE: true,
  COLOR: 12,
  BODY: {
    RANGE: 750,
    DAMAGE: 0,
    HEALTH: 10000,
  },
  ALPHA: 0,
  SKILL: skillSet({
    rld: 320, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 32, //max health
    shi: 1, //shield capacity
    rgn: 1, //shield regeneration
    mob: 0.02, //movement speed
  }),
  DRAW_HEALTH: false,
  MAX_CHILDREN: 5,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, 0, 0, 2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.uberHealth,
          g.uberHealth,
          g.greaterSpeed,
          g.superRange,
        ]),
        TYPE: [
          exports.smasherBullet,
          { MOTION_TYPE: "growth", PERSISTS_AFTER_DEATTH: true },
        ],
      },
    },
  ],
};
exports.ranarPower0 = {
  PARENT: [exports.cheese],
  LABEL: "Wrathful",
  ALPHA: 0,
  COLOR: 0,
  CONTROLLERS: ["teleportToMaster", "alwaysFire", "nearestDifferentMaster"],
  DIE_AT_RANGE: true,
  BODY: {
    RANGE: 150,
    DAMAGE: 0,
    HEALTH: 10000,
  },
  SKILL: skillSet({
    rld: 320, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 32, //max health
    shi: 1, //shield capacity
    rgn: 1, //shield regeneration
    mob: 0.02, //movement speed
  }),
  DRAW_HEALTH: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10.5, 18, 1.2, 5.5, 0, 0, 2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minorStats,
          g.minorSpeed,
          g.minorSpeed,
          g.lesserSpeed,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.halfDamage,
          g.minorResistance,
          g.minorSpeed,
          g.halfMax,
        ]),
        TYPE: [
          exports.legendaryTriangleCrasher,
          {
            PERSISTS_AFTER_DEATH: true,
            BODY: { REGEN: 0 },
          },
        ],

        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};

exports.ranarPower1 = {
  PARENT: [exports.cheese],
  LABEL: "Wrathful",
  ALPHA: 0,
  COLOR: 1,
  CONTROLLERS: ["teleportToMaster", "alwaysFire", "nearestDifferentMaster"],
  DIE_AT_RANGE: true,
  BODY: {
    RANGE: 150,
    DAMAGE: 0,
    HEALTH: 10000,
  },
  SKILL: skillSet({
    rld: 320, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 32, //max health
    shi: 1, //shield capacity
    rgn: 1, //shield regeneration
    mob: 0.02, //movement speed
  }),
  DRAW_HEALTH: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10.5, 18, 1.2, 5.5, 0, 0, 2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minorStats,
          g.minorSpeed,
          g.minorSpeed,
          g.lesserSpeed,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.halfDamage,
          g.minorResistance,
          g.minorSpeed,
          g.halfMax,
        ]),
        TYPE: [
          exports.shinyTriangleCrasher,
          {
            PERSISTS_AFTER_DEATH: true,
            BODY: { REGEN: 0 },
          },
        ],

        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
exports.ranarPower2 = {
  PARENT: [exports.shotgun],
  LABEL: "Shatter",
  ALPHA: 0,
  COLOR: 3,
  CONTROLLERS: ["teleportToMaster", "alwaysFire", "nearestDifferentMaster"],
  DIE_AT_RANGE: true,
  BODY: {
    RANGE: 600,
    DAMAGE: 0,
    HEALTH: 10000,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 32, //max health
    shi: 1, //shield capacity
    rgn: 1, //shield regeneration
    mob: 0.02, //movement speed
  }),
  DRAW_HEALTH: false,
  TURRETS: [
    {
      POSITION: [12.5, 0, 0, 0, 360, 1],
      TYPE: [exports.shotgun, { CONTROLLERS: ["nearestDifferentMaster"] }],
    },
  ],
};
exports.ranarPower3 = {
  PARENT: [exports.genericTank],
  LABEL: "Supremacist",
  ALPHA: 0,
  COLOR: 3,
  CONTROLLERS: ["teleportToMaster", "alwaysFire", "nearestDifferentMaster"],
  DIE_AT_RANGE: true,
  BODY: {
    RANGE: 600,
    DAMAGE: 0,
    HEALTH: 10000,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 32, //max health
    shi: 1, //shield capacity
    rgn: 1, //shield regeneration
    mob: 0.02, //movement speed
  }),
  DRAW_HEALTH: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20.5, 19.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.atmosphere,
          // g.uberSpeed,
          g.superSize,
        ]),
        TYPE: [exports.damageAura, { GROWTH_FACTOR: 25 }],
      },
    },
  ],
};
exports.ranarPower4 = {
  PARENT: [exports.genericTank],
  LABEL: "Arena Slayer",
  CONTROLLERS: ["teleportToMaster", "alwaysFire", "spin"],
  DIE_AT_RANGE: true,
  SPIN_RATE: 0.0752,
  COLOR: 33,
  BODY: {
    RANGE: 500,
    DAMAGE: 0,
    HEALTH: 10000,
  },
  ALPHA: 0,
  SKILL: skillSet({
    rld: 320, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 32, //max health
    shi: 1, //shield capacity
    rgn: 1, //shield regeneration
    mob: 0.02, //movement speed
  }),
  DRAW_HEALTH: false,

  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.power, g.minorReload]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.ranarPower5 = {
  PARENT: [exports.genericTank],
  LABEL: "Ultima",
  CONTROLLERS: ["teleportToMaster", "alwaysFire", "nearestDifferentMaster"],
  DIE_AT_RANGE: true,
  COLOR: 12,
  BODY: {
    RANGE: 750,
    DAMAGE: 0,
    HEALTH: 10000,
  },
  ALPHA: 0,
  SKILL: skillSet({
    rld: 320, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 32, //max health
    shi: 1, //shield capacity
    rgn: 1, //shield regeneration
    mob: 0.02, //movement speed
  }),
  DRAW_HEALTH: false,
  MAX_CHILDREN: 5,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, 0, 0, 2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.uberHealth,
          g.uberHealth,
          g.greaterSpeed,
          g.superRange,
        ]),
        TYPE: [
          exports.arenaBullet,
          { MOTION_TYPE: "growth", PERSISTS_AFTER_DEATTH: true },
        ],
      },
    },
  ],
};
exports.Cube_Sentinel = {
  PARENT: [exports.genericTank],
  LABEL: "Minion",
  TYPE: "minion",
  DAMAGE_CLASS: 0,
  SHAPE: 4,
  COLOR: 13,
  HITS_OWN_TYPE: "hardWithBuffer",
  FACING_TYPE: "smoothToTarget",
  BODY: {
    FOV: 3,
    COLOR: 13,
    SPEED: 1,
    ACCELERATION: 0.4,
    HEALTH: 15,
    SHIELD: 0.25,
    DAMAGE: 2.2,
    RESIST: 1,
    PENETRATION: 3,
    DENSITY: 0.75,
  },
  AI: {
    BLIND: true,
  },
  DRAW_HEALTH: false,
  CLEAR_ON_MASTER_UPGRADE: true,
  GIVE_KILL_MESSAGE: false,
  CONTROLLERS: ["nearestDifferentMaster", "mapAltToFire", "minion", "canRepel"],
  //CONTROLLERS: ['nearestDifferentMaster'],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.minion]),
        WAIT_TO_CYCLE: true,
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 11, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [4, 11, 1.7, 13, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.fast, g.halfrecoil]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.Cube_Sentinel2 = {
  PARENT: [exports.genericTank],
  LABEL: "Minion",
  TYPE: "minion",
  DAMAGE_CLASS: 0,
  SHAPE: 4,
  COLOR: 13,
  HITS_OWN_TYPE: "hardWithBuffer",
  FACING_TYPE: "smoothToTarget",
  BODY: {
    FOV: 3,
    COLOR: 13,
    SPEED: 5,
    ACCELERATION: 0.75,
    HEALTH: 15,
    SHIELD: 2,
    DAMAGE: 1.2,
    RESIST: 1,
    PENETRATION: 9,
    DENSITY: 0.75,
  },
  AI: {
    BLIND: true,
  },
  DRAW_HEALTH: false,
  CLEAR_ON_MASTER_UPGRADE: true,
  GIVE_KILL_MESSAGE: false,
  CONTROLLERS: ["nearestDifferentMaster", "mapAltToFire", "minion", "canRepel"],
  //CONTROLLERS: ['nearestDifferentMaster'],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [13, 9, -1.2, 0, 3.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.hive]),
        TYPE: exports.hive,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 130, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri]),
        TYPE: exports.bullet,
        LABEL: "Wing",
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 230, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri]),
        TYPE: exports.bullet,
        LABEL: "Wing",
      },
    },
  ],
};
exports.cubedturretS = {
  PARENT: [exports.genericTank],
  LABEL: "Turret",
  SHAPE: 4,
  COLOR: 13,
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.turret,
          g.fast,
          g.mach,
          g.pound,
          g.morereload,
          g.morereload,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.turret,
          g.fast,
          g.mach,
          g.pound,
          g.morereload,
          g.morereload,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.cubedturretM = {
  PARENT: [exports.genericTank],
  LABEL: "Turret",
  MAX_CHILDREN: 6,
  SHAPE: 4,
  COLOR: 13,
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [27, 0, 0, 0, 0, 0, 0],
      TYPE: exports.cubedSaw1,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.turret,
          g.fast,
          g.mach,
          g.pound,
          g.morereload,
          g.morereload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.turret,
          g.fast,
          g.mach,
          g.pound,
          g.morereload,
          g.morereload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [5, 11, 1, 10, 0, 180, 0],
    },
    {
      POSITION: [2, 14, 1, 15, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory]),
        TYPE: exports.Cube_Sentinel,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 7.5, 0, 180, 0],
    },
    {
      POSITION: [18, 7, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.turret,
          g.fast,
          g.mach,
          g.pound,
          g.morereload,
          g.morereload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [18, 7, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.turret,
          g.fast,
          g.mach,
          g.pound,
          g.morereload,
          g.morereload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.cubedturretL = {
  PARENT: [exports.genericTank],
  LABEL: "Turret",
  SHAPE: 4,
  COLOR: 13,
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [27, 0, 0, 0, 0, 0, 0],
      TYPE: exports.cubedSaw1,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.single]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.single]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [5, 11, 1, 10, 0, 180, 0],
    },
    {
      POSITION: [2, 14, 1, 15, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory]),
        TYPE: [
          exports.Cube_Sentinel,
          {
            MAX_CHILDREN: 3,
            STAT_CALCULATOR: gunCalcNames.drone,
            AUTOFIRE: true,
            SYNCS_SKILLS: true,
          },
        ],
      },
    },
    {
      POSITION: [4, 14, 1, 7.5, 0, 180, 0],
    },
    {
      POSITION: [18, 7, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.single]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [18, 7, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.single]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [19, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.single]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [21, 7, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.single]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
(exports.cubedSaw1_2 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: 4,
  INDEPENDENT: true,
}),
  (exports.Cube_Sentinel_2 = {
    PARENT: [exports.genericTank],
    LABEL: "Cube Sentinel",
    TYPE: "minion",
    DAMAGE_CLASS: 0,
    SHAPE: 4,
    COLOR: 13,
    HITS_OWN_TYPE: "hardWithBuffer",
    FACING_TYPE: "smoothToTarget",
    BODY: {
      FOV: 3,
      COLOR: 13,
      SPEED: 1.5,
      ACCELERATION: 0.4,
      HEALTH: 25,
      SHIELD: 5,
      DAMAGE: 2.2,
      RESIST: 1,
      PENETRATION: 3,
      DENSITY: 0.75,
    },
    AI: {
      BLIND: true,
    },
    DRAW_HEALTH: false,
    CLEAR_ON_MASTER_UPGRADE: true,
    GIVE_KILL_MESSAGE: false,
    CONTROLLERS: [
      "nearestDifferentMaster",
      "mapAltToFire",
      "minion",
      "canRepel",
    ],
    //CONTROLLERS: ['nearestDifferentMaster'],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [16, 7, 0.5, 0, -1, -20, 5.0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.minion]),
          WAIT_TO_CYCLE: true,
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [16, 7, 0.5, 0, 1, 20, 5.0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.minion]),
          WAIT_TO_CYCLE: true,
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [17, 9, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.minion]),
          WAIT_TO_CYCLE: true,
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [14, 6, 1.75, 0, 1, 90, 5.0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.minion]),
          WAIT_TO_CYCLE: true,
          TYPE: exports.swarmDrone,
        },
      },
      {
        POSITION: [14, 6, 1.75, 0, 1, -90, 5.0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.minion]),
          WAIT_TO_CYCLE: true,
          TYPE: exports.swarmDrone,
        },
      },
      {
        POSITION: [13, 11, 1, 0, 0, 180, 0],
      },
      {
        POSITION: [4, 11, 1.7, 13, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.fast, g.halfrecoil]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
  });
exports.Cube_Sentinel2_2 = {
  PARENT: [exports.minion],
  LABEL: "Minion",
  TYPE: "minion",
  DAMAGE_CLASS: 0,
  SHAPE: 4,
  COLOR: 13,
  HITS_OWN_TYPE: "hardWithBuffer",
  FACING_TYPE: "smoothToTarget",
  HAS_NO_RECOIL: true,
  BODY: {
    FOV: 3,
    COLOR: 13,
    SPEED: 0.5,
    ACCELERATION: 0.75,
    HEALTH: 15,
    SHIELD: 2,
    DAMAGE: 1.2,
    RESIST: 1,
    PENETRATION: 9,
    DENSITY: 0.75,
  },
  AI: {
    BLIND: true,
  },
  DRAW_HEALTH: false,
  CLEAR_ON_MASTER_UPGRADE: true,
  GIVE_KILL_MESSAGE: false,
  CONTROLLERS: ["nearestDifferentMaster", "mapAltToFire", "minion", "canRepel"],
  //CONTROLLERS: ['nearestDifferentMaster'],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 5, -1.2, 0, -3.5, -30, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.hive]),
        TYPE: exports.hive,
      },
    },
    {
      POSITION: [15, 5, -1.2, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.hive]),
        TYPE: exports.hive,
      },
    },
    {
      POSITION: [15, 5, -1.2, 0, 3.5, 30, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.hive]),
        TYPE: exports.hive,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 130, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri]),
        TYPE: exports.bullet,
        LABEL: "Wing",
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 230, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri]),
        TYPE: exports.bullet,
        LABEL: "Wing",
      },
    },
  ],
};
exports.cubedturretS_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Turret",
  SHAPE: 4,
  COLOR: 13,
  HAS_NO_RECOIL: true,
  CONTROLLERS: [
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
    "spin",
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [25, 0, 0, 0, 0, 0, 0],
      TYPE: exports.cubedSaw1_2,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 6, 0.5, 0, 5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.turret,
          g.fast,
          g.mach,
          g.pound,
          g.morereload,
          g.morereload,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 0.5, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.turret,
          g.fast,
          g.mach,
          g.pound,
          g.morereload,
          g.morereload,
        ]),
        TYPE: exports.beeDrone,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [23, 10, 0.75, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.turret,
          g.fast,
          g.mach,
          g.pound,
        ]),
        TYPE: exports.hive,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.cubedturretM_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Turret",
  MAX_CHILDREN: 6,
  SHAPE: 4,
  COLOR: 13,
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 0, 0, 0],
      TYPE: exports.cubedSaw1,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.turret,
          g.fast,
          g.mach,
          g.pound,
          g.morereload,
          g.morereload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.turret,
          g.fast,
          g.mach,
          g.pound,
          g.morereload,
          g.morereload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [5, 11, 1, 10, 0, 180, 0],
    },
    {
      POSITION: [2, 14, 1, 15, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory]),
        TYPE: exports.Cube_Sentinel_2,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 7.5, 0, 180, 0],
    },
    {
      POSITION: [18, 7, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.turret,
          g.fast,
          g.mach,
          g.pound,
          g.morereload,
          g.morereload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [18, 7, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.turret,
          g.fast,
          g.mach,
          g.pound,
          g.morereload,
          g.morereload,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.cubedSDturret = {
  PARENT: [exports.genericTank],
  LABEL: "Turret",
  SHAPE: 4,
  INDEPENDENT: true,
  COLOR: 13,
  CONTROLLERS: ["nearestDifferentMaster"],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 0, 0, 0],
      TYPE: exports.cubedSaw1,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [18, 7, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [18, 7, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.minicubedSDturret = {
  PARENT: [exports.genericTank],
  LABEL: "Turret",
  SHAPE: 4,
  INDEPENDENT: true,
  COLOR: 13,
  CONTROLLERS: ["nearestDifferentMaster"],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 0, 0, 0],
      TYPE: exports.cubedSaw1,
    },
  ],
  GUNS: [
    {
      POSITION: [18, 7, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [18, 7, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.cubedorbierdrone = {
  PARENT: [exports.drone],
  TYPE: "trap",
  SHAPE: 4,
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapTargetToGoal",
    "hangOutNearMaster",
  ],
  AI: { FARMER: true },
  INDEPENDENT: false,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, -10, 360, 0],
      TYPE: exports.cubedSaw1,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.cubedSaw1,
    },
    {
      POSITION: [21.5, 0, 0, 10, 360, 0],
      TYPE: exports.cubedSaw1,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.cubedSDturret,
    },
  ],
};
exports.cubedorbierdrone = {
  PARENT: [exports.drone],
  TYPE: "trap",
  SHAPE: 4,
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapTargetToGoal",
    "hangOutNearMaster",
  ],
  AI: { FARMER: true },
  INDEPENDENT: false,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, -10, 360, 0],
      TYPE: exports.cubedSaw1,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.cubedSaw1,
    },
    {
      POSITION: [21.5, 0, 0, 10, 360, 0],
      TYPE: exports.cubedSaw1,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.cubedSDturret,
    },
  ],
};
exports.cubedturretL_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Turret",
  SHAPE: 4,
  COLOR: 13,
  CONTROLLERS: [
    "canRepel",
    "onlyAcceptInArc",
    "mapAltToFire",
    "nearestDifferentMaster",
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [27, 0, 0, 0, 90, 0],
      TYPE: exports.cubedSaw1_2,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.single]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.single]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [5, 11, 1, 10, 0, 180, 0],
    },
    {
      POSITION: [2, 14, 1, 15, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory]),
        TYPE: exports.Cube_Sentinel_2,
        MAX_CHILDREN: 3,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 7.5, 0, 180, 0],
    },
    {
      POSITION: [18, 7, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.single]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [18, 7, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.single]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [19, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.single]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [21, 7, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.single]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.cubedSaw2_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Turret",
  MAX_CHILDREN: 6,
  SHAPE: 1,
  FACING_TYPE: "autospin",
  COLOR: 13,
  CONTROLLERS: ["onlyAcceptInArc", "mapAltToFire", "nearestDifferentMaster"],
  TURRETS: [
    {
      POSITION: [7, 30, 0, 0, 360, 0],
      TYPE: exports.cubedturretL_2,
    },
    {
      POSITION: [7, -30, 0, 0, 360, 0],
      TYPE: exports.cubedturretL_2,
    },
    {
      POSITION: [7, 0, 30, 0, 360, 0],
      TYPE: exports.cubedturretL_2,
    },
    {
      POSITION: [7, 0, -30, 0, 360, 0],
      TYPE: exports.cubedturretL_2,
    },
  ],
};

exports.ranarDiscipleForm = {
  PARENT: [exports.neutralRangedBoss, exports.rebel],
  NAME: "Ranar",
  TYPE: "neutralBoss",
  LABEL: "Disciple",
  ALLOW_PLATE: true,
  BODY: {
    DAMAGE: base.DAMAGE * 5,
    FOV: 3.25,
    HEALTH: 1000,
    PENETRATION: 5,
    REGEN: 0,
    RESIST: 1.5,
  },
  SPECIAL_EFFECT: "dieWall",
  FACING_TYPE: "looseToTarget",
  DANGER: 10,
  SIZE: 17.5,
  VALUE: 2000000,
  AI: { STRAFE: true },
  COLOR: 34,
  SKILL: skillSet({
    rld: 0.25, //reload
    dam: 0.8, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
};
exports.swarmDisciple = {
  PARENT: [exports.neutralRangedBoss, exports.swarmRebel],
  NAME: "Stark",
  TYPE: "neutralBoss",
  LABEL: "Disciple",
  BODY: {
    DAMAGE: base.DAMAGE * 5,
    SPEED: base.SPEED / 1.5,
    FOV: 3.25,
    HEALTH: 750,
    PENETRATION: 5,
    REGEN: 0,
    RESIST: 1,
  },
  FACING_TYPE: "looseToTarget",
  DANGER: 10,
  SIZE: 17.5,
  VALUE: 2000000,
  AI: { STRAFE: true },
  COLOR: 3,
  SKILL: skillSet({
    rld: 0.25, //reload
    dam: 0.6, //bullet damage
    pen: 0.7, //bullet penetration
    str: 0.8, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
};
exports.mortarDisciple = {
  PARENT: [exports.neutralRangedBoss, exports.mortarRebel],
  NAME: "Klayton",
  TYPE: "neutralBoss",
  LABEL: "Disciple",
  BODY: {
    DAMAGE: base.DAMAGE * 5,
    SPEED: base.SPEED / 1.5,
    FOV: 3.25,
    HEALTH: 750,
    PENETRATION: 5,
    REGEN: 0,
    RESIST: 1,
  },
  FACING_TYPE: "looseToTarget",
  DANGER: 10,
  SIZE: 17.5,
  VALUE: 2000000,
  AI: { STRAFE: true },
  COLOR: 3,
  SKILL: skillSet({
    rld: 0.25, //reload
    dam: 0.8, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
};
exports.annihilatorDisciple = {
  PARENT: [exports.neutralRangedBoss, exports.annihilatorRebel],
  NAME: "Bret",
  TYPE: "neutralBoss",
  LABEL: "Disciple",
  BODY: {
    DAMAGE: base.DAMAGE * 5,
    SPEED: base.SPEED / 1.5,
    FOV: 3.25,
    HEALTH: 750,
    PENETRATION: 5,
    REGEN: 0,
    RESIST: 1,
  },
  FACING_TYPE: "looseToTarget",
  DANGER: 10,
  SIZE: 17.5,
  VALUE: 2000000,
  AI: { STRAFE: true },
  COLOR: 3,
  SKILL: skillSet({
    rld: 0.25, //reload
    dam: 0.8, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
};
let rainOfAcidFrontBarrels = () => ({
  SHOOT_SETTINGS: combineStats([
    g.basic,
    g.gunner,
    g.arty,
    g.nail,
    g.power,
    g.halfSpeed,
    g.lesserStats,
  ]),
  TYPE: exports.bullet,
});
let rainOfAcidSwarmBarrels = () => ({
  SHOOT_SETTINGS: combineStats([
    g.swarm,
    g.halfReload,
    g.lesserStats,
    g.doubleRange,
    g.doubleRecoil,
  ]),
  TYPE: [exports.uncontrolledSwarmDrone],
  // STAT_CALCULATOR: gunCalcNames.swarm,
  // LABEL: "Autonomous"
});
exports.rainOfAcid = {
  PARENT: [exports.neutralRangedBoss, exports.ranarDiscipleForm],
  NAME: "Oxini Vrochí",
  LABEL: "Descendant",
  SPECIAL_EFFECT: "animatable",
  COLOR: 1,
  DANGER: 9,
  SIZE: 15,
  BODY: {
    HEALTH: 250,
    PENETRATION: 5,
    REGEN: 0,
  },
  TURRETS: [
    {
      POSITION: [14, 8, 1, 90, 190, 0],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [14, 8, -0.5, 270, 190, 0],
      TYPE: [exports.mega3Turret],
    },
  ],
  GUNS: [
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 240, 7 / 9], //7
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 120, 8 / 9],
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 210, 3 / 9], //3
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 150, 4 / 9], //4
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 180, 0], //0
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 195, 1 / 9], //1
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 135, 6 / 9], //6
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 225, 5 / 9], //5
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 165, 2 / 9], //2
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [17, 3, 1, 0, -6, -7, 0.2],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      POSITION: [17, 3, 1, 0, -3, -3.5, 0.6],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      POSITION: [17, 3, 1, 0, 6, 7, 0.4],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      POSITION: [17, 3, 1, 0, 3, 3.5, 0.8],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      POSITION: [17, 3, 1, 0, 0, 0, 0],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      POSITION: [13, 18.5, 1, 0, 0, 0, 0],
    },
  ],
};
exports.kristaps = {
  PARENT: [exports.smashdupe, exports.ranarDiscipleForm],
  NAME: "Kristaps",
  TYPE: "neutralBoss",
  LABEL: "Descendant",
  SPECIAL_EFFECT: "animatable",
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  BODY: {
    HEALTH: 300,
    PENETRATION: 5,
    REGEN: 0,
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED * 1,
    SHIELD: base.SHIELD * 1.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  ORBIT_DISTANCE: 80,
  DANGER: 9,
  SIZE: 15,
  VALUE: 1000000,
  COLOR: 33,
  GUNS: [],
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 1.25,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 120, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 1.25,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 240, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 1.25,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.oldAutoSmasherTurret,
    },
    {
      POSITION: [8, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
  ],
  IS_SMASHER: true,

  STAT_NAMES: statnames.smasher,
};
exports.duodeci = {
  PARENT: [
    exports.neutralRangedBoss,
    exports.ranarDiscipleForm,
    exports.boosttrap,
  ],
  NAME: "Duodeci",
  TYPE: "neutralBoss",
  LABEL: "Descendant",
  SPECIAL_EFFECT: "animatable",
  BODY: {
    HEALTH: 250,
    PENETRATION: 5,
    REGEN: 0,
  },
  DANGER: 9,
  SIZE: 15,
  VALUE: 1000000,
  COLOR: 1,
};
exports.annoyingDog = {
  PARENT: [
    exports.neutralRangedBoss,
    exports.ranarDiscipleForm,
    exports.crackShot,
  ],
  NAME: "Annoying Dog",
  TYPE: "neutralBoss",
  LABEL: "Descendant",
  BODY: {
    HEALTH: 250,
    PENETRATION: 5,
    REGEN: 0,
  },
  DANGER: 9,
  SIZE: 15,
  VALUE: 1000000,
  COLOR: 1,
};
exports.icecream = {
  PARENT: [
    exports.neutralRangedBoss,
    exports.ranarDiscipleForm,
    exports.poptri,
  ],
  NAME: "Ice Cream",
  TYPE: "neutralBoss",
  LABEL: "Descendant",
  SPECIAL_EFFECT: "animatable",
  BODY: {
    HEALTH: 250,
    PENETRATION: 5,
    REGEN: 0,
  },
  DANGER: 9,
  SIZE: 15,
  VALUE: 1000000,
  COLOR: 1,
};
exports.possessor = {
  PARENT: [
    exports.neutralRangedBoss,
    exports.ranarDiscipleForm,
    exports.switch2,
  ],
  NAME: "Possessor",
  TYPE: "neutralBoss",
  LABEL: "Descendant",
  SPECIAL_EFFECT: "animatable",
  BODY: {
    HEALTH: 250,
    PENETRATION: 5,
    REGEN: 0,
  },
  DANGER: 9,
  SIZE: 15,
  VALUE: 1000000,
  COLOR: 33,
  TURRETS: [
    {
      POSITION: [11.5, 8, 0, 45, 100, 0],
      TYPE: exports.auto3Turret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.5, 8, 0, 135, 100, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11.5, 8, 0, 225, 100, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11.5, 8, 0, 315, 100, 0],
      TYPE: exports.auto3Turret,
    },
  ],
};
exports.semiauto = {
  PARENT: [
    exports.genericTank,
    exports.switch2,
  ],
  LABEL: "Semi-Auto",
  DANGER: 7,
  TURRETS: [
    {
      POSITION: [11.5, 8, 0, 45, 100, 0],
      TYPE: exports.auto3Turret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11.5, 8, 0, 135, 100, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11.5, 8, 0, 225, 100, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11.5, 8, 0, 315, 100, 0],
      TYPE: exports.auto3Turret,
    },
  ],
};
exports.xxtrianguli = {
  PARENT: [
    exports.neutralRangedBoss,
    exports.ranarDiscipleForm,
    exports.switch7,
  ],
  NAME: "XX Trianguli",
  TYPE: "neutralBoss",
  LABEL: "Descendant",
  SPECIAL_EFFECT: "animatable",
  BODY: {
    HEALTH: 250,
    REGEN: 0,
    PENETRATION: 5,
  },
  DANGER: 9,
  SIZE: 15,
  VALUE: 1000000,
  COLOR: 33,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.lesserAutoTurret],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 90, 270, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 270, 270, 0],
      TYPE: exports.auto3Turret,
    },
  ],
};
exports.chaser = {
  PARENT: [
    exports.neutralRangedBoss,
    exports.ranarDiscipleForm,
    exports.assort,
  ],
  NAME: "Chaser",
  TYPE: "neutralBoss",
  LABEL: "Descendant",
  SPECIAL_EFFECT: "animatable",
  BODY: {
    HEALTH: 250,
    REGEN: 0,
    PENETRATION: 5,
  },
  DANGER: 9,
  SIZE: 15,
  VALUE: 1000000,
  COLOR: 33,
};
exports.excaliber = {
  PARENT: [
    exports.neutralRangedBoss,
    exports.ranarDiscipleForm,
    exports.shrapshot,
  ],
  NAME: "Excaliber",
  TYPE: "neutralBoss",
  LABEL: "Descendant",
  BODY: {
    HEALTH: 250,
    REGEN: 0,
    PENETRATION: 5,
  },
  DANGER: 9,
  SIZE: 15,
  VALUE: 1000000,
  COLOR: 33,
};
exports.powernoob = {
  PARENT: [
    exports.neutralRangedBoss,
    exports.ranarDiscipleForm,
    exports.popsquare,
  ],
  NAME: "PowerNoob",
  TYPE: "neutralBoss",
  LABEL: "Descendant",
  SPECIAL_EFFECT: "animatable",
  BODY: {
    HEALTH: 500,
    PENETRATION: 5,
    REGEN: 0,
  },
  DANGER: 9,
  SIZE: 15,
  VALUE: 1000000,
  COLOR: 3,
};
exports.johnathon = {
  PARENT: [
    exports.neutralRangedBoss,
    exports.ranarDiscipleForm,
    exports.swarmshot,
  ],
  NAME: "Johnathon",
  TYPE: "neutralBoss",
  LABEL: "Descendant",
  SPECIAL_EFFECT: "animatable",
  BODY: {
    HEALTH: 250,
    PENETRATION: 5,
    REGEN: 0,
  },
  DANGER: 9,
  SIZE: 15,
  VALUE: 1000000,
  COLOR: 3,
};
exports.alexTheDemonical = {
  PARENT: [
    exports.neutralRangedBoss,
    exports.ranarDiscipleForm,
    exports.roadblock,
  ],
  NAME: "Alex, The Demonical",
  TYPE: "neutralBoss",
  LABEL: "Descendant",
  SPECIAL_EFFECT: "animatable",
  BODY: {
    HEALTH: 250,
    PENETRATION: 5,
    REGEN: 0,
  },
  DANGER: 9,
  SIZE: 15,
  VALUE: 1000000,
  COLOR: 3,
};
exports.pop64 = makeMulti(
  {
    PARENT: [
      exports.neutralRangedBoss,
      exports.ranarDiscipleForm,
      exports.switch6,
    ],
    NAME: "Pop64",
    TYPE: "neutralBoss",
    SPECIAL_EFFECT: "animatable",
    BODY: {
      HEALTH: 250,
      PENETRATION: 5,
      REGEN: 0,
    },
    DANGER: 9,
    SIZE: 15,
    VALUE: 1000000,
    COLOR: 3,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [9, 0, 0, 0, 360, 1],
        TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [6, 12, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone, g.over]),
          TYPE: exports.autoDrone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
        },
      },
    ],
  },
  3,
  "Descendant"
);
exports.ranarAscendantForm = {
  PARENT: [exports.ranarDiscipleForm],
  NAME: "Ranar",
  TYPE: "neutralBoss",
  LABEL: "Ascendant",
  BODY: {
    FOV: 3.25,
    HEALTH: 6000,
    REGEN: -1,
    SPEED: 1.5,
  },
  DANGER: 11,
  SIZE: 27.5,
  VALUE: 5000000,
  COLOR: 3,
  SKILL: skillSet({
    rld: 0.05, //reload
    dam: 0.7, //bullet damage
    pen: 0.7, //bullet penetration
    str: 0.7, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [20.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody2,
    },
  ],
  GUNS: [
    {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                ]),
                TYPE: exports.ascendantCollident,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 8.5, 0.6, 2, 6, 25, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound, g.halfSpeed]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [10, 8.5, 0.6, 2, -6, -25, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound, g.halfSpeed]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 8.5, 0.6, 5, 6, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee]),
        TYPE: exports.uncontrolledBeeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [10, 8.5, 0.6, 5, -6, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee]),
        TYPE: exports.uncontrolledBeeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 14.55, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.doubleRange,
          g.superHealth,
          g.doubleHealth,
        ]),
        TYPE: exports.bullet,
      },
    },

    {
      POSITION: [20, 9, 1, 0, -4, 152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.flank,
          g.tri,
          g.destroy,
          g.thruster,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 9, 1, 0, 4, -152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.flank,
          g.tri,
          g.destroy,
          g.thruster,
        ]),

        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.nex = {
  PARENT: [exports.smashdupe, exports.kristaps],
  NAME: "Nex",
  TYPE: "neutralBoss",
  LABEL: "Descendant",
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  BODY: {
    HEALTH: 300,
    PENETRATION: 5,
    REGEN: 0,
    ACCELERATION: base.ACCEL + 0.15,
    SPEED: base.SPEED * 1,
    SHIELD: base.SHIELD * 1.1,
    DENSITY: base.DENSITY + 0.25,
    PUSHABILITY: 3,
  },
  ORBIT_DISTANCE: 80,
  DANGER: 9,
  SIZE: 15,
  VALUE: 750000,
  COLOR: 33,
  GUNS: [],
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 180, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [10, 0, 55, 0, 360, 1],
      TYPE: exports.weakAutoSmasherTurret,
    },
    {
      POSITION: [10, 0, -55, 0, 360, 1],
      TYPE: exports.weakAutoSmasherTurret,
    },
  ],
  IS_SMASHER: true,

  STAT_NAMES: statnames.smasher,
};
exports.annoyingDogAscendant = {
  PARENT: [exports.annoyingDog],
  NAME: "Annoying Dog",
  LABEL: "Ascendant",
  FACING_TYPE: "autospin",
  TYPE: "neutralBoss",
  BODY: {
    HEALTH: 5000,
    PENETRATION: 10,
    REGEN: 0,
  },
  DANGER: 9,
  SIZE: 45,
  VALUE: 4500000,
  COLOR: 1,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: exports.crackShotTurret,
    },
    {
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.crackShotTurret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.crackShotTurret,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.crackShotTurret,
    },
  ],
  GUNS: [],
};
exports.johnathonAscendant = {
  PARENT: [exports.johnathon],
  NAME: "Johnathon",
  TYPE: "neutralBoss",
  LABEL: "Ascendant",
  BODY: {
    HEALTH: 4000,
    PENETRATION: 5,
    REGEN: 0,
  },
  DANGER: 9,
  SIZE: 25,
  VALUE: 4000000,
  COLOR: 3,
  GUNS: [
    ...ripperGun,
    ...ripperGun,
    ...ripperGun,
    {
      POSITION: [12, 8, -2, 11, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.shotgun,
          g.halfStats,
          g.halfReload,
          g.halfReload,
        ]),
        TYPE: [exports.uncontrolledSwarmDrone, { BODY: { RANGE: 0 } }],
      },
    },
    {
      POSITION: [8, 15, -1.3, 4, 0, 0, 0],
    },
    {
      POSITION: [1, 11, 1, 19, 0, 0, 0],
    },
    {
      POSITION: [1, 13, 1, 16, 0, 0, 0],
    },
    {
      POSITION: [1, 15, 1, 13, 0, 0, 0],
    },
  ],
};
exports.possessorAscendant = makeMulti(
  {
    PARENT: [exports.possessor],
    NAME: "Possessor",
    TYPE: "neutralBoss",
    BODY: {
      HEALTH: 150,
      PENETRATION: 5,
      REGEN: 0,
    },
    DANGER: 9,
    SIZE: 25,
    VALUE: 4000000,
    COLOR: 33,
    TURRETS: [
      {
        POSITION: [24, 0, 0, 0, 360, 0],
        TYPE: exports.smasherBody,
      },
      {
        POSITION: [17, 0, 0, 0, 360, 1],
        TYPE: exports.smasherBody,
      },
      {
        POSITION: [11.5, 8, 0, 45, 190, 0],
        TYPE: exports.autoSmasherTurret,
      },
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [11.5, 8, 0, 135, 190, 0],
        TYPE: exports.autoSmasherTurret,
      },
      {
        POSITION: [11.5, 8, 0, 225, 190, 0],
        TYPE: exports.autoSmasherTurret,
      },
      {
        POSITION: [11.5, 8, 0, 315, 190, 0],
        TYPE: exports.autoSmasherTurret,
      },
      {
        POSITION: [11.5, 8, 0, 45, 190, 0],
        TYPE: exports.oldAutoSmasherTurret,
      },
      {
        POSITION: [11.5, 8, 0, 135, 190, 0],
        TYPE: exports.oldAutoSmasherTurret,
      },
      {
        POSITION: [11.5, 8, 0, 225, 190, 0],
        TYPE: exports.oldAutoSmasherTurret,
      },
      {
        POSITION: [11.5, 8, 0, 315, 190, 0],
        TYPE: exports.oldAutoSmasherTurret,
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [18.5, 10, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  4,
  "Ascendant"
);
exports.duodeciAscendant = {
  PARENT: [exports.duodeci],
  NAME: "Duodeci",
  TYPE: "neutralBoss",
  LABEL: "Ascendant",
  BODY: {
    HEALTH: 1500,
    PENETRATION: 5,
    REGEN: 0,
  },
  DANGER: 9,
  SIZE: 25,
  VALUE: 4000000,
  COLOR: 1,
  TURRETS: [
    {
      POSITION: [24, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
  ],
  GUNS: [
    ...pounderGun,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 7, 1, 0, 5, 10, 0],
    },
    {
      POSITION: [3, 7, 1.7, 12, 5, 10, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [12, 7, 1, 0, -5, -10, 0],
    },
    {
      POSITION: [3, 7, 1.7, 12, -5, -10, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [1, 12, 1.2, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.setBlock,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 7, 1, 0, 0, 90, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 7, 1, 0, 0, 270, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 270, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [13, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    ...triangleThrusterGuns,
    ...trapGuardGun,
  ],
};
exports.icecreamAscendant = makeMulti(
  {
    PARENT: [exports.icecream],
    NAME: "Ice Cream",
    TYPE: "neutralBoss",
    BODY: {
      HEALTH: 1000,
      PENETRATION: 5,
      REGEN: 0,
    },
    DANGER: 9,
    SIZE: 25,
    VALUE: 4000000,
    COLOR: 1,
    TURRETS: [
      {
        POSITION: [15, 0, 0, 0, 0, 1],
        TYPE: exports.triangleSaw1,
      },
      {
        POSITION: [15, 0, 0, 180, 0, 0],
        TYPE: exports.triangleSaw1,
      },
    ],
    GUNS: [
      {
        POSITION: [18, 6, 1.5, 0, 0, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.superReload,
            g.greaterReload,
          ]),
          TYPE: exports.uncontrolledSwarmDrone,
        },
      },
      {
        POSITION: [15, 6, 1.5, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.superReload,
            g.greaterReload,
          ]),
          TYPE: exports.uncontrolledSwarmDrone,
        },
      },
      {
        POSITION: [2, 15, 1, 7, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.factory, g.pound, g.destroy]),
          TYPE: exports.minion,
          MAX_CHILDREN: 1,
        },
      },
      {
        POSITION: [10, 8, 1, 0, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.factory]),
          TYPE: exports.minion,
          MAX_CHILDREN: 2,
        },
      },
    ],
  },
  3,
  "Ascendant"
);
exports.powernoobAscendant = makeMulti(
  {
    PARENT: [exports.powernoob],
    NAME: "PowerNoob",
    TYPE: "neutralBoss",
    LABEL: "Ascendant",
    BODY: {
      HEALTH: 3500,
      PENETRATION: 5,
      REGEN: 0,
    },
    DANGER: 9,
    SIZE: 30,
    VALUE: 1000000,
    COLOR: 3,
    GUNS: [
      {
        POSITION: [20, 11, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [18, 13, 1, 0, 0, 0, 0.2],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [16, 15, 1, 0, 0, 0, 0.4],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [14, 17, 1, 0, 0, 0, 0.6],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.anni]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  4,
  "Ascendant"
);
exports.kristapsAscendant = {
  PARENT: [exports.kristaps],
  NAME: "Kristaps",
  TYPE: "neutralBoss",
  LABEL: "Ascendant",
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  BODY: {
    HEALTH: 6500,
    PENETRATION: 5,
    REGEN: 0,
    ACCELERATION: base.ACCEL + 0.45,
    SPEED: base.SPEED * 0.2,
    DAMAGE: base.DAMAGE * 0.2,
    SHIELD: base.SHIELD * 1.4,
    DENSITY: base.DENSITY + 0.95,
    PUSHABILITY: 3,
  },
  ORBIT_DISTANCE: 120,
  DANGER: 9,
  SIZE: 25,
  VALUE: 5000000,
  COLOR: 33,
  GUNS: [],
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      POSITION: [15, 0, 40, 180, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 40, -60, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 40, 60, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 180, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, -60, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 60, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [20, 0, 55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 120, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 240, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [13, 0, 55, 120, 360, 1],
      TYPE: [exports.assaulterTurret],
    },
    {
      POSITION: [13, 0, 55, 60, 360, 1],
      TYPE: [exports.assaulterTurret],
    },
    {
      POSITION: [13, 0, 55, -60, 360, 1],
      TYPE: [exports.assaulterTurret],
    },
    {
      POSITION: [13, 0, 55, 180, 360, 1],
      TYPE: [exports.assaulterTurret],
    },
    {
      POSITION: [13, 0, 55, 0, 360, 1],
      TYPE: [exports.assaulterTurret],
    },
    {
      POSITION: [13, 0, 55, -120, 360, 1],
      TYPE: [exports.assaulterTurret],
    },
  ],
  IS_SMASHER: true,

  STAT_NAMES: statnames.smasher,
};
exports.JJhand2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  COLOR: 16,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [25, 10, 0, 6, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8, 15, 0, 29, 0, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.pound, g.missile]),
        TYPE: exports.missile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [3, 15, 1, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.missile]),
        TYPE: exports.autoMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      POSITION: [17, 0, 0, -50, 0, 1],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [17, 0, 0, 50, 0, 1],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [25, 0, 0, 0, 0, 0],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [25, 0, 0, 0, 30, 0],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [25, 0, 0, 0, -30, 0],
      TYPE: exports.mechanisthandsaw1,
    },
  ],
};
exports.JJhand1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  COLOR: 16,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 14, -0.5, 9, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.missile]),
        TYPE: exports.launcherMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [14, 14, -0.5, 9, 0, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.missile]),
        TYPE: exports.launcherMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [12, 14, -0.5, 9, 0, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.missile]),
        TYPE: exports.launcherMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [3, 15, 1, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.missile]),
        TYPE: exports.autoMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      POSITION: [17, 0, 0, -50, 0, 1],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [17, 0, 0, 50, 0, 1],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [25, 0, 0, 0, 0, 0],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [25, 0, 0, 0, 30, 0],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [25, 0, 0, 0, -30, 0],
      TYPE: exports.mechanisthandsaw1,
    },
  ],
};
exports.JJ = {
  PARENT: [exports.genericTank],
  NAME: "J.J.",
  LABEL: "Dreadful Mechanic",
  DANGER: 70,
  SHAPE: 6,
  COLOR: 32,
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 1,
    HEALTH: 10000,
  },
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 180, 1],
      TYPE: [exports.JJhand2, { COLOR: 13 }],
    },

    {
      POSITION: [17, 17, -17, -15, 180, 1],
      TYPE: [exports.JJhand1, { COLOR: 13 }],
    },
    {
      POSITION: [23, 0, 0, 30, 360, 0],
      TYPE: [exports.smasherBody2, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [15, 0, 0, 180, 360, 1],
      TYPE: [exports.smasherBody2, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [23, 0, 0, 30, 360, 0],
      TYPE: [exports.smasherBody, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [15, 0, 0, 180, 360, 1],
      TYPE: [exports.smasherBody, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [23, 0, 0, 30, 360, 0],
      TYPE: [exports.spikeBody, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [15, 0, 0, 180, 360, 1],
      TYPE: [exports.spikeBody, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [100, 0, 0, 30, 0, 0],
      TYPE: [exports.hexaSkimmerMechTurretRing],
    },
  ],
};
exports.JJAuraMissile = {
  PARENT: [exports.launcherMissile],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [

            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size90,
                  g.doubleSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
  ],
};
exports.JJMAH = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  COLOR: 16,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  GUNS: [...extraSideGuns, ...destroyerGun, ...hunterGuns, ...birdGuns],
};
exports.JJMMM = {
  PARENT: [exports.minion],
  LABEL: "Mechanical Mortar minion",
  DANGER: 7,
  TURRETS: [
  {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [

            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size200,
                  g.doubleSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 180, 1],
      TYPE: [exports.JJMAH, { COLOR: 16 }],
    },

    {
      POSITION: [17, 17, -17, -15, 180, 1],
      TYPE: [exports.JJMAH, { COLOR: 16 }],
    },
  ],
};
exports.JJhand2T1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  COLOR: 32,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [25, 10, 0, 6, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8, 15, 0, 29, 0, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.pound, g.missile]),
        TYPE: exports.missile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [3, 15, 1, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.missile]),
        TYPE: exports.autoMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      POSITION: [17, 0, 0, -50, 0, 1],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [17, 0, 0, 50, 0, 1],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [25, 0, 0, 0, 0, 0],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [25, 0, 0, 0, 30, 0],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [25, 0, 0, 0, -30, 0],
      TYPE: exports.mechanisthandsaw1,
    },
  ],
};
exports.JJhand1T1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  COLOR: 32,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 14, -0.5, 9, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.missile, g.greaterHealth]),
        TYPE: exports.JJAuraMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [14, 14, -0.5, 9, 0, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.missile, g.greaterHealth]),
        TYPE: exports.JJAuraMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [12, 14, -0.5, 9, 0, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.missile, g.greaterHealth]),
        TYPE: exports.JJAuraMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [3, 15, 1, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.missile]),
        TYPE: exports.autoMissile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      POSITION: [17, 0, 0, -50, 0, 1],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [17, 0, 0, 50, 0, 1],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [25, 0, 0, 0, 0, 0],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [25, 0, 0, 0, 30, 0],
      TYPE: exports.mechanisthandsaw1,
    },
    {
      POSITION: [25, 0, 0, 0, -30, 0],
      TYPE: exports.mechanisthandsaw1,
    },
  ],
};
exports.JJcolliders = {
  PARENT: [exports.smashdupe],
  NAME: "JJ's Colliders",
  TYPE: "neutralBoss",
  SHAPE: 1,
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  FACING_TYPE: "autospin",
  TURRETS: [
  {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 120, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
  {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, -120, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
  {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 180, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, -60, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 60, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [10, 0, 55, 0, 360, 1],
      TYPE: exports.autoWarkTurret,
    },
    {
      POSITION: [10, 0, 55, 60, 360, 1],
      TYPE: exports.autoWarkTurret,
    },
    {
      POSITION: [10, 0, 55, -60, 360, 1],
      TYPE: exports.autoWarkTurret,
    },
    {
      POSITION: [10, 0, 55, 120, 360, 1],
      TYPE: exports.autoWarkTurret,
    },
    {
      POSITION: [10, 0, 55, -120, 360, 1],
      TYPE: exports.weakAutoSmasherTurret,
    },
    {
      POSITION: [10, 0, -55, 180, 360, 1],
      TYPE: exports.weakAutoSmasherTurret,
    },
  ],
  IS_SMASHER: true,
  STAT_NAMES: statnames.smasher,
};
exports.JJT1 = {
  PARENT: [exports.genericTank],
  NAME: "J.J.",
  LABEL: "The Embodiment of Honor",
  DANGER: 170,
  SHAPE: 6,
  COLOR: 32,
  STAT_NAMES: statnames.generic,
  BODY: {
    SPEED: base.SPEED * 1.1,
    HEALTH: 100000,
  },
  GUNS: [
  {
      POSITION: [1.4, 15, 1, 14.8, 0, 180, 1.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.spawner,
          g.superStats,
          g.superReload,
          g.superReload,
          g.greaterSize,
          g.doubleSize,
          g.halfSpeed,
        ]),
        TYPE: exports.JJMMM,
        STAT_CALCULATOR: gunCalcNames.drone,
        LABEL: "Ultra",
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 1,
        INDEPENDENT: true,
      },
    },
    {
      POSITION: [15.2, 4, 1, 0, 0, 180, 1.5],
    },
    {
      POSITION: [15.2, 4, 1, 0, 0, 144, 1.5],
    },
    {
      POSITION: [15.2, 4, 1, 0, 0, -144, 1.5],
    },
    
    {
      POSITION: [12.2, 5, 1, 0, 0, 180, 1.5],
    },
    {
      POSITION: [12.2, 5, 1, 0, 0, 144, 1.5],
    },
    {
      POSITION: [12.2, 5, 1, 0, 0, -144, 1.5],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 144, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.doubleSize, g.superReload, g.superReload]),
        TYPE: exports.JJMMM,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 216, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.doubleSize, g.superReload, g.superReload]),
        TYPE: exports.JJMMM,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
        SYNCS_SKILLS: true,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [

            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.doubleSize,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.healAuraSpawner,
        {
          GUNS: [

            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size500,
                  g.doubleSize,
                ]),
                TYPE: [exports.healAura, { COLOR: 12 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.repairAuraSpawner,
        {
          GUNS: [

            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size1000,
                  g.doubleSize,
                ]),
                TYPE: [exports.repairAura, { COLOR: 7 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 180, 1],
      TYPE: [exports.JJhand2T1, { COLOR: 13 }],
    },
    {
      POSITION: [17, 17, -17, -15, 180, 1],
      TYPE: [exports.JJhand1T1, { COLOR: 13 }],
    },
    {
      POSITION: [23, 0, 0, 30, 360, 0],
      TYPE: [exports.smasherBody2, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [24, 0, 0, 30, 360, 0],
      TYPE: [exports.spikeBody, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [24, 0, 0, 30, 360, 0],
      TYPE: [exports.spikeBody2, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [15, 0, 0, 180, 360, 1],
      TYPE: [exports.smasherBody2, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [23, 0, 0, 30, 360, 0],
      TYPE: [exports.smasherBody, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [15, 0, 0, 180, 360, 1],
      TYPE: [exports.smasherBody, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [23, 0, 0, 30, 360, 0],
      TYPE: [exports.spikeBody, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [15, 0, 0, 180, 360, 1],
      TYPE: [exports.spikeBody, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [100, 0, 0, 30, 0, 0],
      TYPE: [exports.hexaSkimmerMechTurretRing],
    },
    {
      POSITION: [130, 0, 0, 0, 0, 0],
      TYPE: [exports.hexaSkimmerMechTurretRing],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [20, 0, 0, 15, 180, 1],
      TYPE: [exports.JJcolliders, { COLOR: 13 }],
    },
  ],
};
exports.basicT1 = {
  PARENT: [exports.genericTank],
  LABEL: "Basic Type-1",
  GUNS: [
    {
  POSITION: [16, 9, 1, 0, 0, 0, 0],
    },
    {
  POSITION: [18, 8, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic]),
    TYPE: exports.autoBullet,
    LABEL: "", // def
    STAT_CALCULATOR: 0, // def
    WAIT_TO_CYCLE: false, // defd
    AUTOFIRE: false, // def
    SYNCS_SKILLS: false, // def
    MAX_CHILDREN: 0, // def
    ALT_FIRE: false, // def
    NEGATIVE_RECOIL: false, // def
  },
},
],
};
exports.twinT1 = {
  PARENT: [exports.genericTank],
  LABEL: "Twin Type-1",
  GUNS: [
    {
  POSITION: [16, 9, 1, 0, -5, 0, 0],
    },
    {
  POSITION: [18, 8, 1, 0, -5, 0, 0.5],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
    TYPE: exports.autoBullet,
  },
},
    {
  POSITION: [16, 9, 1, 0, 5, 0, 0],
    },
    {
  POSITION: [18, 8, 1, 0, 5, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
    TYPE: exports.autoBullet,
  },
},
],
};
exports.twinT2 = {
  PARENT: [exports.genericTank],
  LABEL: "Twin Type-2",
  GUNS: [
    {
  POSITION: [19, 7, 1, 0, -5, 0, 0],
    },
    {
  POSITION: [18, 8, 1, 0, -5, 0, 0.5],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
    TYPE: exports.autoMissile,
  },
},
{
  POSITION: [19, 7, 1, 0, 5, 0, 0],
    },
    {
  POSITION: [18, 8, 1, 0, 5, 0, 0.5],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
    TYPE: exports.autoMissile,
  },
},
],
TURRETS: [
    {
      POSITION: [10, 0, 0, 180, 360, 1],
      TYPE: [exports.autoTurret, { INDEPENDENT: true, COLOR: 13 }],
    },
  ],
};
exports.FlankT1 = {
  PARENT: [exports.genericTank],
  LABEL: "Flank-Twin Type-1",
  GUNS: [
    {
  POSITION: [16, 9, 1, 0, -5, 0, 0],
    },
    {
  POSITION: [18, 8, 1, 0, -5, 0, 0.5],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
    TYPE: exports.autoBullet,
  },
},
    {
  POSITION: [16, 9, 1, 0, 5, 0, 0],
    },
    {
  POSITION: [18, 8, 1, 0, 5, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
    TYPE: exports.autoBullet,
  },
},
    
    {
  POSITION: [16, 9, 1, 0, -5, 180, 0],
    },
    {
  POSITION: [18, 8, 1, 0, -5, 180, 0.5],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
    TYPE: exports.autoBullet,
  },
},
    {
  POSITION: [16, 9, 1, 0, 5, 180, 0],
    },
    {
  POSITION: [18, 8, 1, 0, 5, 180, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.twin]),
    TYPE: exports.autoBullet,
  },
},
],
};
exports.Mechwark = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Bulwark Type-1",
  BODY: {
    DAMAGE: base.DAMAGE * 1.1,
    ACCEL: base.ACCEL * 0.8,
  },
  GUNS: [
   {
    POSITION: [20, 7, 1, 0, 5.5, 0, 0.5],
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 9, 1, 0, 5.5, 0, 0.5],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
      TYPE: exports.launcherMissile,
    },
  },
    {
    POSITION: [20, 7, 1, 0, -5.5, 0, 0.5],
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 9, 1, 0, -5.5, 0, 0.5],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
      TYPE: exports.launcherMissile,
    },
  },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, -5.5, 175, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 7, 1, 0, -5.5, 175, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, -5.5, 175, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.mechtrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 5.5, -175, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 7, 1, 0, 5.5, -175, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 5.5, -175, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.mechtrap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.Mechwark2 = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Bulwark Type-2",
  BODY: {
    DAMAGE: base.DAMAGE * 1.1,
    ACCEL: base.ACCEL * 0.8,
    HEALTH: base.HEALTH * 1.5,
  },
  GUNS: [
   {
    POSITION: [21, 7, 1.2, 0, 5.5, 0, 0.5],
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 9, 1, 0, 5.5, 0, 0.5],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile, g.greaterHealth]),
      TYPE: exports.missile,
    },
  },
    {
    POSITION: [21, 7, 1.2, 0, -5.5, 0, 0.5],//i think my JJ broke, he aint responding
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 9, 1, 0, -5.5, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile, g.greaterHealth]),
      TYPE: exports.missile,
    },
  },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 8, 1, 0, -5.5, 175, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 8, 1, 0, -5.5, 175, 0],
    },
    {
      POSITION: [3, 8, 1.7, 15, -5.5, 175, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.halfDamage]),
        TYPE: exports.bosspillbox,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 8, 1, 14, -5.5, 175, 0.5],
    },
    
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 8, 1, 0, 5.5, -175, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 8, 1, 0, 5.5, -175, 0],
    },
    {
      POSITION: [3, 8, 1.7, 15, 5.5, -175, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.halfDamage]),
        TYPE: exports.bosspillbox,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 8, 1, 14, 5.5, -175, 0],
    },
  ],
};
exports.Mechwark3 = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Bulwark Type-3",
  BODY: {
    DAMAGE: base.DAMAGE * 1.3,
    ACCEL: base.ACCEL * 0.8,
    HEALTH: base.HEALTH * 2,
  },
  GUNS: [
   {
    POSITION: [21, 7, 1.2, 0, 5.5, 0, 0.5],
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 9, 1, 0, 5.5, 0, 0.5],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile, g.mediumHealth, g.bitmoreSize]),
      TYPE: exports.sentinelMissile2,
    },
  },
    {
    POSITION: [21, 7, 1.2, 0, -5.5, 0, 0.5],//i think my JJ broke, he aint responding
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 9, 1, 0, -5.5, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile, g.mediumHealth, g.bitmoreSize]),
      TYPE: exports.sentinelMissile2,
    },
  },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 8, 1, 0, -5.5, 175, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 8, 1, 0, -5.5, 175, 0],
    },
    {
      POSITION: [3, 8, 1.7, 15, -5.5, 175, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.greaterSize, g.doubleReload,]),
        TYPE: exports.bosspillboxTwin,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 8, 1, 14, -5.5, 175, 0.5],
    },
    
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 8, 1, 0, 5.5, -175, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12.5, 8, 1, 0, 5.5, -175, 0],
    },
    {
      POSITION: [3, 8, 1.7, 15, 5.5, -175, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.greaterSize, g.doubleReload,]),
        TYPE: exports.bosspillboxTwin,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1, 8, 1, 14, 5.5, -175, 0],
    },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [7, 7.5, 0.6, 7, 5, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed,]),
      TYPE: exports.beeDrone,
      STAT_CALCULATOR: gunCalcNames.swarm,
    },
  },
  {
    POSITION: [7, 7.5, 0.6, 7, -5, 0, 0.5],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm, g.greaterSpeed,]),
      TYPE: exports.beeDrone,
      STAT_CALCULATOR: gunCalcNames.swarm,
    },
  },
    {
      POSITION: [18, 3.5, 1, 0, 0, 180, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.puregunner, g.greaterHealth, g.lesserReload]),
        TYPE: exports.bullet,
      },
    },
  ],
};
//Honored Tanks

//Honored Hand Presets
exports.T1HonoredHand = {
  PARENT: [exports.Honored],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1,],
      },
    ],
};
exports.T2HonoredHand = {
  PARENT: [exports.Honored],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1,],
      },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: [exports.mechanisthandsaw1,],
      },
    ],
};
exports.T3HonoredHand = {
  PARENT: [exports.Honored],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1,],
      },
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, -50, 0, 1],
      TYPE: [exports.mechanisthandsaw1,],
      },
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 50, 0, 1],
      TYPE: [exports.mechanisthandsaw1,],
      },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: [exports.mechanisthandsaw1,],
      },
    ],
};
//Basic
exports.OnsetminionHand = {
  PARENT: [exports.T1HonoredHand],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  GUNS: [...basicGun],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1,],
      },
    ],
};
exports.Onsetminion = {
  PARENT: [exports.minion],
  LABEL: "Onsetminion",
  DANGER: 7,
  TURRETS: [
  {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.OnsetminionHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.OnsetminionHand,],
    },
  ],
};

exports.OnsetHand = {
  PARENT: [exports.T1HonoredHand],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  GUNS: [...noviceGun],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1,],
      },
    ],
};
exports.Onset = {
  PARENT: [exports.Honored],
  LABEL: "Onset",
  DANGER: 7,
  TURRETS: [
  {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.OnsetHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.OnsetHand,],
    },
  ],
};
exports.QuakeHand = {
  PARENT: [exports.T1HonoredHand],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  GUNS: [
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [16, 12, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.greaterDamage, g.lesserRecoil, g.lesserRecoil]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [10, 8, -1.8, 6.5, 0, 0, 0],
  },
  ],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1,],
      },
    ],
};
exports.Quake = {
  PARENT: [exports.Honored],
  LABEL: "Quaker",
  DANGER: 7,
  TURRETS: [
  {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.QuakeHand,],
    },
    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.QuakeHand,],
    },
  ],
};
exports.RumbleHand = {
  PARENT: [exports.T2HonoredHand],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  GUNS: [
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 14, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.greaterDamage, g.lesserRecoil, g.lesserRecoil]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [10, 8, -1.8, 6.5, 0, 0, 0],
  },
  ],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1,],
      },
    ],
};
exports.Rumble = {
  PARENT: [exports.Honored],
  LABEL: "Rumble",
  DANGER: 7,
  TURRETS: [
  {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.RumbleHand,],
    },
    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.RumbleHand,],
    },
  ],
};
exports.repeaterHand = {
  PARENT: [exports.T1HonoredHand],
  GUNS: [
  //Back
  {
    POSITION: [15, 4, -1.8, 6.5, 0, 0, 0],
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [21, 8, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.stream, g.greaterDamage, g.lesserRecoil, g.lesserRecoil]),
      TYPE: exports.bullet,
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 8, 1, 0, 0, 0, 0.5],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.stream, g.greaterDamage, g.lesserRecoil, g.lesserRecoil]),
      TYPE: exports.bullet,
    },
  },
  //Front
  ],
};
exports.repeater = {
  PARENT: [exports.Honored],
  LABEL: "Repeater",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.repeaterHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.repeaterHand,],
    },
  ],
};

exports.DuoHand = {
  PARENT: [exports.T1HonoredHand],
  GUNS: [
  //Back
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 7, 1, 8, 5, 0, 0.5],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.greaterDamage]),
      TYPE: exports.bullet,
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 7, 1, 8, -5, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.greaterDamage]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [8, 4, -1.8, 6.5, 0, 0, 0],
  },
  //Front
  ],
};
exports.Duo = {
  PARENT: [exports.Honored],
  LABEL: "Duo",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.DuoHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.DuoHand,],
    },
  ],
};
exports.TrioHand = {
  PARENT: [exports.T3HonoredHand],
  GUNS: [
  //Back
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 7, 1, 8, 5, 0, 0.5],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.greaterDamage, g.lesserRecoil, g.lesserRecoil]),
      TYPE: exports.bullet,
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 7, 1, 8, -5, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.greaterDamage, g.lesserRecoil, g.lesserRecoil]),
      TYPE: exports.bullet,
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [18, 8, 1, 3, 0, 0, 2/3],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.greaterDamage, g.lesserRecoil, g.lesserRecoil]),
      TYPE: exports.bullet,
    },
  },
  //Front
  ],
};
exports.Trio = {
  PARENT: [exports.Honored],
  LABEL: "Trio",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.TrioHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.TrioHand,],
    },
  ],
};
exports.CounterHand = {
  PARENT: [exports.T3HonoredHand],
  GUNS: [
  //Back
  {
    POSITION: [15, 4, -1.8, 6.5, 0, 0, 0],
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [23, 8, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.stream, g.greaterDamage, g.lesserRecoil, g.lesserRecoil]),
      TYPE: exports.bullet,
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [20, 8, 1, 0, 0, 0, 1/3],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.stream, g.greaterDamage, g.lesserRecoil, g.lesserRecoil]),
      TYPE: exports.bullet,
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [17, 8, 1, 0, 0, 0, 2/3],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.stream, g.greaterDamage, g.lesserRecoil, g.lesserRecoil]),
      TYPE: exports.bullet,
    },
  },
  //Front
  ],
};
exports.Counter = {
  PARENT: [exports.Honored],
  LABEL: "Counter",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.CounterHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.CounterHand,],
    },
  ],
};
//Healer
exports.MedicalHand = {
  PARENT: [exports.T1HonoredHand],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [7, 8, -0.5, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.halfSpeed]),
        TYPE: exports.healerBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 8, 1, 0, 0, 0, 0],
    },
  ],
};
exports.medical = {
  PARENT: [exports.Honored],
  LABEL: "Curer",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.MedicalHand,],
    },
    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.MedicalHand,],
    },
  ],
};
//Trapper
exports.TentHand = {
  PARENT: [exports.T1HonoredHand],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.Tent = {
  PARENT: [exports.Honored],
  LABEL: "Tent",
  DANGER: 7,
  TURRETS: [
  {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2,],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.TentHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.TentHand,],
    },
  ],
};

exports.DamHand = {
  PARENT: [exports.T1HonoredHand],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.Dam = {
  PARENT: [exports.Honored],
  LABEL: "Dam",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: [exports.rotaHexatra,],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2,],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.DamHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.DamHand,],
    },
  ],
};
exports.palisade = {
  PARENT: [exports.Honored],
  LABEL: "palisade",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: [exports.rotaHexatra,],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2,],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.palisadeHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.palisadehand,],
    },
  ],
};
exports.DeviserHand = {
  PARENT: [exports.T3HonoredHand],
  GUNS: [...builderGun, ...pelletGuns],
};
exports.Deviser = {
  PARENT: [exports.Honored],
  LABEL: "Deviser",
  DANGER: 7,
  TURRETS: [
  {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2,],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.DeviserHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.DeviserHand,],
    },
  ],
};
exports.CaltropHand = {
  PARENT: [exports.T2HonoredHand],
  GUNS: [...builderGun],
};
exports.Caltrop = {
  PARENT: [exports.Honored],
  LABEL: "Caltrop",
  DANGER: 7,
  TURRETS: [
  {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2,],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.CaltropHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.CaltropHand,],
    },
  ],
};

exports.BarbedWireHand = {
  PARENT: [exports.T2HonoredHand],
  GUNS: [
  {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8, 18, 1, 10, 0, 0, 0],
    },
    {
      POSITION: [2, 18, 1.2, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.construct,
          g.greaterHealth,
        ]),
        TYPE: exports.setBlock,
      },
    },
  ],
};
exports.BarbedWire = {
  PARENT: [exports.Honored],
  LABEL: "Barbed Wire",
  DANGER: 7,
  TURRETS: [
  {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2,],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.BarbedWireHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.BarbedWireHand,],
    },
  ],
};
exports.PostHand = {
  PARENT: [exports.T2HonoredHand],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3, 7, 1.7, 12, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.Post = {
  PARENT: [exports.Honored],
  LABEL: "Post",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.PostHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.PostHand,],
    },
  ],
};
exports.citadelHand = {
  PARENT: [exports.T3HonoredHand],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 18, 0, 0, 2/3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 1/3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3, 7, 1.7, 12, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.greaterHealth]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.citadel = {
  PARENT: [exports.Honored],
  LABEL: "Citadel",
  DANGER: 7,
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [16, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.citadelHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.citadelHand,],
    },
  ],
};
//Director
exports.VeilHand = {
  PARENT: [exports.T1HonoredHand],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 3,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.Veil = {
  PARENT: [exports.Honored],
  LABEL: "Veil",
  DANGER: 7,
  TURRETS: [
  {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.VeilHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.VeilHand,],
    },
  ],
};

exports.CapsuleHand = {
  PARENT: [exports.T2HonoredHand],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 12, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.Capsule = {
  PARENT: [exports.Honored],
  LABEL: "Capsule",
  DANGER: 7,
  TURRETS: [
  {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.CapsuleHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.CapsuleHand,],
    },
  ],
};
exports.ContainmentHand = {
  PARENT: [exports.T2HonoredHand],
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory, g.greaterReload]),
        TYPE: exports.Onsetminion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
};
exports.Containment = {
  PARENT: [exports.Honored],
  LABEL: "Containment",
  DANGER: 7,
  TURRETS: [
  {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.ContainmentHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.ContainmentHand,],
    },
  ],
};
//Smasher
exports.GrinderHand = {
  PARENT: [exports.Honored],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  TURRETS: [
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1,],
      },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 10, 0, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterHealth,
                  g.greaterHealth,
                  g.greaterHealth,
                  g.superDamage,
                  g.superDamage,
                  g.superDamage,
                  g.superStats,
                  g.lesserStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 0.2,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
  ],
};
exports.Grinder = {
  PARENT: [exports.Honored],
  LABEL: "Grinder",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED * 1.2,
    HEALTH: base.HEALTH * 2.5,
    DAMAGE: base.DAMAGE * 2.1,
    PENETRATION: base.PENETRATION * 2,
    SHIELD: base.SHIELD * 2,
    REGEN: base.REGEN * 2,
    FOV: base.FOV * 1.75,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 1.5,
    HETERO: 3,
  },
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.GrinderHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.GrinderHand,],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [0, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.auroraHand = {
  PARENT: [exports.Honored],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  TURRETS: [
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1,],
      },
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: [exports.mechanisthandsaw1,],
      },
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 3, 0, 180, 0, 0],
      TYPE: [exports.mechanisthandsaw1,],
      },
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, -15, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1,],
      },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 10, 0, 0, 360, 1],
      TYPE: [
        exports.smashatmo,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterHealth,
                  g.greaterHealth,
                  g.greaterHealth,
                  g.superDamage,
                  g.superDamage,
                  g.superDamage,
                  g.superStats,
                  g.lesserStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 0.2,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
  ],
};
exports.aurora = {
  PARENT: [exports.Honored],
  LABEL: "Aurora",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED * 1.2,
    HEALTH: base.HEALTH * 2.5,
    DAMAGE: base.DAMAGE * 2.1,
    PENETRATION: base.PENETRATION * 2,
    SHIELD: base.SHIELD * 2,
    REGEN: base.REGEN * 2,
    FOV: base.FOV * 1.75,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 1.5,
    HETERO: 3,
  },
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.auroraHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.auroraHand,],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [0, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.OrbitHand = {
  PARENT: [exports.Honored],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  TURRETS: [
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1,],
      },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 10, 0, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterHealth,
                  g.greaterHealth,
                  g.greaterHealth,
                  g.superDamage,
                  g.superDamage,
                  g.superDamage,
                  g.superStats,
                  g.lesserStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 0.2,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
  ],
};
exports.Orbit = {
  PARENT: [exports.Honored],
  LABEL: "Orbit",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED * 1.2,
    HEALTH: base.HEALTH * 2.5,
    DAMAGE: base.DAMAGE * 2.1,
    PENETRATION: base.PENETRATION * 2,
    SHIELD: base.SHIELD * 2,
    REGEN: base.REGEN * 2,
    FOV: base.FOV * 1.75,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 1.5,
    HETERO: 3,
  },
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [19, 0, 0, 0, 360, 0],
      TYPE: [exports.smashdupe, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.OrbitHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.OrbitHand,],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [0, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.CometHand = {
PARENT: [exports.Honored],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  GUNS: [
    {
      POSITION: [13, 8, 1, 0, -1, 160, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, -160, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
  ],
  TURRETS: [
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1,],
      },
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: [exports.mechanisthandsaw1,],
      },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 10, 0, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterHealth,
                  g.greaterHealth,
                  g.greaterHealth,
                  g.superDamage,
                  g.superDamage,
                  g.superDamage,
                  g.superStats,
                  g.lesserStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 0.2,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
  ],
};
exports.Comet = {
  PARENT: [exports.Honored],
  LABEL: "Comet",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED * 1,
    HEALTH: base.HEALTH * 2.25,
    DAMAGE: base.DAMAGE * 2.25,
    PENETRATION: base.PENETRATION * 1.5,
    SHIELD: base.SHIELD * 2,
    REGEN: base.REGEN * 1.5,
    FOV: base.FOV * 1.75,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 1.5,
    HETERO: 3,
  },
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.CometHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.CometHand,],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [12, 12, 12, 12, 12, 12, 12, 12, 12, 12],
};
exports.interloperHand = {
  PARENT: [exports.Honored],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  TURRETS: [
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1],
      },
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: [exports.mechanisthandsaw1],
      },
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 10, 0, 0, 360, 1],
      TYPE: [
        exports.smasherBody2,
        ],
        },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 10, 0, 0, 360, 1],
      TYPE: [
        exports.smasherBody,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterHealth,
                  g.greaterHealth,
                  g.greaterHealth,
                  g.superDamage,
                  g.superDamage,
                  g.superDamage,
                  g.superStats,
                  g.lesserStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.landmineOrb,
                  {
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 0.2,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
  ],
};
exports.interloper = {
  PARENT: [exports.Honored],
  LABEL: "Interloper",
  INVISIBLE: [0.09, 0.03],
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 1.2,
    SPEED: base.SPEED * 1.4,
    HEALTH: base.HEALTH * 2,
    DAMAGE: base.DAMAGE * 2.1,
    PENETRATION: base.PENETRATION * 1.8,
    SHIELD: base.SHIELD * 2,
    REGEN: base.REGEN * 2.5,
    FOV: base.FOV * 2,
    DENSITY: base.DENSITY * 2.8,
    PUSHABILITY: 1.75,
    HETERO: 3,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 30, 360, 0],
      TYPE: exports.smasherBody2,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [17.5, 0, 0, 30, 360, 1],
      TYPE: exports.smasherBody2,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [17.5, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.interloperHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.interloperHand,],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [0, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.TurretedGrinderHand = {
  PARENT: [exports.Honored],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  TURRETS: [
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1],
      },
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: [exports.mechanisthandsaw1],
      },
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 10, 0, 0, 360, 1],
      TYPE: [
        exports.smasherBody,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterHealth,
                  g.greaterHealth,
                  g.greaterHealth,
                  g.superDamage,
                  g.superDamage,
                  g.superDamage,
                  g.superStats,
                  g.lesserStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 0.2,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7, 10, 0, 0, 360, 1],
      TYPE: [
        exports.autoSmasherOrbTurret,
      ],
    },
  ],
};
exports.TurretedGrinder = {
  PARENT: [exports.Honored],
  LABEL: "Turreted Grinder",
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED * 1.2,
    HEALTH: base.HEALTH * 2.5,
    DAMAGE: base.DAMAGE * 2.1,
    PENETRATION: base.PENETRATION * 2,
    SHIELD: base.SHIELD * 2,
    REGEN: base.REGEN * 2,
    FOV: base.FOV * 1.75,
    DENSITY: base.DENSITY * 3,
    PUSHABILITY: 1.5,
    HETERO: 3,
  },
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.TurretedGrinderHand,],
    },
    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.TurretedGrinderHand,],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [0, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.demolisherHand = {
  PARENT: [exports.Honored],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: false,
  TURRETS: [
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 10, 0, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        ],
      },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.mechanisthandsaw1,],
      },
      {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: [exports.mechanisthandsaw1,],
      },
    {
      POSITION: [18, 10, 0, 0, 360, 1],
      TYPE: exports.spikeBody,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 10, 0, 0, 360, 1],
      TYPE: [
        exports.spikeBody,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterHealth,
                  g.greaterHealth,
                  g.greaterHealth,
                  g.superDamage,
                  g.superDamage,
                  g.superDamage,
                  g.superStats,
                  g.lesserStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  g.greaterHealth,
                  g.superDamage,
                  g.superDamage,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.spikeOrb,
                  {
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 0.075,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
  ],
};
exports.demolisher = {
  PARENT: [exports.Honored],
  LABEL: "Demolisher",
  BODY: {
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED * 1.1,
    HEALTH: base.HEALTH * 3,
    DAMAGE: base.DAMAGE * 2.5,
    PENETRATION: base.PENETRATION * 2.2,
    SHIELD: base.SHIELD * 2.25,
    REGEN: base.REGEN * 2,
    FOV: base.FOV * 1.75,
    DENSITY: base.DENSITY * 3.5,
    PUSHABILITY: 1.25,
    HETERO: 3,
  },
  DANGER: 7,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody2, { COLOR: 16 }],
    },
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 220, 1],
      TYPE: [exports.demolisherHand,],
    },

    {
      POSITION: [17, 17, -17, -15, 220, 1],
      TYPE: [exports.demolisherHand,],
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [0, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
//End

//Nesters Bosses
exports.nestward = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.pentagonBoss],

    FACING_TYPE: "autospin",
    TURRETS: [
      {
        POSITION: [7.6, 9.5, 0, 72, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 144, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 216, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 288, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 360, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [9.3, 0, 0, 0, 360, 1],
        TYPE: [exports.nesterBarricadeTurret, { INDEPENDENT: true }],
      },
    ],
    GUNS: [
      {
        POSITION: [3, 7.5, 1, 8, 0, 35, 0],
      },
      {
        POSITION: [1.46, 7.2, 1.3, 11, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block]),
          TYPE: exports.unsetBlock,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  "Nest Warden"
);
exports.nestward = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.pentagonBoss],

    FACING_TYPE: "autospin",
    TURRETS: [
      {
        POSITION: [7.6, 9.5, 0, 72, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 144, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 216, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 288, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 360, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [9.3, 0, 0, 0, 360, 1],
        TYPE: [exports.nesterBarricadeTurret, { INDEPENDENT: true }],
      },
    ],
    GUNS: [
      {
        POSITION: [3, 7.5, 1, 8, 0, 35, 0],
      },
      {
        POSITION: [1.46, 7.2, 1.3, 11, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block]),
          TYPE: exports.unsetBlock,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  "Nest Warden"
);
exports.nestcorrupter = makeMulti(
  {
    PARENT: [exports.voidlordRangedBoss, exports.pentagonBoss],
    COLOR: 19,
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        POSITION: [7.6, 9.5, 0, 72, 110, 0],
        TYPE: [exports.voidTrapTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 144, 110, 0],
        TYPE: [exports.voidTrapTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 216, 110, 0],
        TYPE: [exports.voidTrapTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 288, 110, 0],
        TYPE: [exports.voidTrapTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 360, 110, 0],
        TYPE: [exports.voidTrapTurret],
      },
      {
        POSITION: [5.6, 6.5, 0, 72, 110, 1],
        TYPE: [exports.autoTurret],
      },
      {
        POSITION: [5.6, 6.5, 0, 144, 110, 1],
        TYPE: [exports.autoTurret],
      },
      {
        POSITION: [5.6, 6.5, 0, 216, 110, 1],
        TYPE: [exports.autoTurret],
      },
      {
        POSITION: [5.6, 6.5, 0, 288, 110, 1],
        TYPE: [exports.autoTurret],
      },
      {
        POSITION: [5.6, 6.5, 0, 360, 110, 1],
        TYPE: [exports.autoTurret],
      },
      {
        POSITION: [9.3, 0, 0, 0, 360, 1],
        TYPE: [exports.voidNesterMinigunTurret, { INDEPENDENT: true }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5, 7.5, 1, 8, 0, 35, 0],
      },
      {
        POSITION: [1.46, 7.2, 1.2, 13, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block]),
          TYPE: exports.unsetBlock,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [7.46, 1.6, 1.2, 6, 0, 15, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [8.46, 1.6, 1.2, 6, 0, 25, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [7.46, 1.6, 1.2, 6, 0, -15, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [8.46, 1.6, 1.2, 6, 0, -25, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  5,
  "Nest Corrupter"
);
exports.nestguard = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.pentagonBoss],
    FACING_TYPE: "autospin",
    VALUE: 750000,
    TURRETS: [
      {//GUARDIAN
        POSITION: [7.6, 9.5, 0, 72, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 144, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 216, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 288, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 360, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },

      {
        POSITION: [9.3, 0, 0, 0, 360, 1],
        TYPE: [exports.nesterTwisterTurret],
      },
    ],
    GUNS: [
      {//GUARDIAN
        POSITION: [11.5, 7, 1, 0, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.pound,
            g.destroy,
            g.anni,
            g.superHealth,
          ]),
          TYPE: exports.bullet,
          LABEL: "Devastator",
        },
      },
    ],
  },
  5,
  "Nest Guardian"
);
exports.nestkeep = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.pentagonBoss],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 72, 110, 0],
        TYPE: [exports.nesterPelleterTurret],
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 144, 110, 0],
        TYPE: [exports.nesterPelleterTurret],
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 216, 110, 0],
        TYPE: [exports.nesterPelleterTurret],
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 288, 110, 0],
        TYPE: [exports.nesterPelleterTurret],
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 360, 110, 0],
        TYPE: [exports.nesterPelleterTurret],
      },

      {
        POSITION: [9.3, 0, 0, 0, 360, 1],
        TYPE: [exports.nesterBoomerTurret],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.75, 6.5, 1.4, 8, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.halfDamage,
            g.superReload,
            g.halfSize,
          ]),
          TYPE: exports.sterileTriangleChip,
          AUTOFIRE: true,
          MAX_CHILDREN: 2,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  "Nest Keeper"
);
//Custom Nesters
exports.primordialnester = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.pentagonBoss],
    FACING_TYPE: "autospin",
    SIZE: 60,
    BODY: {
      DAMAGE: base.DAMAGE * 0.5,
      HEALTH: 400,
      RELOAD: base.RELOAD * 0.5,
    },
    TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7.6, 9.5, 0, 72, 360, 0],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0.1],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.halfDamage,
                  g.size500,
                  g.doubleSize,
                ]),
                TYPE: [exports.PentaAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7.6, 9.5, 0, 144, 360, 0],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0.2],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.halfDamage,
                  g.size500,
                  g.doubleSize,
                ]),
                TYPE: [exports.PentaAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7.6, 9.5, 0, 360, 360, 0],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0.5],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.halfDamage,
                  g.size500,
                  g.doubleSize,
                ]),
                TYPE: [exports.PentaAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7.6, 9.5, 0, 288, 360, 0],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0.4],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.halfDamage,
                  g.size500,
                  g.doubleSize,
                ]),
                TYPE: [exports.PentaAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [7.6, 9.5, 0, 216, 360, 0],
      TYPE: [
        exports.damageAuraSpawner,
        {
          GUNS: [
            {/*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 20, 1, 0, 0, 0, 0.3],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.halfDamage,
                  g.size500,
                  g.doubleSize,
                ]),
                TYPE: [exports.PentaAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
      {
        POSITION: [9.3, 0, 0, 0, 360, 1],
        TYPE: [exports.nesterBoomerTurret],
      },

      {
        POSITION: [9.3, 0, 0, 0, 360, 1],
        TYPE: [exports.nesterBarricadeTurret, { INDEPENDENT: true }],
      },
      {//GUARDIAN
        POSITION: [7.6, 9.5, 0, 72, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 144, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 216, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 288, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 360, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      //WARDEN
      {
        POSITION: [7.6, 9.5, 0, 72, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 144, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 216, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 288, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 360, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {//KEEPER
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 72, 110, 0],
        TYPE: [exports.nesterPelleterTurret],
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 144, 110, 0],
        TYPE: [exports.nesterPelleterTurret],
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 216, 110, 0],
        TYPE: [exports.nesterPelleterTurret],
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 288, 110, 0],
        TYPE: [exports.nesterPelleterTurret],
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 360, 110, 0],
        TYPE: [exports.nesterPelleterTurret],
      },
      {
        POSITION: [9.3, 0, 0, 0, 360, 1],
        TYPE: [exports.hypernesterTwisterTurret],
      }, 
    ],
    GUNS: [
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      {//WARRDEN
        POSITION: [3, 7.5, 1, 8, 0, 35, 0],
      },
      {
        POSITION: [1.46, 7.2, 1.3, 11, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block, g.doubleReload, g.doubleReload, g.doubleHealth,]),
          TYPE: exports.bosspillboxTwin,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {//KEEPER
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.75, 6.5, 1.4, 8, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.halfDamage,
            g.superReload,
            g.halfSize,
          ]),
          TYPE: exports.sterileTriangleChip,
          AUTOFIRE: true,
          MAX_CHILDREN: 2,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {//GUARDIAN
        POSITION: [11.5, 7, 1, 0, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.pound,
            g.destroy,
            g.anni,
            g.superHealth,
          ]),
          TYPE: exports.bullet,
          LABEL: "Devastator",
        },
      },
    ],
  },
  5,
  "Primordial Nester"
);
exports.legmininestwardminion = makeMulti(
  {
    PARENT: [exports.minion],
    COLOR: 0,
    SHAPE: 5,
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        POSITION: [7.6, 9.5, 0, 72, 110, 0],
        TYPE: [exports.miniNesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 144, 110, 0],
        TYPE: [exports.miniNesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 216, 110, 0],
        TYPE: [exports.miniNesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 288, 110, 0],
        TYPE: [exports.miniNesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 360, 110, 0],
        TYPE: [exports.miniNesterCruiserTurret],
      },

      {
        POSITION: [9.3, 0, 0, 0, 360, 1],
        TYPE: [exports.trapTurret, { INDEPENDENT: true }],
      },
    ],
    GUNS: [
      {
        POSITION: [3, 7.5, 1, 8, 0, 35, 0],
      },
      {
        POSITION: [1.46, 7.2, 1.3, 11, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.hexatrap]),
          TYPE: exports.trap,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  "Mini Nest Warden"
);
exports.legnestkeep = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.legpentagonBoss],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 72, 110, 0],
        TYPE: [exports.legnesterPelleterTurret],
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 144, 110, 0],
        TYPE: [exports.legnesterPelleterTurret],
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 216, 110, 0],
        TYPE: [exports.legnesterPelleterTurret],
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 288, 110, 0],
        TYPE: [exports.legnesterPelleterTurret],
      },
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [7, 9.5, 0, 360, 110, 0],
        TYPE: [exports.legnesterPelleterTurret],
      },
      {
        POSITION: [22, 0, 0, 0, 0, 0],
        TYPE: [exports.pentagonBody],
      },
      {
        POSITION: [15, 0, 0, 0, 0, 1],
        TYPE: [exports.pentagonBody],
      },
      {
        POSITION: [9.3, 0, 0, 0, 360, 1],
        TYPE: [exports.legNesterBoomerTurret],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [9, 4, 1, 5.5, 0, 35, 0],
      },
      {
        POSITION: [3.75, 6.5, 1.4, 8, 0, 35, 0],
      },
      {
        POSITION: [2, 8, 1, 13, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserStats,
            g.superReload,
            g.superReload,
          ]),
          TYPE: exports.legmininestwardminion,
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  "Legendary Nest Keeper"
);
exports.nestOracle = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.pentagonBoss],
    VALUE: 2500000,
    BODY: {
      FOV: 1.3,
      SPEED: 0.4,
      HEALTH: 1200,
      SHIELD: base.SHIELD * 1.5,
      REGEN: 0.001,
    },
    FACING_TYPE: "autospin",
    SIZE: 60,
    TURRETS: [
      {
        POSITION: [7.6, 9.5, 0, 72, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 144, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 216, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 288, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      {
        POSITION: [7.6, 9.5, 0, 360, 110, 0],
        TYPE: [exports.nesterCruiserTurret],
      },
      //
      {
        POSITION: [8.3, 9.5, 0, 72, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [8.3, 9.5, 0, 144, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [8.3, 9.5, 0, 216, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [8.3, 9.5, 0, 288, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [8.3, 9.5, 0, 360, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      //
      {
        POSITION: [6.3, 6, 0, 72, 150, 1],
        TYPE: [exports.nesterBarricadeTurret, { INDEPENDENT: true }],
      },
      {
        POSITION: [6.3, 6, 0, 144, 150, 1],
        TYPE: [exports.nesterBarricadeTurret, { INDEPENDENT: true }],
      },
      {
        POSITION: [6.3, 6, 0, 216, 150, 1],
        TYPE: [exports.nesterBarricadeTurret, { INDEPENDENT: true }],
      },
      {
        POSITION: [6.3, 6, 0, 288, 150, 1],
        TYPE: [exports.nesterBarricadeTurret, { INDEPENDENT: true }],
      },
      {
        POSITION: [6.3, 6, 0, 360, 150, 1],
        TYPE: [exports.nesterBarricadeTurret, { INDEPENDENT: true }],
      },
      {
        POSITION: [8.3, 0, 0, 360, 150, 1],
        TYPE: [exports.nesterBarracBoomerTurret, { INDEPENDENT: true }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [9, 4, 1, 5.5, 0, 35, 0],
      },
      {
        POSITION: [3.75, 6.5, 1.4, 8, 0, 35, 0],
      },
      {
        POSITION: [2, 8, 1, 13, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserStats,
            g.superReload,
            g.superReload,
          ]),
          TYPE: exports.legmininestwardminion,
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        POSITION: [3, 7.5, 1, 8, 0, 35, 0],
      },
      {
        POSITION: [1.46, 7.2, 1.3, 11, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.flank, g.block]),
          TYPE: exports.bosspillboxTwin,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  "Nest Oracle"
);
//Polygon Classes
exports.eliteSwarmSentinel = {
  PARENT: [exports.genericTank],
  COLOR: 14,
  SIZE: 15,
  BODY: {
    FOV: 1.3,
    HEALTH: 200,
    SHIELD: base.SHIELD * 0.5,
  },
};
exports.omegaSwarmSentinel = {
  PARENT: [exports.genericTank],
  COLOR: 14,
  SIZE: 25,
  BODY: {
    FOV: 1.3,
    HEALTH: 1000,
    SHIELD: base.SHIELD * 0.75,
  },
};
exports.eliteSwarmKeeper = {
  PARENT: [exports.genericTank],
  COLOR: 18,
  SHAPE: 3,
  SIZE: 15,
  BODY: {
    FOV: 1,
    HEALTH: 500,
    SHIELD: base.SHIELD * 0.25,
  },
};
exports.omegaSwarmKeeper = {
  PARENT: [exports.genericTank],
  COLOR: 18,
  SHAPE: 3,
  SIZE: 25,
  BODY: {
    FOV: 1,
    HEALTH: 1200,
    SHIELD: base.SHIELD * 0.5,
  },
};
exports.swarmSentinel = {
  PARENT: [exports.genericTank],
  LABEL: "Swarm Sentinel",
  COLOR: 18,
  SHAPE: 5,
  SIZE: 5,
};
exports.swarmKeeper2 = {
  PARENT: [exports.genericTank],
  LABEL: "Swarm Keeper",
  COLOR: 2,
  SHAPE: 3,
  SIZE: 4,
};
exports.eliteAutoSwarmSentinel = {
  PARENT: [exports.eliteSwarmSentinel],
  LABEL: "Elite Auto Swarm Pentagon",
  FACING_TYPE: "autospin",
  CONTROLLERS: ["spin"],
  SHAPE: 5,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody,
    },
    {
      POSITION: [10, 8, 0, 180, 80, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [10, 8, 0, -105, 80, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [10, 8, 0, 105, 80, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [10, 8, 0, 35, 80, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [10, 8, 0, -35, 80, 0],
      TYPE: exports.auto3Turret,
    },
  ],
};
exports.elitePelleterSwarmSentinel = {
  PARENT: [exports.eliteSwarmSentinel],
  LABEL: "Elite Pelleter Swarm Sentinel",
  FACING_TYPE: "autospin",
  CONTROLLERS: ["spin"],
  COLOR: 9,
  INDEPENDENT: true,
  SHAPE: 5,
  TURRETS: [
    {
      POSITION: [8, 8, 0, 180, 80, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [8, 8, 0, -105, 80, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [8, 8, 0, 105, 80, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [8, 8, 0, 35, 80, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [8, 8, 0, -35, 80, 0],
      TYPE: exports.auto4Turret,
    },
  ],
};
exports.eliteTrapperSwarmSentinel = {
  PARENT: [exports.eliteSwarmSentinel],
  LABEL: "Elite Trapper Swarm Sentinel",
  SHAPE: 5,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.rifle,
    },
  ],
  GUNS: [
    {
      POSITION: [3, 6, 1.7, 14.7, 0, 35, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, 35, 0],
    },
    {
      POSITION: [3, 6, 1.7, 14.7, 0, -35, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, -35, 0],
    },
    {
      POSITION: [3, 6, 1.7, 14.7, 0, -105, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, -105, 0],
    },
    {
      POSITION: [3, 6, 1.7, 14.7, 0, 105, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, 105, 0],
    },
    {
      POSITION: [3, 6, 1.7, 14.7, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, 180, 0],
    },
  ],
};
exports.eliteGunnerSwarmSentinel = {
  PARENT: [exports.eliteSwarmSentinel],
  LABEL: "Elite Gunner Swarm Sentinel",
  SHAPE: 5,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 8, 0, 180, 120, 0],
      TYPE: exports.auto4Turret,
    },
  ],
  GUNS: [
    {
      POSITION: [12, 8, 1.6, 0, 0, 109, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [12, 8, 1.6, 0, 0, -109, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [16, 4, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 4, 1, 0, 6, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 4, 1, 0, -6, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.swarmSentinelSkimmerMissile = {
  PARENT: [exports.bullet],
  LABEL: "Missile",
  SHAPE: 5,
  INDEPENDENT: true,
  BODY: {
    DENSITY: 3,
    RANGE: 120,
  },
  TURRETS: [
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody2,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 6, 1, 0, 0, 110, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, 180, 0.5],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, -110, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.eliteSkimmerSwarmSentinel = {
  PARENT: [exports.eliteSwarmSentinel],
  LABEL: "Elite Skimmer Swarm Sentinel",
  SHAPE: 5,
  TURRETS: [
    {
      POSITION: [13, 8, 0, 110, 120, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [13, 8, 0, -110, 120, 0],
      TYPE: exports.auto4Turret,
    },
  ],
  GUNS: [
    {
      POSITION: [15, 15, 0, 0, 0, 0, 0.5],
    },
    {
      POSITION: [17, 15, 0.9, 0, 0, 0, 0.5],
    },
    {
      POSITION: [20, 15, 0.8, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.superHealth,
          g.missile,
        ]),
        TYPE: exports.swarmSentinelSkimmerMissile,
      },
    },
    {
      POSITION: [24, 8, 0, 0, 0, 0, 0.5],
    },
  ],
};
exports.omegaAutoSwarmSentinel = {
  PARENT: [exports.omegaSwarmSentinel],
  FACING_TYPE: "autospin",
  SIZE: 35,
  LABEL: "Omega Auto Swarm Pentagon",
  SHAPE: 5,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 180, 0, 1],
      TYPE: exports.eliteAutoSwarmSentinel,
    },
    {
      POSITION: [8, 0, 0, 0, 360, 1],
      TYPE: exports.oldAutoSmasherTurret,
    },
    {
      POSITION: [7, 8, 0, 180, 80, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [7, 8, 0, -105, 80, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [7, 8, 0, 105, 80, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [7, 8, 0, 35, 80, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [7, 8, 0, -35, 80, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody2,
    },
    {
      POSITION: [7, 8, -3, 180, 80, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [7, 8, -3, -105, 80, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [7, 8, -3, 105, 80, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [7, 8, -3, 35, 80, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [7, 8, -3, -35, 80, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [7, 8, 3, 180, 80, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [7, 8, 3, -105, 80, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [7, 8, 3, 105, 80, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [7, 8, 3, 35, 80, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [7, 8, 3, -35, 80, 0],
      TYPE: exports.auto4Turret,
    },
  ],
};
exports.omegaTrapperSwarmSentinel = {
  PARENT: [exports.omegaSwarmSentinel],
  LABEL: "Omega Trapper Swarm Pentagon",
  SHAPE: 5,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 1],
      TYPE: exports.pentagonBody,
    },
    {
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.crossbow,
    },
  ],
  GUNS: [
    {
      POSITION: [20, 6, 1, 0, 0, 35, 0],
    },
    {
      POSITION: [20, 6, 1, 0, 0, -35, 0],
    },
    {
      POSITION: [20, 6, 1, 0, 0, 105, 0],
    },
    {
      POSITION: [20, 6, 1, 0, 0, -105, 0],
    },
    {
      POSITION: [20, 6, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [3, 6, 1.7, 20, 0, 35, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [3, 6, 1.7, 15, 0, 35, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [3, 6, 1.7, 10, 0, 35, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [3, 6, 1.7, 20, 0, -35, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [3, 6, 1.7, 15, 0, -35, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [3, 6, 1.7, 10, 0, -35, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [3, 6, 1.7, 20, 0, -105, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [3, 6, 1.7, 15, 0, -105, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [3, 6, 1.7, 10, 0, -105, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [3, 6, 1.7, 20, 0, 105, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [3, 6, 1.7, 15, 0, 105, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [3, 6, 1.7, 10, 0, 105, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [3, 6, 1.7, 20, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [3, 6, 1.7, 15, 0, 180, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [3, 6, 1.7, 10, 0, 180, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
  ],
};
exports.omegaGunnerSwarmSentinel = {
  PARENT: [exports.omegaSwarmSentinel],
  LABEL: "Omega Gunner Swarm Sentinel",
  SHAPE: 5,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 8, 0, 180, 120, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [13, 8, 0, 180, 120, 0],
      TYPE: exports.oldAutoSmasherTurret,
    },
  ],
  GUNS: [
    {
      POSITION: [14, 6, 1, 0, 0, 109, 0],
    },
    {
      POSITION: [3, 13, 1, 14, 0, 109, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory]),
        TYPE: exports.pentagonsenti2,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [12, 10, 1, 0, 0, 109, 0],
    },
    {
      POSITION: [14, 6, 1, 0, 0, -109, 0],
    },
    {
      POSITION: [3, 13, 1, 14, 0, -109, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory]),
        TYPE: exports.pentagonsenti1,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [12, 10, 1, 0, 0, -109, 0],
    },
    {
      POSITION: [25, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 12, 1, 0, 0, 0, 1 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 12, 1, 0, 0, 0, 2 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 12, 1, 0, 0, 30, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 12, 1, 0, 0, 30, 2 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [9, 12, 1, 0, 0, 30, 4 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 12, 1, 0, 0, -30, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 12, 1, 0, 0, -30, 2 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [9, 12, 1, 0, 0, -30, 4 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 12, 1, 0, 0, 0, 3 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 12, 1, 0, 0, 0, 4 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [10, 12, 1, 0, 0, 0, 5 / 6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.mini, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.swarmSentinelMiniMissile = {
  PARENT: [exports.bullet],
  LABEL: "Missile",
  SHAPE: 5,
  INDEPENDENT: true,
  BODY: {
    DENSITY: 3,
    RANGE: 120,
  },
  TURRETS: [
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody2,
    },
  ],
  GUNS: [
    {
      POSITION: [14, 6, 1, 0, 0, 180, 0.5],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.swarmSentinelMissile = {
  PARENT: [exports.bullet],
  LABEL: "Missile",
  SHAPE: 5,
  INDEPENDENT: true,
  BODY: {
    DENSITY: 3,
    RANGE: 120,
  },
  TURRETS: [
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody2,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, 110, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, 180, 0.5],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, -110, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.omegaSkimmerSwarmSentinel = {
  PARENT: [exports.omegaSwarmSentinel],
  LABEL: "Omega Skimmer Swarm Sentinel",
  SHAPE: 5,
  TURRETS: [
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody2,
    },
    {
      POSITION: [13, 8, 0, 110, 120, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [13, 8, 0, -110, 120, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [8, 8, 0, 110, 120, 0],
      TYPE: exports.mega3Turret,
    },
    {
      POSITION: [8, 8, 0, -110, 120, 0],
      TYPE: exports.mega3Turret,
    },
  ],
  GUNS: [
    {
      POSITION: [17, 10, 0.9, 0, 0, -20, 0.5],
    },
    {
      POSITION: [17, 10, 0.9, 0, 0, 20, 0.5],
    },
    {
      POSITION: [20, 15, 0.8, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.superHealth,
          g.superHealth,
          g.missile,
        ]),
        TYPE: exports.swarmSentinelMissile,
      },
    },
    {
      POSITION: [16, 8, 0.8, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
        TYPE: exports.swarmSentinelMiniMissile,
      },
    },
    {
      POSITION: [16, 8, 0.8, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.missile]),
        TYPE: exports.swarmSentinelMiniMissile,
      },
    },
    {
      POSITION: [17, 10, 0.9, 0, 0, -20, 0.5],
    },
    {
      POSITION: [17, 10, 0.9, 0, 0, 20, 0.5],
    },
    {
      POSITION: [24, 8, 0, 0, 0, 0, 0.5],
    },
  ],
};
exports.eliteRammerSwarmKeeper = {
  PARENT: [exports.eliteSwarmKeeper],
  LABEL: "Elite Rammer Swarm Keeper",
  SHAPE: 3,
  SPEED: 4,
  IGNORE_COLLISION: true,
  COLOR: 2,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 0, 0, 0],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [22, 0, 0, 0, 180, 0, 0],
      TYPE: exports.triangleSaw3,
    },
    {
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [15, 0, 0, 180, 0, 1],
      TYPE: exports.triangleSaw2,
    },
  ],
};
exports.eliteBoosterSwarmKeeper = {
  PARENT: [exports.eliteSwarmKeeper],
  LABEL: "Elite Booster Swarm Triangle",
  SHAPE: 3,
  HEALTH: 450,
  SPEED: 4,
  IGNORE_COLLISION: true,
  COLOR: 2,
  GUNS: [
    {
      POSITION: [20, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.power]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.power]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [15, 8, 1, 0, -1, 155, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 1, -155, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [17, 8, 1, 0, -1, 135, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [17, 8, 1, 0, 1, -135, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 0, 0, 0],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: exports.triangleSaw1,
    },
  ],
};
exports.eliteOverseerSwarmKeeper = {
  PARENT: [exports.eliteSwarmKeeper],
  LABEL: "Elite Overseer Swarm Keeper",
  SHAPE: 3,
  HEALTH: 50,
  SPEED: 4,
  MAX_CHILDREN: 9,
  COLOR: 2,
  GUNS: [
    {
      POSITION: [12, 16, 1.3, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [12, 16, 1.3, 0, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [12, 16, 1.3, 0, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [14, 11, 1.3, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [14, 11, 1.3, 0, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [14, 11, 1.3, 0, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 0, 0, 0],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [15, 0, 0, 0, 360, 360, 1],
      TYPE: exports.oldAutoSmasherTurret,
    },
    {
      POSITION: [15, 0, 0, 0, 360, 360, 1],
      TYPE: exports.autoSmasherTurret,
    },
  ],
};
exports.omegaSwarmerSwarmKeeper = {
  PARENT: [exports.omegaSwarmKeeper],
  NAME: "Barlava",
  LABEL: "Omega Swarmer Swarm Keeper",
  SHAPE: 3,
  HEALTH: 50,
  SPEED: 4,
  SIZE: 30,
  COLOR: 2,
  GUNS: [
    {
      POSITION: [6.5, 10, 1.5, 5, -7, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        INDEPENDENT: true,
        TYPE: exports.swarmDrone,
        INDEPENDENT: true,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [6.5, 10, 1.5, 5, -7, 60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        INDEPENDENT: true,
        TYPE: exports.swarmDrone,
        INDEPENDENT: true,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [6.5, 10, 1.5, 5, -7, -60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        INDEPENDENT: true,
        TYPE: exports.swarmDrone,
        INDEPENDENT: true,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [6.5, 10, 1.5, 5, 7, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        INDEPENDENT: true,
        TYPE: exports.swarmDrone,
        INDEPENDENT: true,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [6.5, 10, 1.5, 5, 7, 60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        INDEPENDENT: true,
        TYPE: exports.swarmDrone,
        INDEPENDENT: true,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [6.5, 10, 1.5, 5, 7, -60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        INDEPENDENT: true,
        TYPE: exports.swarmDrone,
        INDEPENDENT: true,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [8, 8, 1.5, 5, -7, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        INDEPENDENT: true,
        TYPE: exports.swarmDrone,
        INDEPENDENT: true,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [8, 8, 1.5, 5, -7, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        INDEPENDENT: true,
        TYPE: exports.swarmDrone,
        INDEPENDENT: true,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [8, 8, 1.5, 5, -7, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        INDEPENDENT: true,
        TYPE: exports.swarmDrone,
        INDEPENDENT: true,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [8, 8, 1.5, 5, 7, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        INDEPENDENT: true,
        TYPE: exports.swarmDrone,
        INDEPENDENT: true,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [8, 8, 1.5, 5, 7, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        INDEPENDENT: true,
        TYPE: exports.swarmDrone,
        INDEPENDENT: true,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [8, 8, 1.5, 5, 7, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        INDEPENDENT: true,
        TYPE: exports.swarmDrone,
        INDEPENDENT: true,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [10, 12, 1.5, 5, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 6,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [10, 12, 1.5, 5, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 6,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [10, 12, 1.5, 5, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 6,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 0, 0, 0],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [20, 0, 0, 180, 0, 1],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: exports.oldAutoSmasherTurret,
    },
    {
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: exports.autoSmasherTurret,
    },
  ],
};
exports.omegaRammerSwarmKeeper = {
  PARENT: [exports.omegaSwarmKeeper],
  LABEL: "Omega Rammer Swarm Keeper",
  SHAPE: 3,
  SPEED: 4,
  SIZE: 25,
  COLOR: 2,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 0, 0, 0],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [22, 0, 0, 0, 180, 0, 0],
      TYPE: exports.triangleSaw3,
    },
    {
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [15, 0, 0, 180, 0, 1],
      TYPE: exports.triangleSaw2,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [11, 8, 0, -120, 190, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 8, 0, 0, 190, 0],
      TYPE: exports.oldAutoSmasherTurret,
    },
    {
      POSITION: [10, 8, 0, 120, 190, 0],
      TYPE: exports.oldAutoSmasherTurret,
    },
    {
      POSITION: [10, 8, 0, -120, 190, 0],
      TYPE: exports.oldAutoSmasherTurret,
    },
  ],
};
exports.omegaBoosterSwarmKeeper = {
  PARENT: [exports.omegaSwarmKeeper],
  LABEL: "Omega Booster Swarm Keeper",
  SHAPE: 3,
  HEALTH: 450,
  SIZE: 25,
  SPEED: 4,
  COLOR: 2,
  GUNS: [
    {
      POSITION: [20, 6, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.greaterSpeed, g.pound]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 6, 1, 0, -5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.greaterSpeed, g.pound]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [15, 7, 1, 0, 5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.greaterSpeed, g.pound]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [15, 7, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.greaterSpeed, g.pound]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [22, 8, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.greaterSpeed,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [15, 8, 1, 0, -1, 155, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 1, -155, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [17, 8, 1, 0, -1, 135, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [17, 8, 1, 0, 1, -135, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [19, 7.5, 1, 0, -1, 155, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [19, 7.5, 1, 0, 1, -155, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [17, 10, 1, 0, 0, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 0, 0, 0],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: exports.triangleSaw1,
    },
  ],
};
exports.omegaOverlordSwarmKeeper = {
  PARENT: [exports.omegaSwarmKeeper],
  LABEL: "Omega Overlord Swarm Keeper",
  SHAPE: 3,
  HEALTH: 250,
  SIZE: 25,
  SPEED: 4,
  COLOR: 2,
  GUNS: [
    {
      POSITION: [5, 11, 1, 10.5, 0, 180, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.power,
          g.pound,
          g.destroy,
          g.anni,
        ]),
        TYPE: exports.trianglesenti1,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 180, 0],
    },
    {
      POSITION: [5, 11, 1, 10.5, 0, 60, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.power,
          g.pound,
          g.destroy,
          g.anni,
        ]),
        TYPE: exports.trianglesenti2,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 60, 0],
    },
    {
      POSITION: [5, 11, 1, 10.5, 0, -60, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.power,
          g.pound,
          g.destroy,
          g.anni,
        ]),
        TYPE: exports.trianglesenti3,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, -60, 0],
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 0, 0],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [15, 0, 0, 360, 360, 1],
      TYPE: exports.oldAutoSmasherTurret,
    },
    {
      POSITION: [15, 0, 0, 360, 360, 1],
      TYPE: exports.autoSmasherTurret,
    },
  ],
};
exports.swarmProtector2 = {
  PARENT: [exports.genericTank],
  LABEL: "Swarm Protector",
  COLOR: 13,
  SHAPE: 4,
  SIZE: 4,
};
exports.eliteSwarmProtector = {
  PARENT: [exports.genericTank],
  COLOR: 13,
  SHAPE: 4,
  SIZE: 24,
  BODY: {
    FOV: 1.3,
    HEALTH: 250,
    SHIELD: base.SHIELD,
  },
};
exports.omegaSwarmProtector = {
  PARENT: [exports.genericTank],
  COLOR: 13,
  SHAPE: 4,
  SIZE: 40,
  BODY: {
    FOV: 1.3,
    HEALTH: 1000,
    SHIELD: base.SHIELD * 1.25,
  },
};
exports.elitePropellerSwarmProtector = {
  PARENT: [exports.eliteSwarmProtector],
  LABEL: "Elite Propeller Swarm Protector",
  SHAPE: 4,
  HEALTH: 95,
  COLOR: 13,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [8, 0, -14, 0, 0, 1],
      TYPE: exports.cubedGun1,
    },
    {
      POSITION: [8, 0, 14, 0, 0, 1],
      TYPE: exports.cubedGun1,
    },
    {
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: exports.cubedSaw1,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.lesserHealth,
          g.lesserHealth,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [15, 15, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.lesserHealth,
          g.lesserHealth,
          g.minorRecoil,
          g.pound,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [13, 13, 1.4, 0, 0, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 4,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 4, 1.7, 0, -10, 180, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.morerecoil,
          g.minorDamage,
          g.minorDamage,
          g.greaterSpray,
          g.thruster,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [20, 4, 1.7, 0, 10, 180, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.morerecoil,
          g.minorDamage,
          g.minorDamage,
          g.greaterSpray,
          g.thruster,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
  ],
};
exports.eliteTrapperSwarmProtector = makeMulti(
  {
    PARENT: [exports.eliteSwarmProtector],
    SHAPE: 4,
    FACING_TYPE: "autospin",
    HEALTH: 125,
    COLOR: 13,
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [26, 0, 0, 0, 0, 0, 0],
        TYPE: exports.cubedSaw1,
      },
      {
        POSITION: [18, 0, 0, 45, 0, 1],
        TYPE: exports.cubedSaw1,
      },
      {
        POSITION: [12, 8, 0, 0, 120, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [12, 8, 0, -90, 120, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [12, 8, 0, 180, 120, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [12, 8, 0, 90, 120, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [12, 8, 0, 0, 120, 0],
        TYPE: exports.weakAutoSmasherTurret,
      },
      {
        POSITION: [12, 8, 0, -90, 120, 0],
        TYPE: exports.weakAutoSmasherTurret,
      },
      {
        POSITION: [12, 8, 0, 180, 120, 0],
        TYPE: exports.weakAutoSmasherTurret,
      },
      {
        POSITION: [12, 8, 0, 90, 120, 0],
        TYPE: exports.weakAutoSmasherTurret,
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [14, 5, 1, 0, 5, 0, 0],
      },
      {
        POSITION: [2, 5, 1.3, 14, 5, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.halfspeed]),
          TYPE: exports.trap,
        },
      },
      {
        POSITION: [14, 5, 1, 0, -5, 0, 0],
      },
      {
        POSITION: [2, 5, 1.3, 14, -5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.halfspeed]),
          TYPE: exports.trap,
        },
      },
    ],
  },
  4,
  "Elite Trapper Swarm Protector"
);
exports.eliteHiveSwarmProtector = makeMulti(
  {
    PARENT: [exports.eliteSwarmProtector],
    SHAPE: 4,
    FACING_TYPE: "autospin",
    HEALTH: 125,
    COLOR: 13,
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [26, 0, 0, 0, 0, 0, 0],
        TYPE: exports.cubedSaw1,
      },
      {
        POSITION: [18, 0, 0, 45, 0, 1],
        TYPE: exports.cubedSaw1,
      },
      {
        POSITION: [14, 0, 0, 0, 360, 1],
        TYPE: exports.weakAutoSmasherTurret,
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [2, 5, 0.7, 10, 5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [2, 5, 0.7, 10, -5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [2, 5, 0.7, 10, 5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [2, 5, 0.7, 10, -5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [4, 8, 0.7, 10, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm, g.pound, g.destroy]),
          TYPE: exports.beeDrone,
        },
      },
    ],
  },
  4,
  "Elite Hive Swarm Protector"
);
exports.eliteHiveSwarmProtectorTurret = makeMulti(
  {
    PARENT: [exports.eliteSwarmProtector],
    SHAPE: 4,
    HEALTH: 125,
    COLOR: 13,
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [26, 0, 0, 0, 0, 0, 0],
        TYPE: exports.cubedSaw1,
      },
      {
        POSITION: [18, 0, 0, 45, 0, 1],
        TYPE: exports.cubedSaw1,
      },
      {
        POSITION: [14, 0, 0, 0, 360, 1],
        TYPE: exports.weakAutoSmasherTurret,
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [2, 5, 0.7, 10, 5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [2, 5, 0.7, 10, -5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [2, 5, 0.7, 10, 5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [2, 5, 0.7, 10, -5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [4, 8, 0.7, 10, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm, g.pound, g.destroy]),
          TYPE: exports.beeDrone,
        },
      },
    ],
  },
  4,
  "Elite Hive Swarm Protector"
);
exports.omegaBoosterSwarmProtector = {
  PARENT: [exports.omegaSwarmProtector],
  LABEL: "Omega Booster Swarm Protector",
  SHAPE: 4,
  HEALTH: 95,
  COLOR: 13,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, -16, 0, 0, 1],
      TYPE: exports.cubedGun2,
    },
    {
      POSITION: [12, 0, 16, 0, 0, 1],
      TYPE: exports.cubedGun3,
    },
    {
      POSITION: [15, 0, 0, 180, 0, 1],
      TYPE: exports.cubedSaw1,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.lesserHealth,
          g.lesserHealth,
          g.lesserHealth,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [17, 13, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.lesserHealth,
          g.lesserHealth,
          g.lesserHealth,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [15, 15, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.destroy,
          g.lesserHealth,
          g.lesserHealth,
          g.lesserHealth,
          g.minorRecoil,
          g.pound,
        ]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [17, 9, 1, 0, 0, 180, 0.5],
    },
    {
      POSITION: [2, 16, 1, 17, 0, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory, g.pound, g.destroy]),
        TYPE: exports.beekeeperProtectorMinion,
        MAX_CHILDREN: 4,
        STAT_CALCULATOR: gunCalcNames.fixedReload,
      },
    },
    {
      POSITION: [13, 14, 1, 0, 0, 180, 0.5],
    },
  ],
};
exports.omegaHiveSwarmProtector = makeMulti(
  {
    PARENT: [exports.omegaSwarmProtector],
    SHAPE: 4,
    FACING_TYPE: "autospin",
    HEALTH: 125,
    COLOR: 13,
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [26, 0, 0, 0, 0, 0, 0],
        TYPE: exports.cubedSaw1,
      },
      {
        POSITION: [18, 0, 0, 45, 0, 1],
        TYPE: exports.cubedSaw1,
      },
      {
        POSITION: [14, 0, 0, 0, 360, 1],
        TYPE: exports.autoSmasherTurret,
      },
      {
        POSITION: [14, 0, 0, 0, 360, 1],
        TYPE: exports.assassin3Turret,
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3, 5, 0.7, 10, 3, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [3, 5, 0.7, 10, -3, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.bee, g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [2, 5, 0.7, 10, 5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [2, 5, 0.7, 10, -5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm]),
          TYPE: exports.beeDrone,
        },
      },
      {
        POSITION: [4, 8, 0.7, 10, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm, g.pound, g.destroy]),
          TYPE: exports.autoBee,
        },
      },
    ],
  },
  4,
  "Omega Hive Swarm Protector"
);
exports.omegaTrapperSwarmProtector = makeMulti(
  {
    PARENT: [exports.omegaSwarmProtector],
    SHAPE: 4,
    SIZE: 40,
    FACING_TYPE: "autospin",
    HEALTH: 125,
    COLOR: 13,
    BODY: {
      DAMAGE: base.DAMAGE * 4.5,
      FOV: 1.5,
      PENETRATION: 1,
      REGEN: 1,
      RESIST: 1.5,
    },
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [26, 0, 0, 0, 0, 0, 0],
        TYPE: exports.cubedSaw1,
      },
      {
        POSITION: [18, 0, 0, 45, 0, 1],
        TYPE: exports.cubedSaw1,
      },
      {
        POSITION: [12, 8, 0, 0, 120, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [12, 8, 0, -90, 120, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [12, 8, 0, 180, 120, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [12, 8, 0, 90, 120, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [12, 8, 0, 0, 120, 0],
        TYPE: exports.auto4Turret,
      },
      {
        POSITION: [12, 8, 0, -90, 120, 0],
        TYPE: exports.auto4Turret,
      },
      {
        POSITION: [12, 8, 0, 180, 120, 0],
        TYPE: exports.auto4Turret,
      },
      {
        POSITION: [12, 8, 0, 90, 120, 0],
        TYPE: exports.auto4Turret,
      },
      {
        POSITION: [12, 8, 0, 0, 120, 0],
        TYPE: exports.autoSmasherTurret,
      },
      {
        POSITION: [12, 8, 0, -90, 120, 0],
        TYPE: exports.autoSmasherTurret,
      },
      {
        POSITION: [12, 8, 0, 180, 120, 0],
        TYPE: exports.autoSmasherTurret,
      },
      {
        POSITION: [12, 8, 0, 90, 120, 0],
        TYPE: exports.autoSmasherTurret,
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [15, 10, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [2, 10, 1.5, 15, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.pound, g.halfspeed]),
          TYPE: exports.mechtrap,
        },
      },
      {
        POSITION: [14, 5, 1, 0, 5, 0, 0],
      },
      {
        POSITION: [2, 5, 1.3, 14, 5, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.halfspeed]),
          TYPE: exports.trap,
        },
      },
      {
        POSITION: [14, 5, 1, 0, -5, 0, 0],
      },
      {
        POSITION: [2, 5, 1.3, 14, -5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.halfspeed]),
          TYPE: exports.trap,
        },
      },
    ],
  },
  4,
  "Omega Trapper Swarm Protector"
);
exports.swarmhexa = {
  PARENT: [exports.genericTank],
  LABEL: "Swarm Hexagon",
  SHAPE: 6,
  COLOR: 15,
  SIZE: 6,
};
exports.eliteswarmhexa = {
  PARENT: [exports.genericTank],
  COLOR: 15,
  SHAPE: 6,
  SIZE: 25,
  BODY: {
    FOV: 1.3,
    HEALTH: 500,
    SHIELD: base.SHIELD * 0.5,
  },
};
exports.Deltaswarmhexa = {
  PARENT: [exports.genericTank],
  COLOR: 15,
  SHAPE: 6,
  SIZE: 45,
  BODY: {
    FOV: 1.3,
    HEALTH: 1500,
    SHIELD: base.SHIELD * 0.75,
  },
};
exports.swarmhexagonsenti1 = makeMulti(
  {
    PARENT: [exports.eliteswarmhexa],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: exports.smasherBody4,
      },
      {
        POSITION: [13, 0, 0, 0, 360, 1],
        TYPE: exports.trapper,
      },
    ],
    GUNS: [
      {
        POSITION: [3, 6, 1.7, 14.7, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap]),
          TYPE: exports.trap,
        },
      },
      {
        POSITION: [14, 6, 1, 0, 0, 0, 0],
      },
    ],
  },
  6,
  "Trap Centurion"
);
exports.swarmhexagonsenti2 = makeMulti(
  {
    PARENT: [exports.eliteswarmhexa],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [10, 0, 0, 0, 360, 1],
        TYPE: exports.autoTurret,
      },
      {
        POSITION: [10, 8, 0, 180, 140, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [10, 8, 0, -60, 140, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [10, 8, 0, 60, 140, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [23, 0, 0, 0, 30, 0],
        TYPE: exports.smasherBody4,
      },
    ],
    GUNS: [
      {
        POSITION: [13, 10.5, 0.6, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm]),
          TYPE: exports.swarmDrone,
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
    ],
  },
  3,
  "Auto Centurion"
);
exports.swarmhexagonsenti3 = makeMulti(
  {
    PARENT: [exports.eliteswarmhexa],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [10, 0, 0, 0, 360, 1],
        TYPE: exports.autoTurret,
      },
      {
        POSITION: [23, 0, 0, 0, 30, 0],
        TYPE: exports.smasherBody4,
      },
    ],
    GUNS: [
      {
        POSITION: [13, 7.5, 1.6, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.greaterSize,
            g.greaterHealth,
          ]),
          TYPE: exports.sterileHexagonChip,
          AUTOFIRE: true,
          MAX_CHILDREN: 3,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
        },
      },
    ],
  },
  6,
  "Spawner Centurion"
);
exports.swarmhexagonsenti12 = makeMulti(
  {
    PARENT: [exports.Deltaswarmhexa],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: exports.smasherBody4,
      },
      {
        POSITION: [17, 0, 0, 0, 0, 1],
        TYPE: exports.smasherBody4,
      },
      {
        POSITION: [7, 8, 0, 150, 140, 0],
        TYPE: exports.trapTurret2,
      },
      {
        POSITION: [7, 8, 0, -30, 140, 0],
        TYPE: exports.trapTurret2,
      },
      {
        POSITION: [7, 8, 0, 30, 140, 0],
        TYPE: exports.trapTurret2,
      },
      {
        POSITION: [7, 8, 0, 90, 140, 0],
        TYPE: exports.trapTurret2,
      },
      {
        POSITION: [7, 8, 0, -90, 140, 0],
        TYPE: exports.trapTurret2,
      },
      {
        POSITION: [7, 8, 0, -150, 140, 0],
        TYPE: exports.trapTurret2,
      },
      {
        POSITION: [7, 8, 0, 150, 140, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [7, 8, 0, -30, 140, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [7, 8, 0, 30, 140, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [7, 8, 0, 90, 140, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [7, 8, 0, -90, 140, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [7, 8, 0, -150, 140, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [13, 0, 0, 0, 360, 1],
        TYPE: exports.barricadeTurret,
      },
    ],
    GUNS: [
      {
        POSITION: [3, 6, 1.7, 20.7, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.greaterHealth]),
          TYPE: exports.trap,
        },
      },
      {
        POSITION: [3, 6, 1.7, 17.7, 0, 0, 1 / 3],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.greaterHealth]),
          TYPE: exports.trap,
        },
      },
      {
        POSITION: [3, 6, 1.7, 14.7, 0, 0, 2 / 3],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.greaterHealth]),
          TYPE: exports.trap,
        },
      },
      {
        POSITION: [15, 6, 1, 0, 0, 0, 0],
      },
    ],
  },
  6,
  "Trap Lord Centurion"
);
exports.swarmhexagonsenti22 = makeMulti(
  {
    PARENT: [exports.Deltaswarmhexa],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [10, 0, 0, 0, 360, 1],
        TYPE: exports.autoTurret,
      },
      {
        POSITION: [10, 8, 0, 180, 140, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [10, 8, 0, -60, 140, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [10, 8, 0, 60, 140, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [13, 8, 0, 180, 140, 0],
        TYPE: exports.cruiserTurret2,
      },
      {
        POSITION: [13, 8, 0, -60, 140, 0],
        TYPE: exports.cruiserTurret2,
      },
      {
        POSITION: [13, 8, 0, 60, 140, 0],
        TYPE: exports.cruiserTurret2,
      },
      {
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: exports.smasherBody4,
      },
      {
        POSITION: [15, 0, 0, 0, 0, 1],
        TYPE: exports.smasherBody4,
      },
    ],
    GUNS: [
      {
        POSITION: [13, 10.5, 0.6, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm]),
          TYPE: exports.swarmDrone,
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
    ],
  },
  6,
  "Auto Lord Centurion"
);
exports.swarmhexagonsenti32 = makeMulti(
  {
    PARENT: [exports.Deltaswarmhexa],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [14.5, 0, 0, 0, 360, 1],
        TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
      {
        POSITION: [7, 15, 0, -60, 120, 0],
        TYPE: exports.autoTurret,
      },
      {
        POSITION: [7, 15, 0, 60, 120, 0],
        TYPE: exports.autoTurret,
      },
      {
        POSITION: [7, 15, 0, 180, 120, 0],
        TYPE: exports.autoTurret,
      },
      {
        POSITION: [23, 0, 0, 0, 30, 0],
        TYPE: exports.smasherBody4,
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3, 8, -0.5, 11, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.greaterHealth,
            g.greaterHealth,
            g.greaterHealth,
            g.greaterHealth,
            g.pound,
            g.halfSpeed,
          ]),
          TYPE: exports.healerBullet,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [12, 8, 1, 0, 0, 180, 0],
      },
      {
        POSITION: [12, 9.5, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [2, 10.5, 1, 12.4, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.factory,
            g.greaterHealth,
            g.greaterHealth,
          ]),
          TYPE: exports.swarmCenturionMinion,
          AUTOFIRE: true,
          MAX_CHILDREN: 2,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
        },
      },
      {
        POSITION: [11, 10.5, 1, 0, 0, 0, 0],
      },
    ],
  },
  3,
  "Spawner Lord Centurion"
);
exports.swarmegg = {
  PARENT: [exports.genericTank],
  LABEL: "Void Egg",
  COLOR: 19,
  SIZE: 4,
};
exports.Alphavoideggsenti = {
  PARENT: [exports.genericTank],
  SIZE: 10,
  COLOR: 19,
  BODY: {
    DAMAGE: base.DAMAGE * 2.5,
    REGEN: -1,
    FOV: 1.2,
    HEALTH: 150,
    PENETRATION: 5,
  },
};
exports.Deltavoideggsenti = {
  PARENT: [exports.genericTank],
  SIZE: 20,
  COLOR: 19,
  BODY: {
    DAMAGE: base.DAMAGE * 2.5,
    REGEN: -1,
    FOV: 1.2,
    HEALTH: 750,
    PENETRATION: 5,
  },
};
exports.swarmeggsenti1 = {
  PARENT: [exports.Alphavoideggsenti],
  LABEL: "Elite Defender Void Egg",
  COLOR: 19,
  SIZE: 23,
  FACING_TYPE: "autospin",
  GUNS: [],
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.trapTurret2,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.trapTurret2,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.trapTurret2,
    },
  ],
  GUNS: [
    {
      POSITION: [18, 6, 1, 0, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 6, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 6, 1, 0, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.swarmeggsenti2 = {
  PARENT: [exports.Alphavoideggsenti],
  LABEL: "Elite Necro Void Egg",
  SIZE: 23,
  COLOR: 19,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 8, 0, 180, 140, 0],
      TYPE: exports.oldAutoSmasherTurret,
    },
  ],
  GUNS: [
    {
      POSITION: [6, 11, 1.2, 8, 0, 110, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.spawner,
          g.lesserDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.thrasherDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, -110, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.spawner,
          g.lesserDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.thrasherDrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 5, 0.6, 8, 0, 45, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.lesserDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 8,
      },
    },
    {
      POSITION: [6, 5, 0.6, 8, 0, -45, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.lesserDamage,
          g.lesserHealth,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 8,
      },
    },
    {
      POSITION: [18, 7, 1, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.swarmeggsenti3 = makeMulti(
  {
    PARENT: [exports.Alphavoideggsenti],
    SIZE: 23,
    COLOR: 19,
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [13, 0, 0, 0, 360, 1],
        TYPE: exports.oldAutoSmasherTurret,
      },
    ],
    GUNS: [
      {
        POSITION: [8, 5, 0.6, 8, 0, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm]),
          TYPE: exports.uncontrolledSwarmDrone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [6, 12, 1.2, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone, g.pound, g.halfSize]),
          TYPE: exports.sterileEggChip,
          MAX_CHILDREN: 8,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
        },
      },
      {
        POSITION: [8, 5, 0.6, 8, 0, 45, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm]),
          TYPE: exports.uncontrolledSwarmDrone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
        },
      },
    ],
  },
  4,
  "Elite Swarm Void Egg"
);
exports.auto3IT = {
  PARENT: [exports.genericTank],
  LABEL: "Auto-3",
  INDEPENDENT: true,
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.auto3Turret,
    },
  ],
};
exports.swarmeggsenti12 = {
  PARENT: [exports.Deltavoideggsenti],
  LABEL: "Delta Fullauto Void Egg",
  SIZE: 30,
  FACING_TYPE: "autospin",
  COLOR: 19,
  GUNS: [],
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.auto3IT],
      FACING_TYPE: "autospin",
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 8, 0, 0, 190, 0],
      TYPE: exports.barricadeTurret,
    },
    {
      POSITION: [13, 8, 0, 120, 190, 0],
      TYPE: exports.barricadeTurret,
    },
    {
      POSITION: [13, 8, 0, 240, 190, 0],
      TYPE: exports.barricadeTurret,
    },
  ],
  GUNS: [
    {
      POSITION: [16, 16, 1, 0, 0, 60, 0],
    },
    {
      POSITION: [5, 16.6, 1.7, 13.5, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.anni,
          g.superHealth,
          g.greaterReload,
          g.greaterSize,
          g.greaterDamage,
          g.greaterPenetration,
          g.lesserReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [18, 2, 1, 0, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 2, 1, 0, 5, 60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 2, 1, 0, -5, 60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 16, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [5, 16.6, 1.7, 13.5, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.anni,
          g.superHealth,
          g.greaterReload,
          g.greaterSize,
          g.greaterDamage,
          g.greaterPenetration,
          g.lesserReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [18, 2, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 2, 1, 0, 5, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 2, 1, 0, -5, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 16, 1, 0, 0, 300, 0],
    },
    {
      POSITION: [5, 16.6, 1.7, 13.5, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.anni,
          g.superHealth,
          g.greaterReload,
          g.greaterSize,
          g.greaterDamage,
          g.greaterPenetration,
          g.lesserReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [18, 2, 1, 0, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 2, 1, 0, -5, 300, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 2, 1, 0, 5, 300, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.lesserDamage, g.lesserHealth]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.swarmeggsenti22 = {
  PARENT: [exports.Deltavoideggsenti],
  LABEL: "Delta Mono Void Egg",
  SIZE: 40,
  COLOR: 19,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 10, 0, 180, 80, 0],
      TYPE: exports.autoSmasherTurret,
    },
  ],
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 9.5, 2, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.sterileEggChip,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 6,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [14, 7.5, 1.4, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.minion, g.factory, g.pound]),
        TYPE: exports.thrasherDrone,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [10, 9.5, 2, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.sterileEggChip,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 6,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [14, 7.5, 1.4, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.minion, g.factory, g.pound]),
        TYPE: exports.thrasherDrone,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [5, 2.5, 0.6, 10, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [5, 2.5, 0.6, 10, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [5, 2.5, 0.6, 10, -5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [14, 13.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.power, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 3, 1, 0, -6, 180, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 3, 1, 0, 6, 180, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [12, 3, 1, 0, -3, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [12, 3, 1, 0, 3, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
  ],
};
exports.swarmeggsenti32 = makeMulti(
  {
    PARENT: [exports.Deltavoideggsenti],
    LABEL: "Delta Swarm Void Egg",
    SIZE: 40,
    FACING_TYPE: "autospin",
    COLOR: 19,
    TURRETS: [
      {
        POSITION: [15, 0, 0, 0, 360, 1],
        TYPE: exports.ranger,
      },
    ],
    GUNS: [
      {
        /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [16, 5.5, 2, 0, 0, 20, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone]),
          TYPE: exports.sterileEggChip,
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          MAX_CHILDREN: 6,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [16, 5.5, 2, 0, 0, -20, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone]),
          TYPE: exports.sterileEggChip,
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          MAX_CHILDREN: 6,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [20, 10.5, 1.4, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.minion, g.factory, g.pound]),
          TYPE: exports.thrasherDrone,
          STAT_CALCULATOR: gunCalcNames.drone,
          AUTOFIRE: true,
          MAX_CHILDREN: 1,
          SYNCS_SKILLS: true,
        },
      },
    ],
  },
  4,
  "Delta Swarm Void Egg"
);
//AI Polygon Sentis
exports.swarmeggb = {
  PARENT: [exports.rangedEnemy],
  LABEL: "Void Egg",
  COLOR: 19,
  SIZE: 4,
};
exports.swarmeggsenti1b = {
  PARENT: [exports.rangedEnemy],
  LABEL: "Elite Auto Void Egg",
  COLOR: 19,
  SIZE: 23,
  GUNS: [],
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.auto3Turret,
    },
  ],
};
exports.swarmeggsenti2b = {
  PARENT: [exports.rangedEnemy],
  LABEL: "Elite Necro Void Egg",
  SIZE: 23,
  COLOR: 19,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */ POSITION: [10, 8, 0, 0, 80, 0],
      TYPE: exports.bansheeTurret,
    },
    {
      POSITION: [10, 8, 0, 120, 80, 0],
      TYPE: exports.bansheeTurret,
    },
    {
      POSITION: [10, 8, 0, 240, 80, 0],
      TYPE: exports.bansheeTurret,
    },
  ],
  GUNS: [
    {
      POSITION: [6, 11, 1.2, 8, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.lesserDamage,
          g.lesserHealth,
          g.halfSize,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.lesserDamage,
          g.lesserHealth,
          g.halfSize,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.sunchip,
          g.lesserDamage,
          g.lesserHealth,
          g.halfSize,
        ]),
        TYPE: exports.sterileEggChip,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 3,
      },
    },
  ],
};
exports.swarmeggsenti3b = {
  PARENT: [exports.rangedEnemy],
  LABEL: "Elite Minion Void Egg",
  SIZE: 23,
  COLOR: 19,
  MAX_CHILDREN: 4,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.oldAutoSmasherTurret,
    },
    {
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.autoSmasherTurret,
    },
  ],
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, 90, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.pound, g.minion]),
        TYPE: exports.minion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 90, 0],
    },
    {
      POSITION: [4.5, 10.5, 1, 10.5, 0, 180, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.pound, g.minion]),
        TYPE: exports.minion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 180, 0],
    },
    {
      POSITION: [4.5, 10.5, 1, 10.5, 0, -90, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.pound, g.minion]),
        TYPE: exports.minion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, -90, 0],
    },
    {
      POSITION: [4.5, 10.5, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.pound, g.minion]),
        TYPE: exports.minion,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 0, 0],
    },
  ],
};
exports.swarmeggsenti12b = {
  PARENT: [exports.voidlordMeleeBoss],
  LABEL: "Delta Fullauto Void Egg",
  SIZE: 30,
  COLOR: 19,
  BODY: {
    DAMAGE: base.DAMAGE * 2.5,
    REGEN: -1,
    FOV: 1.2,
    HEALTH: 450,
    PENETRATION: 5,
    RESIST: 1.2,
  },
  GUNS: [],
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [25, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody],
    },
    {
      POSITION: [16, 0, 0, 0, 360, 1],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [11, 8, 0, 120, 190, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [11, 8, 0, 240, 190, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [13, 8, 0, 0, 190, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [13, 8, 0, 120, 190, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [13, 8, 0, 240, 190, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [10, 8, 0, 180, 190, 0],
      TYPE: exports.mega3Turret,
    },
    {
      POSITION: [10, 8, 0, 60, 190, 0],
      TYPE: exports.mega3Turret,
    },
    {
      POSITION: [10, 8, 0, -60, 190, 0],
      TYPE: exports.mega3Turret,
    },
  ],
};
exports.swarmeggsenti22b = {
  PARENT: [exports.voidlordMeleeBoss],
  LABEL: "Delta Auto Void Egg",
  SIZE: 30,
  COLOR: 19,
  BODY: {
    DAMAGE: base.DAMAGE * 7.5,
    FOV: 1.2,
    HEALTH: 500,
    REGEN: -1,
    PENETRATION: 1,
    RESIST: 1.5,
  },
  TURRETS: [
    {
      POSITION: [18, 0, 0, 0, 0, 1],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [13, 8, 0, 0, 180, 0],
      TYPE: exports.bansheeTurret,
    },
    {
      POSITION: [13, 8, 0, 240, 180, 0],
      TYPE: exports.bansheeTurret,
    },
    {
      POSITION: [13, 8, 0, -240, 180, 0],
      TYPE: exports.bansheeTurret,
    },
    {
      POSITION: [10, 8, 0, 0, 180, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [10, 8, 0, 240, 180, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [10, 8, 0, -240, 180, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [10, 8, 0, 180, 180, 0],
      TYPE: exports.mega3Turret,
    },
    {
      POSITION: [10, 8, 0, 60, 180, 0],
      TYPE: exports.mega3Turret,
    },
    {
      POSITION: [10, 8, 0, -60, 180, 0],
      TYPE: exports.mega3Turret,
    },
  ],
  GUNS: [
    {
      POSITION: [6, 11, 1.2, 8, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.minion]),
        TYPE: exports.swarmeggsenti1minion,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.minion]),
        TYPE: exports.swarmeggsenti1minion,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [6, 11, 1.2, 8, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.minion]),
        TYPE: exports.swarmeggsenti1minion,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [7.5, 9, 1.2, 8, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.minion]),
        TYPE: exports.swarmeggsenti1minion,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [7.5, 9, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.minion]),
        TYPE: exports.swarmeggsenti1minion,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 1,
      },
    },
    {
      POSITION: [7.5, 9, 1.2, 8, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.minion]),
        TYPE: exports.swarmeggsenti1minion,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.necro,
        WAIT_TO_CYCLE: true,
        MAX_CHILDREN: 1,
      },
    },
  ],
};
exports.swarmeggsenti32b = {
  PARENT: [exports.voidlordMeleeBoss],
  LABEL: "Delta Minion Void Egg",
  SIZE: 40,
  COLOR: 19,
  MAX_CHILDREN: 6,
  BODY: {
    DAMAGE: base.DAMAGE * 7.5,
    FOV: 1.2,
    HEALTH: 1000,
    REGEN: -1,
    PENETRATION: 6,
    RESIST: 1.1,
  },
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 80, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [11, 8, 0, 120, 80, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [11, 8, 0, 240, 80, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [10, 8, 0, 0, 80, 0],
      TYPE: exports.bansheeTurret,
    },
    {
      POSITION: [10, 8, 0, 120, 80, 0],
      TYPE: exports.bansheeTurret,
    },
    {
      POSITION: [10, 8, 0, 240, 80, 0],
      TYPE: exports.bansheeTurret,
    },
  ],
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4.5, 10.5, 1, 10.5, 0, -60, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.minion]),
        TYPE: exports.thrasher,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, -60, 0],
    },
    {
      POSITION: [4.5, 10.5, 1, 10.5, 0, 60, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.minion]),
        TYPE: exports.thrasher,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 60, 0],
    },
    {
      POSITION: [4.5, 10.5, 1, 10.5, 0, 180, 0],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.minion]),
        TYPE: exports.thrasher,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [3.5, 12.5, 1, 8, 0, 180, 0],
    },
  ],
};
//DEV TANK/BOSS ASSETS (minions n shit)
exports.ranarDiscipleminion = {
  PARENT: [exports.minion, exports.rebel],
  NAME: "Ranar",
  TYPE: "neutralBoss",
  LABEL: "Disciple",
  BODY: {
    DAMAGE: base.DAMAGE * 7.5,
    FOV: 3.25,
    HEALTH: 1000,
    PENETRATION: 5,
    REGEN: 0,
    RESIST: 1.5,
  },
  DANGER: 10,
  SIZE: 17.5,
  AI: { STRAFE: true },
  SKILL: skillSet({
    rld: 0.25, //reload
    dam: 0.8, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
};
exports.ranarAscendantFormminion = {
  PARENT: [exports.ranarDiscipleminion],
  TYPE: "neutralBoss",
  LABEL: "Ascendant",
  BODY: {
    FOV: 3.25,
    HEALTH: 5000,
    REGEN: -1,
    SPEED: 1.5,
  },
  DANGER: 11,
  SIZE: 27.5,
  SKILL: skillSet({
    rld: 0.05, //reload
    dam: 0.7, //bullet damage
    pen: 0.7, //bullet penetration
    str: 0.7, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),

  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [20, 0, 55, -20, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.lesserDamage,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 1.25,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 90, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.lesserDamage,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 1.25,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 210, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.lesserDamage,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 1.25,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },

    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [20.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody2,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 8.5, 0.6, 2, 6, 25, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound, g.halfSpeed]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [10, 8.5, 0.6, 2, -6, -25, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound, g.halfSpeed]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 8.5, 0.6, 5, 6, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee]),
        TYPE: exports.uncontrolledBeeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [10, 8.5, 0.6, 5, -6, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee]),
        TYPE: exports.uncontrolledBeeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 14.55, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.doubleRange,
          g.superHealth,
          g.doubleHealth,
        ]),
        TYPE: exports.bullet,
      },
    },

    {
      POSITION: [20, 9, 1, 0, -4, 152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.flank,
          g.tri,
          g.destroy,
          g.thruster,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 9, 1, 0, 4, -152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.flank,
          g.tri,
          g.destroy,
          g.thruster,
        ]),

        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.minionreaper = {
  PARENT: [exports.minion],
  LABEL: "Reaper",
  DANGER: 7,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: [exports.imageMaker],
    },
  ],
  GUNS: [
    ...extraSideGuns,
    ...sideGuns,
    ...hunterGuns,
    {
      POSITION: [5, 12, -1.3, 7, 0, 0, 0],
    },
  ],
};
//DEV BOSSES
exports.rainOfVoid = {
  PARENT: [exports.neutralRangedBoss, exports.rainOfAcid],
  NAME: "Oxini Vrochí",
  LABEL: "Rain of Void",
  COLOR: 19,
  VALUE: 4000000,
  DANGER: 9,
  SIZE: 25,
  BODY: {
    HEALTH: 1500,
    PENETRATION: 5,
    REGEN: 0,
  },
  TURRETS: [
    {
      POSITION: [14, 8, 1, 90, 190, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [14, 8, -0.5, 270, 190, 0],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [14, 8, 1, 90, 190, 0],
      TYPE: [exports.oldAutoSmasherTurret],
    },
    {
      POSITION: [14, 8, -0.5, 270, 190, 0],
      TYPE: [exports.oldAutoSmasherTurret],
    },
  ],
  GUNS: [
    {
      POSITION: [23, 16.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.anni]),
        TYPE: exports.bullet,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [7, 5 * 1.07142857143, 0.6, 9, 0, 240, 7 / 9], //7
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [7, 5 * 1.07142857143, 0.6, 9, 0, 120, 8 / 9],
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [7, 5 * 1.07142857143, 0.6, 9, 0, 210, 3 / 9], //3
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [7, 5 * 1.07142857143, 0.6, 9, 0, 150, 4 / 9], //4
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [6, 5 * 1.07142857143, 0.6, 9, 0, 240, 7 / 9], //7
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [6, 5 * 1.07142857143, 0.6, 9, 0, 120, 8 / 9],
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [6, 5 * 1.07142857143, 0.6, 9, 0, 210, 3 / 9], //3
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [6, 5 * 1.07142857143, 0.6, 9, 0, 150, 4 / 9], //4
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 240, 7 / 9], //7
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 120, 8 / 9],
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 210, 3 / 9], //3
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 150, 4 / 9], //4
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 180, 0], //0
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 195, 1 / 9], //1
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 135, 6 / 9], //6
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 225, 5 / 9], //5
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [5, 5 * 1.07142857143, 0.6, 9, 0, 165, 2 / 9], //2
      PROPERTIES: rainOfAcidSwarmBarrels(),
    },
    {
      POSITION: [19, 3, 1, 0, -6, -7, 0.2],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      POSITION: [19, 3, 1, 0, -3, -3.5, 0.6],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      POSITION: [19, 3, 1, 0, 6, 7, 0.4],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      POSITION: [19, 3, 1, 0, 3, 3.5, 0.8],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      POSITION: [19, 3, 1, 0, 0, 0, 0],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      POSITION: [17, 3, 1, 0, -6, -7, 0.2],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      POSITION: [17, 3, 1, 0, -3, -3.5, 0.6],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      POSITION: [17, 3, 1, 0, 6, 7, 0.4],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      POSITION: [17, 3, 1, 0, 3, 3.5, 0.8],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      POSITION: [17, 3, 1, 0, 0, 0, 0],
      PROPERTIES: rainOfAcidFrontBarrels(),
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 8.5, 1.5, 0, 0, 125, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.greaterSize,
          g.greaterSize,
          g.greaterSize,
        ]),
        TYPE: exports.twinAutoAnomalyDrone,
        MAX_CHILDREN: 2,
        AUTOFIRE: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [14, 8.5, 1.5, 0, 0, -125, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.greaterSize,
          g.greaterSize,
          g.greaterSize,
        ]),
        TYPE: exports.twinAutoAnomalyDrone,
        MAX_CHILDREN: 2,
        AUTOFIRE: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [13, 18.5, 1, 0, 0, 0, 0],
    },
  ],
};
exports.xxtrianguliVAspect = {
  PARENT: [exports.xxtrianguli],
  NAME: "XX Trianguli",
  TYPE: "neutralBoss",
  LABEL: "Void Aspect",
  BODY: {
    HEALTH: 1500,
    REGEN: 0,
    PENETRATION: 5,
  },
  DANGER: 9,
  SIZE: 25,
  VALUE: 4000000,
  COLOR: 19,
  GUNS: [
    {
      POSITION: [19, 2, 1, 0, -5.5, 0, 0.3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 2, 1, 0, 5.5, 0, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 2, 1, 0, -6.5, 0, 0.3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 2, 1, 0, 6.5, 0, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 2, 1, 0, -7.5, -10, 0.3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 2, 1, 0, 7.5, 10, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 11, 1, 0, 0, 0, 0],
    },
    ...hunterGuns,
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 90, 270, 0],
      TYPE: exports.predator3Turret,
    },
    {
      POSITION: [11, 8, 0, 270, 270, 0],
      TYPE: exports.predator3Turret,
    },
  ],
};
exports.pop64VoidHarvester = makeMulti(
  {
    PARENT: [exports.pop64],
    NAME: "Pop64",
    TYPE: "neutralBoss",
    BODY: {
      HEALTH: 1500,
      PENETRATION: 5,
      REGEN: 0,
    },
    DANGER: 9,
    SIZE: 25,
    VALUE: 4000000,
    COLOR: 19,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [22, 0, 0, 0, 360, 0],
        TYPE: [exports.smasherBody, { INDEPENDENT: true, COLOR: 16 }],
      },
      {
        POSITION: [9, 0, 0, 0, 360, 1],
        TYPE: [exports.setBlock, { INDEPENDENT: true, COLOR: 16 }],
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [8, 13, 0.8, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.pound,
            g.destroy,
            g.greaterSize,
          ]),
          TYPE: exports.twinAutoAnomalyDrone,
          AUTOFIRE: true,
          MAX_CHILDREN: 10,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
        },
      },
      {
        POSITION: [6, 13, 0.8, 8, 0, -90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone, g.pound]),
          TYPE: exports.thrasherDrone,
          AUTOFIRE: true,
          MAX_CHILDREN: 15,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
        },
      },
    ],
  },
  3,
  "Void Harvester"
);
exports.voidCaller = makeMulti(
  {
    PARENT: [exports.pop64],
    NAME: "",
    TYPE: "voidlordBoss",
    FACING_TYPE: "autospin",
    BODY: {
      HEALTH: 500,
      PENETRATION: 5,
      REGEN: 0,
    },
    DANGER: 9,
    VOID_CREATION: 2,
    SIZE: 24,
    VALUE: 500000,
    SHAPE: -6,
    COLOR: 19,
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [22, 0, 0, 0, 360, 0],
        TYPE: [exports.smasherBody, { INDEPENDENT: true, COLOR: 16 }],
      },
          {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.bursterSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.flingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [8, 13, 0.8, 0, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.pound,
            g.destroy,
            g.greaterSize,
            g.halfReload, g.halfDamage, g.lesserHealth, g.doubleSpeed,
          ]),
          TYPE: exports.twinAutoAnomalyDrone,
          AUTOFIRE: true,
          MAX_CHILDREN: 2,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
        },
      },
      {
        POSITION: [6, 13, 0.8, 0, 0, -90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.drone, g.pound, g.halfReload, g.halfDamage, g.lesserHealth,]),
          TYPE: exports.thrasherDrone,
          AUTOFIRE: true,
          MAX_CHILDREN: 8,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
        },
      },
    ],
  },
  3,
  "Void Caller"
);
exports.ranarVoidForm = {
  PARENT: [exports.ranarDiscipleForm],
  NAME: "Ranar",
  TYPE: "neutralBoss",
  LABEL: "Void Touched",
  BODY: {
    FOV: 3.25,
    HEALTH: 7000,
    REGEN: -1,
    SPEED: 1.5,
  },
  DANGER: 11,
  SIZE: 43.5,
  VALUE: 7000000,
  COLOR: 19,
  SKILL: skillSet({
    rld: 0.05, //reload
    dam: 0.7, //bullet damage
    pen: 0.7, //bullet penetration
    str: 0.7, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  VOID_CREATION: 1,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.abyssthrashimageMaker,
    },
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.imageMakerVR,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.starBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.starBody,
    },
    {
      POSITION: [20, 0, 55, -20, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.lesserDamage,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 1.25,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 90, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.lesserDamage,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 1.25,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 210, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.lesserDamage,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    CONNECTED_DAMAGE: true,
                    DAMAGE_MULTIPLIER: 1.25,
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },

    {
      POSITION: [17, 0, 0, 90, 0, 0],
      TYPE: exports.thrasherSpawner,
    },
    {
      POSITION: [17, 0, 0, 90, 0, 0],
      TYPE: exports.thrasherSpawner,
    },
    {
      POSITION: [14, 8, 0, 90, 270, 0],
      TYPE: exports.mega3Turret,
    },
    {
      POSITION: [14, 8, 0, 270, 270, 0],
      TYPE: exports.mega3Turret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 90, 270, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 270, 270, 0],
      TYPE: exports.auto3Turret,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [20.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody2,
    },
  ],
  GUNS: [
    ...cruiserGuns,
    ...extraSideGuns,
    ...sideGuns,
    ...hunterGuns,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 8.5, 0.6, 2, 6, 25, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound, g.halfSpeed]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [10, 8.5, 0.6, 2, -6, -25, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound, g.halfSpeed]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 8.5, 0.6, 5, 6, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee]),
        TYPE: exports.uncontrolledBeeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [10, 8.5, 0.6, 5, -6, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee]),
        TYPE: exports.uncontrolledBeeDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 14.55, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.doubleRange,
          g.superHealth,
          g.doubleHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [21, 14.55, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.minion,
          g.halfSize,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
        ]),
        TYPE: exports.ranarDiscipleminion,
        MAX_CHILDREN: 4,
      },
    },
    {
      POSITION: [21, 14.55, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.minion,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
        ]),
        TYPE: exports.ranarAscendantFormminion,
        MAX_CHILDREN: 2,
      },
    },
    {
      POSITION: [20, 9, 1, 0, -4, 152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.flank,
          g.tri,
          g.destroy,
          g.thruster,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 9, 1, 0, 4, -152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.flank,
          g.tri,
          g.destroy,
          g.thruster,
        ]),

        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 11, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.flank,
          g.tri,
          g.destroy,
          g.anni,
          g.thruster,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.Vbaltylabody = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 0,
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
};
exports.Vbaltylabody3 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 16,
  FACING_TYPE: "locksFacing",
};
exports.Vbaltylabody2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 19,
  SHAPE: 3,
};
exports.Vbaltylasaw2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 19,
  SHAPE: 3,
};
exports.baltylasaw1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 6,
  SHAPE: 3,
};
exports.Vbaltylahandsaw1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
};
exports.Vbaltylahandsaw1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [1.75, 0],
    [-1, -1],
    [-1, 1],
  ],
};
exports.Vbaltylahandsaw2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [1.75, 0],
    [-1, -1],
    [-1, 1],
  ],
};
exports.Vbaltylahandsaw3 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 19,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [1.75, 0],
    [-1, -1],
    [-1, 1],
  ],
};
exports.Vbaltylahandsaw4 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 16,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
};
exports.baltylaeye = {
  PARET: [exports.genericTank],
  LABEL: "",
  CONTROLLERS: ["dontTurn"],
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  SHAPE: [
    [0.3, -0.5],
    [0.65, -0.5],
    [0.65, 0.5],
    [0.3, 0.5],
  ],
};
exports.Vbaltylaeyeholder = {
  PARET: [exports.genericTank],
  LABEL: "",
  SHAPE: 1,
  CONTROLLERS: ["dontTurn"],
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  SHAPE: 1,
  TURRETS: [
    {
      POSITION: [17, 0, 0, 0, 0, 0, 1],
      TYPE: exports.baltylaeye,
    },
  ],
};
exports.Vbaltylamissile = {
  PARENT: [exports.bullet],
  BODY: {
    RANGE: 200,
  },
  TURRETS: [
    {
      POSITION: [22.5, 0, 0, 0, 360, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [22.5, 0, 0, 0, 360, 0],
      TYPE: exports.oldAutoSmasherTurret,
    },
  ],
};
exports.baltylablock = {
  PARENT: [exports.setBlock],
  LABEL: "baltylablock",
  BODY: {
    RANGE: 200,
  },
  TURRETS: [
    {
      POSITION: [22.5, 0, 0, 0, 360, 0],
      TYPE: exports.baltylasaw1,
    },
    {
      POSITION: [22.5, 0, 0, 0, 90, 0],
      TYPE: exports.baltylasaw1,
    },
  ],
};
exports.Vbaltylahand1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.7,
    HAS_NO_RECOIL: true,
  },
  COLOR: 19,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20.5, 15.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.anni]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22.5, 13.5, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 1, 0, -1, 155, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 1, -155, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [17, 8, 1, 0, -1, 135, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [17, 8, 1, 0, 1, -135, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [1, 6, 0, 3, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.superSize,
          g.halfStats,
          g.halfStats,
          g.halfStats,
          g.halfStats,
        ]),
        TYPE: exports.thrasher,
        COLOR: 6,
      },
    },
    {
      POSITION: [1, 6, 0, 3, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.superSize,
          g.halfStats,
          g.halfStats,
          g.halfStats,
          g.halfStats,
        ]),
        TYPE: exports.thrasher,
        COLOR: 6,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [25, 0, 0, 0, 0, 0, 0],
      TYPE: exports.Vbaltylahandsaw1,
    },
    {
      POSITION: [17, 12, 0, 0, 0, 0, 0],
      TYPE: exports.Vbaltylahandsaw3,
    },
    {
      POSITION: [17, -3.5, 2, -20, 0, 1],
      TYPE: exports.Vbaltylahandsaw1,
    },
    {
      POSITION: [17, -3.5, -2, 20, 0, 1],
      TYPE: exports.Vbaltylahandsaw1,
    },
    {
      POSITION: [17, 0, 0, 0, 10, 1],
      TYPE: exports.Vbaltylahandsaw4,
    },
    {
      POSITION: [10, 15, 7, 0, 0, 0, 0],
      TYPE: exports.Vbaltylahandsaw2,
    },
    {
      POSITION: [10, 15, -7, 0, 0, 0, 0],
      TYPE: exports.Vbaltylahandsaw2,
    },
  ],
};
exports.Vbaltylahand2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  COLOR: 19,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20.5, 15.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy, g.anni]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22.5, 13.5, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 8, 1, 0, -1, 155, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [15, 8, 1, 0, 1, -155, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [17, 8, 1, 0, -1, 135, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [17, 8, 1, 0, 1, -135, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [1, 6, 0, 3, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.superSize,
          g.halfStats,
          g.halfStats,
          g.halfStats,
          g.halfStats,
        ]),
        TYPE: exports.thrasher,

        COLOR: 6,
      },
    },
    {
      POSITION: [1, 6, 0, 3, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.superSize,
          g.halfStats,
          g.halfStats,
          g.halfStats,
          g.halfStats,
        ]),
        TYPE: exports.thrasher,

        COLOR: 6,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [25, 0, 0, 0, 0, 0, 0],
      TYPE: exports.Vbaltylahandsaw1,
    },
    {
      POSITION: [17, 12, 0, 0, 0, 0, 0],
      TYPE: exports.Vbaltylahandsaw3,
    },
    {
      POSITION: [17, -3.5, 2, -20, 0, 1],
      TYPE: exports.Vbaltylahandsaw1,
    },
    {
      POSITION: [17, -3.5, -2, 20, 0, 1],
      TYPE: exports.Vbaltylahandsaw1,
    },
    {
      POSITION: [17, 0, 0, 0, 10, 1],
      TYPE: exports.Vbaltylahandsaw4,
    },
    {
      POSITION: [10, 15, 7, 0, 0, 0, 0],
      TYPE: exports.Vbaltylahandsaw2,
    },
    {
      POSITION: [10, 15, -7, 0, 0, 0, 0],
      TYPE: exports.Vbaltylahandsaw2,
    },
  ],
};
exports.Vbaltyla = {
  PARENT: [exports.voidlordRangedBoss],
  NAME: "Baltyla",
  LABEL: "The Corrupted",
  HAS_NO_RECOIL: true,
  VALUE: 6500000,
  SIZE: 35,
  COLOR: 19,
  MAX_CHILDREN: 10,
  HAS_NO_RECOIL: true,
  MAX_CHILDREN: 30,
  BODY: {
    PENETRATION: 5.9,
    SPEED: 3.75,
    FOV: 2.75,
    RANGE: 90,
    DENSITY: 1.55,
    HEALTH: 8000,
    REGEN: -1,
    DAMAGE: 4,
    PUSHABILITY: 0,
    HAS_NO_RECOIL: true,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.9, //bullet damage
    pen: 0.75, //bullet penetration
    str: 0.9, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0.2, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  GUNS: [
    {
      POSITION: [10, 9, 1.2, 8, 0, -160, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.greaterSpeed,
          g.halfStats,
          g.halfStats,
          g.halfStats,
          g.halfStats,
          g.halfStats,
        ]),
        TYPE: exports.glitch,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [10, 9, 1.2, 8, 0, 160, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.greaterSpeed,
          g.halfStats,
          g.halfStats,
          g.halfStats,
          g.halfStats,
          g.halfStats,
        ]),
        TYPE: exports.glitch,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [10, 9, 1.2, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.greaterSpeed,
          g.superSize,
          g.halfStats,
          g.halfStats,
          g.halfStats,
          g.halfStats,
          g.halfStats,
          g.halfStats,
          g.halfStats,
        ]),
        TYPE: exports.nulltype,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 180, 1],
      TYPE: [exports.Vbaltylahand1, { COLOR: 13 }],
    },

    {
      POSITION: [17, 17, -17, -15, 180, 1],
      TYPE: [exports.Vbaltylahand2, { COLOR: 13 }],
    },
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: [exports.Vbaltylabody3, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [15, 0, 0, 180, 180, 1],
      TYPE: [exports.Vbaltylabody, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.spikeBody2],
    },
    {
      POSITION: [23, 0, 0, 360, 0, 0],
      TYPE: [exports.spikeBody2],
    },
  ],
};
//DEV TANKS
exports.omegaReaper = {
  PARENT: [exports.xhunter, exports.mortar],
  LABEL: "Omega-Reaper",
  DANGER: 7,
  SIZE: 25,
  HAS_NO_RECOIL: true,
  SPECIAL_EFFECT: "Legend",
  BODY: {
    SPEED: base.SPEED * 1.5,
    HEALTH: base.HEALTH * 1.7,
    DAMAGE: base.DAMAGE * 1.6,
    SHIELD: base.SHIELD,
    REGEN: base.REGEN * 2,
  },
  VOID_CREATION: 1,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.imageMaker,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 8, 0, 90, 270, 0],
      TYPE: exports.reaper,
    },
    {
      POSITION: [16, 8, 0, 270, 270, 0],
      TYPE: exports.reaper,
    },
    {
      POSITION: [30, 0, 0, 0, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.starBody],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.starBody],
    },
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: [exports.imageMaker],
    },
  ],
  GUNS: [
    ...extraSideGuns,
    ...twinGuns,
    ...sideGuns,
    ...hunterGuns,
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [5, 12, -1.3, 0, 0, 0, 0],
    },
  ],
};
exports.grimReaper = {
  PARENT: [exports.xhunter, exports.mortar],
  LABEL: "Grim-Reaper",
  DANGER: 7,
  HAS_NO_RECOIL: true,
  SIZE: 40,
  SPECIAL_EFFECT: "Legend",
  BODY: {
    SPEED: base.SPEED * 10,
    HEALTH: base.HEALTH * 20,
    DAMAGE: base.DAMAGE * 20,
    SHIELD: base.SHIELD,
    REGEN: base.REGEN * 2,
  },
  VOID_CREATION: 1,
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.imageMaker,
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 8, 0, 90, 270, 0],
      TYPE: exports.teraReaper,
    },
    {
      POSITION: [16, 8, 0, 270, 270, 0],
      TYPE: exports.teraReaper,
    },
    {
      POSITION: [30, 0, 0, 0, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.starBody],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.starBody],
    },
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: [exports.imageMaker],
    },
  ],
  GUNS: [
    ...cruiserGuns,
    ...destroyerGun,
    ...extraSideGuns,
    ...twinGuns,
    ...sideGuns,
    ...hunterGuns,
    ...builderGun,
    ...beeGuns,
    ...pounderGun,
    {
      POSITION: [8, 12.5, 0.8, 7, 0, 150, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory]),
        TYPE: exports.minionreaper,
        MAX_CHILDREN: 3,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [8, 12.5, 0.8, 7, 0, -150, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory]),
        TYPE: exports.minionreaper,
        MAX_CHILDREN: 3,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [5, 12, -1.3, 0, 0, 0, 0],
    },
  ],
};
exports.colortest = {
  PARENT: [exports.genericTank],
  LABEL: "Color Test",
  COLOR: ["#34066b"],
};
exports.arenaslayerpl = {
  PARENT: [exports.genericTank],
  LABEL: "Diepian Closer",
  BODY: {
    SPEED: 4,
    HEALTH: 2500,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 400,
  DANGER: 10,
  IGNORE_COLLISION: true,
  SIZE: 80,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [13, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.doubleHealth,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.sniperarenaslayer = {
  PARENT: [exports.genericTank],
  LABEL: "Diepian Sniper Closer",
  BODY: {
    SPEED: 4,
    HEALTH: 2500,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 400,
  DANGER: 10,
  IGNORE_COLLISION: true,
  SIZE: 80,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.sniper,
          g.power,
          g.doubleHealth,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.macharenaslayer = {
  PARENT: [exports.genericTank],
  LABEL: "Diepian Machine Closer",
  BODY: {
    SPEED: 4,
    HEALTH: 2500,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 400,
  DANGER: 10,
  IGNORE_COLLISION: true,
  SIZE: 80,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 1.4, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.mach,
          g.doubleHealth,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.flankarenaslayer = {
  PARENT: [exports.genericTank],
  LABEL: "Diepian Flank Closer",
  BODY: {
    SPEED: 4,
    HEALTH: 2500,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 400,
  DANGER: 10,
  SIZE: 80,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [13, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.doubleHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 0, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.doubleHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.twinarenaslayer = {
  PARENT: [exports.genericTank],
  LABEL: "Diepian Twin Closer",
  BODY: {
    SPEED: 4,
    HEALTH: 2500,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 400,
  DANGER: 10,
  SIZE: 80,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [13, 8, 1, 0, -5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.doubleHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.doubleHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.damagedArenaCloserpl = {
  PARENT: [exports.genericTank],
  LABEL: "Damaged Arena Closer",
  ORBIT_DISTANCE: 250,
  BODY: {
    SPEED: 8,
    HEALTH: 1000,
    RESIST: 1,
    IGNORE_COLLISION: true,
    ACCELERATION: 2,
    DENSITY: 30,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SIZE: 50,
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.superHealth,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.triangledamagedArenaCloser = {
  PARENT: [exports.genericTank],
  LABEL: "Damaged Arena Tri-Angle",
  ORBIT_DISTANCE: 250,
  BODY: {
    SPEED: 8,
    HEALTH: 1000,
    RESIST: 1,
    IGNORE_COLLISION: true,
    ACCELERATION: 2,
    DENSITY: 30,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SIZE: 50,
  HAS_NO_RECOIL: false,
  GUNS: [
    {
      POSITION: [14.5, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.superHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [13.5, 10, 1, 0, -1, 145, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13.5, 10, 1, 0, 1, 224, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    // ...triangleThrusterGuns,
  ],
};
exports.dronedamagedArenaCloserpl = {
  PARENT: [exports.genericTank],
  LABEL: "Damaged Arena Director",
  ORBIT_DISTANCE: 250,
  BODY: {
    SPEED: 8,
    HEALTH: 1000,
    RESIST: 1,
    ACCELERATION: 2,
    DENSITY: 30,
  },
    IGNORE_COLLISION: true,
    MAX_CHILDREN: 6,
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SIZE: 50,
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 11, 1.6, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.power,
          g.superHealth,
        ]),
        TYPE: [exports.drone, { IGNORE_COLLISION: true }],
      },
    },
  ],
};
exports.OverseerdamagedArenaCloser = {
  PARENT: [exports.genericTank],
  LABEL: "Damaged Arena Overseer",
  ORBIT_DISTANCE: 250,
  BODY: {
    SPEED: 8,
    HEALTH: 1000,
    RESIST: 1,
    ACCELERATION: 2,
    DENSITY: 30,
  },
    IGNORE_COLLISION: true,
    MAX_CHILDREN: 8,
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SIZE: 50,
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 11, 1.6, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.power,
          g.superHealth,
        ]),
        TYPE: [exports.drone, { IGNORE_COLLISION: true }],
      },
    },
    {
      POSITION: [14.5, 11, 1.6, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.power,
          g.superHealth,
        ]),
        TYPE: [exports.drone, { IGNORE_COLLISION: true }],
      },
    },
  ],
};
exports.FactorydamagedArenaCloser = {
  PARENT: [exports.genericTank],
  LABEL: "Damaged Arena Spawner",
  ORBIT_DISTANCE: 250,
  BODY: {
    SPEED: 8,
    HEALTH: 1000,
    RESIST: 1,
    ACCELERATION: 2,
    DENSITY: 30,
  },
    IGNORE_COLLISION: true,
    MAX_CHILDREN: 4,
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SIZE: 50,
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 8, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.power,
          g.superHealth,
        ]),
        TYPE: exports.arenaMinion,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [12, 14, 1, 0, 0, 0, 0],
    },
  ],
};
exports.flankdamagedArenaCloser = {
  PARENT: [exports.genericTank],
  LABEL: "Damaged Arena Flank",
  ORBIT_DISTANCE: 250,
  BODY: {
    SPEED: 8,
    HEALTH: 1000,
    RESIST: 1,
    ACCELERATION: 2,
    DENSITY: 30,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SIZE: 50,
  IGNORE_COLLISION: true,
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.superHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [14.5, 11, 1, 0, 0, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.superHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.duodamagedArenaCloser = {
  PARENT: [exports.genericTank],
  LABEL: "Damaged Arena Duo",
  ORBIT_DISTANCE: 250,
  BODY: {
    SPEED: 8,
    HEALTH: 1000,
    RESIST: 1,
    ACCELERATION: 2,
    DENSITY: 30,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SIZE: 50,
  IGNORE_COLLISION: true,
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 9.3, 1, 0, -5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.superHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [14.5, 9.3, 1, 0, 5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.superHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.triodamagedArenaCloser = {
  PARENT: [exports.genericTank],
  LABEL: "Damaged Arena Trio",
  ORBIT_DISTANCE: 250,
  BODY: {
    SPEED: 8,
    HEALTH: 1000,
    RESIST: 1,
    ACCELERATION: 2,
    DENSITY: 30,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SIZE: 50,
  HAS_NO_RECOIL: true,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 9.3, 1, 0, -2, -15, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.superHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [14.5, 9.3, 1, 0, 2, 15, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.superHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [16.5, 9.3, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.superHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.trapdamagedArenaCloser = {
  PARENT: [exports.genericTank],
  LABEL: "Damaged Arena Trapper",
  ORBIT_DISTANCE: 250,
  BODY: {
    SPEED: 8,
    HEALTH: 1000,
    RESIST: 1,
    ACCELERATION: 2,
    DENSITY: 30,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SIZE: 50,
  IGNORE_COLLISION: true,
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 9.3, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2.3, 9.3, 1.6, 14.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.power,
          g.superHealth,
          g.halfDamage,
        ]),
        TYPE: [exports.trap, { IGNORE_COLLISION: true }],
      },
    },
  ],
};
exports.autodamagedarena = {
  PARENT: [exports.genericTank],
  LABEL: "Damaged Arena-3",
  BODY: {
    SPEED: 8,
    HEALTH: 1000,
    RESIST: 1,
    ACCELERATION: 2,
    DENSITY: 30,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SIZE: 50,
  HAS_NO_RECOIL: true,
  FACING_TYPE: "autospin",
  IGNORE_COLLISION: true,
  TURRETS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 9, 0, 0, 190, 0],
      TYPE: exports.damagedArenaCloserTurret,
    },
    {
      POSITION: [10, 9, 0, 120, 190, 0],
      TYPE: exports.damagedArenaCloserTurret,
    },
    {
      POSITION: [10, 9, 0, -120, 190, 0],
      TYPE: exports.damagedArenaCloserTurret,
    },
  ],
};
exports.builddamagedArenaCloser = {
  PARENT: [exports.genericTank],
  LABEL: "Damaged Arena Builder",
  ORBIT_DISTANCE: 250,
  BODY: {
    SPEED: 8,
    HEALTH: 1000,
    RESIST: 1,
    ACCELERATION: 2,
    DENSITY: 30,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SIZE: 50,
  HAS_NO_RECOIL: true,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 13.3, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2.3, 13.3, 1.2, 14.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.pound,
          g.power,
          g.superHealth,
          g.halfDamage,
        ]),
        TYPE: [exports.setBlock, { IGNORE_COLLISION: true }],
      },
    },
  ],
};
exports.smashdamagedArenaCloser = {
  PARENT: [exports.genericTank],
  LABEL: "Damaged Arena Smasher",
  /*/CONTROLLERS: ["fastspin"],/*/
  DANGER: 7,
  BODY: {
    SPEED: 8.9,
    HEALTH: 2750,
    RESIST: 1.2,
    ACCELERATION: 2,
    DENSITY: 30,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SIZE: 50,
  HAS_NO_RECOIL: true,
  IGNORE_COLLISION: true,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
  IS_SMASHER: true,
  SKILL_CAP: [smshskl, 0, 0, 0, 0, smshskl, smshskl, smshskl, smshskl, smshskl],
  STAT_NAMES: statnames.smasher,
};
exports.arenaguardpl = {
  PARENT: [exports.genericTank],
  LABEL: "Arena Guard",
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SPECIAL_EFFECT: "Legend",
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.trapperguard = {
  PARENT: [exports.genericTank],
  LABEL: "Trapper Guard",
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 9, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 9, 1.6, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.power,
          g.greaterHealth,
          g.lesserPenetration,
          g.lesserDamage,
        ]),
        TYPE: [exports.trap, { IGNORE_COLLISION: true }],
      },
    },
  ],
};
exports.builderguard = {
  PARENT: [exports.genericTank],
  LABEL: "Builder Guard",
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 15, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 15, 1.2, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.power,
          g.lesserDamage,
          g.lesserSpeed,
          g.doubleReload,
        ]),
        TYPE: [exports.setBlock, { IGNORE_COLLISION: true }],
      },
    },
    {
      POSITION: [15, 15, 1, 0, 0, 0, 0],
    },
  ],
};
exports.engiguard = {
  PARENT: [exports.genericTank],
  LABEL: "Engineer Guard",
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [3, 14, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.power,
          g.lesserDamage,
          g.lesserSpeed,
          g.minorSpeed,
          g.doubleReload,
          g.superHealth,
          g.greaterHealth,
          g.doublePenetration,
        ]),
        TYPE: [exports.arenaPillbox, { IGNORE_COLLISION: true }],
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
  ],
};
exports.blockadeguard = {
  PARENT: [exports.genericTank],
  LABEL: "Barricade Guard",
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 9, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [5, 9, 1.6, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.power,
          g.lesserHealth,
          g.lesserPenetration,
          g.lesserDamage,
        ]),
        TYPE: [exports.trap, { IGNORE_COLLISION: true }],
      },
    },
    {
      POSITION: [5, 9, 1.6, 15, 0, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.power,
          g.lesserHealth,
          g.lesserPenetration,
          g.lesserDamage,
        ]),
        TYPE: [exports.trap, { IGNORE_COLLISION: true }],
      },
    },
    {
      POSITION: [5, 9, 1.6, 12, 0, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.power,
          g.lesserHealth,
          g.lesserPenetration,
          g.lesserDamage,
        ]),
        TYPE: [exports.trap, { IGNORE_COLLISION: true }],
      },
    },
  ],
};
exports.autoguard = {
  PARENT: [exports.genericTank],
  LABEL: "Guard-3",
  FACING_TYPE: "autospin",
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  IGNORE_COLLISION: true,
  TURRETS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 9, 0, 0, 190, 0],
      TYPE: exports.arenaTurret,
    },
    {
      POSITION: [10, 9, 0, 120, 190, 0],
      TYPE: exports.arenaTurret,
    },
    {
      POSITION: [10, 9, 0, -120, 190, 0],
      TYPE: exports.arenaTurret,
    },
  ],
};
exports.auto6guard = {
  PARENT: [exports.genericTank],
  LABEL: "Guard-6",
  FACING_TYPE: "autospin",
  BODY: {
    SPEED: 4,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  IGNORE_COLLISION: true,
  TURRETS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 9, 0, 0, 190, 0],
      TYPE: exports.arenaTurret,
    },
    {
      POSITION: [10, 9, 0, 120, 190, 0],
      TYPE: exports.arenaTurret,
    },
    {
      POSITION: [10, 9, 0, -120, 190, 0],
      TYPE: exports.arenaTurret,
    },
    {
      POSITION: [10, 9, 0, 180, 190, 0],
      TYPE: exports.arenaTurret,
    },
    {
      POSITION: [10, 9, 0, 60, 190, 0],
      TYPE: exports.arenaTurret,
    },
    {
      POSITION: [10, 9, 0, -60, 190, 0],
      TYPE: exports.arenaTurret,
    },
  ],
};
exports.directorguard = {
  PARENT: [exports.genericTank],
  LABEL: "Director Guard",
  MAX_CHILDREN: 6,
  BODY: {
    SPEED: 4,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 11, 1.4, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.greaterDamage,
          g.doubleResistance,
          g.halfSpeed,
        ]),
        TYPE: [exports.drone, { IGNORE_COLLISION: true }],
        AUTO_FIRE: true,
      },
    },
  ],
};
exports.overguard = {
  PARENT: [exports.genericTank],
  LABEL: "Over Guard",
  MAX_CHILDREN: 6,
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 11, 1.4, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.greaterDamage,
          g.doubleResistance,
          g.halfSpeed,
        ]),
        TYPE: [exports.drone, { IGNORE_COLLISION: true }],
        AUTO_FIRE: true,
      },
    },
    {
      POSITION: [14, 11, 1.4, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.greaterDamage,
          g.doubleResistance,
          g.halfSpeed,
        ]),
        AUTOFIRE: true,
        TYPE: [exports.drone, { IGNORE_COLLISION: true }],
      },
    },
  ],
};
exports.lordguard = {
  PARENT: [exports.genericTank],
  LABEL: "Guard Captain",
  MAX_CHILDREN: 8,
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 11, 1.4, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.greaterDamage,
          g.doubleResistance,
          g.halfSpeed,
        ]),
        AUTOFIRE: true,
        TYPE: [exports.drone, { IGNORE_COLLISION: true }],
      },
    },
    {
      POSITION: [14, 11, 1.4, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.greaterDamage,
          g.doubleResistance,
          g.halfSpeed,
        ]),
        AUTOFIRE: true,
        TYPE: [exports.drone, { IGNORE_COLLISION: true }],
      },
    },
    {
      POSITION: [14, 11, 1.4, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.greaterDamage,
          g.doubleResistance,
          g.halfSpeed,
        ]),
        AUTOFIRE: true,
        TYPE: [exports.drone, { IGNORE_COLLISION: true }],
      },
    },
    {
      POSITION: [14, 11, 1.4, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.greaterDamage,
          g.doubleResistance,
          g.halfSpeed,
        ]),
        AUTOFIRE: true,
        TYPE: [exports.drone, { IGNORE_COLLISION: true }],
      },
    },
  ],
};
exports.spawnerguard = {
  PARENT: [exports.genericTank],
  LABEL: "Spawner Guard",
  MAX_CHILDREN: 3,
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 15, 1, 14, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.power,
          g.lesserSpeed,
          g.greaterReload,
          g.lesserPenetration,
        ]),
        AUTOFIRE: true,
        TYPE: exports.arenaMinion,
      },
    },
    {
      POSITION: [11, 15, 1, 0, 0, 0, 0],
    },
  ],
};
exports.duospawnerguard = {
  PARENT: [exports.genericTank],
  LABEL: "Duo-Spawner Guard",
  MAX_CHILDREN: 6,
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 12, 1, 0, 0, 90, 0],
    },
    {
      POSITION: [2, 15, 1, 14, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.power,
          g.lesserSpeed,
          g.greaterReload,
          g.lesserPenetration,
        ]),
        AUTOFIRE: true,
        TYPE: exports.arenaMinion,
      },
    },
    {
      POSITION: [11, 15, 1, 0, 0, 90, 0],
    },
    {
      POSITION: [14, 12, 1, 0, 0, -90, 0],
    },
    {
      POSITION: [2, 15, 1, 14, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.power,
          g.lesserSpeed,
          g.greaterReload,
          g.lesserPenetration,
        ]),
        AUTOFIRE: true,
        TYPE: exports.arenaMinion,
      },
    },
    {
      POSITION: [11, 15, 1, 0, 0, -90, 0],
    },
  ],
};
exports.flandaguard = {
  PARENT: [exports.genericTank],
  LABEL: "Arena Flank Guard",
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  IGNORE_COLLISION: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserPenetration,
          g.greaterDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserPenetration,
          g.greaterDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserPenetration,
          g.greaterDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.hexaguard = {
  PARENT: [exports.genericTank],
  LABEL: "Hexa Guard",
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  IGNORE_COLLISION: true,
  SIZE: 26,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserPenetration,
          g.greaterDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserPenetration,
          g.greaterDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserPenetration,
          g.greaterDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 0, 60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserPenetration,
          g.greaterDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 0, -60, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserPenetration,
          g.greaterDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 0, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserPenetration,
          g.greaterDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.octoguard = makeMulti(
  {
    PARENT: [exports.genericTank],
    BODY: {
      SPEED: 6,
      HEALTH: 400,
    },
    SKILL_CAP: [
      15, //reload
      15, //Penetration
      15, //bullet hp
      15, //bullet dmg
      15, //bullet spd
      15, //shield
      15, //body dmg
      15, // body hp
      15, //shield regen
      15, //body speed
    ],
    ORBIT_DISTANCE: 150,
    IGNORE_COLLISION: true,
    HAS_NO_RECOIL: true,
    SIZE: 26,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [14, 9, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.power,
            g.lesserSpeed,
            g.lesserPenetration,
            g.greaterDamage,
          ]),
          TYPE: exports.arenaBullet,
        },
      },
      {
        POSITION: [14, 9, 1, 0, 0, 45, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.power,
            g.lesserSpeed,
            g.lesserPenetration,
            g.greaterDamage,
          ]),
          TYPE: exports.arenaBullet,
        },
      },
    ],
  },
  4,
  "Octo Guard"
);
exports.twinguard = {
  PARENT: [exports.genericTank],
  LABEL: "Twin Guard",
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  IGNORE_COLLISION: true,
  SIZE: 26,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.triguard = {
  PARENT: [exports.genericTank],
  LABEL: "Tri Guard",
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  IGNORE_COLLISION: true,
  SIZE: 26,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 9, 1, 1, -1, -20, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 9, 1, 1, 1, 20, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [18, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.tripguard = {
  PARENT: [exports.genericTank],
  LABEL: "Triplet Guard",
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  HAS_NO_RECOIL: true,
  IGNORE_COLLISION: true,
  SIZE: 26,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 9, 1, 1, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 9, 1, 1, 5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [18, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.pentashotguard = {
  PARENT: [exports.genericTank],
  LABEL: "Penta Guard",
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  IGNORE_COLLISION: true,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 9, 1, 2, -2, -40, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [12, 9, 1, 2, 2, 40, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 9, 1, 1, -1, -20, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 9, 1, 1, 1, 20, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [18, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.twinflankguard = {
  PARENT: [exports.genericTank],
  LABEL: "Twin Flank Guard",
  BODY: {
    SPEED: 6,
    HEALTH: 400,
  },
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  ORBIT_DISTANCE: 150,
  IGNORE_COLLISION: true,
  HAS_NO_RECOIL: true,
  SIZE: 26,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, -5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, -5, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [14, 9, 1, 0, 5, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
//BOSSES
exports.damagedArenaCloser = {
  PARENT: [exports.neutralRangedBoss],
  LABEL: "Damaged Arena Closer",
  LAYER: 75,
  COPY_LAYER: true,
  IGNORE_COLLISION: true,
  ORBIT_DISTANCE: 250,
  BODY: {
    FOV: 10,
    SPEED: 8,
    HEALTH: 1000,
    SHIELD: 0,
    REGEN: 0,
    RESIST: 1,
    ACCELERATION: 2,
    DENSITY: 30,
  },
  VALUE: 1000000,
  SIZE: 50,
  HAS_NO_RECOIL: true,
  COLOR: 3,
  AI_TARGET: "mostDeadly",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.superHealth,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.arenaslayer = {
  PARENT: [exports.damagedArenaCloser],
  LABEL: "Diepian Closer",
  BODY: {
    FOV: 10,
    SPEED: 4,
    HEALTH: 2500,
  },
  ORBIT_DISTANCE: 400,
  DANGER: 10,
  VALUE: 2000000,
  SIZE: 80,
  COLOR: 35,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [13, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.superHealth,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};

exports.CX2 = {
  PARENT: [exports.damagedArenaCloser],
  LABEL: "Plague Master",
  NAME: "CX, The Arrasian Lord",
  ALLOW_PLATE: true,
  COLOR: 18,
  BODY: {
    FOV: 10,
    SPEED: 4,
    HEALTH: 5500,
  },
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1.3, //bullet damage
    pen: 1, //bullet penetration
    str: 1.5, //bullet health
    atk: 0, //bullet speed
    spd: 0.7, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  ORBIT_DISTANCE: 550,
  DANGER: 12,
  VALUE: 5000000,
  SIZE: 85,
  GUNS: [
    {
      POSITION: [18, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,

          g.superHealth,
          g.superReload,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [18, 8, 1.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
          g.superReload,
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.doubleHealth,
          g.superReload,
        ]),
        TYPE: exports.hyperMissile,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, -142.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: exports.rocket,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 142.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: exports.rocket,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, -135, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: exports.rocket,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 135, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: exports.rocket,
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: exports.rocket,
      },
    },
    {
      POSITION: [18, 3, 1, 0, 0, -157.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 3, 1, 0, 0, 157.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.fallenCX = {
  PARENT: [exports.damagedArenaCloser],
  LABEL: "Plague Master",
  NAME: "CX",
  ALLOW_PLATE: true,
  COLOR: 18,
  BODY: {
    FOV: 10,
    SPEED: 3,
    HEALTH: 6000,
  },
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1.3, //bullet damage
    pen: 1, //bullet penetration
    str: 1.5, //bullet health
    atk: 0, //bullet speed
    spd: 0.7, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  ORBIT_DISTANCE: 550,
  DANGER: 12,
  VALUE: 7000000,
  SIZE: 100,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 180, 360, 1],
      TYPE: exports.eliteAutoSwarmSentinel,
    },
    {
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: exports.eliteAutoSwarmSentinel,
    },
  ],
  GUNS: [
    {
      POSITION: [18, 12, 1.3, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.superHealth,
          g.greaterHealth,
          g.greaterHealth,
          g.superReload,
        ]),
        TYPE: exports.swarmSentinelMissile,
        IGNORE_COLLISION: true,
      },
    },
    {
      POSITION: [20, 8, 1.3, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.doubleHealth,
          g.greaterHealth,
          g.superReload,
        ]),
        TYPE: exports.swarmSentinelSkimmerMissile,
      },
    },
    {
      POSITION: [4, 9, 1.3, 15, 0, -142.5, 0],
    },
    {
      POSITION: [4, 9, 1.3, 15, 0, 142.5, 0],
    },
    {
      POSITION: [4, 9, 1.3, 15, 0, -135, 0],
    },
    {
      POSITION: [4, 9, 1.3, 15, 0, 135, 0],
    },
    {
      POSITION: [4, 9, 1.3, 15, 0, 180, 0],
    },
    {
      POSITION: [18, 8, 1.3, 0, 0, -142.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: exports.swarmSentinelSkimmerMissile,
      },
    },
    {
      POSITION: [18, 8, 1.3, 0, 0, 142.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: exports.swarmSentinelSkimmerMissile,
      },
    },
    {
      POSITION: [18, 8, 1.3, 0, 0, -135, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: exports.swarmSentinelSkimmerMissile,
      },
    },
    {
      POSITION: [18, 8, 1.3, 0, 0, 135, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: exports.swarmSentinelSkimmerMissile,
      },
    },
    {
      POSITION: [18, 8, 1.3, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: exports.swarmSentinelSkimmerMissile,
      },
    },
    {
      POSITION: [18, 3, 1, 0, 0, -157.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: exports.swarmSentinelMiniMissile,
      },
    },
    {
      POSITION: [18, 3, 1, 0, 0, 157.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: exports.swarmSentinelMiniMissile,
      },
    },
  ],
};
exports.CX = {
  PARENT: [exports.damagedArenaCloser],
  LABEL: "Anti-Virus",
  NAME: "CX",
  ALLOW_PLATE: true,
  BODY: {
    FOV: 10,
    SPEED: 4,
    HEALTH: 5500,
  },
  SKILL: skillSet({
    rld: 0.2, //reload
    dam: 1.3, //bullet damage
    pen: 1, //bullet penetration
    str: 1.5, //bullet health
    atk: 0, //bullet speed
    spd: 0.7, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  ORBIT_DISTANCE: 550,
  DANGER: 12,
  VALUE: 5000000,
  SIZE: 85,
  GUNS: [
    {
      POSITION: [18, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.superHealth,
          g.superReload,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [18, 8, 1.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
          g.superReload,
        ]),
        TYPE: [
          exports.swarmDrone,
          {
            IGNORE_COLLISION: true,
          },
        ],
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.doubleHealth,
          g.superReload,
        ]),
        TYPE: [
          exports.hyperMissile,
          {
            IGNORE_COLLISION: true,
          },
        ],
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, -142.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: [
          exports.rocket,
          {
            IGNORE_COLLISION: true,
          },
        ],
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 142.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: [
          exports.rocket,
          {
            IGNORE_COLLISION: true,
          },
        ],
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, -135, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: [
          exports.rocket,
          {
            IGNORE_COLLISION: true,
          },
        ],
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 135, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: [
          exports.rocket,
          {
            IGNORE_COLLISION: true,
          },
        ],
      },
    },
    {
      POSITION: [18, 8, 1, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: [
          exports.rocket,
          {
            IGNORE_COLLISION: true,
          },
        ],
      },
    },
    {
      POSITION: [18, 3, 1, 0, 0, -157.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: [
          exports.bullet,
          {
            IGNORE_COLLISION: true,
          },
        ],
      },
    },
    {
      POSITION: [18, 3, 1, 0, 0, 157.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.greaterHealth,
        ]),
        TYPE: [
          exports.bullet,
          {
            IGNORE_COLLISION: true,
          },
        ],
      },
    },
  ],
};
exports.arenaguard = {
  PARENT: [exports.damagedArenaCloser],
  LABEL: "Arena Guard",
  BODY: {
    FOV: 10,
    SPEED: 10,
    HEALTH: 500,
  },
  ORBIT_DISTANCE: 150,
  VALUE: 250000,
  SIZE: 26,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.power]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.ranarShrine = {
  PARENT: [exports.damagedArenaCloser],
  // NAME: "Ranar",
  LABEL: "Shrine",
  //CONTROLLERS: ["Dominator"],
  AI_TARGET: "healAllies",
  SIZE: 22,
  VALUE: 100000,
  CAN_BE_ON_LEADERBOARD: false,
  DANGER: 6,
  FIXED_POSITION: true,
  HAS_NO_RECOIL: true,
  BODY: {
    HEALTH: 300,
    DAMAGE: 5,
    SHIELD: 200,
    PUSHABILITY: 0,
    ACCELERATION: 0,
    SPEED: 0,
  },
  SKILL: skillSet({
    dam: 0.2, //bullet damage
    pen: 0.1, //bullet penetration
    str: 0.2, //bullet health
  }),
  GUNS: [],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 0, 1],
      TYPE: [
        exports.ranarDiscipleForm,
        { INDEPENDENT: true, HAS_NO_RECOIL: true, CONTROLLERS: [] },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
};
exports.cxShrine = {
  PARENT: [exports.damagedArenaCloser],
  // NAME: "Ranar",
  LABEL: "Shrine",
  CONTROLLERS: ["Dominator"],
  AI_TARGET: "healAllies",
  SPECIAL_EFFECT: "cxShrine",
  SIZE: 22,
  VALUE: 100000,
  CAN_BE_ON_LEADERBOARD: false,
  DANGER: 6,
  FIXED_POSITION: true,
  BODY: {
    HEALTH: 300,
    DAMAGE: 5,
    SHIELD: 200,
    PUSHABILITY: 0,
    ACCELERATION: 0,
    SPEED: 0,
  },
  SKILL: skillSet({
    dam: 0.2, //bullet damage
    pen: 0.1, //bullet penetration
    str: 0.2, //bullet health
  }),
  GUNS: [],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 0, 1],
      TYPE: [
        exports.CX,
        { INDEPENDENT: true, HAS_NO_RECOIL: true, CONTROLLERS: [] },
      ],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
};
exports.lesserAetherAspect = {
  PARENT: [exports.aetherialRangedBoss],
  LABEL: "Lesser Aspect",
  TYPE: "Aspect",
  DANGER: 9,
  COLOR: 6,
  VALUE: 5000000,
  SHAPE: 8,
  FACING_TYPE: "autospin",
  HAS_NO_RECOIL: true,
  SIZE: 45,
  BODY: {
    SPEED: 3.5,
    PENETRATION: 17.5,
    HEALTH: 500,
    SHIELD: 20.5,
    REGEN: -1,
    DAMAGE: 10,
    PUSHABILITY: 0,
    DENSITY: 23,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 1.6, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 360, 1],
      TYPE: [exports.strongAutoTurret],
    },
    {
      POSITION: [11, 8, 0, 90, 360, 1],
      TYPE: [exports.strongAutoTurret],
    },
    {
      POSITION: [11, 8, 0, 180, 360, 1],
      TYPE: [exports.strongAutoTurret],
    },
    {
      POSITION: [11, 8, 0, -90, 360, 1],
      TYPE: [exports.strongAutoTurret],
    },
    {
      POSITION: [11, 8, 0, 0, 360, 1],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 8, 0, 90, 360, 1],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 8, 0, 180, 360, 1],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 8, 0, -90, 360, 1],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody],
    },
    {
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody],
    },
  ],
};
exports.lesserlightFinder = {
  PARENT: [exports.aetherialRangedBoss],
  LABEL: "Lesser Lightfinder",
  TYPE: "Aspect",
  DANGER: 9,
  COLOR: 6,
  VALUE: 5000000,
  SHAPE: 8,
  FACING_TYPE: "autospin",
  HAS_NO_RECOIL: true,
  SIZE: 45,
  BODY: {
    SPEED: 3.5,
    PENETRATION: 17.5,
    HEALTH: 500,
    SHIELD: 20.5,
    REGEN: -1,
    DAMAGE: 10,
    PUSHABILITY: 0,
    DENSITY: 23,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 1.6, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 360, 1],
      TYPE: [exports.crossbow],
    },
    {
      POSITION: [11, 8, 0, 90, 360, 1],
      TYPE: [exports.crossbow],
    },
    {
      POSITION: [11, 8, 0, 180, 360, 1],
      TYPE: [exports.crossbow],
    },
    {
      POSITION: [11, 8, 0, -90, 360, 1],
      TYPE: [exports.crossbow],
    },
    {
      POSITION: [11, 8, 0, 0, 360, 1],
      TYPE: [exports.dual],
    },
    {
      POSITION: [11, 8, 0, 90, 360, 1],
      TYPE: [exports.dual],
    },
    {
      POSITION: [11, 8, 0, 180, 360, 1],
      TYPE: [exports.dual],
    },
    {
      POSITION: [11, 8, 0, -90, 360, 1],
      TYPE: [exports.dual],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody],
    },
    {
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody],
    },
  ],
};
exports.lesserConstant = {
  PARENT: [exports.aetherialRangedBoss],
  LABEL: "Lesser Constant",
  TYPE: "Aspect",
  DANGER: 9,
  COLOR: 6,
  VALUE: 5000000,
  SHAPE: 8,
  FACING_TYPE: "autospin",
  HAS_NO_RECOIL: true,
  SIZE: 45,
  BODY: {
    SPEED: 3.5,
    PENETRATION: 17.5,
    HEALTH: 500,
    SHIELD: 20.5,
    REGEN: -1,
    DAMAGE: 10,
    PUSHABILITY: 0,
    DENSITY: 23,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 1.6, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 360, 1],
      TYPE: [exports.penta],
    },
    {
      POSITION: [11, 8, 0, 90, 360, 1],
      TYPE: [exports.penta],
    },
    {
      POSITION: [11, 8, 0, 180, 360, 1],
      TYPE: [exports.penta],
    },
    {
      POSITION: [11, 8, 0, -90, 360, 1],
      TYPE: [exports.penta],
    },
    {
      POSITION: [11, 8, 0, 0, 360, 1],
      TYPE: [exports.twin],
    },
    {
      POSITION: [11, 8, 0, 90, 360, 1],
      TYPE: [exports.twin],
    },
    {
      POSITION: [11, 8, 0, 180, 360, 1],
      TYPE: [exports.twin],
    },
    {
      POSITION: [11, 8, 0, -90, 360, 1],
      TYPE: [exports.twin],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody],
    },
    {
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody],
    },
  ],
};
exports.lesserCaster = {
  PARENT: [exports.aetherialRangedBoss],
  LABEL: "Lesser Caster",
  TYPE: "Aspect",
  DANGER: 9,
  COLOR: 6,
  VALUE: 5000000,
  SHAPE: 8,
  FACING_TYPE: "autospin",
  HAS_NO_RECOIL: true,
  SIZE: 45,
  BODY: {
    SPEED: 3.5,
    PENETRATION: 17.5,
    HEALTH: 500,
    SHIELD: 20.5,
    REGEN: -1,
    DAMAGE: 10,
    PUSHABILITY: 0,
    DENSITY: 23,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.8, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 1.6, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 360, 1],
      TYPE: [exports.overlord],
    },
    {
      POSITION: [11, 8, 0, 90, 360, 1],
      TYPE: [exports.overlord],
    },
    {
      POSITION: [11, 8, 0, 180, 360, 1],
      TYPE: [exports.overlord],
    },
    {
      POSITION: [11, 8, 0, -90, 360, 1],
      TYPE: [exports.overlord],
    },
    {
      POSITION: [11, 8, 0, 0, 360, 1],
      TYPE: [exports.shotgun],
    },
    {
      POSITION: [11, 8, 0, 90, 360, 1],
      TYPE: [exports.shotgun],
    },
    {
      POSITION: [11, 8, 0, 180, 360, 1],
      TYPE: [exports.shotgun],
    },
    {
      POSITION: [11, 8, 0, -90, 360, 1],
      TYPE: [exports.shotgun],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody],
    },
    {
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody],
    },
  ],
};
exports.lesserCreed = {
  PARENT: [exports.aetherialRangedBoss],
  LABEL: "Lesser Creed",
  TYPE: "Aspect",
  DANGER: 9,
  COLOR: 6,
  VALUE: 5000000,
  SHAPE: 8,
  HAS_NO_RECOIL: true,
  SIZE: 45,
  BODY: {
    SPEED: 3.5,
    PENETRATION: 17.5,
    HEALTH: 1000,
    SHIELD: 20.5,
    REGEN: -1,
    DAMAGE: 10,
    PUSHABILITY: 0,
    DENSITY: 23,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.8, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 1.6, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      POSITION: [11, 8, 0, -45, 360, 1],
      TYPE: [exports.shotgun],
    },
    {
      POSITION: [11, 8, 0, 45, 360, 1],
      TYPE: [exports.shotgun],
    },
    {
      POSITION: [11, 8, 0, 135, 360, 1],
      TYPE: [exports.shotgun],
    },
    {
      POSITION: [11, 8, 0, -135, 360, 1],
      TYPE: [exports.shotgun],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody],
    },
    {
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody],
    },
  ],
  GUNS: [...twinGuns, ...masterGun, ...extraSideGuns, ...trapGuardGun],
};
exports.lesserSterizer = {
  PARENT: [exports.aetherialRangedBoss],
  LABEL: "Lesser Sterizer",
  TYPE: "Aspect",
  DANGER: 9,
  COLOR: 6,
  VALUE: 5000000,
  SHAPE: 8,
  FACING_TYPE: "autospin",
  HAS_NO_RECOIL: true,
  SIZE: 15,
  BODY: {
    SPEED: 3.5,
    PENETRATION: 17.5,
    HEALTH: 1500,
    SHIELD: 20.5,
    REGEN: -1,
    DAMAGE: 10,
    PUSHABILITY: 0,
    DENSITY: 23,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 1.6, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 360, 1],
      TYPE: [exports.smash],
    },
    {
      POSITION: [11, 8, 0, 90, 360, 1],
      TYPE: [exports.smash],
    },
    {
      POSITION: [11, 8, 0, 180, 360, 1],
      TYPE: [exports.smash],
    },
    {
      POSITION: [11, 8, 0, -90, 360, 1],
      TYPE: [exports.smash],
    },
    {
      POSITION: [11, 8, 0, 45, 360, 1],
      TYPE: [exports.shrapshot],
    },
    {
      POSITION: [11, 8, 0, -45, 360, 1],
      TYPE: [exports.shrapshot],
    },
    {
      POSITION: [11, 8, 0, 135, 360, 1],
      TYPE: [exports.shrapshot],
    },
    {
      POSITION: [11, 8, 0, -135, 360, 1],
      TYPE: [exports.shrapshot],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody],
    },
    {
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody],
    },
  ],
};
exports.Unawakened1 = {
  PARENT: [exports.rangedEnemy],
  LABEL: "Unawakened",
  TYPE: "Aspect",
  DANGER: 9,
  COLOR: 6,
  VALUE: 50000,
  SHAPE: 8,
  FACING_TYPE: "autospin",
  HAS_NO_RECOIL: true,
  SIZE: 15,
  BODY: {
    SPEED: 3.5,
    PENETRATION: 10.5,
    HEALTH: 15,
    SHIELD: 7.5,
    REGEN: -1,
    DAMAGE: 5,
    PUSHABILITY: 0,
    DENSITY: 23,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.7, //bullet damage
    pen: 0.7, //bullet penetration
    str: 0.7, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 1.6, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 360, 0],
      TYPE: [exports.strongAuto3Turret],
    },
    {
      POSITION: [11, 8, 0, 90, 360, 0],
      TYPE: [exports.strongAuto3Turret],
    },
    {
      POSITION: [11, 8, 0, 180, 360, 0],
      TYPE: [exports.strongAuto3Turret],
    },
    {
      POSITION: [11, 8, 0, -90, 360, 0],
      TYPE: [exports.strongAuto3Turret],
    },
  ],
};
exports.Unawakened2 = {
  PARENT: [exports.rangedEnemy],
  LABEL: "Unawakened",
  TYPE: "Aspect",
  DANGER: 9,
  COLOR: 6,
  VALUE: 50000,
  SHAPE: 8,
  FACING_TYPE: "autospin",
  HAS_NO_RECOIL: true,
  SIZE: 15,
  BODY: {
    SPEED: 3.5,
    PENETRATION: 10.5,
    HEALTH: 15,
    SHIELD: 7.5,
    REGEN: -1,
    DAMAGE: 5,
    PUSHABILITY: 0,
    DENSITY: 23,
  },
  SKILL: skillSet({
    rld: 0.6, //reload
    dam: 0.7, //bullet damage
    pen: 0.6, //bullet penetration
    str: 0.6, //bullet health
    spd: 0.6, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 1.6, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 360, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [11, 8, 0, 90, 360, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [11, 8, 0, 180, 360, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
    {
      POSITION: [11, 8, 0, -90, 360, 0],
      TYPE: [exports.weakAutoSmasherTurret],
    },
  ],
};
exports.Unawakened3 = {
  PARENT: [exports.meleeEnemy],
  LABEL: "Unawakened",
  TYPE: "Aspect",
  DANGER: 9,
  COLOR: 6,
  VALUE: 50000,
  SHAPE: 8,
  FACING_TYPE: "autospin",
  HAS_NO_RECOIL: true,
  SIZE: 15,
  BODY: {
    SPEED: 3.5,
    PENETRATION: 10.5,
    HEALTH: 35,
    SHIELD: 10,
    REGEN: -1,
    DAMAGE: 7.5,
    PUSHABILITY: 0,
    DENSITY: 23,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 1.6, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [21, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody],
    },
  ],
};
exports.bossnulltype = {
  PARENT: [exports.voidlordRangedBoss],
  TYPE: "thrasher",
  LABEL: "void seeker",
  SIZE: 35,
  VALUE: 1350000,
  COLOR: 19,
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.1, //bullet damage
    pen: 0.3, //bullet penetration
    str: 0.3, //bullet health
    spd: 0.3, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    HEALTH: 1500,
    REGEN: 0,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 120, 0],
      TYPE: [
        exports.autoSmasherTurret,
        {
          INDEPENDENT: true,
          CONTROLERS: ["nearestDifferentMaster"],
          COLOR: 16,
        },
      ],
    },
    {
      POSITION: [18, 0, 0, -120, 120, 0],
      TYPE: [
        exports.autoSmasherTurret,
        {
          INDEPENDENT: true,
          CONTROLERS: ["nearestDifferentMaster"],
          COLOR: 16,
        },
      ],
    },
    {
      POSITION: [18, 0, 0, 120, 120, 0],
      TYPE: [
        exports.autoSmasherTurret,
        {
          INDEPENDENT: true,
          CONTROLERS: ["nearestDifferentMaster"],
          COLOR: 16,
        },
      ],
    },
    {
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.oldAutoSmasherTurret,
        {
          INDEPENDENT: true,
          CONTROLERS: ["nearestDifferentMaster"],
          COLOR: 16,
        },
      ],
    },
    {
      POSITION: [14, 0, 0, 0, 360, 1],
      TYPE: [exports.breakerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [],
};
exports.nulltype = {
  PARENT: [exports.voidlordRangedBoss],
  //  NAME: "Alhazred",
  LABEL: "Ancient",
  SPECIAL_EFFECT: "randomShit",
  SIZE: 30,
  VALUE: 250000,
  SKILL: skillSet({
    rld: 0.4, //reload
    dam: 0.6, //bullet damage
    pen: 0.6, //bullet penetration
    str: 0.6, //bullet health
    atk: 0, //bullet speed
    spd: 0.2, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.breakerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.lurkerBelow = {
  PARENT: [exports.voidlordRangedBoss],
  NAME: "Alhazred",
  LABEL: "Lurker Below",
  SPECIAL_EFFECT: "randomShit",
  MAX_CHILDREN: 50,
  SIZE: 30,
  VALUE: 2500000,
  SKILL: skillSet({
    rld: 0.4, //reload
    dam: 0.6, //bullet damage
    pen: 0.6, //bullet penetration
    str: 0.6, //bullet health
    atk: 0, //bullet speed
    spd: 0.2, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.breakerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.anomalyBounce],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.goodEye, { INDEPENDENT: true }],
    },

    {
      POSITION: [11, 0, 0, 0, 360, 0],
      TYPE: [exports.twinAutoAnomalySpawner],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 72, 360, 0],
      TYPE: [exports.twinAutoAnomalySpawner],
    },
    {
      POSITION: [11, 0, 0, 144, 360, 0],
      TYPE: [exports.twinAutoAnomalySpawner],
    },
    {
      POSITION: [11, 0, 0, 216, 360, 0],
      TYPE: [exports.twinAutoAnomalySpawner],
    },
    {
      POSITION: [11, 0, 0, 288, 360, 0],
      TYPE: [exports.twinAutoAnomalySpawner],
    },
    {
      POSITION: [11, 0, 0, 0, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 72, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
    {
      POSITION: [11, 0, 0, 144, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
    {
      POSITION: [11, 0, 0, 216, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
    {
      POSITION: [11, 0, 0, 288, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
    {
      POSITION: [18, 30, 0, 0, 360, 1],
      TYPE: [
        exports.eldurkturret,
        {
          INDEPENDENT: true,
          COLOR: 16,

          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.minorDamage,
                  g.halfDamage,
                  g.size400,
                  g.lesserSize,
                  g.greaterSize,
                  g.minorReload,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [18, 30, 0, 90, 360, 1],
      TYPE: [
        exports.eldurkturret,
        {
          INDEPENDENT: true,
          COLOR: 16,

          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.minorDamage,
                  g.halfDamage,
                  g.size400,
                  g.lesserSize,
                  g.greaterSize,
                  g.minorReload,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [18, 30, 0, 180, 360, 1],
      TYPE: [
        exports.eldurkturret,
        {
          INDEPENDENT: true,
          COLOR: 16,

          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.minorDamage,
                  g.halfDamage,
                  g.size400,
                  g.lesserSize,
                  g.greaterSize,
                  g.minorReload,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [18, 30, 0, 270, 360, 1],
      TYPE: [
        exports.eldurkturret,
        {
          INDEPENDENT: true,
          COLOR: 16,

          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.minorDamage,
                  g.minorDamage,
                  g.halfDamage,
                  g.size400,
                  g.lesserSize,
                  g.greaterSize,
                  g.minorReload,
                ]),
                TYPE: [exports.damageAura, { COLOR: 0 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
  ],
};
exports.weakNulltype = {
  PARENT: [exports.nulltype],
  SKILL: skillSet({
    rld: 0.4, //reload
    dam: 0.4, //bullet damage
    pen: 0.4, //bullet penetration
    str: 0.4, //bullet health
    atk: 0, //bullet speed
    spd: 0.2, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
};
exports.eldun = {
  PARENT: [exports.voidlordMeleeBoss],
  LABEL: "Eldun",
  SIZE: 20,
  AI_TARGET: "leastDeadly",
  VALUE: 150000,
  IGNORE_COLLISION: true,
  BODY: {
    ACCELERATION: 0.3,
    SPEED: base.SPEED * 3.5,
    HEALTH: 250,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.goodEye, { INDEPENDENT: true }],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 30, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, -30, 190, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 8, 0, 50, 190, 0],
      TYPE: exports.weakAutoSmasherTurret,
    },
    {
      POSITION: [11, 8, 0, -50, 190, 0],
      TYPE: exports.weakAutoSmasherTurret,
    },
  ],
  GUNS: [
    {
      POSITION: [0, 20, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.atmosphere,
          g.minorDamage,
          g.minorDamage,
          g.greaterDamage,
          g.size400,
          g.greaterSize,
          g.superRange,
          g.superReload,
          g.greaterReload,
        ]),
        TYPE: [exports.damageAura, { DIE_AT_RANGE: true, COLOR: 0 }],
        MAX_CHILDREN: 1,
        AUTOFIRE: true,
      },
    },
  ],
};
exports.abundul = {
  PARENT: [exports.voidlordMeleeBoss],
  LABEL: "Eater",
  DANGER: 7,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 0, 190, 0],
      TYPE: exports.strongAuto3Turret,
    },
    {
      POSITION: [11, 8, 0, 180, 190, 0],
      TYPE: exports.strongAuto3Turret,
    },
    {
      POSITION: [11, 8, 0, 90, 190, 0],
      TYPE: exports.strongAuto3Turret,
    },
    {
      POSITION: [11, 8, 0, -90, 190, 0],
      TYPE: exports.strongAuto3Turret,
    },
  ],
};
exports.abudun = {
  PARENT: [exports.voidlordMeleeBoss],
  LABEL: "Cruncher",
  DANGER: 7,
  GUNS: [
    /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [15, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 12.5, 1.5, 13.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.doubleHealth,
          g.greaterSize,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [11, 8, 0, 135, 190, 0],
      TYPE: exports.strongAuto3Turret,
    },
    {
      POSITION: [11, 8, 0, -135, 190, 0],
      TYPE: exports.strongAuto3Turret,
    },
  ],
};
exports.elder = {
  PARENT: [exports.voidlordMeleeBoss],
  // NAME: "Abdul",
  LABEL: "Elder",
  SIZE: 30,
  SKILL: skillSet({
    rld: 0,
    dam: 0,
  }),
  AI_TARGET: "leastDeadly",
  VALUE: 150000,
  IGNORE_COLLISION: true,
  BODY: {
    ACCELERATION: 0.3,
    SPEED: base.SPEED * 1.5,
    HEALTH: 600,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.anomalyBounce],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.goodEye, { INDEPENDENT: true }],
    },
  ],
  GUNS: [
    {
      POSITION: [0, 20, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.atmosphere,
          g.bitLessDamage,
          g.size400,
          g.lesserSize,
          g.greaterSize,
          g.minorRange,
          g.superReload,
          g.greaterReload,
        ]),
        TYPE: [exports.damageAura, { DIE_AT_RANGE: true, COLOR: 0 }],
        MAX_CHILDREN: 1,
        //AUTOFIRE: true,
      },
    },
  ],
};
exports.bacteria = {
  PARENT: [exports.voidlordMeleeBoss],
   NAME: "Miasma",
  LABEL: "Bacterial Test",
  DEATH_THROES: "RealisticExplosion",
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  SIZE: 20,
  MAX_CHILDREN:2,
  SKILL: skillSet({
    rld: 0,
    dam: 0,
  }),
  AI_TARGET: "leastDeadly",
  VALUE: 150000,
  IGNORE_COLLISION: true,
  BODY: {
    ACCELERATION: 2,
    SPEED: base.SPEED * 1.5,
    HEALTH: 600,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [20.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody2,
    },
  ],
};
exports.bacteriaBurst = makeMulti(
  {
    PARENT: [exports.missile],
    DANGER: 7,
    FACING_TYPE: "random",
    CONTROLLERS: ["alwaysFire"],
    MOTION_TYPE: "glide",
    ALPHA: 0,
    MAX_CHILDREN: 2,
    BODY: {
      SPEED: 0,
      ACCELERATION: 0,
      HEALTH: 9999,
      RANGE: 5,
      DAMAGE: 0,
      },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 18, 1.2, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.minorReload]),
        TYPE: [exports.bacteria,{ 
  PARENT: [exports.voidlordMeleeBoss],
   NAME: "Miasma",
  LABEL: "Bacterial Test",
  INDEPENDANT: true,
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  SIZE: 20,
  SKILL: skillSet({
    rld: 0,
    dam: 0,
  }),
  AI_TARGET: "leastDeadly",
  VALUE: 150000,
  IGNORE_COLLISION: true,
  BODY: {
    ACCELERATION: 2,
    SPEED: base.SPEED * 1.5,
    HEALTH: 600,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [20.5, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody2,
    },
  ],}],
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
  },
  2,
  "Bursting"
);
exports.hiveMind = {
  PARENT: [exports.voidlordRangedBoss],
  LABEL: "Hive Mind",
  SIZE: 30,
  AI_TARGET: "leastDeadly",
  VALUE: 250000,
  BODY: {
    ACCELERATION: 0.3,
    SPEED: base.SPEED * 1.5,
    HEALTH: 450,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },

    {
      POSITION: [11, 0, 0, 0, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 72, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
    {
      POSITION: [11, 0, 0, 144, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
    {
      POSITION: [11, 0, 0, 216, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
    {
      POSITION: [11, 0, 0, 288, 360, 0],
      TYPE: [exports.thrasherSpawner],
    },
  ],
};

exports.weakHiveMind = {
  PARENT: [exports.hiveMind],
  BODY: {
    HEALTH: 450,
    REGEN: 0,
  },
  SKILL: skillSet({
    rld: 0.6, //reload
    dam: 0.6, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.6, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
};
exports.lessereldurk = {
  PARENT: [exports.voidlordMeleeBoss],
  LABEL: "Lesser Eldurk",
  SIZE: 30,
  AI_TARGET: "leastDeadly",
  FACING_TYPE: "autospin",
  VALUE: 500000,
  BODY: {
    ACCELERATION: 0.3,
    SPEED: base.SPEED * 1.5,
    HEALTH: 600,
  },
  TURRETS: [
    {
      POSITION: [18, 30, 0, 0, 360, 1],
      TYPE: [exports.eldurkturret, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [18, 30, 0, 180, 360, 1],
      TYPE: [exports.eldurkturret, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      POSITION: [20, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [8, 7, 1.7, 20, 0, 0, 0],
    },
    {
      POSITION: [20, 7, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [8, 7, 1.7, 20, 0, 180, 0],
    },
  ],
};
exports.eldurk = {
  PARENT: [exports.voidlordMeleeBoss],
  LABEL: "Eldurk",
  SIZE: 30,
  AI_TARGET: "leastDeadly",
  FACING_TYPE: "autospin",
  VALUE: 500000,
  BODY: {
    ACCELERATION: 0.3,
    SPEED: base.SPEED * 1.5,
    HEALTH: 600,
  },
  TURRETS: [
    {
      POSITION: [18, 30, 0, 0, 360, 1],
      TYPE: [exports.eldurkturret, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [18, 30, 0, 90, 360, 1],
      TYPE: [exports.eldurkturret, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [18, 30, 0, 180, 360, 1],
      TYPE: [exports.eldurkturret, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [18, 30, 0, -90, 360, 1],
      TYPE: [exports.eldurkturret, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
  GUNS: [
    {
      POSITION: [20, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [8, 7, 1.7, 20, 0, 0, 0],
    },
    {
      POSITION: [20, 7, 1, 0, 0, -90, 0],
    },
    {
      POSITION: [8, 7, 1.7, 20, 0, -90, 0],
    },
    {
      POSITION: [20, 7, 1, 0, 0, 90, 0],
    },
    {
      POSITION: [8, 7, 1.7, 20, 0, 90, 0],
    },
    {
      POSITION: [20, 7, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [8, 7, 1.7, 20, 0, 180, 0],
    },
    {
      POSITION: [0, 20, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.atmosphere,
          g.minorDamage,
          g.minorDamage,
          g.greaterDamage,
          g.size400,
          g.greaterSize,
          g.superRange,
          g.superReload,
          g.greaterReload,
        ]),
        TYPE: [exports.damageAura, { DIE_AT_RANGE: true, COLOR: 0 }],
        MAX_CHILDREN: 1,
        AUTOFIRE: true,
      },
    },
  ],
};
exports.elderHiveMind = {
  PARENT: [exports.voidlordRangedBoss],
  LABEL: "Elder Hive Mind",
  SIZE: 32,
  AI_TARGET: "leastDeadly",
  VALUE: 1000000,
  BODY: {
    ACCELERATION: 0.3,
    SPEED: base.SPEED * 1,
    HEALTH: 500,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.superDriveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [11, 0, 0, 0, 360, 0],
      TYPE: [exports.twinAutoAnomalySpawner],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 72, 360, 0],
      TYPE: [exports.twinAutoAnomalySpawner],
    },
    {
      POSITION: [11, 0, 0, 144, 360, 0],
      TYPE: [exports.twinAutoAnomalySpawner],
    },
    {
      POSITION: [11, 0, 0, 216, 360, 0],
      TYPE: [exports.twinAutoAnomalySpawner],
    },
    {
      POSITION: [11, 0, 0, 288, 360, 0],
      TYPE: [exports.twinAutoAnomalySpawner],
    },
  ],
};
exports.amalgam = makeMulti(
  {
    PARENT: [exports.voidlordRangedBoss],
    BODY: {
      HEALTH: 500,
    },
    VALUE: 750000,
    FACING_TYPE: "autospin",
    SHAPE: -3,
    SIZE: 35,
    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [15, 9, 1, 0, 0, 60, 0],
      },
      {
        POSITION: [3, 9.5, 1.7, 13.5, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.pound,
            g.destroy,
            g.doubleHealth,
            g.greaterSize,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [11, 0, 0, 180, 360, 0],
        TYPE: [exports.thrasherSpawner],
      },
      {
        POSITION: [11, 0, 0, 60, 360, 0],
        TYPE: [exports.thrasherSpawner],
      },
      {
        POSITION: [11, 0, 0, 240, 360, 0],
        TYPE: [exports.thrasherSpawner],
      },
      {
        POSITION: [5, 8, 0, 0, 190, 1],
        TYPE: [exports.amalgamSniperTurret],
      },
      {
        POSITION: [5, 8, 0, 120, 190, 1],
        TYPE: [exports.amalgamSniperTurret],
      },
      {
        POSITION: [5, 8, 0, 240, 190, 1],
        TYPE: [exports.amalgamSniperTurret],
      },
      {
        POSITION: [8, 0, 0, 0, 360, 1],
        TYPE: exports.amalgamHyperSkimmer,
      },
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [15, 5, 0, 0, 170, 0],
        TYPE: exports.amalgamHyperSkimmer,
      },
      {
        POSITION: [15, 5, 0, 120, 170, 0],
        TYPE: exports.amalgamHyperSkimmer,
      },
      {
        POSITION: [15, 5, 0, 240, 170, 0],
        TYPE: exports.amalgamHyperSkimmer,
      },
    ],
  },
  3,
  "Amalgam"
);
exports.trimalgam = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.triangleBoss],
    SHAPE: 3,
    COLOR: 19,
    SIZE: 35,
    BODY: {
      REGEN: 0,
      HEALTH: 300,
      SPEED: base.SPEED * 1.05,
  
    },
    VALUE: 1000000,
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [15, 5, 0, 60, 170, 0],
        TYPE: exports.amalgamHyperSkimmer,
      },
      {
        POSITION: [15, 5, 0, 180, 170, 0],
        TYPE: exports.amalgamHyperSkimmer,
      },
      {
        POSITION: [15, 5, 0, 300, 170, 0],
        TYPE: exports.amalgamHyperSkimmer,
      },
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [13.5, 5, 0, 60, 170, 0],
        TYPE: exports.trimalgambossturret,
      },
      {
        POSITION: [13.5, 5, 0, 180, 170, 0],
        TYPE: exports.trimalgambossturret,
      },
      {
        POSITION: [13.5, 5, 0, 300, 170, 0],
        TYPE: exports.trimalgambossturret,
      },
      {
        POSITION: [5, 9.25, 0, 0, 190, 1],
        TYPE: [exports.amalgamSniperTurret],
      },
      {
        POSITION: [5, 9.25, 0, 120, 190, 1],
        TYPE: [exports.amalgamSniperTurret],
      },
      {
        POSITION: [5, 9.25, 0, 240, 190, 1],
        TYPE: [exports.amalgamSniperTurret],
      },
      {
        POSITION: [12, 0, 0, 0, 360, 1],
        TYPE: exports.trimalgambossturret,
      },
      {
        POSITION: [8, 0, 0, 0, 360, 1],
        TYPE: exports.amalgamHyperSkimmer,
      },
    ],
    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [18, 8, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [3, 8.5, 1.7, 16.5, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.pound,
            g.destroy,
            g.doubleHealth,
            g.greaterSize,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [19, 8, 1, 0, -2, -20, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.twin,
            g.bent,
            g.superHealth,
            g.doublePenetration,
          ]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [19, 8, 1, 0, 2, 20, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.twin,
            g.bent,
            g.superHealth,
            g.doublePenetration,
          ]),
          TYPE: exports.bullet,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [2.25, 12, 1.25, 8, 0, 60, 0],
        PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner]),
        TYPE: [exports.thrasherDrone],
          AUTOFIRE: true,
          MAX_CHILDREN: 6,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3, 9, 1.2, 8, 0, 60, 0],
        PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner]),
        TYPE: [exports.thrasherDrone],
          AUTOFIRE: true,
          MAX_CHILDREN: 6,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
        },
      },
    ],

  },
  3,
  "Trimalgam"
);

exports.abyssthrasher = {
  PARENT: [exports.voidlordMeleeBoss],
  LABEL: "Abyssal Thrasher",
  TYPE: "thrasher",
  DANGER: 9,
  COLOR: 19,
  VALUE: 1500000,
  SHAPE: 0,
  HAS_NO_RECOIL: true,
  SIZE: 45,
  BODY: {
    SPEED: 3.5,
    PENETRATION: 17.5,
    HEALTH: 1000,
    SHIELD: 20.5,
    REGEN: -1,
    DAMAGE: 10,
    PUSHABILITY: 0,
    DENSITY: 23,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 1.6, //movement speed
  }),
  DRAW_HEALTH: true,
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.autoTurret],
    },
    {
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.oldAutoSmasherTurret],
    },
    {
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.auto4Turret],
    },
    {
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.adeptTurret],
    },
    {
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.trapTurret],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody3],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.spikeBody],
    },
    {
      POSITION: [20, 0, 0, 0, 0, 0],
      TYPE: [exports.abyssthrashimageMaker],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: [exports.spikeBody3],
    },
  ],
};
exports.abysst2bossbelike = makeMulti(
  {
    PARENT: [exports.abyssthrasher],
    TYPE: "thrasher",
    DANGER: 9,
    COLOR: 19,
    VALUE: 150000000,
    FACING_TYPE: "autospin",
    SHAPE: 0,
    HAS_NO_RECOIL: true,
    SIZE: 125,
    BODY: {
      SPEED: 3.5,
      PENETRATION: 17.5,
      HEALTH: 1000000,
      SHIELD: 20.5,
      REGEN: -1,
      DAMAGE: 100,
      PUSHABILITY: 0,
      DENSITY: 23000000,
    },
    SKILL: skillSet({
      rld: 0.5, //reload
      dam: 0.5, //bullet damage
      pen: 0.5, //bullet penetration
      str: 0.5, //bullet health
      spd: 0, //bullet speed
      atk: 0, //body damage
      hlt: 0, //max health
      shi: 0, //shield capacity
      rgn: 0, //shield regeneration
      mob: 1.6, //movement speed
    }),
    DRAW_HEALTH: true,
    GIVE_KILL_MESSAGE: true,
    GUNS: [
      {
        /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [13, 7, 1, 0, 0, 180, 0],
      },
      {
        POSITION: [5, 7.6, 1.7, 10.5, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.pound,
            g.destroy,
            g.anni,
            g.greaterReload,
            g.greaterSize,
            g.greaterDamage,
            g.greaterPenetration,
            g.halfReload,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
    TURRETS: [
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [13, 18, 0, 36, 360, 0],
        TYPE: [exports.hiveMind],
      },
      {
        POSITION: [13, 18, 0, -36, 360, 0],
        TYPE: [exports.hiveMind],
      },
      {
        POSITION: [13, 18, 0, 108, 360, 0],
        TYPE: [exports.hiveMind],
      },
      {
        POSITION: [13, 18, 0, -108, 360, 0],
        TYPE: [exports.hiveMind],
      },
      {
        POSITION: [13, 18, 0, 180, 360, 0],
        TYPE: [exports.hiveMind],
      },
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [13, 18, 0, 36, 120, 0],
        TYPE: [exports.crossbowTurret],
      },
      {
        POSITION: [13, 18, 0, -36, 120, 0],
        TYPE: [exports.crossbowTurret],
      },
      {
        POSITION: [13, 18, 0, 108, 120, 0],
        TYPE: [exports.crossbowTurret],
      },
      {
        POSITION: [13, 18, 0, -108, 120, 0],
        TYPE: [exports.crossbowTurret],
      },
      {
        POSITION: [13, 18, 0, 180, 120, 0],
        TYPE: [exports.crossbowTurret],
      },
      {
        /*********  SIZE               X       Y     ANGLE    ARC */
        POSITION: [13, 18, 0, 36, 360, 0],
        TYPE: [exports.bossnulltype],
      },
      {
        POSITION: [13, 18, 0, -36, 360, 0],
        TYPE: [exports.bossnulltype],
      },
      {
        POSITION: [13, 18, 0, 108, 360, 0],
        TYPE: [exports.bossnulltype],
      },
      {
        POSITION: [13, 18, 0, -108, 360, 0],
        TYPE: [exports.bossnulltype],
      },
      {
        POSITION: [13, 18, 0, 180, 360, 0],
        TYPE: [exports.bossnulltype],
      },
      {
        POSITION: [23, 0, 0, 0, 360, 0],
        TYPE: [exports.smasherBody],
      },
      {
        POSITION: [23, 0, 0, 0, 360, 0],
        TYPE: [exports.smasherBody3],
      },
      {
        POSITION: [23, 0, 0, 0, 360, 0],
        TYPE: [exports.spikeBody],
      },
      {
        POSITION: [20, 0, 0, 0, 0, 1],
        TYPE: [exports.swarmeggsenti12],
      },
    ],
  },
  5,
  "Average Abyss T2 Boss"
);
exports.alphaRifleAnomaly = {
  PARENT: [exports.voidlordRangedBoss],
  LABEL: "Alpha Anomaly",
  BODY: {
    FOV: 1.3,
    REGEN: -1,
    HEALTH: 500,
  },
  SPECIAL_EFFECT: "fortressKill",
  FACING_TYPE: "looseToTarget",
  DANGER: 8,
  SHAPE: 8,
  SIZE: 17,
  VALUE: 500000,
  AI: { STRAFE: true },
  ORBIT_DISTANCE: 200,
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  SKILL: skillSet({
    rld: 0.4, //reload
    dam: 0.7, //bullet damage
    pen: 0.6, //bullet penetration
    str: 1.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.rifle,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.rifle,
    },
    {
      POSITION: [20, 4, -9.5, 0, 190, 1],
      TYPE: exports.mechanicalVoidBody1,
    },
    {
      POSITION: [20, 4, 9.5, 0, 190, 1],
      TYPE: exports.mechanicalVoidBody2,
    },
  ],
};
exports.alphaBoosterAnomaly = {
  PARENT: [exports.voidlordMeleeBoss],
  LABEL: "Alpha Anomaly",
  BODY: {
    FOV: 1.3,
    REGEN: -1,
    HEALTH: 500,
  },
  SPECIAL_EFFECT: "fortressKill",
  FACING_TYPE: "looseToTarget",
  DANGER: 8,
  SHAPE: 8,
  SIZE: 17,
  VALUE: 500000,
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  SKILL: skillSet({
    rld: 0.4, //reload
    dam: 0.7, //bullet damage
    pen: 0.6, //bullet penetration
    str: 1.5, //bullet health
    spd: 0, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0.5, //movement speed
  }),
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [16, 0, -11, 0, 190, 0],
      TYPE: exports.booster,
    },
    {
      POSITION: [16, 0, 11, 0, 190, 0],
      TYPE: exports.booster,
    },
    {
      POSITION: [20, 4, -9.5, 0, 190, 1],
      TYPE: exports.mechanicalVoidBody1,
    },
    {
      POSITION: [20, 4, 9.5, 0, 190, 1],
      TYPE: exports.mechanicalVoidBody1,
    },
  ],
};
exports.sardonyx = {
  PARENT: [exports.voidlordRangedBoss, exports.reaper],
  NAME: "Sardonyx",
  LABEL: "Dark Fate",
  TYPE: "voidlordBoss",
  SPECIAL_EFFECT: "dieWall",
  FACING_TYPE: "looseToTarget",
  ALLOW_PLATE: true,
  DANGER: 8,
  SIZE: 25,
  COLOR: 19,
  VALUE: 5000000,
  AI: { STRAFE: true },
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  ORBIT_DISTANCE: 400,
  BODY: {
    DAMAGE: 15,
    FOV: 1.3,
    HEALTH: 2000,
    REGEN: -1,
  },
  SKILL: skillSet({
    rld: 0.7, //reload
    dam: 0.9, //bullet damage
    pen: 0.75, //bullet penetration
    str: 0.9, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: [exports.imageMaker],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.flingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.slingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.bounce, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 8, 0, 90, 270, 0],
      TYPE: exports.mega3Turret,
    },
    {
      POSITION: [14, 8, 0, 270, 270, 0],
      TYPE: exports.mega3Turret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 90, 270, 0],
      TYPE: exports.auto3Turret,
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 8, 0, 270, 270, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.oldAutoSmasherTurret],
    },
  ],
};
exports.weakSardonyx = {
  PARENT: [exports.sardonyx],
  ORBIT_DISTANCE: 100,
  BODY: {
    DAMAGE: 15,
    HEALTH: 1000,
    REGEN: -1,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0.5, //bullet damage
    pen: 0.75, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
};
exports.strongSardonyx = {
  PARENT: [exports.sardonyx],
  ORBIT_DISTANCE: 100,
  BODY: {
    DAMAGE: 15,
    HEALTH: 2000,
    REGEN: -1,
    RESIST: 1.2,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1, //bullet damage
    pen: 0.75, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0.5, //body damage
    hlt: 0.5, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
};
exports.sardonyxGrimForm = {
  PARENT: [exports.voidlordRangedBoss, exports.reaper],
  NAME: "Sardonyx",
  LABEL: "Grim Truth",
  TYPE: "voidlordBoss",
  SPECIAL_EFFECT: "dieWall",
  FACING_TYPE: "looseToTarget",
  ALLOW_PLATE: true,
  DANGER: 8,
  SIZE: 40,
  COLOR: 19,
  VALUE: 7000000,
  AI: { STRAFE: true },
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  ORBIT_DISTANCE: 100,
  BODY: {
    DAMAGE: 15,
    HEALTH: 3500,
    REGEN: -1,
    RESIST: 1.5,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1, //bullet damage
    pen: 0.75, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0.5, //body damage
    hlt: 0.5, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: [exports.imageMaker],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.flingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.slingSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.bounce, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 8, 0, 90, 270, 0],
      TYPE: exports.ordnance,
    },
    {
      POSITION: [14, 8, 0, 270, 270, 0],
      TYPE: exports.ordnance,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 8, 0, 90, 270, 0],
      TYPE: exports.crossbow,
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [14, 8, 0, 270, 270, 0],
      TYPE: exports.crossbow,
    },
    {
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: [exports.oldAutoSmasherTurret],
    },
  ],
  GUNS: [
    ...extraSideGuns,
    ...sideGuns,
    ...beeGuns,
    ...birdGuns,
    ...hunterGuns,
    {
      POSITION: [5, 12, -1.3, 7, 0, 0, 0],
    },
  ],
};
exports.voidslayer = {
  PARENT: [exports.voidlordRangedBoss],
  LABEL: "The drug below",
  BODY: {
    FOV: 10,
    SPEED: 4,
    HEALTH: 5000,
  },
  ORBIT_DISTANCE: 400,
  DANGER: 20,
  VALUE: 5000000,
  SIZE: 80,
  TURRETS: [
    {
      POSITION: [8, 5, 0, 0, 360, 1],
      TYPE: exports.hiveMind,
    },
    {
      POSITION: [8, 5, 0, 60, 360, 1],
      TYPE: exports.hiveMind,
    },
    {
      POSITION: [8, 5, 0, -60, 360, 1],
      TYPE: exports.hiveMind,
    },
    {
      POSITION: [8, 5, 0, 120, 360, 1],
      TYPE: exports.hiveMind,
    },
    {
      POSITION: [8, 5, 0, -120, 360, 1],
      TYPE: exports.hiveMind,
    },
    {
      POSITION: [8, 5, 0, 180, 360, 1],
      TYPE: exports.hiveMind,
    },
    {
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.elder,
    },
    {
      POSITION: [17, 0, 0, 45, 360, 0],
      TYPE: exports.eldurk,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [13, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.superHealth,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.stfellasbody = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 16,
  FACING_TYPE: "locksFacing",
  SHAPE: 4,
};
exports.stfellasbody2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 13,
  SHAPE: 3,
};
exports.stfellasHandSaw1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
};
exports.stfellasHandSaw2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 15,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [1.75, 0],
    [-1, -1],
    [-1, 1],
  ],
};
exports.stfellasHandSaw3 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 15,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [1.75, 0],
    [-1, -1],
    [-1, 1],
  ],
};
exports.stfellasHandSaw4 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 16,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
};
exports.hardshellswarmhexa = {
  PARENT: [exports.drone],
  SHAPE: 6,
  TURRETS: [
    {
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: exports.smasherBody4,
    },
  ],
};
exports.stfellasHandBlade4 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: [
    [0, 1],
    [0, 0],
    [-2.5, 1],
  ],
  INDEPENDENT: true,
  MAX_CHILDREN: 2,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 18, 1.4, 10, 12, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.destroy,
          g.anni,
          g.greaterSize,
        ]),
        TYPE: exports.hardshellswarmhexa,
        AUTOFIRE: true,
      },
    },
  ],
};
exports.stfellasHandBlade5 = {
  LABEL: "",
  COLOR: 15,
  SHAPE: [
    [0, 1],
    [0, 0],
    [-2.5, 1],
  ],
  INDEPENDENT: true,
};
exports.stfellasHandBlade6 = {
  LABEL: "",
  COLOR: 9,
  SHAPE: [
    [0, -1],
    [0, 0],
    [-2.5, -1],
  ],
  INDEPENDENT: true,
  MAX_CHILDREN: 2,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 18, 1.4, 10, -12, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.destroy,
          g.anni,
          g.greaterSize,
        ]),
        TYPE: exports.hardshellswarmhexa,
        AUTOFIRE: true,
      },
    },
  ],
};
exports.stfellasHandBlade7 = {
  LABEL: "",
  COLOR: 15,
  SHAPE: [
    [0, -1],
    [0, 0],
    [-2.5, -1],
  ],
  INDEPENDENT: true,
};
exports.stfellasHand1 = {
  PARENT: [exports.auto3Turret],
  LABEL: "",
  INDEPENDENT: true,
  BODY: {
    FOV: 1.7,
  },
  COLOR: 15,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      POSITION: [23, 2, 1, 0, -2.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.power,
          g.lesserDamage,
          g.greaterHealth,
          g.doublePenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [23, 2, 1, 0, 2.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.power,
          g.lesserDamage,
          g.greaterHealth,
          g.doublePenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [21, 2, 1, 0, -3.5, 0, 3 / 7],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.power,
          g.lesserDamage,
          g.greaterHealth,
          g.doublePenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [21, 2, 1, 0, 3.5, 0, 3 / 7],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.power,
          g.lesserDamage,
          g.greaterHealth,
          g.doublePenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 2, 1, 0, -1.5, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.power,
          g.lesserDamage,
          g.greaterHealth,
          g.doublePenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 2, 1, 0, 1.5, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.power,
          g.lesserDamage,
          g.greaterHealth,
          g.doublePenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 0, 0],
      TYPE: exports.stfellasHandBlade3,
    },
    {
      POSITION: [20, 0, 0, 0, 0, 1],
      TYPE: exports.stfellasHandBlade1,
    },
    {
      POSITION: [20, 0, 0, 0, 0, 1],
      TYPE: exports.stfellasHandBlade2,
    },
    {
      POSITION: [18, 0, 0, 0, 0, 1],
      TYPE: exports.stfellasHandSaw1,
    },
    {
      POSITION: [17, -5.5, 2, -10, 0, 0],
      TYPE: exports.stfellasHandSaw2,
    },
    {
      POSITION: [17, -5.5, -2, 10, 0, 0],
      TYPE: exports.stfellasHandSaw2,
    },
    {
      POSITION: [17, -3.5, 2, -20, 0, 0],
      TYPE: exports.stfellasHandSaw1,
    },
    {
      POSITION: [17, -3.5, -2, 20, 0, 0],
      TYPE: exports.stfellasHandSaw1,
    },
  ],
};
exports.stfellas = {
  PARENT: [exports.damagedArenaCloser],
  NAME: "Stfellas",
  LABEL: "Undertaker",
  ACCEPTS_SCORE: true,
  COLOR: 15,
  SIZE: 20,
  VALUE: 7500000,
  SHAPE: 6,
  HAS_NO_RECOIL: true,
  LAYER: 75,
  COPY_LAYER: true,
  IGNORE_COLLISION: true,
  ORBIT_DISTANCE: 250,
  BODY: {
    PENETRATION: 6.2,
    SPEED: 4.25,
    FOV: 2.75,
    RANGE: 90,
    DENSITY: 1.25,
    HEALTH: 8000,
    REGEN: -1,
    DAMAGE: 4,
    PUSHABILITY: 0,
    SHAPE: 4,
    HAS_NO_RECOIL: true,
    RESIST: 1.5,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    atk: 0.2, //bullet speed
    spd: 0.7, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0.2, //shield regeneration
    mob: 0.2, //movement speed
  }),
  AI_TARGET: "mostDeadly",
  HAS_NO_RECOIL: true,
  GUNS: [],
  TURRETS: [
    {
      POSITION: [20, 0, 0, 0, 0, 1],
      TYPE: exports.stfellasHandBlade4,
    },
    {
      POSITION: [20, 0, 0, 0, 0, 1],
      TYPE: exports.stfellasHandBlade5,
    },
    {
      POSITION: [18, 0, 0, 0, 0, 1],
      TYPE: exports.stfellasHandBlade6,
    },
    {
      POSITION: [18, 0, 0, 0, 0, 1],
      TYPE: exports.stfellasHandBlade7,
    },
    {
      POSITION: [17, 17, 20, 15, 180, 1],
      TYPE: [exports.stfellasHand1],
    },
    {
      POSITION: [17, 17, -20, -15, 180, 1],
      TYPE: [exports.stfellasHand1],
    },
    {
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: exports.smasherBody4,
    },
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.smasherBody4,
    },
  ],
};
exports.Tryihandsaw1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
};
exports.Tryihandblade3 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [3, -0.4],
    [0.5, -1.5],
    [0, 0],
    [0.5, 1.5],
    [3, 0.4],
    [0.7, 0.8],
    [0.5, 0],
    [0.7, -0.8],
  ],
};
exports.Tryihand = {
  PARENT: [exports.autoTurret],
  LABEL: "",
  BODY: {
    FOV: 1.7,
    //HAS_NO_RECOIL: true,
  },
  COLOR: 2,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    ...extraSideGuns,
    ...sideGuns,
    {
  /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
  POSITION: [20, 12, 1, 0, 0, 0, 0],
  PROPERTIES: {
    SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.superHealth]),
    TYPE: exports.bullet,
  },
 },
    {
      POSITION: [1, 15, 1, 5, 0, 180, 1.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.spawner,
          g.factory,
          g.greaterSize,
          g.greaterSize,
          g.superStats,
          g.superHealth,
          g.superHealth,
        ]),
        TYPE: exports.tryiMinion,
        STAT_CALCULATOR: gunCalcNames.drone,
        LABEL: "Ultra",
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 2,
        INDEPENDENT: true,
      },
    },
    {
      POSITION: [5, 5, 1, 0, 0, 160, 1.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterHealth]),
        TYPE: exports.swarmDrone,
      },
    },
    {
      POSITION: [5, 5, 1, 0, 0, -160, 1.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.greaterHealth]),
        TYPE: exports.swarmDrone,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [20, -3, 4, 0, 0, 1],
      TYPE: exports.tryiBlade2,
    },
    {
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: exports.Tryihandsaw1,
    },
    {
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: exports.Tryihandsaw1,
    },
    {
      POSITION: [17, 6, 5, 0, 0, 0],
      TYPE: exports.Tryihandsaw1,
    },
    {
      POSITION: [17, 6, -5, 0, 0, 0],
      TYPE: exports.Tryihandsaw1,
    },
    {
      POSITION: [20, -3, -4, 0, 0, 1],
      TYPE: exports.tryiBlade1,
    },
  ],
};
exports.tryi = {
  PARENT: [exports.damagedArenaCloser],
  NAME: "Tryi",
  LABEL: "Warden",
  ACCEPTS_SCORE: true,
  COLOR: 2,
  SIZE: 18,
  VALUE: 7250000,
  SHAPE: 3,
  HAS_NO_RECOIL: true,
  LAYER: 75,
  COPY_LAYER: true,
  IGNORE_COLLISION: true,
  ORBIT_DISTANCE: 250,
  BODY: {
    PENETRATION: 6.2,
    SPEED: 4.25,
    FOV: 2.75,
    RANGE: 90,
    DENSITY: 1.25,
    HEALTH: 6000,
    REGEN: -1,
    DAMAGE: 4,
    PUSHABILITY: 0,
    SHAPE: 4,
    HAS_NO_RECOIL: true,
    RESIST: 1.5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    atk: 0.2, //bullet speed
    spd: 0.7, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0.2, //movement speed
  }),
  AI_TARGET: "mostDeadly",
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      POSITION: [9, 17, 1.2, 3, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.pound]),
        TYPE: exports.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 6,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
        WAIT_TO_CYCLE: true,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [20, 17, 20, 15, 180, 1],
      TYPE: [exports.Tryihand, { COLOR: 2 }],
    },
    {
      POSITION: [20, 17, -20, -15, 180, 1],
      TYPE: [exports.Tryihand, { COLOR: 2 }],
    },
    {
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: exports.triangleSaw1,
    },
    {
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody2,
    },
    {
      POSITION: [22, -5.5, 0, 0, 360, 0],
      TYPE: exports.smasherBody2,
    },
  ],
};
exports.baltylahandsaw1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
};
exports.baltylahandblade3 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 6,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [3, -0.4],
    [0.5, -1.5],
    [0, 0],
    [0.5, 1.5],
    [3, 0.4],
    [0.7, 0.8],
    [0.5, 0],
    [0.7, -0.8],
  ],
};
exports.baltylahand = {
  PARENT: [exports.autoTurret],
  LABEL: "",
  BODY: {
    FOV: 1.7,
    //HAS_NO_RECOIL: true,
  },
  COLOR: 6,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20.5, 12, 1.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.mach,
          g.doubleHealth,
          g.halfDamage,
          g.doubleHealth,
          g.doubleHealth,
          g.halfDamage,
          g.doubleHealth,
          g.halfDamage,
          g.superPenetration,
          g.greaterSpeed,
          g.superSpray,
          g.greaterSize,
          g.superSpray,
          g.greaterSize,
          g.superSpray,
          g.greaterSpeed,
          g.halfReload,
        ]),
        TYPE: exports.swarmDigon,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20.5, 12, 1.5, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.mach,
          g.doubleHealth,
          g.halfDamage,
          g.doubleHealth,
          g.doubleHealth,
          g.halfDamage,
          g.doubleHealth,
          g.halfDamage,
          g.superPenetration,
          g.greaterSpeed,
          g.superSpray,
          g.greaterSize,
          g.superSpray,
          g.greaterSize,
          g.superSpray,
          g.greaterSpeed,
          g.halfReload,
        ]),
        TYPE: exports.swarmDigon,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: exports.baltylahandsaw1,
    },
    {
      POSITION: [23, -3, 4, 0, 0, 0],
      TYPE: exports.baltylahandsaw1,
    },
    {
      POSITION: [23, -3, -4, 0, 0, 0],
      TYPE: exports.baltylahandsaw1,
    },
    {
      POSITION: [20, -3, 4, 0, 0, 1],
      TYPE: exports.baltylaBlade2,
    },
    {
      POSITION: [20, -3, -4, 0, 0, 1],
      TYPE: exports.baltylaBlade1,
    },
    {
      POSITION: [20, 3, 0, 0, 0, 1],
      TYPE: exports.pendekotHandBlade2,
    },
  ],
};
exports.baltyla = {
  PARENT: [exports.damagedArenaCloser],
  NAME: "Baltyla",
  LABEL: "Cultivator",
  ACCEPTS_SCORE: true,
  COLOR: 6,
  SIZE: 20,
  VALUE: 7000000,
  SHAPE: 0,
  HAS_NO_RECOIL: true,
  LAYER: 75,
  COPY_LAYER: true,
  IGNORE_COLLISION: true,
  ORBIT_DISTANCE: 250,
  BODY: {
    PENETRATION: 6.2,
    SPEED: 4.25,
    FOV: 2.75,
    RANGE: 90,
    DENSITY: 1.25,
    HEALTH: 4000,
    REGEN: -1,
    DAMAGE: 4,
    PUSHABILITY: 0,
    SHAPE: 4,
    HAS_NO_RECOIL: true,
    RESIST: 1.5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    atk: 0.2, //bullet speed
    spd: 0.7, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0.2, //movement speed
  }),
  AI_TARGET: "mostDeadly",
  HAS_NO_RECOIL: true,
  // EGG_RECONSTRUCTION: true,
  GUNS: [],
  TURRETS: [
    {
      POSITION: [17, 17, 20, 15, 180, 1],
      TYPE: [exports.baltylahand, { COLOR: 13 }],
    },
    {
      POSITION: [17, 17, -20, -15, 180, 1],
      TYPE: [exports.baltylahand, { COLOR: 13 }],
    },
    {
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: exports.trueblackCircle,
    },
    {
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: exports.trueblackCircle,
    },
    {
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody2,
    },
  ],
};

exports.kristapsEggLegionCommander = {
  PARENT: [exports.kristapsAscendant],
  NAME: "Kristaps",
  TYPE: "neutralBoss",
  LABEL: "Ascendant",
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  BODY: {
    HEALTH: 6500,
    PENETRATION: 5,
    REGEN: 0,
    ACCELERATION: base.ACCEL + 0.45,
    SPEED: base.SPEED * 0.2,
    DAMAGE: base.DAMAGE * 0.2,
    SHIELD: base.SHIELD * 1.4,
    DENSITY: base.DENSITY + 0.95,
    PUSHABILITY: 3,
  },
  ORBIT_DISTANCE: 120,
  DANGER: 9,
  SIZE: 32,
  VALUE: 4500000,
  COLOR: 6,
  GUNS: [],
  FACING_TYPE: "autospin",
  EGG_RECONSTRUCTION: true,
  TURRETS: [
    {
      POSITION: [15, 0, 40, 180, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 40, -60, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 0, 40, 60, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 180, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, -60, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 60, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [20, 0, 55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 120, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 55, 240, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.greaterDamage,
                  g.superSize,
                  g.greaterSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.smasherOrb,
                  {
                    SHAPE: 0,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody1,
    },
    {
      POSITION: [17, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [13, 0, 55, 120, 360, 1],
      TYPE: [exports.assaulterTurret],
    },
    {
      POSITION: [13, 0, 55, 60, 360, 1],
      TYPE: [exports.assaulterTurret],
    },
    {
      POSITION: [13, 0, 55, -60, 360, 1],
      TYPE: [exports.assaulterTurret],
    },
    {
      POSITION: [13, 0, 55, 180, 360, 1],
      TYPE: [exports.assaulterTurret],
    },
    {
      POSITION: [13, 0, 55, 0, 360, 1],
      TYPE: [exports.assaulterTurret],
    },
    {
      POSITION: [13, 0, 55, -120, 360, 1],
      TYPE: [exports.assaulterTurret],
    },
  ],
  IS_SMASHER: true,

  STAT_NAMES: statnames.smasher,
};
exports.cubedbody = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
  SHAPE: 4,
};
exports.cubedbody = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 16,
  FACING_TYPE: "locksFacing",
  SHAPE: 4,
};
exports.cubedbody2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 13,
  SHAPE: 4,
};
exports.cubedhandsaw1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
};
exports.cubedhandsaw2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [1.75, 0],
    [-1, -1],
    [-1, 1],
  ],
};
exports.cubedhandsaw3 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 13,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [1.75, 0],
    [-1, -1],
    [-1, 1],
  ],
};
exports.cubedhandsaw4 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 16,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
};
exports.cubedeye = {
  PARET: [exports.genericTank],
  LABEL: "",
  CONTROLLERS: ["dontTurn"],
  SHAPE: 4,
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  SHAPE: [
    [0.3, -0.5],
    [0.65, -0.5],
    [0.65, 0.5],
    [0.3, 0.5],
  ],
};
exports.cubedeyeholder = {
  PARET: [exports.genericTank],
  LABEL: "",
  SHAPE: 1,
  CONTROLLERS: ["dontTurn"],
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  SHAPE: 1,
  TURRETS: [
    {
      POSITION: [17, 0, 0, 0, 0, 0, 1],
      TYPE: exports.cubedeye,
    },
  ],
};
exports.cubedmissile = {
  PARENT: [exports.bullet],
  LABEL: "cubedmissile",
  SHAPE: 4,
  BODY: {
    RANGE: 200,
  },
  TURRETS: [
    {
      POSITION: [22.5, 0, 0, 0, 360, 0],
      TYPE: exports.cubedSaw1,
    },
    {
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.cubedturretS_2,
      HAS_NO_RECOIL: true,
    },
  ],
};
exports.cubedblock = {
  PARENT: [exports.setBlock],
  LABEL: "cubedblock",
  SHAPE: 4,
  BODY: {
    RANGE: 200,
  },
  TURRETS: [
    {
      POSITION: [22.5, 0, 0, 0, 360, 0],
      TYPE: exports.cubedSaw1,
    },
    {
      POSITION: [22.5, 0, 0, 0, 90, 0],
      TYPE: exports.cubedSaw1,
    },
    {
      POSITION: [11, 0, 0, 0, 360, 1],
      TYPE: exports.cubedturretM_2,
      HAS_NO_RECOIL: true,
    },
  ],
};
exports.cubedhand1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.7,
    HAS_NO_RECOIL: true,
  },
  COLOR: 13,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, 5.5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      /* LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [24, 10, 0.4, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.pound, g.destroy]),
        TYPE: exports.uncontrolledBeeDrone,
      },
    },
    {
      POSITION: [1, 15, 0, 3, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.anni,
          g.superSize,
        ]),
        TYPE: exports.mechtrap,
        STAT_CALCULATOR: gunCalcNames.trap,
        COLOR: 13,
      },
    },
    {
      POSITION: [1, 10, 0, 3, 0, 130, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.pound, g.destroy, g.superSize]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
        COLOR: 13,
      },
    },
    {
      POSITION: [1, 10, 0, 3, 0, -130, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.pound, g.destroy, g.superSize]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
        COLOR: 13,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [25, 0, 0, 0, 0, 0, 0],
      TYPE: exports.cubedhandsaw1,
    },
    {
      POSITION: [17, 12, 0, 0, 0, 0, 0],
      TYPE: exports.cubedhandsaw3,
    },
    {
      POSITION: [17, -3.5, 2, -20, 0, 1],
      TYPE: exports.cubedhandsaw1,
    },
    {
      POSITION: [17, -3.5, -2, 20, 0, 1],
      TYPE: exports.cubedhandsaw1,
    },
    {
      POSITION: [17, 0, 0, 0, 10, 1],
      TYPE: exports.cubedhandsaw4,
    },
    {
      POSITION: [10, 15, 7, 0, 0, 0, 0],
      TYPE: exports.cubedhandsaw2,
    },
    {
      POSITION: [10, 15, -7, 0, 0, 0, 0],
      TYPE: exports.cubedhandsaw2,
    },
  ],
};
exports.cubedhand2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  COLOR: 13,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 20, 0, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.missile,
          g.morespeed,
        ]),
        TYPE: exports.cubedmissile,
        COLOR: 13,
        HAS_NO_RECOIL: true,
      },
    },
    {
      POSITION: [1, 6, 0, 3, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.power]),
        TYPE: exports.swarmDrone,
        COLOR: 13,
      },
    },
    {
      POSITION: [1, 6, 0, 3, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.power]),
        TYPE: exports.swarmDrone,
        COLOR: 13,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [25, 0, 0, 0, 0, 0, 0],
      TYPE: exports.cubedhandsaw1,
    },
    {
      POSITION: [17, 12, 0, 0, 0, 0, 0],
      TYPE: exports.cubedhandsaw3,
    },
    {
      POSITION: [17, -3.5, 2, -20, 0, 1],
      TYPE: exports.cubedhandsaw1,
    },
    {
      POSITION: [17, -3.5, -2, 20, 0, 1],
      TYPE: exports.cubedhandsaw1,
    },
    {
      POSITION: [17, 0, 0, 0, 10, 1],
      TYPE: exports.cubedhandsaw4,
    },
    {
      POSITION: [10, 15, 7, 0, 0, 0, 0],
      TYPE: exports.cubedhandsaw2,
    },
    {
      POSITION: [10, 15, -7, 0, 0, 0, 0],
      TYPE: exports.cubedhandsaw2,
    },
  ],
};
exports.cubed = {
  PARENT: [exports.damagedArenaCloser],
  NAME: "Cubed",
  LABEL: "Bulwark of the Weak",
  ACCEPTS_SCORE: true,
  COLOR: 13,
  SIZE: 20,
  VALUE: 7500000,
  SHAPE: 4,
  HAS_NO_RECOIL: true,
  LAYER: 75,
  COPY_LAYER: true,
  IGNORE_COLLISION: true,
  ORBIT_DISTANCE: 250,
  BODY: {
    PENETRATION: 6.2,
    SPEED: 4.25,
    FOV: 2.75,
    RANGE: 90,
    DENSITY: 1.25,
    HEALTH: 5000,
    REGEN: -1,
    DAMAGE: 4,
    PUSHABILITY: 0,
    SHAPE: 4,
    HAS_NO_RECOIL: true,
    RESIST: 1.5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    atk: 0.2, //bullet speed
    spd: 0.7, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0.2, //movement speed
  }),
  AI_TARGET: "mostDeadly",
  HAS_NO_RECOIL: true,
  GUNS: [],
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [20, 55, 55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.lesserDamage,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.cubedorbierdrone,
                  {
                    SHAPE: 4,
                    CONNECTED_DAMAGE: false,
                    DAMAGE_MULTIPLIER: 1.25,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, -55, 55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.lesserDamage,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.cubedorbierdrone,
                  {
                    CONNECTED_DAMAGE: false,
                    DAMAGE_MULTIPLIER: 1.25,
                    SHAPE: 4,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [20, 55, -55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.lesserDamage,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.cubedorbierdrone,
                  {
                    SHAPE: 4,
                    CONNECTED_DAMAGE: false,
                    DAMAGE_MULTIPLIER: 1.25,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, -55, -55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.lesserDamage,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.cubedorbierdrone,
                  {
                    CONNECTED_DAMAGE: false,
                    DAMAGE_MULTIPLIER: 1.25,
                    SHAPE: 4,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },

    {
      POSITION: [17, 17, 17, 15, 180, 1],
      TYPE: [exports.cubedhand1, { COLOR: 13 }],
    },
    {
      POSITION: [17, 17, -17, -15, 180, 1],
      TYPE: [exports.cubedhand1, { COLOR: 13 }],
    },
    {
      POSITION: [24, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedbody2, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [20, 5, 0, 180, 180, 0],
      TYPE: [exports.cubedbody2, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [43, 0, 0, 0, 0, 180, 1],
      TYPE: [exports.cubedhandsaw3, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [25, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedSaw1, { INDEPENDENT: false }],
    },
    {
      POSITION: [16, 0, 0, 0, 0, 1],
      TYPE: [exports.cubedSaw1, { INDEPENDENT: false }],
    },
  ],
};
exports.cubedhand2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  COLOR: 13,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 20, 0, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.missile,
          g.morespeed,
        ]),
        TYPE: exports.cubedmissile,
        COLOR: 13,
        HAS_NO_RECOIL: true,
      },
    },
    {
      POSITION: [1, 6, 0, 3, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.power]),
        TYPE: exports.swarmDrone,
        COLOR: 13,
      },
    },
    {
      POSITION: [1, 6, 0, 3, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.power]),
        TYPE: exports.swarmDrone,
        COLOR: 13,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [25, 0, 0, 0, 0, 0, 0],
      TYPE: exports.cubedhandsaw1,
    },
    {
      POSITION: [17, 12, 0, 0, 0, 0, 0],
      TYPE: exports.cubedhandsaw3,
    },
    {
      POSITION: [17, -3.5, 2, -20, 0, 1],
      TYPE: exports.cubedhandsaw1,
    },
    {
      POSITION: [17, -3.5, -2, 20, 0, 1],
      TYPE: exports.cubedhandsaw1,
    },
    {
      POSITION: [17, 0, 0, 0, 10, 1],
      TYPE: exports.cubedhandsaw4,
    },
    {
      POSITION: [10, 15, 7, 0, 0, 0, 0],
      TYPE: exports.cubedhandsaw2,
    },
    {
      POSITION: [10, 15, -7, 0, 0, 0, 0],
      TYPE: exports.cubedhandsaw2,
    },
  ],
};
exports.cubedDescendant = {
  PARENT: [exports.genericDefiner],
  LABEL: "Descendant of the Guarding",
  COLOR: 13,
  SIZE: 20,
  SHAPE: 4,
  BODY: {
    PENETRATION: 6.2,
    SPEED: 4.25,
    FOV: 2.75,
    RANGE: 90,
    DENSITY: 1.25,
    HEALTH: 5000,
    REGEN: -1,
    DAMAGE: 4,
    PUSHABILITY: 0,
    SHAPE: 4,
    HAS_NO_RECOIL: true,
    RESIST: 1.5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    atk: 0.2, //bullet speed
    spd: 0.7, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0.2, //movement speed
  }),
  AI_TARGET: "mostDeadly",
  HAS_NO_RECOIL: true,
  GUNS: [],
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [20, 55, 55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.lesserDamage,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.cubedorbierdrone,
                  {
                    SHAPE: 4,
                    CONNECTED_DAMAGE: false,
                    DAMAGE_MULTIPLIER: 1.25,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, -55, 55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.lesserDamage,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.cubedorbierdrone,
                  {
                    CONNECTED_DAMAGE: false,
                    DAMAGE_MULTIPLIER: 1.25,
                    SHAPE: 4,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      POSITION: [20, 55, -55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.lesserDamage,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.cubedorbierdrone,
                  {
                    SHAPE: 4,
                    CONNECTED_DAMAGE: false,
                    DAMAGE_MULTIPLIER: 1.25,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, -55, -55, 0, 360, 1],
      TYPE: [
        exports.smasherBody3,
        {
          CONTROLLERS: ["alwaysFire", "teleportToMaster"],
          ALPHA: 0,
          GUNS: [
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.drone,
                  g.cheese,
                  g.superHealth,
                  g.greaterStats,
                  g.halfPenetration,
                  g.minorPenetration,
                  g.lesserDamage,
                  g.superSize,
                  g.lesserSize,
                  /***************** RELOAD RECOIL SHUDDER  SIZE   HEALTH  DAMAGE   PEN    SPEED    MAX    RANGE  DENSITY  SPRAY   RESIST  */
                ]),
                TYPE: [
                  exports.cubedorbierdrone,
                  {
                    CONNECTED_DAMAGE: false,
                    DAMAGE_MULTIPLIER: 1.25,
                    SHAPE: 4,
                    DIE_AT_RANGE: false,
                    CONTROLLERS: ["teleportToMaster"],
                  },
                ],
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
          ],
        },
      ],
    },

    {
      POSITION: [17, 17, 17, 15, 180, 1],
      TYPE: [exports.cubedhand1, { COLOR: 13 }],
    },
    {
      POSITION: [17, 17, -17, -15, 180, 1],
      TYPE: [exports.cubedhand1, { COLOR: 13 }],
    },
    {
      POSITION: [24, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedbody2, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [20, 5, 0, 180, 180, 0],
      TYPE: [exports.cubedbody2, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [43, 0, 0, 0, 0, 180, 1],
      TYPE: [exports.cubedhandsaw3, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [25, 0, 0, 0, 0, 0],
      TYPE: [exports.cubedSaw1, { INDEPENDENT: false }],
    },
    {
      POSITION: [16, 0, 0, 0, 0, 1],
      TYPE: [exports.cubedSaw1, { INDEPENDENT: false }],
    },
  ],
};
exports.pendekothandsaw1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
};
exports.pendekothandblade3 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 14,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [3, -0.4],
    [0.5, -1.5],
    [0, 0],
    [0.5, 1.5],
    [3, 0.4],
    [0.7, 0.8],
    [0.5, 0],
    [0.7, -0.8],
  ],
};
exports.pendekothand1 = {
  PARENT: [exports.autoTurret],
  LABEL: "",
  BODY: {
    FOV: 1.7,
    //HAS_NO_RECOIL: true,
  },
  COLOR: 14,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      POSITION: [20, 8.5, 1.3, 10, -5, -10, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.greaterDamage,
          g.greaterHealth,
        ]),
        TYPE: exports.swarmSentinelMiniMissile,
      },
    },
    {
      POSITION: [20, 8.5, 1.3, 10, 5, 10, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.greaterDamage,
          g.greaterHealth,
        ]),
        TYPE: exports.swarmSentinelMiniMissile,
      },
    },
    {
      POSITION: [30, 9.5, 1, 10, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.pound,
          g.greaterDamage,
          g.greaterHealth,
        ]),
        TYPE: exports.swarmSentinelSkimmerMissile,
      },
    },
    {
      POSITION: [5, 8.5, -1.6, 14, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      POSITION: [20, -3, 0, 0, 0, 0],
      TYPE: exports.pendekothandblade3,
    },
    {
      POSITION: [20, -3, 0, 0, 0, 1],
      TYPE: exports.pendekotHandBlade1,
    },
    {
      POSITION: [20, 3, 0, 0, 0, 1],
      TYPE: exports.pendekotHandBlade2,
    },
    {
      POSITION: [14, 0, 0, 0, 0, 1],
      TYPE: exports.pendekothandsaw1,
    },
  ],
};
exports.pendekot = {
  PARENT: [exports.damagedArenaCloser],
  NAME: "Pendekot",
  LABEL: "Lord of Mechanisms",
  ACCEPTS_SCORE: true,
  COLOR: 14,
  SIZE: 20,
  VALUE: 7000000,
  SHAPE: 5,
  HAS_NO_RECOIL: true,
  LAYER: 75,
  COPY_LAYER: true,
  IGNORE_COLLISION: true,
  ORBIT_DISTANCE: 250,
  BODY: {
    PENETRATION: 6.2,
    SPEED: 4.25,
    FOV: 2.75,
    RANGE: 90,
    DENSITY: 1.25,
    HEALTH: 7000,
    REGEN: -1,
    DAMAGE: 4,
    PUSHABILITY: 0,
    SHAPE: 4,
    HAS_NO_RECOIL: true,
    RESIST: 1.5,
  },
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    atk: 0.2, //bullet speed
    spd: 0.7, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0.2, //shield regeneration
    mob: 0.2, //movement speed
  }),
  AI_TARGET: "mostDeadly",
  HAS_NO_RECOIL: true,
  GUNS: [],
  TURRETS: [
    {
      POSITION: [17, 17, 20, 15, 180, 1],
      TYPE: [exports.pendekothand1, { COLOR: 13 }],
    },
    {
      POSITION: [17, 17, -20, -15, 180, 1],
      TYPE: [exports.pendekothand1, { COLOR: 13 }],
    },
    {
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: exports.pentagonBody,
    },
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody,
    },
    {
      POSITION: [10, 8, 0, 180, 150, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [10, 8, 0, 110, 150, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [10, 8, 0, -110, 150, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [22, 0, 0, 180, 0, 0],
      TYPE: exports.pentagonBody3,
    },
  ],
};
exports.TeraPentagonCloser = {
  PARENT: [exports.damagedArenaCloser],
  LABEL: "Tera Pentagon Closer",
  BODY: {
    SPEED: 4,
    HEALTH: 4500,
  },
  ORBIT_DISTANCE: 400,
  DANGER: 10,
  COLOR: 14,
  SHAPE: 5,
  VALUE: 5000000,
  SIZE: 100,
  IGNORE_COLLISION: true,
  TURRETS: [
    {
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: exports.pentagonBody,
    },
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.superHealth,
          g.greaterDamage,
          g.greaterDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.GreaterPentagonCloser = {
  PARENT: [exports.damagedArenaCloser],
  LABEL: "Greater Pentagon Closer",
  BODY: {
    SPEED: 4,
    HEALTH: 2000,
  },
  ORBIT_DISTANCE: 400,
  DANGER: 10,
  COLOR: 14,
  VALUE: 3500000,
  SHAPE: 5,
  SIZE: 80,
  IGNORE_COLLISION: true,
  TURRETS: [
    {
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: exports.pentagonBody,
    },
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [13, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.superHealth,
          g.greaterDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.PentagonCloser = {
  PARENT: [exports.damagedArenaCloser],
  LABEL: "Pentagon Closer",
  ORBIT_DISTANCE: 250,
  BODY: {
    SPEED: 8,
    HEALTH: 1250,
    RESIST: 1,
    IGNORE_COLLISION: true,
    ACCELERATION: 2,
    DENSITY: 30,
  },
  SIZE: 50,
  COLOR: 14,
  VALUE: 2000000,
  SHAPE: 5,
  HAS_NO_RECOIL: true,
  TURRETS: [
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.greaterDamage,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.LesserPentagonCloser = {
  PARENT: [exports.damagedArenaCloser],
  LABEL: "Lesser Pentagon Closer",
  BODY: {
    FOV: 10,
    SPEED: 10,
    HEALTH: 1000,
  },
  ORBIT_DISTANCE: 150,
  VALUE: 100000,
  COLOR: 14,
  SHAPE: 5,
  SIZE: 26,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.power]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.autoSwarmSentinel = {
  PARENT: [exports.sentinel],
  FACING_TYPE: "autospin",
  CONTROLLERS: ["spin"],
  SHAPE: 5,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody,
    },
    {
      POSITION: [10, 8, 0, 180, 80, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [10, 8, 0, -105, 80, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [10, 8, 0, 105, 80, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [10, 8, 0, 35, 80, 0],
      TYPE: exports.auto3Turret,
    },
    {
      POSITION: [10, 8, 0, -35, 80, 0],
      TYPE: exports.auto3Turret,
    },
  ],
};
exports.trapperSwarmSentinel = {
  PARENT: [exports.sentinel],
  SHAPE: 5,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: exports.rifle,
    },
  ],
  GUNS: [
    {
      POSITION: [3, 6, 1.7, 14.7, 0, 35, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, 35, 0],
    },
    {
      POSITION: [3, 6, 1.7, 14.7, 0, -35, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, -35, 0],
    },
    {
      POSITION: [3, 6, 1.7, 14.7, 0, -105, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, -105, 0],
    },
    {
      POSITION: [3, 6, 1.7, 14.7, 0, 105, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, 105, 0],
    },
    {
      POSITION: [3, 6, 1.7, 14.7, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block]),
        TYPE: exports.trap,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, 180, 0],
    },
  ],
};
exports.gunnerSwarmSentinel = {
  PARENT: [exports.sentinel],
  SHAPE: 5,
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 8, 0, 180, 120, 0],
      TYPE: exports.auto4Turret,
    },
  ],
  GUNS: [
    {
      POSITION: [12, 8, 1.6, 0, 0, 109, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [12, 8, 1.6, 0, 0, -109, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone]),
        TYPE: exports.drone,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [16, 4, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 4, 1, 0, 6, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14, 4, 1, 0, -6, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.swarmSentinelMiniSkimmerMissile = {
  PARENT: [exports.missile],
  LABEL: "Missile",
  SHAPE: 5,
  INDEPENDENT: true,
  BODY: {
    DENSITY: 3,
    RANGE: 120,
  },
  TURRETS: [
    {
      POSITION: [22, 0, 0, 0, 0, 0],
      TYPE: exports.pentagonBody2,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 6, 1, 0, 0, 110, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, 180, 0.5],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [14, 6, 1, 0, 0, -110, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.arty,
          g.superDamage,
          g.thruster,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
        STAT_CALCULATOR: gunCalcNames.thruster,
      },
    },
  ],
};
exports.skimmerSwarmSentinel = {
  PARENT: [exports.sentinel],
  SHAPE: 5,
  TURRETS: [
    {
      POSITION: [13, 8, 0, 110, 120, 0],
      TYPE: exports.auto4Turret,
    },
    {
      POSITION: [13, 8, 0, -110, 120, 0],
      TYPE: exports.auto4Turret,
    },
  ],
  GUNS: [
    {
      POSITION: [15, 15, 0, 0, 0, 0, 0.5],
    },
    {
      POSITION: [17, 15, 0.9, 0, 0, 0, 0.5],
    },
    {
      POSITION: [20, 15, 0.8, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.superHealth,
          g.missile,
        ]),
        TYPE: exports.swarmSentinelMiniSkimmerMissile,
      },
    },
    {
      POSITION: [24, 8, 0, 0, 0, 0, 0.5],
    },
  ],
};
exports.AutomatedBetaPentagon = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.pentagonBoss],
    FACING_TYPE: "autospin",
    VALUE: 200000,
    SIZE: 24,
    BODY: {
      FOV: 1.3,
      SPEED: 0.4,
      HEALTH: 100,
      SHIELD: base.SHIELD * 0.5,
      REGEN: 0.001,
    },
    TURRETS: [
      ...ABPautoTurretArray,
      {
        POSITION: [22, 0, 0, 0, 0, 0],
        TYPE: exports.pentagonBody,
      },
    ],
    GUNS: [
      {
        POSITION: [11.5, 7, 1, 0, 0, 35, 0],
      },
      {
        POSITION: [2, 7, 1.5, 11, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.pound, g.greaterReload]),
          TYPE: exports.trap,
          LABEL: "Devastator",
        },
      },
    ],
  },
  5,
  "Automated Beta Pentagon"
);
exports.AutomatedAlphaPentagon = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.pentagonBoss],
    FACING_TYPE: "autospin",
    VALUE: 750000,
    TURRETS: [
      ...AAPautoTurretArray,
      {
        POSITION: [17, 0, 0, 0, 0, 1],
        TYPE: exports.pentagonBody,
      },
      {
        POSITION: [22, 0, 0, 0, 0, 0],
        TYPE: exports.pentagonBody,
      },
    ],
    GUNS: [
      {
        POSITION: [11.5, 6, 1, 0, 0, 35, 0],
      },
      {
        POSITION: [2, 7, 1.5, 11, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.block,
            g.pound,
            g.destroy,
            g.greaterReload,
          ]),
          TYPE: exports.bosspillbox,
          LABEL: "Devastator",
        },
      },
      {
        POSITION: [10, 7, 1, 0, 0, 35, 0],
      },
    ],
  },
  5,
  "Automated Alpha Pentagon"
);
exports.construct = {
  PARENT: [exports.meleeEnemy],
  LABEL: "Construct",
  DANGER: 6,
  SHAPE: 6,
  COLOR: 7,
  SIZE: 7.5,
  VALUE: 25000,
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 0.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    FOV: 0.8,
    ACCEL: 0.003,
    SPEED: base.SPEED,
    HEALTH: 360,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [50, 0, 0, 0, 360, 0],
      TYPE: [exports.hexaAutoRing],
    },
  ],
};
exports.constructon = {
  PARENT: [exports.meleeEnemy],
  LABEL: "Constructon",
  DANGER: 6,
  COLOR: 7,
  SHAPE: 6,
  SIZE: 9.5,
  VALUE: 45000,
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 0.15, //bullet damage
    pen: 0.15, //bullet penetration
    str: 0.15, //bullet health
    spd: 0.15, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    FOV: 0.9,
    ACCEL: 0.3,
    SPEED: base.SPEED,
    HEALTH: 960,
  },
  GIVE_KILL_MESSAGE: true,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [50, 0, 0, 15, 0, 0],
      TYPE: [exports.hexaAutoRing],
    },
    {
      POSITION: [50, 0, 0, -15, 0, 0],
      TYPE: [exports.hexaAutoRing],
    },
    {
      POSITION: [50, 0, 0, 0, 0, 0],
      TYPE: [exports.hexaAutoRing],
    },
    {
      POSITION: [24, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [10, 0, 0, 180, 360, 1],
      TYPE: [exports.oldAutoSmasherTurret],
    },
  ],
};
exports.enabler = {
  PARENT: [exports.highlordRangedBoss],
  LABEL: "Enabler",
  SIZE: 20,
  SHAPE: 6,
  DANGER: 5,
  BODY: {
    FOV: 1.3,
    SIZE: 20,
    REGEN: 1,
    HEALTH: 750,
  },
  SKILL: skillSet({
    rld: 0.0, //reload
    dam: 0.0, //bullet damage
    pen: 0.0, //bullet penetration
    str: 0, //bullet health
    spd: 0.0, //bullet speed
    atk: 0, //body damage
    hlt: 0.0, //max health
    shi: 0.0, //shield capacity
    rgn: 0.0, //shield regeneration
    mob: 0, //movement speed
  }),
  TURRETS: [
    {
      POSITION: [24, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [10, 0, 0, 180, 360, 1],
      TYPE: [
        exports.oldAutoSmasherTurret,
        { INDEPENDENT: false, CONTROLLERS: ["nearestDifferentMaster"] },
      ],
    },
  ],
  GUNS: [
    {
      POSITION: [5, 11, 1, 10.5, 0, 180, 0],
    },
    {
      POSITION: [2, 15, 1, 15.5, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.greaterSpeed,
          g.basic,
          g.pound,
        ]),
        TYPE: exports.conductminion,
        DRAW_HEALTH: true,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 4,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 180, 0],
    },
    {
      POSITION: [15, 7, 1, 5, 5, 0, 0],
    },
    {
      POSITION: [6, 7, 1.35, 19.6, 5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.greaterReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4.5, 7, 1.35, 16.6, 5, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.greaterReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3.2, 7, 1.35, 13.6, 5, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.greaterReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 7, 1, 0, -5, 0, 0],
    },
    {
      POSITION: [6, 7, 1.35, 19.6, -5, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.greaterReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [4.5, 7, 1.35, 16.6, -5, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.greaterReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [3.2, 7, 1.35, 13.6, -5, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.greaterReload]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.contraption = {
  PARENT: [exports.highlordRangedBoss],
  LABEL: "Contraption",
  SIZE: 27,
  SHAPE: 4,
  DANGER: 5,
  VALUE: 200000,
  BODY: {
    FOV: 1.3,
    SIZE: 20,
    REGEN: 0.5,
    HEALTH: 1000,
  },
  SKILL: skillSet({
    rld: 1, //reload
    dam: 0.5, //bullet damage
    pen: 0.6, //bullet penetration
    str: 1.5, //bullet health
    spd: 0.3, //bullet speed
    atk: 0, //body damage
    hlt: 0.5, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  TURRETS: [
    {
      POSITION: [18, 0, 0, -90, 200, 0],
      TYPE: [
        exports.mega3Turret,
        { AI_TARGET: "projectiles", INDEPENDENT: true },
      ],
    },
    {
      POSITION: [18, 0, 0, 90, 200, 0],
      TYPE: [
        exports.mega3Turret,
        { AI_TARGET: "projectiles", INDEPENDENT: true },
      ],
    },
    {
      POSITION: [10, 0, 0, 180, 360, 1],
      TYPE: exports.autoTurret,
    },
    {
      POSITION: [18, 0, 0, -90, 200, 0],
      TYPE: [
        exports.mega3Turret,
        { AI_TARGET: "projectiles", INDEPENDENT: true },
      ],
    },
    {
      POSITION: [18, 0, 0, 90, 200, 0],
      TYPE: [
        exports.mega3Turret,
        { AI_TARGET: "projectiles", INDEPENDENT: true },
      ],
    },
    {
      POSITION: [10, 0, 0, 180, 360, 1],
      TYPE: exports.autoTurret,
    },
    {
      POSITION: [18, 0, 0, -90, 200, 0],
      TYPE: [
        exports.mega3Turret,
        { AI_TARGET: "projectiles", INDEPENDENT: true },
      ],
    },
    {
      POSITION: [18, 0, 0, 90, 200, 0],
      TYPE: [
        exports.mega3Turret,
        { AI_TARGET: "projectiles", INDEPENDENT: true },
      ],
    },
    {
      POSITION: [10, 0, 0, 180, 360, 1],
      TYPE: exports.autoTurret,
    },
  ],
  GUNS: [
    {
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.superHealth,
          g.superHealth,
          g.superHealth,
        ]),
        TYPE: exports.minion,
        DRAW_HEALTH: true,
        MAX_CHILDREN: 3,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [15, 10, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [19, 10, -1.5, 0, 0, 180, 0],
    },
    {
      POSITION: [12, 15, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [2, 10, 1.3, 18, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.boomerang,
          g.superStats,
          g.superReload,
          g.superReload,
          g.superReload,
          g.superReload,
          g.superReload,
          g.halfSpeed,
          g.doubleRange,
        ]),
        TYPE: exports.boomerang,
      },
    },
  ],
};
exports.megaengineerprototype = {
  PARENT: [exports.highlordRangedBoss],
  DANGER: 7,
  SIZE: 45,
  MAX_CHILDREN: 5,
  LABEL: "Engineer Ultra-Prototype MK1",
  STAT_NAMES: statnames.trap,
  BODY: {
    SPEED: base.SPEED * 0.75,
    FOV: base.FOV * 1.15,
  },
  TURRETS: [
    {
      POSITION: [13, 8, 0, 180, 140, 0],
      TYPE: [exports.autoSmasherTurret, { INDEPENDENT: true }],
    },
    {
      POSITION: [23, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: exports.smasherBody2,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 8, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [5, 1, 1, 10.5, 6, 0, 0],
    },
    {
      POSITION: [5, 1, 1, 10.5, -6, 0, 0],
    },
    {
      POSITION: [7, 12.5, 1.4, 5.5, 0, 0, 0],
    },
    {
      POSITION: [3, 14, 1, 15.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1.3, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.pound,
          g.superHealth,
          g.superHealth,
        ]),
        TYPE: exports.ULTRApillbox,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
    {
      POSITION: [4, 13, 0.7, 17, 0, 0, 0],
    },
  ],
};
exports.Protalist = {
  PARENT: [exports.highlordRangedBoss],
  NAME: "Protalist",
  LABEL: "Highlord Mega-structure",
  SIZE: 27,
  SHAPE: [
    [-1, -1],
    [0.5, -1],
    [1, -0.5],
    [1, 0.5],
    [0.5, 1],
    [-1, 1],
    [-0.3, 0],
  ],
  DANGER: 5,
  BODY: {
    FOV: 1.7,
    REGEN: -1,
    HEALTH: 7000,
  },
  SPECIAL_EFFECT: "fortressKill",
  FACING_TYPE: "looseToTarget",
  DANGER: 8,
  SIZE: 40,
  COLOR: 7,
  VALUE: 6500000,
  AI: { STRAFE: true },
  ORBIT_DISTANCE: 300,
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  SKILL: skillSet({
    rld: 0.4, //reload
    dam: 0.7, //bullet damage
    pen: 0.6, //bullet penetration
    str: 1.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  TURRETS: [
    {
      POSITION: [8, 0, 3, -90, 140, 0],
      TYPE: exports.mega3Turret,
    },
    {
      POSITION: [8, 0, 3, 90, 140, 0],
      TYPE: exports.mega3Turret,
    },
    {
      POSITION: [8, 8, 5, 0, 140, 0],
      TYPE: exports.highlordBoomerTurret,
    },
    {
      POSITION: [8, 8, -5, 0, 140, 0],
      TYPE: exports.highlordBoomerTurret,
    },
    {
      POSITION: [5, 5, 4, -90, 120, 1],
      TYPE: [exports.oldAutoSmasherTurret],
    },
    {
      POSITION: [5, 5, 4, 90, 120, 1],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [5, 5, -4, -90, 120, 1],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [5, 5, -4, 90, 120, 1],
      TYPE: [exports.oldAutoSmasherTurret],
    },
    {
      POSITION: [10, 8, 0, 90, 120, 0],
      TYPE: [exports.engineTurret],
    },
    {
      POSITION: [10, 8, 0, -90, 120, 0],
      TYPE: [exports.engineTurret],
    },
  ],
  GUNS: [
    {
      POSITION: [14, 16, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [4, 16, 1.5, 14, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.pound, g.superHealth]),
        TYPE: [exports.pillboxT, { INDEPENDENT: true }],
      },
    },
    {
      POSITION: [15, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.missile,
          g.halfReload,
        ]),
        TYPE: exports.hyperMissile,
      },
    },
    {
      POSITION: [19, 10, -1.5, 0, 0, 180, 0],
    },
    {
      POSITION: [12, 15, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [2, 10, 1.3, 18, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.halfReload]),
        TYPE: exports.bosstrapbox,
      },
    },
  ],
};
exports.highlordAidra = {
  PARENT: [exports.operator, exports.highlordRangedBoss],
  NAME: "Highlord Dominique Aidra",
  TYPE: "highlordBoss",
  LABEL: "Mechanical Menace",
  ALLOW_PLATE: true,
  BODY: {
    FOV: 1.3,
    REGEN: -1,
    HEALTH: 4000,
  },
  SPECIAL_EFFECT: "fortressKill",
  FACING_TYPE: "looseToTarget",
  DANGER: 8,
  SIZE: 25,
  COLOR: 7,
  VALUE: 2000000,
  AI: { STRAFE: true },
  ORBIT_DISTANCE: 300,
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  SKILL: skillSet({
    rld: 0.4, //reload
    dam: 0.7, //bullet damage
    pen: 0.6, //bullet penetration
    str: 1.5, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 180, 360, 1],
      TYPE: [
        exports.autoSmasherTurret,
        { INDEPENDENT: true, CONTROLLERS: ["nearestDifferentMaster"] },
      ],
    },
  ],

  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 11, 1, 10.5, 0, 0, 0],
    },
    {
      POSITION: [2, 14, 1, 15.5, 0, 0, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.pound,
          g.destroy,
          g.superHealth,
          g.lesserReload,
        ]),
        TYPE: exports.autoSmasherMinion,
        AUTOFIRE: true,
        MAX_CHILDREN: 1,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
    {
      POSITION: [4, 14, 1, 8, 0, 0, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 16, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [4, 16, 1.5, 14, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.pound, g.superHealth]),
        TYPE: [exports.pillboxT, { INDEPENDENT: true }],
      },
    },
    {
      POSITION: [6, 14, -2, 2, 0, 60, 0],
    },
    {
      POSITION: [6, 14, -2, 2, 0, 300, 0],
    },
  ],
};
exports.minioncontraption = {
  PARENT: [exports.minion],
  LABEL: "Contraption",
  DRAW_HEALTH: true,
  BODY: {
    FOV: 1.3,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10, 14, -0.5, 9, 0, 0, 0],
    },
    {
      POSITION: [17, 15, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.superReload,
        ]),
        TYPE: exports.missile,
        STAT_CALCULATOR: gunCalcNames.sustained,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 8, 0, 90, 190, 0],
      TYPE: exports.boomerTurret,
    },
    {
      POSITION: [15, 8, 0, 270, 240, 0],
      TYPE: exports.boomerTurret,
    },
  ],
};
exports.albatarbody = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 0,
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
};
exports.albatarbody3 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  SHAPE: 6,
  BODY: {
    FOV: 0,
  },
  COLOR: 16,
  FACING_TYPE: "locksFacing",
};
exports.albatarbody2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 7,
  SHAPE: 3,
};
exports.albatarsaw2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 7,
  SHAPE: 3,
};
exports.albatarsaw1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 6,
  SHAPE: 3,
};
exports.albatarhandsaw1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
};
exports.albatarhandsaw1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [1.75, 0],
    [-1, -1],
    [-1, 1],
  ],
};
exports.albatarhandsaw2 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 9,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [1.75, 0],
    [-1, -1],
    [-1, 1],
  ],
};
exports.albatarhandsaw3 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 7,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [1.75, 0],
    [-1, -1],
    [-1, 1],
  ],
};
exports.albatarhandsaw4 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 0,
  },
  COLOR: 16,
  FACING_TYPE: "locksFacing",
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
};
exports.albatarhand1 = {
  PARENT: [exports.genericTank],
  LABEL: "",
  BODY: {
    FOV: 1.7,
  },
  COLOR: 19,
  SHAPE: [
    [-1.75, 0],
    [1, -1],
    [1, 1],
  ],
  CONTROLLERS: ["nearestDifferentMaster"],
  HAS_NO_RECOIL: true,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.halfReload]),
        TYPE: exports.smasherBullet,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [25, 0, 0, 0, 0, 0, 0],
      TYPE: exports.albatarhandsaw1,
    },
    {
      POSITION: [17, -3.5, 0, 0, 0, 1],
      TYPE: exports.albatarhandsaw1,
    },
    {
      POSITION: [17, 0, 0, 0, 10, 1],
      TYPE: exports.albatarhandsaw4,
    },
    {
      POSITION: [13, 16, 0, 0, 0, 0, 0],
      TYPE: exports.albatarhandsaw3,
    },
  ],
};
exports.weakHighlordAlbatar = {
  PARENT: [exports.genericTank, exports.highlordRangedBoss],
  NAME: "Highlord Albatar",
  LABEL: "Rift Shaper",
  ALLOW_PLATE: true,
  HAS_NO_RECOIL: true,
  SIZE: 20,
  COLOR: 7,
  HAS_NO_RECOIL: true,
  BODY: {
    FOV: 1.3,
    REGEN: -1,
    HEALTH: 1500,
  },
  DANGER: 8,
  SIZE: 25,
  VALUE: 3500000,
  SKILL: skillSet({
    rld: 0.7, //reload
    dam: 0.6, //bullet damage
    pen: 0.6, //bullet penetration
    str: 1.5, //bullet health
    spd: 0.3, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  GUNS: [
    {
      POSITION: [1.4, 15, 1, 14.8, 0, 180, 1.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.spawner,
          g.superStats,
          g.superReload,
          g.superReload,
          g.greaterSize,
          g.halfSpeed,
        ]),
        TYPE: exports.minioncontraption,
        STAT_CALCULATOR: gunCalcNames.drone,
        LABEL: "Ultra",
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        MAX_CHILDREN: 1,
        INDEPENDENT: true,
      },
    },
    {
      POSITION: [15.2, 4, 1, 0, 0, 180, 1.5],
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 144, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.superReload, g.superReload]),
        TYPE: exports.minioncontraption,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [1.2, 12.5, 1, 14.8, 0, 216, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.spawner, g.superReload, g.superReload]),
        TYPE: exports.minioncontraption,
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
        SYNCS_SKILLS: true,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE    X       Y     ANGLE    ARC */
      POSITION: [17, 17, 17, 15, 180, 1],
      TYPE: [exports.albatarhand1, { COLOR: 13 }],
    },

    {
      POSITION: [17, 17, -17, -15, 180, 1],
      TYPE: [exports.albatarhand1, { COLOR: 13 }],
    },
    {
      POSITION: [23, 0, 0, 30, 0, 0],
      TYPE: [exports.albatarbody3, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [15, 0, 0, 180, 180, 1],
      TYPE: [exports.smasherBody2, { INDEPENDENT: true, COLOR: 13 }],
    },
    {
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: [exports.smasherBody2],
    },
    {
      POSITION: [70, 0, 0, 360, 0, 0],
      TYPE: [exports.hexaAutoRing],
    },
    {
      POSITION: [100, 0, 0, 30, 0, 0],
      TYPE: [exports.hexaAutoRing],
    },
  ],
};
exports.highlordKairo = {
  PARENT: [exports.genericTank, exports.highlordRangedBoss],
  NAME: "Highlord Kairo Abyss",
  TYPE: "highlordBoss",
  LABEL: "Care Taker",
  ALLOW_PLATE: true,
  SHAPE: 6,
  DANGER: 8,
  SIZE: 25,
  FACING_TYPE: "autospin",
  BODY: {
    FOV: 1.3,
    REGEN: -1,
    HEALTH: 5400,
  },
  VALUE: 2000000,
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0.5, //bullet damage
    pen: 0.5, //bullet penetration
    str: 1.5, //bullet health
    spd: 0.3, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 180, 360, 1],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [12, 8, 0, 30, 190, 0],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [12, 8, 0, 150, 190, 0],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [12, 8, 0, 270, 190, 0],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [12, 8, 0, 90, 190, 0],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [12, 8, 0, 210, 190, 0],
      TYPE: [exports.mega3Turret],
    },
    {
      POSITION: [12, 8, 0, 330, 190, 0],
      TYPE: [exports.mega3Turret],
    },
  ],
  GUNS: [
    {
      POSITION: [12, 12, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [4, 12, 1.5, 12, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.destroy,
          g.anni,
          g.morespeed,
          g.morespeed,
          g.morespeed,
          g.doubleHealth,
        ]),
        TYPE: [exports.bosstrapbox, { INDEPENDENT: true }],
      },
    },
    {
      POSITION: [12, 12, 1, 0, 0, -60, 0],
    },
    {
      POSITION: [4, 12, 1.5, 12, 0, -60, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.destroy,
          g.anni,
          g.morespeed,
          g.morespeed,
          g.morespeed,
          g.doubleHealth,
        ]),
        TYPE: [exports.bosstrapbox, { INDEPENDENT: true }],
      },
    },
    {
      POSITION: [12, 12, 1, 0, 0, 60, 0],
    },
    {
      POSITION: [4, 12, 1.5, 12, 0, 60, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.destroy,
          g.anni,
          g.morespeed,
          g.morespeed,
          g.morespeed,
          g.doubleHealth,
        ]),
        TYPE: [exports.bosstrapbox, { INDEPENDENT: true }],
      },
    },
    {
      POSITION: [15, 12, 1, 0, 0, 120, 0],
    },
    {
      POSITION: [4, 12, 1.7, 13.5, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.halfReload,
          g.greaterSize,
          g.greaterPenetration,
          g.doubleHealth,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 12, 1, 0, 0, -120, 0],
    },
    {
      POSITION: [4, 12, 1.7, 13.5, 0, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.halfReload,
          g.greaterSize,
          g.greaterPenetration,
          g.doubleHealth,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [15, 12, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [4, 12, 1.7, 13.5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.pound,
          g.destroy,
          g.halfReload,
          g.greaterSize,
          g.greaterPenetration,
          g.doubleHealth,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.armrbullet = {
  PARENT: [exports.bullet],
  LABEL: "Armored Bullet",
  CONTROLLERS: ["nearestDifferentMaster"],
  FACING_TYPE: "looseToTarget",
  TURRETS: [
    {
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.smasherBody2],
    },
    {
      POSITION: [22, 0, 0, 0, 360, 0],
      TYPE: [exports.spikeBody],
    },
    {
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [
        exports.autoSmasherTurret,
        {
          INDEPENDENT: false,
          HAS_NO_RECOIL: true,
        },
      ],
    },
  ],
};
exports.highlordAkavir = {
  PARENT: [exports.genericTank, exports.highlordRangedBoss],
  NAME: "Highlord Akavir Nixis",
  TYPE: "highlordBoss",
  LABEL: "Peace Keeper",
  ALLOW_PLATE: true,
  BODY: {
    FOV: 1.3,
    REGEN: -1,
    HEALTH: 2750,
  },
  DANGER: 8,
  SIZE: 25,
  VALUE: 2000000,
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0.6, //bullet damage
    pen: 0.6, //bullet penetration
    str: 1, //bullet health
    spd: 0.3, //bullet speed
    atk: 0, //body damage
    hlt: 0.3, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [25, 0, 0, 180, 360, 0],
      TYPE: [exports.smasherBody3],
    },
    {
      POSITION: [15, 0, 0, 180, 360, 1],
      TYPE: [exports.smasherBody2],
    },
    {
      POSITION: [12, 0, 0, 180, 360, 1],
      TYPE: [exports.autoSmasherTurret],
    },
    {
      POSITION: [22, 0, 0, 180, 360, 0],
      TYPE: [exports.spikeBody],
    },
  ],

  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 3.5, 1, 0, 7.25, 10, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.armrbullet,
      },
    },
    {
      POSITION: [12, 3.5, 1, 0, -7.25, -10, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.armrbullet,
      },
    },
    {
      POSITION: [16, 3.5, 1, 0, 3.75, 10, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.armrbullet,
      },
    },
    {
      POSITION: [16, 3.5, 1, 0, -3.75, -10, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.armrbullet,
      },
    },
    {
      POSITION: [18, 10, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.destroy]),
        TYPE: exports.armrbullet,
      },
    },
    {
      POSITION: [15, 18, 0.6, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound, g.destroy]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [13, 7.5, 0.6, 0, 4, 140, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [13, 7.5, 0.6, 0, -4, 120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [13, 7.5, 0.6, 0, 4, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [13, 7.5, 0.6, 0, -4, -140, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  ],
};
//Highlord Enemies
exports.spawn = {
  PARENT: [exports.highlordEnemy],
  LABEL: "Spawn",
  DANGER: 3,
  TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: exports.HighlordSaw,
      },
    ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 15, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.Gear = {
  PARENT: [exports.highlordEnemy],
  LABEL: "Gear",
  DANGER: 3,
  TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: exports.HighlordSaw,
      },
    ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 15, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 17, 0, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 15, 0, 0, 0, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
  ],
};
//NA Enemies
exports.trapCenturion = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.weakHexagonBoss],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: exports.smasherBody4,
      },
      {
        POSITION: [13, 0, 0, 0, 360, 1],
        TYPE: exports.trapper,
      },
    ],
    GUNS: [
      {
        POSITION: [3, 6, 1.7, 14.7, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap]),
          TYPE: exports.trap,
        },
      },
      {
        POSITION: [14, 6, 1, 0, 0, 0, 0],
      },
    ],
  },
  6,
  "Trap Centurion"
);
exports.autoCenturion = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.weakHexagonBoss],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [10, 0, 0, 0, 360, 1],
        TYPE: exports.autoTurret,
      },
      {
        POSITION: [10, 8, 0, 180, 140, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [10, 8, 0, -60, 140, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [10, 8, 0, 60, 140, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [23, 0, 0, 0, 30, 0],
        TYPE: exports.smasherBody4,
      },
    ],
    GUNS: [
      {
        POSITION: [13, 10.5, 0.6, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm]),
          TYPE: exports.swarmDrone,
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
    ],
  },
  3,
  "Auto Centurion"
);
exports.spawnerCenturion = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.weakHexagonBoss],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [10, 0, 0, 0, 360, 1],
        TYPE: exports.autoTurret,
      },
      {
        POSITION: [23, 0, 0, 0, 30, 0],
        TYPE: exports.smasherBody4,
      },
    ],
    GUNS: [
      {
        POSITION: [13, 7.5, 1.6, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.greaterSize,
            g.greaterHealth,
          ]),
          TYPE: exports.sterileHexagonChip,
          AUTOFIRE: true,
          MAX_CHILDREN: 3,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
        },
      },
    ],
  },
  6,
  "Spawner Centurion"
);
exports.trapLordCenturion = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.hexagonBoss],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: exports.smasherBody4,
      },
      {
        POSITION: [17, 0, 0, 0, 0, 1],
        TYPE: exports.smasherBody4,
      },
      {
        POSITION: [7, 8, 0, 150, 140, 0],
        TYPE: exports.trapTurret2,
      },
      {
        POSITION: [7, 8, 0, -30, 140, 0],
        TYPE: exports.trapTurret2,
      },
      {
        POSITION: [7, 8, 0, 30, 140, 0],
        TYPE: exports.trapTurret2,
      },
      {
        POSITION: [7, 8, 0, 90, 140, 0],
        TYPE: exports.trapTurret2,
      },
      {
        POSITION: [7, 8, 0, -90, 140, 0],
        TYPE: exports.trapTurret2,
      },
      {
        POSITION: [7, 8, 0, -150, 140, 0],
        TYPE: exports.trapTurret2,
      },
      {
        POSITION: [7, 8, 0, 150, 140, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [7, 8, 0, -30, 140, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [7, 8, 0, 30, 140, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [7, 8, 0, 90, 140, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [7, 8, 0, -90, 140, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [7, 8, 0, -150, 140, 0],
        TYPE: exports.mega3Turret,
      },
      {
        POSITION: [13, 0, 0, 0, 360, 1],
        TYPE: exports.barricadeTurret,
      },
    ],
    GUNS: [
      {
        POSITION: [3, 6, 1.7, 20.7, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.greaterHealth]),
          TYPE: exports.trap,
        },
      },
      {
        POSITION: [3, 6, 1.7, 17.7, 0, 0, 1 / 3],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.greaterHealth]),
          TYPE: exports.trap,
        },
      },
      {
        POSITION: [3, 6, 1.7, 14.7, 0, 0, 2 / 3],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap, g.greaterHealth]),
          TYPE: exports.trap,
        },
      },
      {
        POSITION: [15, 6, 1, 0, 0, 0, 0],
      },
    ],
  },
  6,
  "Trap Lord Centurion"
);
exports.autoLordCenturion = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.hexagonBoss],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [10, 0, 0, 0, 360, 1],
        TYPE: exports.autoTurret,
      },
      {
        POSITION: [10, 8, 0, 180, 140, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [10, 8, 0, -60, 140, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [10, 8, 0, 60, 140, 0],
        TYPE: exports.auto3Turret,
      },
      {
        POSITION: [13, 8, 0, 180, 140, 0],
        TYPE: exports.cruiserTurret2,
      },
      {
        POSITION: [13, 8, 0, -60, 140, 0],
        TYPE: exports.cruiserTurret2,
      },
      {
        POSITION: [13, 8, 0, 60, 140, 0],
        TYPE: exports.cruiserTurret2,
      },
      {
        POSITION: [23, 0, 0, 0, 0, 0],
        TYPE: exports.smasherBody4,
      },
      {
        POSITION: [15, 0, 0, 0, 0, 1],
        TYPE: exports.smasherBody4,
      },
    ],
    GUNS: [
      {
        POSITION: [13, 10.5, 0.6, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.swarm]),
          TYPE: exports.swarmDrone,
          STAT_CALCULATOR: gunCalcNames.swarm,
        },
      },
    ],
  },
  6,
  "Auto Lord Centurion"
);
exports.spawnerLordCenturion = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.hexagonBoss],
    FACING_TYPE: "autospin",
    TURRETS: [
      {
        /*  SIZE     X       Y     ANGLE    ARC */
        POSITION: [14.5, 0, 0, 0, 360, 1],
        TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
      },
      {
        POSITION: [7, 15, 0, -60, 120, 0],
        TYPE: exports.autoTurret,
      },
      {
        POSITION: [7, 15, 0, 60, 120, 0],
        TYPE: exports.autoTurret,
      },
      {
        POSITION: [7, 15, 0, 180, 120, 0],
        TYPE: exports.autoTurret,
      },
      {
        POSITION: [23, 0, 0, 0, 30, 0],
        TYPE: exports.smasherBody4,
      },
    ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3, 8, -0.5, 11, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.greaterHealth,
            g.greaterHealth,
            g.greaterHealth,
            g.greaterHealth,
            g.pound,
            g.halfSpeed,
          ]),
          TYPE: exports.healerBullet,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [12, 8, 1, 0, 0, 180, 0],
      },
      {
        POSITION: [12, 9.5, 1, 0, 0, 0, 0],
      },
      {
        POSITION: [2, 10.5, 1, 12.4, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.factory,
            g.greaterHealth,
            g.greaterHealth,
          ]),
          TYPE: exports.swarmCenturionMinion,
          AUTOFIRE: true,
          MAX_CHILDREN: 2,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
        },
      },
      {
        POSITION: [11, 10.5, 1, 0, 0, 0, 0],
      },
    ],
  },
  3,
  "Spawner Lord Centurion"
);
exports.mortarLordCenturion = {
  PARENT: [exports.neutralRangedBoss, exports.hexagonBoss],
  LABEL: "Mortar Centurion",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [13, 3, 1, 0, -8, -7, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 3, 1, 0, 8, 7, 0.8],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17, 3, 1, 0, -6, -7, 0.2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [17, 3, 1, 0, 6, 7, 0.4],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.gunner, g.arty]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.doubleHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.hiveLordCenturion = {
  PARENT: [exports.neutralRangedBoss, exports.hexagonBoss],
  LABEL: "Hive Lord Centurion",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 3, 1, 0, -6, -7, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfRecoil,
          g.doublePenetration,
          g.doubleSize,
        ]),
        TYPE: exports.hexaBee,
      },
    },
    {
      POSITION: [14, 3, 1, 0, 6, 7, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.halfRecoil,
          g.doublePenetration,
          g.doubleSize,
        ]),
        TYPE: exports.hexaBee,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 14, -1.2, 5, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.missile,
          g.destroy,
          g.halfRecoil,
          g.greaterPenetration,
          g.greaterHealth,
          g.lesserDamage,
        ]),
        TYPE: exports.HexaHive,
      },
    },
    {
      POSITION: [15, 12, 1, 5, 0, 0, 0],
    },
  ],
};
exports.fallenoverlord = makeMulti(
  {
    PARENT: [exports.overlord, exports.fallenRangedBoss],
    VALUE: 250000,
    FACING_TYPE: "autospin",
    BODY: {
     SPEED: 1.3
    },
    MAX_CHILDREN: 28,
    STAT_NAMES: statnames.drone,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [6, 12, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.over,
            g.superStats,
            g.superReload,
            g.superReload,
            g.greaterReload,
            g.halfHealth,
            g.halfPenetration,
            g.lesserSpeed,
          ]),
          TYPE: exports.drone,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.drone,
          WAIT_TO_CYCLE: true,
        },
      },
    ],
  },
  4,
  "Fallen Overlord"
);
exports.enslaver = {
  PARENT: [exports.animator, exports.fallenRangedBoss],
  LABEL: "Enslaver",
  VALUE: 250000,
  FACING_TYPE: "looseToTarget",
  BODY: {
    FOV: 1.2,
    SPEED: 0.55,
    HEALTH: 1000,
    SHIELD: base.SHIELD,
    REGEN: -1,
    DAMAGE: base.DAMAGE * 2.5,
  },
  MAX_CHILDREN: 8,
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5.4, 13, 1, 10.5, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.lesserStats,
          g.halfSize,
          g.superReload,
          g.superReload,
        ]),
        TYPE: [exports.pounderMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [2.4, 16, 1, 15.5, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.lesserStats,
          g.halfSize,
          g.superReload,
          g.superReload,
        ]),
        TYPE: [exports.machineGunMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4.4, 16, 1, 8, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.lesserStats,
          g.halfSize,
          g.superReload,
          g.superReload,
        ]),
        TYPE: [exports.sniperMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5.4, 13, 1, 10.5, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.lesserStats,
          g.halfSize,
          g.superReload,
          g.superReload,
        ]),
        TYPE: [exports.flankGuardMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [2.4, 16, 1, 15.5, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.lesserStats,
          g.halfSize,
          g.superReload,
          g.superReload,
        ]),
        TYPE: [exports.twinMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4.4, 16, 1, 8, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.lesserStats,
          g.halfSize,
          g.superReload,
          g.superReload,
        ]),
        TYPE: [exports.trapperMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5.4, 13, 1, 10.5, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.lesserStats,
          g.halfSize,
          g.superReload,
          g.superReload,
        ]),
        TYPE: [exports.directorMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4.4, 16, 1, 8, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.lesserStats,
          g.halfSize,
          g.superReload,
          g.superReload,
        ]),
        TYPE: [exports.smasherMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [13, 0, 0, 0, 360, 1],
      TYPE: [
        exports.factory,
        {
          CONTROLLERS: ["nearestDifferentMaster"],
          INDEPENDENT: true,
          MAX_CHILDREN: 4,
        },
      ],
    },
  ],
};
exports.fallendestroy = {
  PARENT: [exports.destroy, exports.fallenRangedBoss],
  LABEL: "Fallen Destroyer",
  GUNS: [...destroyerGun],
};
exports.fallenhybrid = makeHybrid(exports.fallendestroy, "Fallen Hybrid");
exports.fallenanni = {
  PARENT: [exports.anni, exports.fallenMeleeBoss],
  LABEL: "Fallen Annihilator",
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    SPEED: 0.75,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20.5, 19.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.superHealth,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.fallenfalcon = {
  PARENT: [exports.falcon, exports.fallenRangedBoss],
  LABEL: "Fallen Falcon",
  BODY: { SPEED: 0.75 },
  FACING_TYPE: "looseToTarget",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [27, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.assass,
          g.greaterDamage,
        ]),
        TYPE: exports.bullet,
        LABEL: "Assassin",
      },
    },
    {
      POSITION: [5, 8.5, -1.6, 8, 0, 0, 0],
    },
    ...birdGuns,
  ],
};
exports.plaguedoc = {
  PARENT: [exports.fallenMeleeBoss],

  SKILL: skillSet({
    rld: 1, //reload
    dam: 0.9, //bullet damage
    pen: 1, //bullet penetration
    str: 1.3, //bullet health
    atk: 0, //bullet speed
    spd: 0.4, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  LABEL: "Patchwork",
  BODY: { SPEED: 0.85 },
  GUNS: [
    {
      POSITION: [16, 8, 1, 0, -1, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 1, -120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.trifront]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -1, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },

    {
      POSITION: [7, 7.5, 0.6, 7, 1, -60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.swarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -1, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },

    {
      POSITION: [7, 7.5, 0.6, 7, 1, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 0, 150, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 0, 210, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
  ],
};
exports.fallenflankguard = {
  PARENT: [exports.flanktrap, exports.fallenRangedBoss],
  LABEL: "Fallen Trap Guard",
  FACING_TYPE: "looseToTarget",
  RESET_UPGRADES: true,
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 0.9, //bullet damage
    pen: 1, //bullet penetration
    str: 1.3, //bullet health
    atk: 0, //bullet speed
    spd: 0.4, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  GUNS: [...basicGun, ...trapGuardGun],
};
exports.fallenbooster = {
  PARENT: [exports.booster, exports.fallenMeleeBoss],
  LABEL: "Fallen Booster",
  VALUE: 250000,
  BODY: {
    FOV: 1.2,
    SPEED: 1,
    HEALTH: 1500,
    SHIELD: base.SHIELD,
    REGEN: -1,
    DAMAGE: base.DAMAGE * 2.5,
  },
  GUNS: [
    ...triangleGun,
    {
      POSITION: [13, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    ...triangleThrusterGuns,
  ],
};
exports.fallentyrant = {
  PARENT: [exports.booster, exports.fallenMeleeBoss],
  LABEL: "Fallen Tyrant",
  VALUE: 300000,
  TIER: 3,
  BODY: {
    FOV: 1.2,
    SPEED: 1,
    HEALTH: 1500,
    SHIELD: base.SHIELD,
    REGEN: -1,
    DAMAGE: base.DAMAGE * 1.5,
  },
  SKILL: skillSet({
    rld: 0.7, //reload
    dam: 0.6, //bullet damage
    pen: 0.6, //bullet penetration
    str: 0.8, //bullet health
    atk: 0.3, //bullet speed
    spd: 0.3, //???
    hlt: 0.1, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //body damage
  }),
  GUNS: [

    {
      POSITION: [16, 8, 1, 0, -1, 145, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 1, -145, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
  {
    POSITION: [19, 8, 1, 0, 0, 160, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [19, 8, 1, 0, 0, -160, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -1, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 1, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
      },
    },
  {
    POSITION: [14, 3, 1, 0, 6, 7, 0.75],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.doubleSize]),
      TYPE: exports.uncontrolledBeeDrone,
      LABEL: "Secondary",
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [14, 3, 1, 0, -6, -7, 0.25],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.swarm, g.bee, g.doubleSize]),
      TYPE: exports.uncontrolledBeeDrone,
      LABEL: "Secondary",
    },
  },
  {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    POSITION: [24, 7, 1, 0, 0, 0, 0],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter, g.hunter2]),
      TYPE: exports.bullet,
    },
  },
  {
    POSITION: [21, 11, 1, 0, 0, 0, 0.25],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.hunter]),
      TYPE: exports.bullet,
    },
  }
  ],
  TURRETS: [
      {
        POSITION: [11, 0, 0, 0, 360, 1],
        TYPE: [exports.autoBasicTurret, { INDEPENDENT: true, COLOR: 5 }],
      },
  ]
};
exports.fleshBoss = {
  PARENT: [exports.fallenRangedBoss],
  DANGER: 7,
  LABEL: "Flesh",
  SHAPE: 6,
  SIZE: 24,
  FACING_TYPE: "autospin",
  PLAGUEBRINGER: true,
  TURRETS: [
    {
      POSITION: [10, 6, 0, 45, 160, 1],
      TYPE: exports.zombieRifle,
    },
    {
      POSITION: [10, 6, 0, 135, 160, 1],
      TYPE: exports.zombieAnimator,
    },
    {
      POSITION: [10, 6, 0, 225, 160, 1],
      TYPE: exports.zombieConstructor,
    },
    {
      POSITION: [10, 6, 0, 315, 160, 1],
      TYPE: exports.zombieSkimmer,
    },
    {
      POSITION: [10, 4, 0, 90, 160, 1],
      TYPE: exports.zombie,
    },
    {
      POSITION: [10, 4, 0, -90, 160, 1],
      TYPE: exports.zombie,
    },
    {
      POSITION: [10, 4, 0, 180, 160, 1],
      TYPE: exports.zombie,
    },
    {
      POSITION: [10, 4, 0, 0, 160, 1],
      TYPE: exports.zombie,
    },
    {
      POSITION: [10, 0, 0, 45, 0, 1],
      TYPE: exports.zombieHexaTrapper,
    },
    {
      POSITION: [10, 0, 0, 45, 360, 1],
      TYPE: exports.zombieRocketeer,
    },
  ],
};
exports.zomblordLayer = {
  PARENT: [exports.fallenRangedBoss],
  CONTROLLERS: ["nearestDifferentMaster"],
  AI_TARGET: "mostDeadly",
  // INDEPENDENT: true,
  SHAPE: 6,
  COLOR: 41,
  FACING_TYPE: "autospin",
  TURRETS: [...zombieTitanArray2, ...zombieTitanArray3],
};
exports.zomblord1 = {
  PARENT: [exports.zomblordLayer],
  LABEL: "Zombie Giant",
  NAME: "Anubis", //maybe he too D E N S (dense)
  VALUE: 1000000,
  PLAGUEBRINGER: true,
  INFECTOR: true,
  EXCLUDED_TARGETS: ["fortWall", "fortGate"],
  BODY: {
    FOV: 2,
    SPEED: 1.75,
    HEALTH: 3500,
    SHIELD: 0,
    REGEN: -1,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0.7, //bullet damage
    pen: 0.7, //bullet penetration
    str: 1.2, //bullet health
    atk: 0, //bullet speed
    spd: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 30,
};
exports.zomblord2 = {
  PARENT: [exports.fallenRangedBoss],
  LABEL: "Zombie Titan",
  NAME: "Anubis",
  VALUE: 2000000,
  PLAGUEBRINGER: true,
  INFECTOR: true,
  AI_TARGET: "mostDeadly",
  BODY: {
    FOV: 2.2,
    SPEED: 0.1,
    HEALTH: 1250,
    SHIELD: 0,
    REGEN: -1,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0.3, //bullet damage
    pen: 0.3, //bullet penetration
    str: 0.3, //bullet health
    atk: 0, //bullet speed
    spd: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 43,
  SHAPE: 8,
  COLOR: 41,
  FACING_TYPE: "autospin",
  TURRETS: [
    ...zombieTitanArray1,
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [13.5, 0, 0, 0, 0, 1],
      TYPE: [exports.zomblordLayer],
    },
  ],
};
exports.flesh = {
  PARENT: [exports.genericTank],
  DANGER: 7,
  LABEL: "Flesh",
  SHAPE: 6,
  SIZE: 24,
  FACING_TYPE: "autospin",
  BODY: {
    SPEED: base.SPEED * 0.5,
    HEALTH: base.HEALTH * 5,
    DAMAGE: base.DAMAGE * 2,
    SHIELD: base.SHIELD * 0.5,
    REGEN: base.REGEN * 1.5,
  },
  SKILL_CAP: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
  SPECIAL_EFFECT: "Legend",
  RESET_UPGRADES: true,
  PLAGUEBRINGER: true,
  TURRETS: [
    {
      POSITION: [10, 6, 0, 45, 160, 1],
      TYPE: exports.zombieRifle,
    },
    {
      POSITION: [10, 6, 0, 135, 160, 1],
      TYPE: exports.zombieAnimator,
    },
    {
      POSITION: [10, 6, 0, 225, 160, 1],
      TYPE: exports.zombieConstructor,
    },
    {
      POSITION: [10, 6, 0, 315, 160, 1],
      TYPE: exports.zombieSkimmer,
    },
    {
      POSITION: [10, 4, 0, 90, 160, 1],
      TYPE: exports.zombie,
    },
    {
      POSITION: [10, 4, 0, -90, 160, 1],
      TYPE: exports.zombie,
    },
    {
      POSITION: [10, 4, 0, 180, 160, 1],
      TYPE: exports.zombie,
    },
    {
      POSITION: [10, 4, 0, 0, 160, 1],
      TYPE: exports.zombie,
    },
    {
      POSITION: [10, 0, 0, 45, 0, 1],
      TYPE: exports.zombieHexaTrapper,
    },
    {
      POSITION: [10, 0, 0, 45, 360, 1],
      TYPE: exports.zombieRocketeer,
    },
  ],
};
exports.fallenDouble = makeMulti(
  {
    PARENT: [exports.double, exports.fallenRangedBoss],
    DANGER: 9,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [20, 8, 1, 0, 5.5, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [20, 8, 1, 0, -5.5, 0, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.twin, g.double]),
          TYPE: exports.bullet,
        },
      },
    ],
  },
  2,
  "Fallen Double Twin"
);
let rogueArmadaStrapnelLayer = [];
for (let i = 0; i < 7; i++) {
  rogueArmadaStrapnelLayer.push({
    POSITION: [7, 9.25, 0, i * (360 / 7) + 360 / 7, 90, 0],
    TYPE: [exports.roguestrapnelgunTurret],
  });
}
let rogueFlagshipStrapnelLayer = [];
for (let i = 0; i < 7; i++) {
  rogueFlagshipStrapnelLayer.push({
    POSITION: [8.5, 9.25, 0, i * (360 / 7) + 360 / 7, 90, 0],
    TYPE: [exports.roguestrapnelgunTurret2],
  });
}
exports.roguarmada = makeMulti(
  {
    PARENT: [exports.guardianRangedBoss],
    FACING_TYPE: "autospin",
    SPECIAL_EFFECT: "armadaEvolve",
    COLOR: 10,
    SHAPE: 7,
    SIZE: 28.5,
  ORBIT_DISTANCE: 220,
    VALUE: 250000,
    SPIN_RATE: 0.035,
    BODY: {
      FOV: 2,
      SPEED: 0.1,
      HEALTH: 500,
      SHIELD: 50,
 
    },
    GUNS: [
      {
        POSITION: [4.25, 5.25, 1, 8, 0, 360 / 7 / 2, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleHealth,
          g.doubleDamage,
          g.greaterSize,
          g.doubleReload,
          g.lesserRange
          ]),
          TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
          AUTOFIRE: true,
        },
      },
      {
        POSITION: [0, 5.25, 1, 7, 0, 360 / 7 / 2, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleHealth,
          g.doubleDamage,
          g.greaterSize,
          g.doubleReload,
          g.lesserRange
          ]),
          TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
          AUTOFIRE: true,
        },
      },
      {
        POSITION: [0, 5.25, 1, 8, 0, 360 / 7 / 2, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleHealth,
          g.doubleDamage,
          g.greaterSize,
          g.doubleReload,
          g.lesserRange
          ]),
          TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
          AUTOFIRE: true,
        },
      },
      {
        POSITION: [0, 5.25, 1, 8, 0, 360 / 7 / 2, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleHealth,
          g.doubleDamage,
          g.greaterSize,
          g.doubleReload,
          g.lesserRange
          ]),
          TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
          AUTOFIRE: true,
        },
      },
      {
        POSITION: [0, 5.25, 1, 8, 0, 360 / 7 / 2, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleHealth,
          g.doubleDamage,
          g.greaterSize,
          g.doubleReload,
          g.lesserRange
          ]),
          TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
          AUTOFIRE: true,
        },
      },
      {
        POSITION: [0, 5.25, 1, 8, 0, 360 / 7 / 2, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleHealth,
          g.doubleDamage,
          g.greaterSize,
          g.doubleReload,
          g.lesserRange
          ]),
          TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
          AUTOFIRE: true,
        },
      },
      {
        POSITION: [0, 5.25, 1, 8, 0, 360 / 7 / 2, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.doubleHealth,
          g.doubleDamage,
          g.greaterSize,
          g.doubleReload,
          g.lesserRange
          ]),
          TYPE: [exports.bullet, { VARIES_IN_SIZE: true }],
          AUTOFIRE: true,
        },
      },
      {
        POSITION: [3.25, 7.5, 0.75, 7.65, 0, 360 / 7 / 2, 0],
      },
    ],
    TURRETS: [...rogueArmadaStrapnelLayer],
  },
  7,
  "Rogue Armada"
);
exports.flagshipShellv2 = makeMulti({
  PARENT: [exports.genericTank],
  LABEL: "",
  FACING_TYPE: "autospin",
  COLOR: 9,
  SHAPE: 7,
  INDEPENDENT: true,    SPIN_RATE: 0.035,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.5, 7.25, 1.2, 8, 0, 25.5, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.greaterDamage,
            g.minorSpeed,
            g.greaterReload,
            //g.lesserSize,
          ]),
          TYPE: [
            exports.sterileSeptagonChip,
            {
              INDEPENDENT: true,
              BODY: { FOV: 2 },
            },
          ],
          MAX_CHILDREN: 2,
          AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  7,
  ""
);
exports.rogueflagship = makeMulti(
  {
    PARENT: [exports.strongGuardianRangedBoss],
    FACING_TYPE: "autospin",
    COLOR: 10,
    SHAPE: 7,
    SIZE: 30,
    VALUE: 500000,
    SPIN_RATE: 0.035,
    BODY: {
      FOV: 2,
      SPEED: 1,
      HEALTH: 1000,
      SHIELD: 50,
 
    },
    GUNS: [
      {
        POSITION: [4.25, 5.25, 1, 8, 0, 360 / 7 / 2, 0.05],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.superHealth,
          g.superDamage,
          g.lesserRange,
          g.doubleHealth,
          ]),
          TYPE: [exports.bullet, { VARIES_IN_SIZE: true , MOTION_TYPE: "grow"}],
          AUTOFIRE: true,
        },
      },
      {
        POSITION: [0, 5.25, 1, 7, 0, 360 / 7 / 2, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.superHealth,
          g.superDamage,
          g.lesserRange,
          g.doubleHealth,
          ]),
          TYPE: [exports.bullet, { VARIES_IN_SIZE: true , MOTION_TYPE: "grow"}],
          AUTOFIRE: true,
        },
      },
      {
        POSITION: [0, 5.25, 1, 8, 0, 360 / 7 / 2, 0.075],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.superHealth,
          g.superDamage,
          g.lesserRange,
          g.doubleHealth,
          ]),
          TYPE: [exports.bullet, { VARIES_IN_SIZE: true , MOTION_TYPE: "grow"}],
          AUTOFIRE: true,
        },
      },
      {
        POSITION: [0, 5.25, 1, 8, 0, 360 / 7 / 2, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.superHealth,
          g.superDamage,
          g.greaterSize,
          g.lesserRange,
          g.doubleHealth,
          ]),
          TYPE: [exports.bullet, { VARIES_IN_SIZE: true , MOTION_TYPE: "grow"}],
          AUTOFIRE: true,
        },
      },
      {
        POSITION: [0, 5.25, 1, 8, 0, 360 / 7 / 2, 0.03],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.superHealth,
          g.superDamage,
          g.lesserRange,
          g.doubleHealth,
          ]),
          TYPE: [exports.bullet, { VARIES_IN_SIZE: true , MOTION_TYPE: "grow"}],
          AUTOFIRE: true,
        },
      },
      {
        POSITION: [0, 5.25, 1, 8, 0, 360 / 7 / 2, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.superHealth,
          g.superDamage,
          g.greaterSize,
          g.lesserRange,
          g.doubleHealth,
          ]),
          TYPE: [exports.bullet, { VARIES_IN_SIZE: true , MOTION_TYPE: "grow"}],
          AUTOFIRE: true,
        },
      },
      {
        POSITION: [0, 5.25, 1, 8, 0, 360 / 7 / 2, 0.01],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
          g.basic,
          g.shotgun,
          g.superHealth,
          g.superDamage,
          g.lesserRange,
          g.doubleHealth,
          ]),
          TYPE: [exports.bullet, { VARIES_IN_SIZE: true , MOTION_TYPE: "grow"}],
          AUTOFIRE: true,
        },
      },
      {
        POSITION: [3.25, 7.5, 0.75, 7.65, 0, 360 / 7 / 2, 0],
      },
    ],
    TURRETS: [
             
      {
        /** SIZE     X       Y     ANGLE    ARC */
        POSITION: [27.5, 0, 0, 0, 360, 0],
        TYPE: exports.flagshipShellv2,
      },
      {
        /** SIZE     X       Y     ANGLE    ARC */
        POSITION: [17.5, 0, 0, 0, 360, 1],
        TYPE: exports.flagshipShell,
      },...rogueFlagshipStrapnelLayer,],
  },
  7,
  "Rogue FlagShip"
);
exports.fallenautodouble = makeAuto(exports.fallenDouble, "Fallen Auto-Double");
exports.RogueLibor = {
  PARENT: [exports.guardianRangedBoss],
  DANGER: 7,
  COLOR: 10,
  NAME: "Alaron",
  LABEL: "Liberator",
  FACING_TYPE: "autospin",
  SIZE: 48,
  VALUE: 1000000,
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0.5, //bullet damage
    pen: 0.7, //bullet penetration
    str: 0.7, //bullet health
    atk: 0, //bullet speed
    spd: 0.2, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    FOV: 2,
    SPEED: 0.4,
    HEALTH: 2000,
    SHIELD: base.SHIELD * 0.5,
    REGEN: 0.001,
  },
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17, 0, 0, 0, 0, 1],
      TYPE: exports.trueblackCircle,
    },
    {
      POSITION: [23, 0, 0, 0, 0, 0],
      TYPE: exports.trueblackCircle,
    },
    {
      POSITION: [13, 6, 0, 0, 160, 0],
      TYPE: exports.rogueLiberatorRangerTurret,
    },
    {
      POSITION: [13, 6, 0, -90, 160, 0],
      TYPE: exports.rogueLiberatorRangerTurret,
    },
    {
      POSITION: [13, 6, 0, 90, 160, 0],
      TYPE: exports.rogueLiberatorRangerTurret,
    },
    {
      POSITION: [13, 6, 0, 180, 160, 0],
      TYPE: exports.rogueLiberatorRangerTurret,
    },
    {
      POSITION: [13, 6, 0, 45, 160, 0],
      TYPE: exports.rogueLiberatorQuinSniperTurret,
    },
    {
      POSITION: [13, 6, 0, 135, 160, 0],
      TYPE: exports.rogueLiberatorQuinSniperTurret,
    },
    {
      POSITION: [13, 6, 0, 225, 160, 0],
      TYPE: exports.rogueLiberatorQuinSniperTurret,
    },
    {
      POSITION: [13, 6, 0, 315, 160, 0],
      TYPE: exports.rogueLiberatorQuinSniperTurret,
    },
  ],
};
exports.roguemothership = makeMulti(
  {
    PARENT: [exports.guardianRangedBoss],
    CONTROLLERS: ["alwaysFire"],
    FACING_TYPE: "autospin",
    COLOR: 10,
    SHAPE: -18,
    MAX_CHILDREN: 48,
    SIZE: 48,
    VALUE: 1000000,
    BODY: {
      FOV: 2,
      SPEED: 0.4,
      HEALTH: 1500,
      SHIELD: base.SHIELD * 0.5,
      REGEN: 0.001,
    },

    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [12.35, 2, 1.8, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.doubleHealth,
            g.doubleSize,
            g.doubleReload,
          ]),
          TYPE: exports.uncontrolledMothershipDrone,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [12.35, 2, 1.8, 0, 0, 20, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.doubleHealth,
            g.doubleSize,
            g.doubleReload,
          ]),
          TYPE: exports.mothershipDrone,
        },
      },
    ],
  },
  9,
  "Rogue Mothership"
);
exports.Eggship = makeMulti(
  {
    PARENT: [exports.guardianRangedBoss],
    CONTROLLERS: ["alwaysFire"],
    FACING_TYPE: "autospin",
    COLOR: 8,
    SHAPE: 0,
    MAX_CHILDREN: 36,
    SIZE: 42,
    VALUE: 750000,
    BODY: {
      FOV: 2,
      SPEED: 0.4,
      HEALTH: 1100,
      SHIELD: base.SHIELD * 0.5,
      REGEN: 0.001,
    },

    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [12.35, 2, 1.8, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.doubleHealth,
            g.doubleSize,
            g.doubleReload,
            g.lesserHealth,
            g.halfDamage,
          ]),
          TYPE: exports.uncontrolledEggshipDrone,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [12.35, 2, 1.8, 0, 0, 20, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.doubleHealth,
            g.doubleSize,
            g.doubleReload,
            g.lesserHealth,
            g.halfDamage,
          ]),
          TYPE: exports.EggshipDrone,
        },
      },
    ],
  },
  9,
  "Mothership Replica"
);

exports.zennith = makeMulti(
  {
    NAME: "Zennith",
    PARENT: [exports.roguemothership],
    COLOR: 22,
    MAX_CHILDREN: 96,
    SIZE: 60,
    VALUE: 10000000,
    BODY: {
      FOV: 2.2,
      SPEED: 1.4,
      HEALTH: 1200,
      SHIELD: base.SHIELD * 0.5,
      REGEN: 0.000001,
    },

    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [12.35, 2, 1.8, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.doubleHealth,
            g.doubleHealth,
            g.doubleSize,
            g.doubleSpeed,
            g.bitmoreDamage,
            g.lesserReload,
          ]),
          TYPE: exports.uncontrolledMothershipDrone,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [12.35, 2, 1.8, 0, 0, 20, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.doubleHealth,
            g.doubleHealth,
            g.doubleSize,
            g.doubleSpeed,
            g.bitmoreDamage,
            g.lesserReload,
          ]),
          TYPE: exports.mothershipDrone,
        },
      },
    ],
  },
  9,
  "Lord of the Drones"
);
exports.guardian_Prometheus = {
  PARENT: [exports.guardianRangedBoss],
  NAME: "Prometheus",
  LABEL: "Reality Glitch",
  IGNORE_COLLISION: true,
  VALUE: 5000000,
  SIZE: 18,
  DANGER: 11,
  COLOR: 8,
  BODY: {
    FOV: 3.5,
    SPEED: 1,
    DAMAGE: base.DAMAGE * 4,
    HEALTH: 4000, //and yet he still dies to fallen boobs
    SHIELD: base.SHIELD * 3,
    REGEN: 0.05,
    RESIST: 1.45,
    DENSITY: base.DENSITY + 0.55,
  },
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: [exports.anomaly],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [5, 0, 0, 0, 360, 1],
      SHOOT_SETTINGS: combineStats([g.basic, g.bounce, g.lesserReload]),
      TYPE: [exports.bounce],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: [exports.anomaly],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [5, 0, 0, 0, 360, 1],
      TYPE: [exports.bounce],
    },
  ],
  GUNS: [
    {
      POSITION: [15.5, 8, 1, 0, 0, 145, 0.1],
    },

    {
      POSITION: [15.5, 8, 1, 0, 0, 215, 0.1],
    },
    {
      POSITION: [12.5, 8, 1, 0, 1, 225, 0.6],
    },
    {
      POSITION: [12.5, 8, 1, 0, -1, 135, 0.6],
    },
    {
      /* LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17.5, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        //the gun term for assassin is 'assass'
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.doubleHealth,
          g.doubleRange,
          g.morespeed,
          g.halfReload,
          g.minorRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [13, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.arenaBullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [13, 8, 1, 0, 1, 225, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.arenaBullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 0, 145, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.arenaBullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [16, 8, 1, 0, 0, 215, 0.1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.arenaBullet,
        LABEL: gunCalcNames.thruster,
      },
    },
  ],
};
//STRUCTURES
exports.obstacle = {
  TYPE: "wall",
  DAMAGE_CLASS: 1,
  LAYER: 50,
  LABEL: "Rock",
  FACING_TYPE: "turnWithSpeed",
  SHAPE: -9,
  BODY: {
    PUSHABILITY: 0,
    HEALTH: 999999,
    SHIELD: 999999,
    REGEN: 999999,
    DAMAGE: 0,
    RESIST: 100,
    STEALTH: 1,
  },
  DANGER: 9,
  MOTION_TYPE: "glide",
  VALUE: 0,
  SIZE: 60,
  COLOR: 16,
  VARIES_IN_SIZE: true,
  GIVE_KILL_MESSAGE: false,
  HITS_ITS_OWN_TYPE: "never",
  ACCEPTS_SCORE: false,
};
exports.abyssobstacle = {
  TYPE: "wall",
  DAMAGE_CLASS: 1,
  LAYER: 50,
  LABEL: "Abyssal StoneCage",
  FACING_TYPE: "turnWithSpeed",
  SHAPE: [
    [1.9, 1.78],
    [0.74, 1.97],
    [0.25, 1.53],
    [0.21, 2.4],
    [-0.8, 1],
    [-0.42, 2.14],
    [-1.2, 2],
    [-1.8, 0.4],
    [-1.2, -1.75],
    [1.55, -0.7],
    [-0.3, -0.38],
    [1.6, -0.2],
  ],
  BODY: {
    PUSHABILITY: 0,
    HEALTH: 99,
    SHIELD: 0,
    REGEN: 0,
    DAMAGE: 0,
    RESIST: 0,
    STEALTH: 1,
  },
  DANGER: 9,
  MOTION_TYPE: "glide",
  VALUE: 0,
  SIZE: 50,
  COLOR: 6,
  VARIES_IN_SIZE: true,
  GIVE_KILL_MESSAGE: false,
  HITS_ITS_OWN_TYPE: "never",
  ACCEPTS_SCORE: false,
};
exports.babyObstacle = {
  PARENT: [exports.obstacle],
  SIZE: 25,
  SHAPE: -7,
  LABEL: "Gravel",
};
exports.wall = {
  LABEL: "Maze Wall",
  TYPE: "squareWall",
  LAYER: 50,
  SHAPE: 4,
  SIZE: 1,
  BODY: {
    SPEED: 1,
    ACCELERATION: 1,
    PUSHABILITY: 0,
    HEALTH: 999999,
    SHIELD: 999999,
    REGEN: 999999,
    DAMAGE: 10,
    RESIST: 100,
    STEALTH: 1,
    DENSITY: Infinity,
  },
  LEVEL: -1,
  DANGER: 10,
  PERSISTS_AFTER_DEATH: true,
  HITS_ITS_OWN_TYPE: "hard",
  COLOR: 16,
  ACCEPTS_SCORE: false,
  CAN_GO_OUTSIDE_ROOM: true,
};
exports.Workbench = {
  PARENT: [exports.wall],
  IGNORE_COLLISION: true,
  SHAPE: [
    [-1, -1],
    [0.5, -1],
    [0, -0.5],
    [0, 0.5],
    [0.5, 1],
    [-1, 1],
  ],
  LABEL: "Pendekot's Workbench",
  COLOR: 7,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [1.5, -4, -8, 10, 0, 1],
      TYPE: [exports.pentagon],
    },
    {
      POSITION: [5.5, -4.5, 3, 20, 0, 1],
      TYPE: [exports.pentagon],
    },
    {
      POSITION: [2, -2, 7, 0, 40, 1],
      TYPE: [exports.pentagon],
    },
    {
      POSITION: [1.5, -7, 7, -50, 0, 1],
      TYPE: [exports.pentagon],
    },
    {
      POSITION: [8, -6, 0.2, 70, 0, 1],
      TYPE: [exports.pentaSpawnerStatue],
    },
  ],
};
exports.tileFloor = {
  LABEL: "Floor",
  TYPE: "tile",
  ALPHA: 0.15,
  LAYER: 0,
  SHAPE: 4,
  SIZE: 1,
  IGNORE_COLLISION: true,
  BODY: {
    SPEED: 1,
    ACCELERATION: 1,
    PUSHABILITY: 0,
    HEALTH: 999999,
    SHIELD: 999999,
    REGEN: 999999,
    DAMAGE: 10,
    RESIST: 100,
    STEALTH: 1,
    DENSITY: Infinity,
  },
  LEVEL: -1,
  DANGER: 10,
  PERSISTS_AFTER_DEATH: true,
  HITS_ITS_OWN_TYPE: "never",
  COLOR: 16,
  ACCEPTS_SCORE: false,
  CAN_GO_OUTSIDE_ROOM: true,
};
exports.arrow = {
  PARENT: [exports.tileFloor],
  SHAPE: 3,
};
exports.arrowFloor = {
  PARENT: [exports.tileFloor],
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [7.5, 2, 0, 0, 360, 1],
      TYPE: [exports.arrow],
    },
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [7.5, -3.5, 0, 0, 360, 1],
      TYPE: [exports.arrow],
    },
  ],
};
exports.fortwall = {
  LABEL: "Fort Wall",
  TYPE: "fortWall",
  EXCLUDED_TARGETS: ["fortWall", "fortGate", "base", "wall"],
  LAYER: 40,
  VALUE: 100000,
  TARGETABLE: true,
  STRUCTURE: true,
  FACING_TYPE: "locksFacing",
  DANGER: 7,
  SHAPE: 4,
  SIZE: 1,
  NO_REGEN: true,
  SKILL: skillSet({
    rld: 0.5, //reload
    dam: 1, //bullet damage
    pen: 1, //bullet penetration
    str: 1, //bullet health
    spd: 1, //bullet speed
  }),
  BODY: {
    PUSHABILITY: 0,
    DENSITY: 5,
    SPEED: 0,
    ACCELERATION: 0,
    HEALTH: 500,
    SHIELD: 100,
    REGEN: 0.001,
    PENETRATION: 2.5,
    DAMAGE: 7.5,
    RESIST: 1,
  },
  REGEN_TYPE: "shieldOnly",
  COLOR: 16,
  ACCEPTS_SCORE: false,
  CAN_GO_OUTSIDE_ROOM: true,
  GIVE_KILL_MESSAGE: true,
  CAN_BE_ON_LEADERBOARD: false,
  DRAW_HEALTH: true,
  HAS_NO_RECOIL: true,
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.75, 0, 0, 0, 360, 0],
      TYPE: exports.wallBarrier,
    },
  ],
};
exports.autowall1 = {
  PARENT: [exports.fortwall],
  LABEL: "Fort Wall",
  TYPE: "fortWall",
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1.7, //bullet damage
    pen: 0.7, //bullet penetration
    str: 0.9, //bullet health
    spd: 0.7, //bullet speed
  }),
  BODY: {
    PUSHABILITY: 0,
    DENSITY: 5,
    SPEED: 0,
    ACCELERATION: 0,
    HEALTH: 1500,
    SHIELD: 320,
    REGEN: -1,
    PENETRATION: 1,
    DAMAGE: 1,
    RESIST: 1,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.75, 0, 0, 0, 360, 0],
      TYPE: exports.wallBarrier,
    },
    {
      POSITION: [5, 4, 0, 45, 160, 1],
      TYPE: [exports.auto3Turret, { INDEPENDENT: true, HAS_NO_RECOIL: true }],
    },
    {
      POSITION: [5, 4, 0, -45, 160, 1],
      TYPE: [exports.auto3Turret, { INDEPENDENT: true, HAS_NO_RECOIL: true }],
    },
    {
      POSITION: [5, 4, 0, 135, 160, 1],
      TYPE: [exports.auto3Turret, { INDEPENDENT: true, HAS_NO_RECOIL: true }],
    },
    {
      POSITION: [5, 4, 0, -135, 160, 1],
      TYPE: [exports.auto3Turret, { INDEPENDENT: true, HAS_NO_RECOIL: true }],
    },
    {
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: [
        exports.autoSmasherTurret,
        { INDEPENDENT: true, CONTROLLERS: ["Dominator"], HAS_NO_RECOIL: true },
      ],
    },
  ],
};
exports.pentagonfortwall = {
  PARENT: [exports.fortwall],
};
exports.pentagonautowall = {
  PARENT: [exports.fortwall],
  LABEL: "Fort Wall",
  TYPE: "fortWall",
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1.7, //bullet damage
    pen: 0.7, //bullet penetration
    str: 0.9, //bullet health
    spd: 0.7, //bullet speed
  }),
  BODY: {
    PUSHABILITY: 0,
    DENSITY: 5,
    SPEED: 0,
    ACCELERATION: 0,
    HEALTH: 5000,
    SHIELD: 320,
    REGEN: -1,
    PENETRATION: 1,
    DAMAGE: 1,
    RESIST: 1,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.75, 0, 0, 0, 360, 0],
      TYPE: exports.wallBarrier,
    },
    {
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.pentagonBody3, { INDEPENDENT: true, HAS_NO_RECOIL: true }],
    },
    {
      POSITION: [5, 4, 0, 45, 160, 1],
      TYPE: [
        exports.crossbowPentagonTurret,
        { INDEPENDENT: true, HAS_NO_RECOIL: true },
      ],
    },
    {
      POSITION: [5, 4, 0, -45, 160, 1],
      TYPE: [
        exports.crossbowPentagonTurret,
        { INDEPENDENT: true, HAS_NO_RECOIL: true },
      ],
    },
    {
      POSITION: [5, 4, 0, 135, 160, 1],
      TYPE: [
        exports.crossbowPentagonTurret,
        { INDEPENDENT: true, HAS_NO_RECOIL: true },
      ],
    },
    {
      POSITION: [5, 4, 0, -135, 160, 1],
      TYPE: [
        exports.crossbowPentagonTurret,
        { INDEPENDENT: true, HAS_NO_RECOIL: true },
      ],
    },
    {
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: [
        exports.skimmerPentagonTurret,
        { INDEPENDENT: true, CONTROLLERS: ["Dominator"], HAS_NO_RECOIL: true },
      ],
    },
  ],
};
exports.pentagontrapperwall360 = makeMulti(
  {
    PARENT: [exports.fortwall],
    CONTROLLERS: ["nearestDifferentMaster"],
    GUNS: [
      {
        POSITION: [10, 6, 1, 0, -4, 180, 0.5],
      },
      {
        POSITION: [1, 6, 1.7, 10, -4, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.pound,
            g.destroy,
            g.halfSpeed,
            g.halfSpeed,
            g.halfReload,
            g.halfReload,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
      {
        POSITION: [10, 6, 1, 0, 4, 180, 0.5],
      },
      {
        POSITION: [1, 6, 1.7, 10, 4, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.pound,
            g.destroy,
            g.halfSpeed,
            g.halfSpeed,
            g.halfReload,
            g.halfReload,
          ]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [15, 0, 0, 0, 360, 1],
        TYPE: [
          exports.pentagonBody3,
          { INDEPENDENT: true, HAS_NO_RECOIL: true },
        ],
      },
    ],
  },
  4,
  ""
);
exports.trapperwall = {
  PARENT: [exports.fortwall],
  CONTROLLERS: ["nearestDifferentMaster"],
  VALUE: 150000,
  GUNS: [
    {
      POSITION: [10, 3, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [1, 3, 1.7, 10, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.halfspeed]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [10, 3, 1, 0, -5, 180, 0.5],
    },
    {
      POSITION: [1, 3, 1.7, 10, -5, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.halfspeed]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
    {
      POSITION: [10, 3, 1, 0, 5, 180, 0.5],
    },
    {
      POSITION: [1, 3, 1.7, 10, 5, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.halfspeed]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ],
};
exports.crusherFortWall = {
  PARENT: [exports.fortwall],
  TYPE: "fortGate",
  VALUE: 250000,
  AI_TARGET: "mostDeadly",
  CONTROLLERS: ["nearestDifferentMaster"],
  SPECIAL_EFFECT: "crusherFortWall",
  HAS_NO_RECOIL: false,
  BODY: {
    FOV: 0.5,
    DAMAGE: 7.5,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.75, 0, 0, 0, 360, 0],
      TYPE: exports.wallBarrier,
    },
    {
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [8, 12, 1.4, 8, 0, 0, 3.75],
      PROPERTIES: {
        STAT_CALCULATOR: gunCalcNames.thruster,
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.mach,
          g.arty,
          g.halfReload,
          g.greaterRecoil,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
      },
    },
  ],
};
exports.fortgate = {
  LABEL: "Fort Gate",
  TYPE: "fortGate",
  LAYER: 35,
  VALUE: 50000,
  TARGETABLE: true,
  DANGER: 7,
  SHAPE: 4,
  STRUCTURE: true,
  ALPHA: 0.5,
  SIZE: 1,
  BODY: {
    PUSHABILITY: 0,
    DENSITY: 5,
    SPEED: 0,
    ACCELERATION: 0,
    HEALTH: 100,
    SHIELD: 500,
    PENETRATION: 2.5,
    REGEN: 0.01,
    DAMAGE: 7.5,
    DENSITY: 10,
    RESIST: 1,
    STEALTH: 1,
  },
  REGEN_TYPE: "healthOnly",
  COLOR: 16,
  ACCEPTS_SCORE: false,
  CAN_GO_OUTSIDE_ROOM: true,
  CAN_BE_ON_LEADERBOARD: false,
  GIVE_KILL_MESSAGE: true,
  DRAW_HEALTH: true,
  HITS_OWN_TYPE: "never",
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.wallBarrier,
    },
  ],
};
exports.fortgateT1 = {
  LABEL: "Fort Gate",
  TYPE: "fortGate",
  LAYER: 35,
  VALUE: 50000,
  TARGETABLE: true,
  DANGER: 7,
  SHAPE: 4,
  STRUCTURE: true,
  ALPHA: 0.5,
  SIZE: 1,
  BODY: {
    PUSHABILITY: 0,
    DENSITY: 5,
    SPEED: 0,
    ACCELERATION: 0,
    HEALTH: 100,
    SHIELD: 500,
    PENETRATION: 2.5,
    REGEN: 0.01,
    DAMAGE: 7.5,
    DENSITY: 10,
    RESIST: 1,
    STEALTH: 1,
  },
  REGEN_TYPE: "healthOnly",
  COLOR: 16,
  ACCEPTS_SCORE: true,
  CAN_GO_OUTSIDE_ROOM: true,
  GIVE_KILL_MESSAGE: true,
  DRAW_HEALTH: true,
  HITS_OWN_TYPE: "never",
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [20.5, 0, 0, 0, 360, 0],
      TYPE: exports.wallBarrier,
    },
  ],
};
exports.buttonTrap = {
  LABEL: "Trap Button",
  TYPE: "trapButton",
  TARGETABLE: false,
  DANGER: 7,
  SHAPE: 4,
  STRUCTURE: true,
  SIZE: 10,
  ALPHA: 0.025,
  BODY: {
    PUSHABILITY: 0,
    DENSITY: 5,
    SPEED: 0,
    ACCELERATION: 0,
    HEALTH: 10,
  },
  COLOR: 16,
  ACCEPTS_SCORE: false,
  CAN_GO_OUTSIDE_ROOM: true,
  GIVE_KILL_MESSAGE: false,
  DRAW_HEALTH: true,
  HITS_OWN_TYPE: "never",
};
exports.fortwallTS = {
  PARENT: [exports.fortwall],
  LABEL: "Fort Wall",
  SPECIAL_EFFECT: "turretted",
  TURRETS: [
    {
      POSITION: [6, 0, 0, 180, 360, 1],
      TYPE: [exports.assassin3Turret, { HAS_NO_RECOIL: true }],
    },
  ],
};
//SYSTEM ENTITIES

var random = Math.random();

exports.basedrone = {
  LABEL: "Drone",
  TYPE: "swarm",
  LAYER: 10,
  ACCEPTS_SCORE: false,
  DANGER: 4,
  CONTROL_RANGE: 0,
  SHAPE: 3,
  VARIES_IN_SIZE: false,
  INDEPENDENT: true,
  MOTION_TYPE: "chase",
  FACING_TYPE: "smoothToTarget",
  AI_TARGET: "mostDeadly",
  CONTROLLERS: [
    "nearestDifferentMaster",
    "canRepel",
    "mapTargetToGoal",
    "hangOutNearMaster",
  ],
  AI: {
    NO_LEAD: true,
    FARMER: false,
  },
  BODY: {
    PENETRATION: 1.2,

    ACCELERATION: 0.05,
    HEALTH: 1,
    DAMAGE: 5 * wepDamageFactor,
    SPEED: 1.7,
    RANGE: 200,
    DENSITY: 500,
    PUSHABILITY: 1,
    RESIST: 1.5,
    FOV: 1.5,
  },
  HITS_OWN_TYPE: "hard",
  DRAW_HEALTH: false,
  CLEAR_ON_MASTER_UPGRADE: true,
  BUFF_VS_FOOD: true,
  ACCEPTS_SCORE: false,
};
exports.basedroneSpawn = {
  LABEL: "Base",
  TYPE: "drone",
  LAYER: 10,
  ALPHA: 0,
  CAN_BE_ON_LEADERBOARD: false,
  STAT_NAMES: statnames.drone,
  DANGER: 7,
  SIZE: 65,
  SKILL: skillSet({
    rld: 0.7,
    dam: 1.5,
    pen: 1.5,
    str: 1.5,
    spd: 0.75,
    atk: 1.3,
    hlt: 1.3,
    shi: 0.8,
    rgn: 0.4,
    mob: 0,
  }),
  INTANGIBLE: true,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    FOV: 1.15,
    PUSHABILITY: 0,
    REGEN: 0,
    SHIELD: 10,
    HEALTH: 10,
    RESIST: 100,
  },
  HITS_OWN_TYPE: "never",
  HAS_NO_RECOIL: true,
  FACING_TYPE: "autospin",
  ACCEPTS_SCORE: false,
  MAX_CHILDREN: 10,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [6, 12, 1.2, 8, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.cheese,
          g.superHealth,
          g.halfSpeed,
          g.minorSize,
          g.lesserSize,
        ]),
        TYPE: exports.basedrone,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
};
exports.arenaCloser = {
  PARENT: [exports.genericTank],
  LABEL: "Arena Closer",
  LAYER: 75,
  TYPE: "none",
  TARGETABLE: true,
  IGNORE_COLLISION: true,
  BODY: {
    ACCELERATION: 5,
    FOV: 100,
    SPEED: 8,
    HEALTH: 100000,
    SHIELD: 10000,
    REGEN: 0,
    DAMAGE: 50,
    DENSITY: 30,
    PUSHABILITY: 0,
  },

  SKILL: skillSet({
    dam: 10,
    pen: 1,
    str: 10,
  }),
  DANGER: 9,
  LEVEL: Infinity,
  SIZE: 40,
  CAN_BE_ON_LEADERBOARD: false,
  HAS_NO_RECOIL: true,
  CAN_GO_OUTSIDE_ROOM: true,
  FACING_TYPE: "toTarget",
  COLOR: 3,
  DRAW_HEALTH: false,
  AI_TARGET: "allHostiles",
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapAltToFire",
    "mapTargetToGoal",
    "canRepel",
    "hangOutNearMaster",
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.uberDamage,
          g.halfReload,
          g.superSpeed,
          g.uberRange,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
};
exports.repPod = {
  PARENT: [exports.genericTank],
  TYPE: "voidlordBoss",
  LABEL: "Void Pod",
  SPECIAL_EFFECT: "rep",
  LEVEL: 45,
  SIZE: 12,
  SHAPE: 6,
  HAS_NO_RECOIL: true,
  CAN_BE_ON_LEADERBOARD: false,
  RESET_UPGRADES: true,
  DRAW_HEALTH: false,
  DANGER: -1,
  FIXED_POSITION: true,
  CONTROLLERS: ["moveInCircles"],
  FACING_TYPE: "turnWithSpeed",
  MOTION_TYPE: "drift",
  BODY: {
    HEALTH: 10000,
    DAMAGE: 0,
    SHIELD: 10000,
    REGEN: base.REGEN * 0,
    PUSHABILITY: 0,
    ACCELERATION: 0,
    SPEED: 0,
  },
  SKILL: skillSet({
    dam: 1,
    pen: 1,
    str: 10,
  }),
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [10, 0, 0, 0, 361, 1],
      TYPE: exports.dominationBody,
    },
  ],
};
exports.healOrb = {
  PARENT: [exports.food],
  FOOD: {
    LEVEL: -1,
  },
  DANGER: -1,
  LABEL: "Health Orb",
  TYPE: "orb",
  HEAL_EFFECT: true,
  SHAPE: 0,
  SIZE: 15,
  COLOR: 10,
  BODY: {
    DAMAGE: 10,
    PUSHABILITY: 1.8,
    DENSITY: 7,
    HEALTH: 30,
    RESIST: 1.25,
    PENETRATION: 1.6,
  },
  DRAW_HEALTH: false,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.healerSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.itemtest1 = {
  PARENT: [exports.food],
  FOOD: {
    LEVEL: -1,
  },
  DANGER: -1,
  LABEL: "item test",
  SHAPE: 6,
  SPECIAL_EFFECT: "+speedT1",
  SIZE: 15,
  COLOR: 10,
  BODY: {
    DAMAGE: 10,
    PUSHABILITY: 1.8,
    DENSITY: 7,
    HEALTH: 30,
    RESIST: 1.25,
    PENETRATION: 1.6,
  },
  DRAW_HEALTH: false,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.smasherBody, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.voidportal = {
  PARENT: [exports.genericTank],
  TYPE: "voidlordBoss",
  LABEL: "Void Portal",
  LEVEL: 45,
  SIZE: 24,
  HAS_NO_RECOIL: true,
  CAN_BE_ON_LEADERBOARD: false,
  RESET_UPGRADES: true,
  DANGER: 9,
  FIXED_POSITION: true,
  DRAW_HEALTH: false,
  CONTROLLERS: ["Dominator"],
  BODY: {
    HEALTH: 500,
    DAMAGE: 1,
    SHIELD: base.SHIELD,
    REGEN: base.REGEN * 0,
    PUSHABILITY: 0,
  },
  SKILL: skillSet({
    dam: 1,
    pen: 1,
    str: 10,
  }),
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominationBody,
    },
  ],
};
exports.Cubedrift = {
  PARENT: [exports.genericTank],
  TYPE: "voidlordBoss",
  LABEL: "Cubed Rift",
  LEVEL: 45,
  SIZE: 50,
  SHAPE: 4,
  HAS_NO_RECOIL: true,
  CAN_BE_ON_LEADERBOARD: false,
  RESET_UPGRADES: true,
  DANGER: 9,
  FIXED_POSITION: true,
  DRAW_HEALTH: false,
  CONTROLLERS: ["spin"],
  BODY: {
    HEALTH: 350,
    DAMAGE: 10,
    SHIELD: base.SHIELD,
    REGEN: base.REGEN * 0,
    PUSHABILITY: 0,
  },
  SKILL: skillSet({
    dam: 1,
    pen: 1,
    str: 10,
  }),
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.cubedSpinningSaw1,
    },
    {
      POSITION: [18, 0, 0, 0, 360, 1],
      TYPE: exports.cubedSpinningSaw2,
    },
  ],
};
exports.pentarift = {
  PARENT: [exports.genericTank],
  TYPE: "voidlordBoss",
  LABEL: "Pentagon Rift",
  LEVEL: 45,
  SIZE: 50,
  SHAPE: 5,
  HAS_NO_RECOIL: true,
  CAN_BE_ON_LEADERBOARD: false,
  RESET_UPGRADES: true,
  DANGER: 9,
  FIXED_POSITION: true,
  DRAW_HEALTH: false,
  CONTROLLERS: ["spin"],
  BODY: {
    HEALTH: 350,
    DAMAGE: 10,
    SHIELD: base.SHIELD,
    REGEN: base.REGEN * 0,
    PUSHABILITY: 0,
  },
  SKILL: skillSet({
    dam: 1,
    pen: 1,
    str: 10,
  }),
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.pentagonSpinningSaw1,
    },
    {
      POSITION: [18, 0, 0, 0, 360, 1],
      TYPE: exports.pentagonSpinningSaw2,
    },
  ],
};
exports.dominator = {
  PARENT: [exports.genericTank],
  TYPE: "base",
  LABEL: "Dominator",
  VALUE: 500000,
  LAYER: 10,
  STRUCTURE: true,
  LEVEL: 45,
  SIZE: 21,
  HAS_NO_RECOIL: true,
  CAN_BE_ON_LEADERBOARD: false,
  GIVE_KILL_MESSAGE: true,
  RESET_UPGRADES: true,
  DANGER: 9,
  CONTROLLERS: ["Dominator"],
  FIXED_POSITION: true,
  BODY: {
    HEALTH: 500,
    DAMAGE: 10,
    SHIELD: base.SHIELD,
    PENETRATION: 5,
    REGEN: 0.00005,
    DENSITY: 9999,
    PUSHABILITY: 0,
  },
  SKILL: skillSet({
    dam: 1,
    pen: 1,
    str: 10,
  }),
  TURRETS: [
    {
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
};
exports.teraShrine = {
  PARENT: [exports.genericTank],
  TYPE: "base",
  LABEL: "Shrine",
  STRUCTURE: true,
  LEVEL: 45,
  SIZE: 24,
  HAS_NO_RECOIL: true,
  CAN_BE_ON_LEADERBOARD: false,
  GIVE_KILL_MESSAGE: true,
  DRAW_HEALTH: false,
  RESET_UPGRADES: true,
  DANGER: 9,
  CONTROLLERS: ["Dominator"],
  FIXED_POSITION: true,
  BODY: {
    HEALTH: 50000000000000000000000000000000000000000000000000000000000000000,
    DAMAGE: 10,
    SHIELD: base.SHIELD,
    PENETRATION: 5,
    REGEN: 5,
    DENSITY: 9999,
    PUSHABILITY: 0,
  },
  SKILL: skillSet({
    dam: 1,
    pen: 1,
    str: 10,
  }),
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15.5, 0, 0, 0, 361, 1],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [21.5, 0, 0, 50, 361, 0],
      TYPE: exports.shrineBody,
    },
    {
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.shrineBody,
    },
    {
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.smasherBody,
    },
  ],
};
//mechanical doms
exports.dominator_barrac = {
  PARENT: [exports.dominator],
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      POSITION: [16, 0, 0, 0, 360, 1],
      TYPE: exports.barricadeTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [12, 0, 0, 0, 360, 1],
      TYPE: [
        exports.repairAuraSpawner,
        {
          GUNS: [
            {
              POSITION: [0, 20, 1, 0, 0, 0, 0],
              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.atmosphere,
                  g.lesserDamage,
                  g.size400,
                  g.doubleSize,
                  g.greaterSize,
                ]),
                TYPE: [exports.repairAura, { COLOR: 7 }],
                MAX_CHILDREN: 1,
                AUTOFIRE: true,
              },
            },
          ],
        },
      ],
    },
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15.5, 0, 0, 0, 360, 1],
      TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 180, 360, 0],
      TYPE: exports.dominatorBody,
    },
    {
      POSITION: [13, 7, 0, -120, 120, 0],
      TYPE: exports.barricadeTurret,
    },
    {
      POSITION: [13, 7, 0, 120, 120, 0],
      TYPE: exports.barricadeTurret,
    },
    {
      POSITION: [13, 7, 0, 0, 120, 0],
      TYPE: exports.barricadeTurret,
    },
  ],
};
//void doms
//rebel doms
exports.dominator_penta = {
  PARENT: [exports.dominator],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 9, 1, 2, -2, -40, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [12, 9, 1, 2, 2, 40, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 9, 1, 1, -1, -20, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15, 9, 1, 1, 1, 20, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 9, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.power,
          g.lesserSpeed,
          g.lesserDamage,
          g.lesserPenetration,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.dominator_single = {
  PARENT: [exports.dominator],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.destroy,
          g.single,
          g.superStats,
          g.superReload,
          g.superReload,
          g.doubleReload,
          g.halfSpeed,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
exports.dominator_trap = {
  PARENT: [exports.dominator],
  FACING_TYPE: "autospin",
  GUNS: [],
};

for (let i = 0; i < 8; i++) {
  exports.dominator_trap.GUNS.push(
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    {
      POSITION: [12, 3.5, 1, 0, 0, i * 45, 0],
    },
    {
      POSITION: [1.3, 3.5, 1.7, 12, 0, i * 45, 0],
      PROPERTIES: {
        AUTOFIRE: true,
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.hexatrap,
          g.superStats,
          g.lesserSpeed,
          g.superReload,
          g.doubleReload,
          g.greaterReload,
          g.greaterRange,
          g.minorDamage,
          g.greaterHealth,
          g.greaterReload,
        ]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    }
  );
}

exports.dominator_nail = {
  PARENT: [exports.dominator],
  BODY: {
    FOV: 0.75,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14.5, 3, 1, 0, -2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.lesserSize,
          g.doubleDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [14.5, 3, 1, 0, 2, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.lesserSize,
          g.doubleDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [16, 3, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.halfReload,
          g.lesserSize,
          g.doubleDamage,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [5, 8, -1.8, 6.5, 0, 0, 0],
    },
  ],
};
//zombie doms
exports.dominator_animator = {
  PARENT: [exports.dominator],
  LABEL: "Animator",
  DANGER: 7,
  STAT_NAMES: statnames.drone,
  BODY: {
    SPEED: base.SPEED * 0.8,
    FOV: 1.2,
  },
  MAX_CHILDREN: 6,
  GUNS: [
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1.4, 9, 1, 10.5, 0, 0, 0.25],
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [2.4, 12, 1, 12.5, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory, g.halfDamage, g.superHealth]),
        TYPE: [exports.pounderMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4.4, 12, 1, 6.5, 0, 0, 0.75],
    },
    //
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1.4, 9, 1, 10.5, 0, 120, 0.25],
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [2.4, 12, 1, 12.5, 0, 120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory, g.halfDamage, g.superHealth]),
        TYPE: [exports.flankGuardMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4.4, 12, 1, 6.5, 0, 120, 0.75],
    },
    //
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [1.4, 9, 1, 10.5, 0, -120, 0.25],
    },
    {
      /**** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [2.4, 12, 1, 12.5, 0, -120, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: [g.factory, g.halfDamage, g.superHealth],
        TYPE: [exports.trapperMinion],
        STAT_CALCULATOR: gunCalcNames.drone,
        AUTOFIRE: true,
        MAX_CHILDREN: 2,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4.4, 12, 1, 6.5, 0, -120, 0.75],
    },
  ],
};
exports.dominator_flesh = {
  PARENT: [exports.dominator],
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      POSITION: [10, 6, 0, 45, 160, 1],
      TYPE: exports.zombieBuilder,
    },
    {
      POSITION: [10, 6, 0, 135, 160, 1],
      TYPE: exports.zombieBuilder,
    },
    {
      POSITION: [10, 6, 0, 225, 160, 1],
      TYPE: exports.zombieBuilder,
    },
    {
      POSITION: [10, 6, 0, 315, 160, 1],
      TYPE: exports.zombieBuilder,
    },
    {
      POSITION: [10, 4, 0, 90, 160, 1],
      TYPE: exports.zombie,
    },
    {
      POSITION: [10, 4, 0, -90, 160, 1],
      TYPE: exports.zombie,
    },
    {
      POSITION: [10, 4, 0, 180, 160, 1],
      TYPE: exports.zombie,
    },
    {
      POSITION: [10, 4, 0, 0, 160, 1],
      TYPE: exports.zombie,
    },
    {
      POSITION: [10, 0, 0, 45, 0, 1],
      TYPE: exports.zombieHexaTrapper,
    },
  ],
};
exports.dominator_underseer = makeMulti(
  {
    PARENT: [exports.dominator],
    FACING_TYPE: "autospin",
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3, 8, 1.2, 7, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.sunchip]),
          TYPE: [exports.sunchip],
          AUTOFIRE: true,
          MAX_CHILDREN: 3,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  6,
  "Dominator"
);
exports.sanct = {
  PARENT: [exports.dominator],
  LABEL: "Sanctuary",
  VALUE: 1000000,
  GUNS: [],
  BODY: {
    HEALTH: 1000,
  },
  TURRETS: [
    {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.sanctuary_snow,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
};
exports.sanct_single = {
  PARENT: [exports.dominator_single],
  LABEL: "Sanctuary",
  VALUE: 1000000,
  BODY: {
    HEALTH: 1000,
  },
  SKILL: skillSet({
    dam: 1.2,
    pen: 1.2,
    str: 12,
  }),
  TURRETS: [
    {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.sanctuary_snow,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
};
exports.sanct_nail = {
  PARENT: [exports.dominator_nail],
  LABEL: "Sanctuary",
  VALUE: 1000000,
  BODY: {
    HEALTH: 1000,
  },
  TURRETS: [
    {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.sanctuary_snow,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
};
exports.sanct_trap = {
  PARENT: [exports.dominator_trap],
  LABEL: "Sanctuary",
  VALUE: 1000000,
  BODY: {
    HEALTH: 1000,
  },
  TURRETS: [
    {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.sanctuary_snow,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
};
exports.repsanct_trap = {
  PARENT: [exports.dominator_trap],
  LABEL: "Sanctuary",
  VALUE: 1000000,
  BODY: {
    HEALTH: 1000,
  },
  TURRETS: [
    {
      POSITION: [14.5, 0, 0, 0, 360, 1],
      TYPE: [exports.repairSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
    {
      POSITION: [8.5, 0, 0, 30, 360, 1],
      TYPE: exports.repsanctuary_snow,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
  ],
};
exports.anti_tank = {
  PARENT: [exports.genericTank],
  TYPE: "base",
  LABEL: "Anti-Tank Machine Gun",
  LAYER: 75,
  LEVEL: 45,
  SIZE: 17.5,
  HAS_NO_RECOIL: true,
  TURN_WHILE_IDLE: true,
  CAN_BE_ON_LEADERBOARD: false,
  RESET_UPGRADES: true,
  DANGER: 10,
  AI_TARGET: "allHostiles",
  DRAW_HEALTH: false,
  CONTROLLERS: ["nearestDifferentMaster"],
  BODY: {
    FOV: 100,
    HEALTH: 33000,
    SHIELD: 10000,
    REGEN: 0,
    DAMAGE: 50,
    DENSITY: 30,
    PUSHABILITY: 0,
  },

  SKILL: skillSet({
    dam: 1,
    pen: 1,
    str: 10,
    rld: 10,
  }),
  GUNS: [
    {
      POSITION: [20, 7.5, -1.5, 0, 0, 90, 0],
    },
    {
      POSITION: [20, 7.5, -1.5, 0, 0, 270, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15.75, 3.5, 1, 0, -1.35, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
          g.minorReload,
          g.lesserSize,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15.75, 3.5, 1, 0, 1.35, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
          g.minorReload,
          g.lesserSize,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 3.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
          g.minorReload,
          g.lesserSize,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6.5, 6, -1.55, 6.5, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 25.5, 0, 180, 1],
      TYPE: exports.antiTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, -25.5, 0, 180, 1],
      TYPE: exports.antiTurret,
    },
  ],
};
exports.anti_tankdestroy = {
  PARENT: [exports.genericTank],
  TYPE: "base",
  LABEL: "Anti-Tank Destruction Gun",
  LAYER: 75,
  LEVEL: 45,
  SIZE: 17.5,
  HAS_NO_RECOIL: true,
  TURN_WHILE_IDLE: true,
  CAN_BE_ON_LEADERBOARD: false,
  RESET_UPGRADES: true,
  DANGER: 10,
  AI_TARGET: "allHostiles",
  DRAW_HEALTH: false,
  CONTROLLERS: ["nearestDifferentMaster"],

  BODY: {
    FOV: 100,
    HEALTH: 33000,
    SHIELD: 10000,
    REGEN: 0,
    DAMAGE: 50,
    DENSITY: 30,
    PUSHABILITY: 0,
  },

  SKILL: skillSet({
    dam: 1,
    pen: 1,
    str: 10,
    rld: 10,
  }),
  GUNS: [
    {
      POSITION: [20, 7.5, -1.5, 0, 0, 90, 0],
    },
    {
      POSITION: [20, 7.5, -1.5, 0, 0, 270, 0],
    },
    {
      POSITION: [18, 8.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.power,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
          g.minorReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6.5, 10, -1.55, 6.5, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 25.5, 0, 180, 1],
      TYPE: exports.antiDestroyerTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, -25.5, 0, 180, 1],
      TYPE: exports.antiDestroyerTurret,
    },
  ],
};
exports.superanti_tank = {
  PARENT: [exports.minion],
  TYPE: "base",
  LABEL: "Anti-Tank Machine Gun",
  LEVEL: 45,
  SIZE: 12.5,
  INDEPENDENT: true,
  COLOR: 1,
  HAS_NO_RECOIL: true,
  CAN_BE_ON_LEADERBOARD: false,
  RESET_UPGRADES: true,
  DANGER: 10,
  DRAW_HEALTH: false,
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapAltToFire",
    "mapTargetToGoal",
    "canRepel",
    "hangOutNearMaster",
  ],
  BODY: {
    FOV: 100,
    HEALTH: 10000,
    SHIELD: 10000,
    REGEN: 1000,
    SPEED: 18,
    DAMAGE: 10,
    DENSITY: 30,
    PUSHABILITY: 0,
  },
  INDEPENDENT: false,
  SKILL: skillSet({
    dam: 1,
    pen: 1,
    str: 10,
    rld: 10,
  }),
  GUNS: [
    {
      POSITION: [10, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.OMEGADamage,
          g.OMEGADamage,
          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [20, 7.5, -1.5, 0, 0, 90, 0],
    },
    {
      POSITION: [20, 7.5, -1.5, 0, 0, 270, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15.75, 3.5, 1, 0, -1.35, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.uberStats,
          g.uberDamage,
          g.superSpeed,
          g.superSpeed,
          g.minorReload,
          g.lesserSize,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15.75, 3.5, 1, 0, 1.35, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.uberStats,
          g.uberDamage,
          g.superSpeed,
          g.superSpeed,
          g.minorReload,
          g.lesserSize,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 3.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.uberStats,
          g.uberDamage,
          g.superSpeed,
          g.superSpeed,
          g.minorReload,
          g.lesserSize,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6.5, 6, -1.55, 6.5, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 0, 0],
      TYPE: exports.dominatorBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 25.5, 0, 359, 1],
      TYPE: exports.antiTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, -25.5, 0, 359, 1],
      TYPE: exports.antiTurret,
    },
  ],
};
exports.anti_tank2 = {
  PARENT: [exports.genericTank],
  TYPE: "base",
  LABEL: "Anti-Tank Machine Gun",
  LEVEL: 45,
  COLOR: 1,
  SIZE: 12.5,
  HAS_NO_RECOIL: true,
  CAN_BE_ON_LEADERBOARD: false,
  RESET_UPGRADES: true,
  DANGER: 10,
  DRAW_HEALTH: false,
  CONTROLLERS: ["Dominator"],
  BODY: {
    FOV: 100,
    HEALTH: 10000,
    SPEED: 8,
    SHIELD: 10000,
    REGEN: 1000,
    DAMAGE: 10,
    DENSITY: 30,
    PUSHABILITY: 0,
  },
  SKILL: skillSet({
    dam: 1,
    pen: 1,
    str: 10,
    rld: 10,
  }),
  GUNS: [
    {
      POSITION: [26, 7.5, -1.5, 0, 0, 130, 0],
    },
    {
      POSITION: [26, 7.5, -1.5, 0, 0, -130, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15.75, 3.5, 1, 0, -1.35, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
          g.minorReload,
          g.lesserSize,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [15.75, 3.5, 1, 0, 1.35, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
          g.minorReload,
          g.lesserSize,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [18, 3.5, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.twin,
          g.gunner,
          g.nail,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
          g.minorReload,
          g.lesserSize,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [6.5, 6, -1.55, 6.5, 0, 0, 0],
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26, 0, 0, 0, 0, 0],
      TYPE: exports.dominatorBody,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, -20, 25.5, 0, 359, 1],
      TYPE: exports.antiTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, -20, -25.5, 0, 359, 1],
      TYPE: exports.antiTurret,
    },
  ],
};
exports.mechagod = {
  PARENT: [exports.genericTank],
  LABEL: "Arena Originator",
  DANGER: NaN,
  TYPE: "deity",
  TARGETABLE: true,
  VALUE: 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999,
  IGNORE_COLLISION: true,
  BODY: {
    ACCELERATION: 50,
    FOV: 100,
    SPEED: 70,
    HEALTH: 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    SHIELD: 1000000000000000000000000000000000000000000000000000000000000,
    VALUE: 999999999999999999999999999999999999999999999999999999999999,

    DAMAGE: 5000000000000000000000000000000000000000000000000000000000000,
    DENSITY: 30,
    PUSHABILITY: 0,
  },
  SKILL: skillSet({
    rld: 100000,
    dam: 1000000.5,
    pen: 100.5,
    str: 1.5,
    spd: 0.75,
    atk: 1.3,
    hlt: 1.3,
    shi: 0.8,
    rgn: 100000000000000000000000000000000000000000000.4, //damn
    mob: 0,
  }),
  DANGER: NaN,
  SPECIAL_EFFECT: "dieWall",
  LEVEL: Infinity,
  SIZE: 30,
  HAS_NO_RECOIL: true,
  CAN_GO_OUTSIDE_ROOM: true,
  IGNORE_COLLISION: true,
  VALUE: 3000000000000,
  FACING_TYPE: "looseToTarget",
  COLOR: 1,
  DRAW_HEALTH: true,
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapAltToFire",
    "mapTargetToGoal",
    "canRepel",
    "hangOutNearMaster",
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 15.5, 0.7, 0, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.factory,
          g.power,
          g.power,
          g.OMEGADamage,
          g.halfReload,
          g.halfReload,
          g.halfReload,
          g.halfReload,
          g.halfReload,
          g.halfReload,
          g.halfReload,
        ]),
        TYPE: [exports.superanti_tank, { INDEPENDENT: true }],
        MAX_CHILDREN: 5,
        AUTOFIRE: true,
      },
    },
    {
      POSITION: [30, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.OMEGADamage,
          g.OMEGADamage,
          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [28, 12, 1, 0, 0, 0, 1 / 7],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.OMEGADamage,
          g.OMEGADamage,
          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [26, 13, 1, 0, 0, 0, 2 / 7],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.OMEGADamage,
          g.OMEGADamage,
          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [26, 14, 1, 0, 0, 0, 3 / 7],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.OMEGADamage,
          g.OMEGADamage,
          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [24, 15, 1, 0, 0, 0, 4 / 7],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.OMEGADamage,
          g.OMEGADamage,
          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [22, 16, 1, 0, 0, 0, 5 / 7],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.OMEGADamage,
          g.OMEGADamage,
          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [20, 17, 1, 0, 0, 0, 6 / 7],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.OMEGADamage,
          g.OMEGADamage,
          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
    {
      POSITION: [15, 0, 0, 0, 361, 1],
      TYPE: exports.anti_tank2,
    },
    {
      POSITION: [22, 0, 0, 0, 361, 0],
      TYPE: exports.superanti_tank,
    },
  ],
};
exports.mechagodOld = {
  PARENT: [exports.genericTank],
  LABEL: "Old Arena Originator",
  TYPE: "none",
  TARGETABLE: true,
  VALUE: 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999,
  IGNORE_COLLISION: true,
  BODY: {
    DAMAGE: 1000,
    FOV: 10,
    ACCELERATION: 30,
    SPEED: 15,
    HEALTH: 999999,
    PENETRATION: 99,
    REGEN: 0,
    RESIST: 1,
    SHIELD: 99999,
    PUSHABILITY: 0,
  },
  SKILL: skillSet({
    rld: 100000,
    dam: 1000000.5,
    pen: 100.5,
    str: 1.5,
    spd: 0.75,
    atk: 1.3,
    hlt: 1.3,
    shi: 0.8,
    rgn: 100000000000000000000000000000000000000000000.4,
    mob: 0,
  }),
  DANGER: 9,
  LEVEL: Infinity,
  SIZE: 150,
  HAS_NO_RECOIL: true,
  CAN_GO_OUTSIDE_ROOM: true,
  IGNORE_COLLISION: true,
  FACING_TYPE: "toTarget",
  COLOR: 3,
  DRAW_HEALTH: true,
  CONTROLLERS: [
    "nearestDifferentMaster",
    "mapAltToFire",
    "mapTargetToGoal",
    "canRepel",
    "hangOutNearMaster",
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.uberSpray,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.uberSpray,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.uberSpray,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.uberSpray,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.uberSpray,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      POSITION: [15, 11, 1, 0, 0, 0, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.uberDamage,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.uberDamage,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.uberDamage,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.uberDamage,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.uberDamage,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.uberDamage,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.uberDamage,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.uberDamage,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.uberSpray,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [19, 8, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.uberDamage,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.uberDamage,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,
          g.power,

          g.uberDamage,
          g.uberDamage,
          g.uberRange,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
          g.halfspeed,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [26.5, 0, 0, 0, 361, 0],
      TYPE: exports.dominatorBody,
    },
    {
      POSITION: [18, 0, 25.5, 0, 359, 1],
      TYPE: exports.antiTurret,
    },
    {
      POSITION: [18, 0, -25.5, 0, 359, 1],
      TYPE: exports.antiTurret,
    },
    {
      POSITION: [15, 0, 0, 0, 361, 1],
      TYPE: exports.anti_tank2,
    },
    {
      POSITION: [22, 0, 0, 0, 361, 0],
      TYPE: exports.anti_tank,
    },
  ],
};

exports.skullGunner = {
  PARENT: [exports.genericTank],
  NAME: "Death",
  LABEL: "Harvest",
  TYPE: "deity",
  COLOR: 8,
  CONTROLLERS: ["nearestDifferentMaster", "mapTargetToGoal"],
  COPY_LAYER: true,
  AI: { NO_LEAD: true },
  AI_TARGET: "allHostiles",
  LAYER: 75,
  BODY: {
    DAMAGE: 500,
    FOV: 10,
    ACCELERATION: 3,
    SPEED: 1,
    HEALTH: 999999,
    PENETRATION: 99,
    REGEN: 0,
    RESIST: 1,
    SHIELD: 99999,
    PUSHABILITY: 0,
  },
  FACING_TYPE: "looseToTarget",
  IGNORE_COLLISION: true,
  DANGER: Infinity,
  //CAN_BE_ON_LEADERBOARD: false,
  DRAW_HEALTH: false,
  SIZE: 20,
  VALUE: 1000000,
  AI: { STRAFE: true },
  ALPHA: 0.45,
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SKILL: skillSet({
    rld: 2, //reload
    dam: 2, //bullet damage
    pen: 2, //bullet penetration
    str: 2, //bullet health
    spd: 2, //bullet speed
    atk: 2, //body damage
    hlt: 2, //max health
    shi: 2, //shield capacity
    rgn: 2, //shield regeneration
    mob: 2, //movement speed
  }),
  TURRETS: [
    {
      POSITION: [5, 1.25, 4.5, 0, 360, 1],
      TYPE: [exports.eye2],
    },
    {
      POSITION: [5, 1.25, -4.5, 0, 360, 1],
      TYPE: [exports.eye2],
    },
  ],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 3.5, 1, 0, 7.25, 0, 0.5],
    },
    {
      POSITION: [12, 3.5, 1, 0, -7.25, 0, 0.75],
    },
    {
      POSITION: [16, 3.5, 1, 0, 3.75, 0, 0],
    },
    {
      POSITION: [16, 3.5, 1, 0, -3.75, 0, 0.25],
    },
  ],
};
exports.livingApocalypse = {
  PARENT: [exports.genericTank],
  TYPE: "deity",
  LABEL: "Living Apocalypse",
  CONTROLLERS: ["nearestDifferentMaster", "mapTargetToGoal"],
  COPY_LAYER: true,
  AI: { NO_LEAD: true },
  AI_TARGET: "allHostiles",
  LAYER: 75,
  BODY: {
    DAMAGE: 50,
    FOV: 10,
    ACCELERATION: 30,
    SPEED: 15,
    HEALTH: 999999,
    PENETRATION: 99,
    REGEN: 0,
    RESIST: 1,
    SHIELD: 99999,
    PUSHABILITY: 0,
  },
  SPECIAL_EFFECT: "dieWall",
  FACING_TYPE: "looseToTarget",
  IGNORE_COLLISION: true,
  DANGER: Infinity,
  SIZE: 20,
  // ALPHA: 0.75,
  VALUE: 1000000000000,
  AI: { STRAFE: true },
  COLOR: 0,
  SKILL_CAP: [
    15, //reload
    15, //Penetration
    15, //bullet hp
    15, //bullet dmg
    15, //bullet spd
    15, //shield
    15, //body dmg
    15, // body hp
    15, //shield regen
    15, //body speed
  ],
  SKILL: skillSet({
    rld: 2, //reload
    dam: 2, //bullet damage
    pen: 2, //bullet penetration
    str: 2, //bullet health
    spd: 2, //bullet speed
    atk: 2, //body damage
    hlt: 2, //max health
    shi: 2, //shield capacity
    rgn: 2, //shield regeneration
    mob: 2, //movement speed
  }),
  GUNS: [
    {
      POSITION: [20, 7.5, -1.5, 0, 0, 90, 0],
    },
    {
      POSITION: [20, 7.5, -1.5, 0, 0, 270, 0],
    },
    {
      POSITION: [14, 3, 1, 0, 6, 7, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.doubleSize,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
        ]),
        TYPE: exports.uncontrolledBeeDrone,
        LABEL: "Secondary",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 3, 1, 0, -6, -7, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.doubleSize,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
        ]),
        TYPE: exports.uncontrolledBeeDrone,
        LABEL: "Secondary",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [20, 12, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
        ]),
        TYPE: exports.arenaBullet,
      },
    },
  /*  {
      POSITION: [0, 45, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory, g.uberStats, g.lesserSize]),
        TYPE: [exports.arenaCloser, { INDEPENDENT: true }],
        MAX_CHILDREN: 5,
      },
    },
    {
      POSITION: [0, 45, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.factory, g.uberStats, g.minorSize]),
        TYPE: [exports.anti_tank, { INDEPENDENT: true }],
        MAX_CHILDREN: 5,
      },
    },*/
    {
      POSITION: [19, 8, 1, 0, -4, 152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.tri,
          g.thruster,
          g.uberStats,
          g.superRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 4, -152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.tri,
          g.thruster,
          g.uberStats,
          g.superRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.tri,
          g.thruster,
          g.uberStats,
          g.superRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.tri,
          g.thruster,
          g.uberStats,
          g.superRecoil,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.flank,
          g.tri,
          g.thruster,
          g.superRecoil,
          g.uberStats,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, 25.5, 0, 359, 1],
      TYPE: exports.antiTurret,
    },
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [20, 0, -25.5, 0, 359, 1],
      TYPE: exports.antiTurret,
    },
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
  ],
};
exports.baseProtector = {
  PARENT: [exports.genericTank],
  TYPE: "base",
  LABEL: "Base",
  LAYER: 10,
  SIZE: 64,
  DAMAGE_CLASS: 0,
  ACCEPTS_SCORE: false,
  SKILL: skillSet({
    rld: 1,
    dam: 1,
    pen: 1,
    spd: 1,
    str: 1,
  }),
  BODY: {
    // def
    SPEED: 0,
    HEALTH: 10000,
    DAMAGE: 10,
    PENETRATION: 0.25,
    SHIELD: 10000,
    REGEN: 1000,
    FOV: 3.5,
    PUSHABILITY: 0,
    HETERO: 0,
  },
  //CONTROLLERS: ['nearestDifferentMaster'],
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [25, 0, 0, 0, 360, 0],
      TYPE: exports.dominatorBody,
    },
    {
      POSITION: [12, 7, 0, 45, 100, 0],
      TYPE: exports.baseSwarmTurret,
    },
    {
      POSITION: [12, 7, 0, 135, 100, 0],
      TYPE: exports.baseSwarmTurret,
    },
    {
      POSITION: [12, 7, 0, 225, 100, 0],
      TYPE: exports.baseSwarmTurret,
    },
    {
      POSITION: [12, 7, 0, 315, 100, 0],
      TYPE: exports.baseSwarmTurret,
    },
  ],
  GUNS: [
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */ {
      POSITION: [4.5, 11.5, -1.3, 6, 0, 45, 0],
    },
    {
      POSITION: [4.5, 11.5, -1.3, 6, 0, 135, 0],
    },
    {
      POSITION: [4.5, 11.5, -1.3, 6, 0, 225, 0],
    },
    {
      POSITION: [4.5, 11.5, -1.3, 6, 0, 315, 0],
    },
    {
      POSITION: [4.5, 8.5, -1.5, 7, 0, 45, 0],
    },
    {
      POSITION: [4.5, 8.5, -1.5, 7, 0, 135, 0],
    },
    {
      POSITION: [4.5, 8.5, -1.5, 7, 0, 225, 0],
    },
    {
      POSITION: [4.5, 8.5, -1.5, 7, 0, 315, 0],
    },
  ],
};
//BOTS
exports.bot0 = {
  NAME: "[AI]_",
  CONTROLLERS: ["nearestDifferentMaster"],
};
exports.bot1 = {
  PARENT: [exports.bot0],
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
};
exports.bot2 = {
  PARENT: [exports.bot0],
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  ORBIT_DISTANCE: 50,
};
exports.bot3 = {
  PARENT: [exports.bot0],
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  ORBIT_DISTANCE: 150,
};
exports.bot4 = {
  PARENT: [exports.bot0],
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  ORBIT_DISTANCE: 200,
};
exports.bot5 = {
  PARENT: [exports.bot0],
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  ORBIT_DISTANCE: 250,
};
exports.bot6 = {
  PARENT: [exports.bot0],
  CONTROLLERS: ["nearestDifferentMaster", "mapTargetToGoal"],
};
exports.bot7 = {
  PARENT: [exports.bot0],
  CONTROLLERS: ["nearestDifferentMaster"],
};
//PLAYABLE STUFF
exports.pleggBoss = {
  PARENT: [exports.neutralBoss],
  BODY: {
    FOV: 1.1,
    SPEED: 1.2,
    HEALTH: base.HEALTH * 1.5,
    SHIELD: base.SHIELD,
    REGEN: 0.001,
    DAMAGE: 4,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0, //bullet damage
    pen: 0, //bullet penetration
    str: 0, //bullet health
    atk: 0, //bullet speed
    spd: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 25,
  COLOR: 6,
  SHAPE: 0,
};
exports.plsquareBoss = {
  PARENT: [exports.neutralBoss],
  BODY: {
    FOV: 1.1,
    SPEED: 0.8,
    HEALTH: base.HEALTH * 1.75,
    SHIELD: base.SHIELD * 0.5,
    REGEN: 0.001,
    DAMAGE: 4,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0, //bullet damage
    pen: 0, //bullet penetration
    str: 0, //bullet health
    atk: 0, //bullet speed
    spd: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 25,
  COLOR: 13,
  SHAPE: 4,
};
exports.pltriangleBoss = {
  PARENT: [exports.neutralBoss],
  BODY: {
    FOV: 1.2,
    SPEED: 0.55,
    HEALTH: base.HEALTH * 2,
    SHIELD: base.SHIELD * 0.25,
    REGEN: 0.0025,
    DAMAGE: 4,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0, //bullet damage
    pen: 0, //bullet penetration
    str: 0, //bullet health
    atk: 0, //bullet speed
    spd: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 26,
  COLOR: 2,
  SHAPE: 3,
};
exports.plpentagonBoss = {
  PARENT: [exports.neutralBoss],
  BODY: {
    FOV: 1.3,
    SPEED: 0.4,
    HEALTH: base.HEALTH * 2.25,
    SHIELD: base.SHIELD * 0.15,
    REGEN: 0.0001,
    DAMAGE: 4,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0, //bullet damage
    pen: 0, //bullet penetration
    str: 0, //bullet health
    atk: 0, //bullet speed
    spd: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 45,
  COLOR: 14,
  SHAPE: 5,
  ORBIT_DISTANCE: 300,
};
exports.plhexagonBoss = {
  PARENT: [exports.neutralBoss],
  AI_TARGET: "mostDeadly",
  BODY: {
    FOV: 1.4,
    SPEED: 0.3,
    HEALTH: base.HEALTH * 2.75,
    SHIELD: base.SHIELD * 0.05,
    REGEN: 0.0001,
    DAMAGE: 4,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0, //bullet damage
    pen: 0, //bullet penetration
    str: 0, //bullet health
    atk: 0, //bullet speed
    spd: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  SIZE: 50,
  COLOR: 15,
  SHAPE: 6,
  ORBIT_DISTANCE: 350,
};
exports.plelite = {
  PARENT: [exports.neutralBoss],
  LABEL: "Elite Crasher",
  FACING_TYPE: "autospin",
  //REGEN_TYPE: "shieldOnly",
  GIVE_KILL_MESSAGE: true,
  SIZE: 26.5,
  VALUE: 250000,
  DANGER: 9,
  SHAPE: 3,
  COLOR: 5,
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0, //bullet damage
    pen: 0, //bullet penetration
    str: 0, //bullet health
    atk: 0, //bullet speed
    spd: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  BODY: {
    FOV: 1.2,
    SPEED: 0.55,
    HEALTH: base.HEALTH * 2,
    REGEN: 0.0001,
    DAMAGE: 4,
  },
};
exports.plelite_skimmer = {
  PARENT: [exports.pltriangleBoss],
  LABEL: "Elite Skimmer",
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 5, 0, 60, 170, 0],
      TYPE: exports.skimbossturret,
    },
    {
      POSITION: [15, 5, 0, 180, 170, 0],
      TYPE: exports.skimbossturret,
    },
    {
      POSITION: [15, 5, 0, 300, 170, 0],
      TYPE: exports.skimbossturret,
    },
  ],
};
exports.plenchantress = makeMulti(
  {
    PARENT: [exports.pltriangleBoss],
    MAX_CHILDREN: 24,
    FACING_TYPE: "autospin",
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3, 9, 1.2, 8, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserHealth,
            g.lesserReload,
            //g.greaterDamage,
            g.lesserSpeed,
            g.lesserSize,
          ]),
          TYPE: exports.sterileTriangleChip,
          //AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  3,
  "Enchantress"
);
exports.plsorcerer = makeMulti(
  {
    PARENT: [exports.pleggBoss],
    FACING_TYPE: "autospin",
    HAS_NO_RECOIL: true,
    MAX_CHILDREN: 180,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [0, 9, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.minorHealth,
            g.minorReload,
            g.halfDamage,
            g.greaterSpeed,
            g.minorSize,
          ]),
          TYPE: exports.sterileEggChip,
          // AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.8, 9, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.minorHealth,
            g.minorReload,
            g.halfDamage,
            g.greaterSpeed,
            g.minorSize,
          ]),
          TYPE: exports.sterileEggChip,
          // AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  2,
  "Sorcerer"
);
exports.plExorcistor = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.pentagonBoss],
    FACING_TYPE: "autospin",
    MAX_CHILDREN: 15,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.5, 9, 1.2, 8, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.doubleDamage,
            g.minorSpeed,
            g.greaterReload,
            g.lesserSize,
          ]),
          TYPE: exports.sterilePentagonChip,
          // AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  "Exorcister"
);
exports.plPawn = {
  PARENT: [exports.plhexagonBoss],
  LABEL: "Priest",
  SIZE: 30,
  FACING_TYPE: "autospin",
  TURRETS: [
    {
      POSITION: [10, 8, 0, 0, 120, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [10, 8, 0, 120, 120, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [10, 8, 0, -120, 120, 0],
      TYPE: [exports.auto3Turret],
    },
    {
      POSITION: [15, 0, 0, 0, 360, 1],
      TYPE: [exports.auto4Turret],
    },
  ],
};
exports.plsummoner = makeMulti(
  {
    PARENT: [exports.plsquareBoss],

    FACING_TYPE: "autospin",
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 8, 1.2, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.halfDamage,
            g.halfHealth,
            g.halfReload,
            //g.lesserSize,
          ]),
          TYPE: exports.sterileSunchip,
          //  AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
          MAX_CHILDREN: 15,
        },
      },
    ],
  },
  4,
  "Summoner"
);
exports.plelite_swarmer = {
  PARENT: [exports.plelite],
  LABEL: "Guardian",
  VALUE: 300000,
  MAX_CHILDREN: 75,
  FACING_TYPE: "smoothToTarget",
  BODY: {
    FOV: 1.5,
    SPEED: 1.5,
    HEALTH: base.HEALTH * 3.5,
    DAMAGE: 4.5,
  },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [0, 12, 1.33, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.over,
          g.mach,
          g.greaterDamage,
          g.lesserReload,
          g.halfSize,
        ]),
        TYPE: exports.crasherSwarmDrone,
        AUTOFIRE: true,

        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
        WAIT_TO_CYCLE: true,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [4, 12, 1.33, 8, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.over,
          g.mach,
          g.greaterDamage,
          g.lesserReload,
          g.halfSize,
        ]),
        TYPE: exports.crasherSwarmDrone,
        AUTOFIRE: true,

        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.swarm,
        WAIT_TO_CYCLE: true,
      },
    },
  ],
};
exports.plelite_destroyer = makeMulti(
  {
    PARENT: [exports.plelite],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5, 16, 1, 6, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.basic,
            g.pound,
            g.destroy,
            g.anni,
            g.superHealth,
            g.superHealth,
            g.superHealth,
            g.doubleReload,
            g.halfSpeed,
          ]),
          TYPE: exports.bullet,
          LABEL: "Devastator",
        },
      },
    ],
    TURRETS: [
      {
        /*********  SIZE     X       Y     ANGLE    ARC */
        POSITION: [11, 0, 0, 180, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, 60, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, -60, 360, 0],
        TYPE: [exports.crasherSpawner],
      },
      {
        POSITION: [11, 0, 0, 0, 360, 1],
        TYPE: [exports.bigAuto4Turret, { INDEPENDENT: true, COLOR: 5 }],
      },
    ],
  },
  3,
  "Elite Destroyer"
);
exports.plelite_gunner = {
  PARENT: [exports.plelite],
  LABEL: "Elite Gunner",
  FACING_TYPE: "smoothToTarget",
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 16, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [4, 16, 1.5, 14, 0, 180, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.block, g.pound, g.destroy]),
        TYPE: [exports.bosspillbox, { INDEPENDENT: true }],
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [6, 14, -2, 2, 0, 60, 0],
    },
    {
      POSITION: [6, 14, -2, 2, 0, 300, 0],
    },
  ],

  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 8, 0, 60, 180, 0],
      TYPE: [exports.elitePelleterTurret],
    },
    {
      POSITION: [14, 8, 0, 300, 180, 0],
      TYPE: [exports.elitePelleterTurret],
    },
  ],
};
exports.plelite_machine = {
  PARENT: [exports.plelite],
  LABEL: "Elite Machine",
  TURRETS: [
    {
      /*  SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 6, 0, 180, 190, 0],
      TYPE: [exports.eliteMachineTurret],
    },
    {
      POSITION: [14, 6, 0, 60, 190, 0],
      TYPE: [exports.eliteMachineTurret],
    },
    {
      POSITION: [14, 6, 0, -60, 190, 0],
      TYPE: [exports.eliteMachineTurret],
    },
  ],
};
exports.plelite_battleship = makeMulti(
  {
    PARENT: [exports.plelite],
    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [4, 6, 0.6, 8, 8, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.halfHealth,
            g.halfDamage,
            g.doubleReload,
          ]),
          TYPE: exports.swarmDrone,
        },
      },
      {
        POSITION: [4, 6, 0.6, 8, -8, 180, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.halfHealth,
            g.halfDamage,
            g.doubleReload,
          ]),
          TYPE: exports.swarmDrone,
        },
      },
      {
        POSITION: [4, 6, 0.6, 8, 0, 180, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.swarm,
            g.halfHealth,
            g.halfDamage,
            g.doubleReload,
          ]),
          TYPE: exports.swarmDrone,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [5, 8, 0, 0, 190, 1],
        TYPE: [exports.eliteSniperTurret],
      },
      {
        POSITION: [5, 8, 0, 120, 190, 1],
        TYPE: [exports.eliteSniperTurret],
      },
      {
        POSITION: [5, 8, 0, 240, 190, 1],
        TYPE: [exports.eliteSniperTurret],
      },
    ],
  },
  3,
  "Elite Battleship"
);
exports.plelite_spawner = {
  PARENT: [exports.plelite],
  LABEL: "Elite Spawner",
  GUNS: [
    {
      POSITION: [10, 14, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [10, 14, 1, 0, 0, 60, 0],
    },
    {
      POSITION: [10, 14, 1, 0, 0, 300, 0],
    },
    {
      POSITION: [2, 18, 1, 10, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.over,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.gunSentryDrone,
        AUTOFIRE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [2, 18, 1, 10, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.over,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.swarmSentryDrone,
        AUTOFIRE: true,
        MAX_CHILDREN: 3,
      },
    },
    {
      POSITION: [2, 18, 1, 10, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.drone,
          g.pound,
          g.over,
          g.halfStats,
          g.lesserSize,
        ]),
        TYPE: exports.trapSentryDrone,
        AUTOFIRE: true,
        MAX_CHILDREN: 3,
      },
    },
  ],
  TURRETS: [
    {
      POSITION: [10, 0, 0, 0, 360, 1],
      TYPE: exports.elitePelleterTurret,
    },
  ],
};
//gruh

exports.enchantressTurret = makeMulti(
  {
    PARENT: [exports.pltriangleBoss],
    MAX_CHILDREN: 5,
    FACING_TYPE: "autospin",
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3, 9, 1.2, 8, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.lesserHealth,
            g.lesserReload,
            //g.greaterDamage,
            g.lesserSpeed,
            g.lesserSize,
            g.minorHealth,
            g.superReload,
          ]),
          TYPE: exports.sterileTriangleChip,
          //AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  3,
  "Enchantress"
);
exports.sorcererTurret = makeMulti(
  {
    PARENT: [exports.pleggBoss],
    FACING_TYPE: "autospin",
    HAS_NO_RECOIL: true,
    MAX_CHILDREN: 5,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [0, 9, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.minorHealth,
            g.minorReload,
            g.halfDamage,
            g.greaterSpeed,
            g.minorSize,
            g.minorHealth,
            g.superReload,
          ]),
          TYPE: exports.sterileEggChip,
          // AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.8, 9, 1.2, 8, 0, 90, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.minorHealth,
            g.minorReload,
            g.halfDamage,
            g.greaterSpeed,
            g.minorSize,
            g.minorHealth,
            g.superReload,
          ]),
          TYPE: exports.sterileEggChip,
          // AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  2,
  "Sorcerer"
);
exports.exorcistorTurret = makeMulti(
  {
    PARENT: [exports.neutralRangedBoss, exports.pentagonBoss],
    FACING_TYPE: "autospin",
    MAX_CHILDREN: 5,
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.5, 9, 1.2, 8, 0, 35, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.doubleDamage,
            g.minorSpeed,
            g.greaterReload,
            g.lesserSize,
            g.minorHealth,
            g.superReload,
          ]),
          TYPE: exports.sterilePentagonChip,
          // AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  "Exorcister"
);
exports.summonerTurret = makeMulti(
  {
    PARENT: [exports.plsquareBoss],
    MAX_CHILDREN: 5,
    FACING_TYPE: "autospin",
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [4, 8, 1.2, 8, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.halfDamage,
            g.halfHealth,
            g.halfReload,
            //g.lesserSize,
            g.minorHealth,
            g.superReload,
          ]),
          TYPE: exports.sterileSunchip,
          //  AUTOFIRE: true,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
          MAX_CHILDREN: 5,
        },
      },
    ],
  },
  4,
  "Summoner"
);
let valTurrets1 = [];
let valTurrets2 = [];
let valTurrets3 = [];
let valTurrets4 = [];
let valTurrets5 = [];
let valTurrets6 = [];
for (let i = 0; i < 7; i++) {
  valTurrets1.push({
    POSITION: [2.5, 10, 0, i * (360 / 7) + 360 / 7 / 2, 360, 1],
    TYPE: [exports.sorcererTurret],
  });
}
for (let i = 0; i < 7; i++) {
  valTurrets2.push({
    POSITION: [2.5, 10, 0, i * (360 / 7) + 360 / 7, 360, 1],
    TYPE: [exports.summonerTurret],
  });
}
for (let i = 0; i < 5; i++) {
  valTurrets3.push({
    POSITION: [2.5, 6, 0, i * (360 / 5) + 360 / 5 / 2, 360, 1],
    TYPE: [exports.enchantressTurret],
  });
}
for (let i = 0; i < 5; i++) {
  valTurrets4.push({
    POSITION: [2.5, 4, 0, i * (360 / 5) + 360 / 5, 360, 1],
    TYPE: [exports.exorcistorTurret],
  });
}
for (let i = 0; i < 3; i++) {
  valTurrets5.push({
    POSITION: [2.5, 2, 0, i * (360 / 3) + 360 / 3 / 2, 360, 1],
    TYPE: [exports.plelite_destroyer],
  });
}
for (let i = 0; i < 1; i++) {
  valTurrets6.push({
    POSITION: [2.5, 0, 0, i * (360 / 1) + 360 / 1, 360, 1],
    TYPE: [exports.plPawn],
  });
}
exports.valrayvn = {
  PARENT: [exports.damagedArenaCloser],
  LABEL: "Arrasian Lord",
  NAME: "Valrayvn",
  ALLOW_PLATE: true,
  BODY: {
    FOV: 1.5,
    SPEED: 4,
    HEALTH: 4000,
  },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 1.3, //bullet damage
    pen: 1, //bullet penetration
    str: 1.5, //bullet health
    atk: 0, //bullet speed
    spd: 0.7, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  ORBIT_DISTANCE: 550,
  DANGER: 12,
  VALUE: 5000000,
  SIZE: 75,
  TURRETS: [
    ...valTurrets1,
    ...valTurrets2,
    ...valTurrets3,
    ...valTurrets4,
    ...valTurrets5,
    ...valTurrets6,
  ],
  COPY_COLLISION: true,
  COPY_LAYER: true,
  GUNS: [
    /***** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
    ...shotGun,
    {
      POSITION: [15, 14, 1, 6, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.shotgun]),
        TYPE: [exports.bullet, { BODY: { RANGE: 0 } }],
      },
    },
    ...launcherGun,
    {
      POSITION: [8, 14, -1.3, 4, 0, 0, 0],
    },
    {
      POSITION: [18, 8, 1, 0, 0, -142.5, 0],
    },
    {
      POSITION: [18, 8, 1, 0, 0, 142.5, 0],
    },
    {
      POSITION: [18, 8, 1, 0, 0, -135, 0],
    },
    {
      POSITION: [18, 8, 1, 0, 0, 135, 0],
    },
    {
      POSITION: [18, 8, 1, 0, 0, 180, 0],
    },
    {
      POSITION: [2, 8, 1, 17, 0, -142.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.destroy,
          g.anni,
          g.construct,
          g.superSpeed,
          g.superSpeed,
          g.minorDamage,
          g.greaterHealth,
          g.halfReload,
        ]),
        TYPE: [
          exports.setBlock,
          {
            IGNORE_COLLISION: true,
          },
        ],
      },
    },
    {
      POSITION: [2, 8, 1, 17, 0, 142.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.destroy,
          g.anni,
          g.construct,
          g.superSpeed,
          g.superSpeed,
          g.minorDamage,
          g.greaterHealth,
          g.halfReload,
        ]),
        TYPE: [
          exports.setBlock,
          {
            IGNORE_COLLISION: true,
          },
        ],
      },
    },
    {
      POSITION: [2, 8, 1, 17, 0, -135, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.destroy,
          g.anni,
          g.construct,
          g.superSpeed,
          g.superSpeed,
          g.minorDamage,
          g.greaterHealth,
          g.halfReload,
        ]),
        TYPE: [
          exports.setBlock,
          {
            IGNORE_COLLISION: true,
          },
        ],
      },
    },
    {
      POSITION: [2, 8, 1, 17, 0, 135, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.destroy,
          g.anni,
          g.construct,
          g.superSpeed,
          g.superSpeed,
          g.minorDamage,
          g.greaterHealth,
          g.halfReload,
        ]),
        TYPE: [
          exports.setBlock,
          {
            IGNORE_COLLISION: true,
          },
        ],
      },
    },
    {
      POSITION: [2, 8, 1, 17, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.destroy,
          g.anni,
          g.construct,
          g.superSpeed,
          g.superSpeed,
          g.minorDamage,
          g.greaterHealth,
          g.halfReload,
        ]),
        TYPE: [
          exports.setBlock,
          {
            IGNORE_COLLISION: true,
          },
        ],
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 5.5, 1, 10.5, 0, 157.5, 0],
    },
    {
      POSITION: [3, 7.5, 1, 15.5, 0, 157.5, 0],
    },
    {
      POSITION: [2, 7.5, 1.3, 18, 0, 157.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.destroy,
          g.anni,
          g.construct,
          g.superSpeed,
          g.superSpeed,
          g.minorDamage,
          g.superHealth,
          g.superRange,
        ]),
        TYPE: exports.bosspillboxTwin,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 7.5, 1, 8, 0, 157.5, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 5.5, 1, 10.5, 0, -157.5, 0],
    },
    {
      POSITION: [3, 7.5, 1, 15.5, 0, -157.5, 0],
    },
    {
      POSITION: [2, 7.5, 1.3, 18, 0, -157.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.destroy,
          g.anni,
          g.construct,
          g.superSpeed,
          g.superSpeed,
          g.minorDamage,
          g.superHealth,
          g.superRange,
        ]),
        TYPE: exports.bosspillboxTwin,
        SYNCS_SKILLS: true,
      },
    },
    {
      POSITION: [4, 7.5, 1, 8, 0, -157.5, 0],
    },
  ],
};
//more shit

exports.legionaryCrasher = {
  PARENT: [exports.neutralRangedBoss, exports.Legionary],
  LABEL: "Legionary Crasher",
  ORBIT_DISTANCE: 500,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 19, 0.8, 6, 0, 60, 0],
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 19, 0.8, 6, 0, 300, 0],
    },
    {
      POSITION: [5, 12.6, 1, 11, 0, 0, 0],
    },
    {
      POSITION: [6, 12.6, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.destroy,
          g.anni,
          g.greaterReload,
          g.greaterSpeed,
          g.greaterSpeed,
        ]),
        TYPE: exports.bosspillboxTwin,
        LABEL: "Devastator",
      },
    },
    {
      POSITION: [4, 12, 1.7, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
         /* g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,*/
          g.minorSize,
          g.oneTimeUse,
          g.superSpeed,
        ]),
        TYPE: [
          exports.elite_battleship,
          { LABEL: "Legion", 
          BODY: { REGEN: 0 },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0, //bullet damage
    pen: 0, //bullet penetration
    str: 0, //bullet health
    atk: 0, //bullet speed
    spd: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }) },
        ],
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [5, 19, 0.8, 6, 0, 180, 0],
    },
    {
      POSITION: [5, 12.6, 1, 11, 0, 120, 0],
    },
    {
      POSITION: [6, 12.6, 1.7, 15, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.destroy,
          g.anni,
          g.greaterReload,
          g.greaterSpeed,
          g.greaterSpeed,
        ]),
        TYPE: exports.bosspillboxTwin,
        LABEL: "Devastator",
      },
    },
    {
      POSITION: [4, 12, 1.7, 0, 0, 120, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
         /* g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,*/
          g.minorSize,
          g.oneTimeUse,
          g.superSpeed,
        ]),
        TYPE: [
          exports.elite_machine,
          { LABEL: "Legion", 
          BODY: { REGEN: 0 },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0, //bullet damage
    pen: 0, //bullet penetration
    str: 0, //bullet health
    atk: 0, //bullet speed
    spd: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }) },
        ],
      },
    },
    {
      POSITION: [5, 12.6, 1, 11, 0, 240, 0],
    },
    {
      POSITION: [6, 12.6, 1.7, 15, 0, 240, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.destroy,
          g.anni,
          g.greaterReload,
          g.greaterSpeed,
          g.greaterSpeed,
        ]),
        TYPE: exports.bosspillboxTwin,
        LABEL: "Devastator",
      },
    },
    {
      POSITION: [4, 12, 1.7, 0, 0, 240, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
        /*  g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,*/
          g.minorSize,
          g.oneTimeUse,
          g.superSpeed,
        ]),
        TYPE: [
          exports.elite_spawner,
          { LABEL: "Legion", 
          BODY: { REGEN: 0 },
  SKILL: skillSet({
    rld: 0, //reload
    dam: 0, //bullet damage
    pen: 0, //bullet penetration
    str: 0, //bullet health
    atk: 0, //bullet speed
    spd: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }) },
        ],
      },
    },
  ],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [15, 8, 0, 180, 100, 0],
      TYPE: [exports.legionarySprayerTurret],
    },
    {
      POSITION: [15, 8, 0, 60, 100, 0],
      TYPE: [exports.legionarySprayerTurret],
    },
    {
      POSITION: [15, 8, 0, -60, 100, 0],
      TYPE: [exports.legionarySprayerTurret],
    },
    {
      POSITION: [15, 0, 0, 180, 360, 1],
      TYPE: [
        exports.legionaryCrasherSwarmBody,
        { INDEPENDENT: true, COLOR: 5 },
      ],
    },
  ],
};
//celestial crasher
let celestialCrasherTrapTurretArray = [];
for (let i = 0; i < 3; i++) {
  celestialCrasherTrapTurretArray.push({
    POSITION: [7, 6.5, 0, i * (360 / 3) + 360 / 3 / 2, 0, 0],
    TYPE: [exports.celestialUltraTrapper],
  });
}
let celestialCrasherMiniTurretArray1 = [];
for (let i = 0; i < 3; i++) {
  celestialCrasherTrapTurretArray.push({
    POSITION: [5.5, 6.5, 9, i * (360 / 3) + 360 / 3 / 2, 0, 0],
    TYPE: [exports.celestialUltraTrapper],
  });
}
let celestialCrasherMiniTurretArray2 = [];
for (let i = 0; i < 3; i++) {
  celestialCrasherTrapTurretArray.push({
    POSITION: [5.5, 6.5, -9, i * (360 / 3) + 360 / 3 / 2, 0, 0],
    TYPE: [exports.celestialUltraTrapper],
  });
}
exports.celeBasicTurret = {
  PARENT: [exports.auto3Turret, exports.basic],
  COLOR: 5,
  BODY: { FOV: 2.5 },
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.sniper,
          g.doubleSpeed,
          g.superReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.cele_fort_snow = makeMulti({
  PARENT: [exports.hexanomal],
  COLOR: 5,
  INDEPENDENT: true,
  CONTROLLERS: ["alwaysFire"],
  SPIN_RATE: -0.02,
  GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [21, 8, 1, 0, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.superSpeed]),
          TYPE: exports.bullet,
        },
      },
      {
        POSITION: [21, 8, 1, 0, 0, 45, 0.5],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.superSpeed]),
          TYPE: exports.bullet,
        },
      },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.pound, g.doubleSpeed, g.doubleSize]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },

    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [15, 7, 1, 0, 0, 45, 0],
    },
    {
      POSITION: [3, 7, 1.7, 15, 0, 45, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.trap, g.pound, g.doubleSpeed, g.doubleSize]),
        TYPE: exports.trap,
        STAT_CALCULATOR: gunCalcNames.trap,
      },
    },
  ]
},
4,
""
);
exports.celestialCrasherTop = makeMulti(
  {
  CONTROLLERS: ["nearestDifferentMaster"],
  COLOR: 5,
  SHAPE: 3,
  DANGER: 7,
  INDEPENDENT: false,
  STAT_NAMES: statnames.swarm,
  FACING_TYPE: "autospin",
    PARENT: [exports.Legionary],
    GUNS: [
      /*** LENGTH   WIDTH    ASPECT    X       Y     ANGLE   DELAY */
      {
        POSITION: [11, 7, 1, 0, 0, 60, 0],
      },
      {
        POSITION: [3, 6.5, 1.7, 11, 0, 60, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([g.trap]),
          TYPE: exports.trap,
          STAT_CALCULATOR: gunCalcNames.trap,
        },
      },
    ],
    TURRETS: [
      {
        POSITION: [8.5, 0, 0, 30, 360, 1],
        TYPE: exports.cele_fort_snow,
      },
      /*  SIZE     X       Y     ANGLE    ARC */
      {
        POSITION: [5.5, 8, 8, 60, 120, 0],
        TYPE: [exports.celeBasicTurret],
      },
      {
        POSITION: [5.5, 8, 8, 180, 120, 0],
        TYPE: [exports.celeBasicTurret],
      },
      {
        POSITION: [5.5, 8, 8, 300, 120, 0],
        TYPE: [exports.celeBasicTurret],
      },
      {
        POSITION: [5.5, 8, -8, 60, 120, 0],
        TYPE: [exports.celeBasicTurret],
      },
      {
        POSITION: [5.5, 8, -8, 180, 120, 0],
        TYPE: [exports.celeBasicTurret],
      },
      {
        POSITION: [5.5, 8, -8, 300, 120, 0],
        TYPE: [exports.celeBasicTurret],
      },
    ],
  },
  3,
  ""
);
  exports.celestialCrasherHelperBody = {
  PARENT: [exports.Legionary],
  LABEL: "Manifester",
  CONTROLLERS: ["nearestDifferentMaster"],
  COLOR: 5,
  SHAPE: 3,
  DANGER: 7,
  INDEPENDENT: false,
  STAT_NAMES: statnames.swarm,
  FACING_TYPE: "autospin",
  BODY: {
    ACCELERATION: base.ACCEL,
    FOV: base.FOV * 1.2,
  },
  TURRETS: [
    {
      POSITION: [10, 10, 0, 0, 150, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [10, 10, 0, -120, 150, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [10, 10, 0, 120, 150, 0],
      TYPE: exports.autoSmasherTurret,
    },
    {
      POSITION: [15, 0, 0, 180, 0, 1],
      TYPE: [
        exports.celestialCrasherTop,
        { INDEPENDENT: true, COLOR: 5 },
      ],
    },
  ],
  GUNS: [
    {
      POSITION: [4, 20, 0.6, 7, 0, 180, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.minion,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.minorSize,
          g.oneTimeUse,
          g.superSpeed,
        ]),
        TYPE: [
          exports.plelite_spawner,
          { LABEL: "Legion", BODY: { REGEN: 0 } },
        ],
      },
    },

    {
      POSITION: [4, 20, 0.6, 7, 0, 60, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.minion,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.minorSize,
          g.oneTimeUse,
          g.superSpeed,
        ]),
        TYPE: [
          exports.plelite_machine,
          { LABEL: "Legion", BODY: { REGEN: 0 } },
        ],
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */

      POSITION: [4, 20, 0.6, 7, 0, 300, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.minion,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.minorHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.halfHealth,
          g.minorSize,
          g.oneTimeUse,
          g.superSpeed,
        ]),
        TYPE: [
          exports.plelite_battleship,
          { LABEL: "Legion", BODY: { REGEN: 0 } },
        ],
      },
    },
  ],
};

exports.celestialCrasher = {
  PARENT: [exports.neutralRangedBoss, exports.Legionary],
  LABEL: "Celestial Crasher",
  SIZE: 90,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: [exports.celestialCrasherHelperBody],
    },
    ...celestialCrasherMiniTurretArray1,
    ...celestialCrasherTrapTurretArray
  ],
  GUNS: [
  ],
};

  exports.legionaryNesterHelperBody = makeMulti({
  PARENT: [exports.Legionary],
  CONTROLLERS: ["nearestDifferentMaster"],
  COLOR: 14,
  SHAPE: 5,
  DANGER: 7,
  INDEPENDENT: false,
  STAT_NAMES: statnames.swarm,
  FACING_TYPE: "autospin",
  BODY: {
    ACCELERATION: base.ACCEL,
    FOV: base.FOV * 1.2,
  },
  TURRETS: [
      {//GUARDIAN
        POSITION: [6, 9.5, 0, 72, 110, 0],
        TYPE: [exports.nesterConstructorTurret],
      },
      {
        POSITION: [6, 9.5, 0, 144, 110, 0],
        TYPE: [exports.nesterConstructorTurret],
      },
      {
        POSITION: [6, 9.5, 0, 216, 110, 0],
        TYPE: [exports.nesterConstructorTurret],
      },
      {
        POSITION: [6, 9.5, 0, 288, 110, 0],
        TYPE: [exports.nesterConstructorTurret],
      },
      {
        POSITION: [6, 9.5, 0, 360, 110, 0],
        TYPE: [exports.nesterConstructorTurret],
      },

      {
        POSITION: [10, 0, 0, 0, 360, 1],
        TYPE: [exports.legionaryBoomerTurret],
      },
  ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.75, 6.5, 1.4, 8, 0, 35, 0.4],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.halfDamage,
            g.superReload,
          ]),
          TYPE: exports.sterilePentagonChip,
          AUTOFIRE: true,
          MAX_CHILDREN: 2,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  ""
);
exports.legionaryQuintuplet = {
  PARENT: [exports.autoTurret],//this isnt a crossbow, this is a quintuplet
  LABEL: "Quin-Sniper",
  COLOR: 14,
  BODY: {
    ACCELERATION: base.ACCEL * 0.7,
    FOV: base.FOV * 1.225,
  },
  GUNS: [
    {
    /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [12, 4.5, 1, 0, 5, 0, 3 / 3],//oh
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserStats]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [12, 4.5, 1, 0, -5, 0, 3 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserStats]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [14, 4.5, 1, 0, 4, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserStats]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [14, 4.5, 1, 0, -4, 0, 2 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserStats]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [16, 4.5, 1, 0, 3, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserStats]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [16, 4.5, 1, 0, -3, 0, 1 / 3],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.sniper, g.lesserStats]),
        TYPE: exports.bullet,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [18, 7, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.sniper, g.rifle, g.lesserStats]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.purplePentagonTurret = {
  PARENT: [exports.lesserAutoTurret],
  LABEL: "",
  COLOR: 14,
  SHAPE: 5,
};
exports.purpleArangarangTurret = {
  PARENT: [exports.lesserAutoTurret],
  LABEL: "",
  COLOR: 14,
  SHAPE: -5,
};
exports.arangarang = {
  PARENT: [exports.boomerang],
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 360, 1],
      TYPE: exports.purpleArangarangTurret,
    },
  ],
};
exports.legionaryBoomerTurret = {
  PARENT: [exports.auto3Turret, exports.boomer],
  COLOR: 14,
  BODY: { FOV: 2.5 },
  GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [5, 11, 1, 10.5, 0, 0, 0],
      },
      {
        POSITION: [3, 14, 1, 15.5, 0, 0, 0],
      },
      {
        POSITION: [2, 14, 1.3, 18, 0, 0, 0],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.trap,
            g.block,
            g.boomerang,
            g.superReload,
          ]),
          TYPE: exports.arangarang,
          SYNCS_SKILLS: true,
        },
      },
      {
        POSITION: [4, 14, 1, 8, 0, 0, 0],
      },
  ],
};
exports.sterileBetaPentagonChip = {
  PARENT: [exports.sterileSunchip],
  BODY: {
    HEALTH: base.HEALTH * 0.05,
    SPEED: base.SPEED * 0.5,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [13, 0, 0, 45, 360, 1],
      TYPE: exports.purplePentagonTurret,
    },
  ],
  GUNS: [
    ...sideGuns,
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [22, 10, 1, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minion,
          g.greaterStats,
          g.superReload,
        ]),
        TYPE: [exports.bullet, { PERSISTS_AFTER_DEATH: true }],
      },
    },
    
  ],
  SHAPE: 5,
};
exports.dronetest = {
  PARENT: [exports.genericTank], 
  LABEL: "Drone test",
  STAT_NAMES: statnames.drone,
  DANGER: 7,
  BODY: {
    ACCELERATION: base.ACCEL * 0.75,
    SPEED: base.SPEED * 0.95,
    FOV: base.FOV * 1.1,
  },
  MAX_CHILDREN: 3,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [10.5, 18, 1.2, 5.5, 0, 0, 1],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.cheese, g.superStats,]),
        TYPE: [exports.kamikaze, { DRAW_HEALTH: true }],
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
}
exports.nesterConstructorTurret = {
  PARENT: [exports.nesterBoomerTurret],
    GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 18, 1, 0, 0, 0, 0],
    },
    {
      POSITION: [2, 18, 1.2, 18, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.trap,
          g.block,
          g.construct,
          g.greaterHealth,
        ]),
        TYPE: exports.setBlock,
      },
    },
  ],
},
  exports.legionaryNesterHelperBody = makeMulti({
  PARENT: [exports.Legionary],
  CONTROLLERS: ["nearestDifferentMaster"],
  COLOR: 14,
  SHAPE: 5,
  DANGER: 7,
  INDEPENDENT: false,
  STAT_NAMES: statnames.swarm,
  FACING_TYPE: "autospin",
  BODY: {
    ACCELERATION: base.ACCEL,
    FOV: base.FOV * 1.2,
  },
  TURRETS: [
      {//GUARDIAN
        POSITION: [6, 9.5, 0, 72, 110, 0],
        TYPE: [exports.nesterConstructorTurret],
      },
      {
        POSITION: [6, 9.5, 0, 144, 110, 0],
        TYPE: [exports.nesterConstructorTurret],
      },
      {
        POSITION: [6, 9.5, 0, 216, 110, 0],
        TYPE: [exports.nesterConstructorTurret],
      },
      {
        POSITION: [6, 9.5, 0, 288, 110, 0],
        TYPE: [exports.nesterConstructorTurret],
      },
      {
        POSITION: [6, 9.5, 0, 360, 110, 0],
        TYPE: [exports.nesterConstructorTurret],
      },

      {
        POSITION: [10, 0, 0, 0, 360, 1],
        TYPE: [exports.legionaryBoomerTurret],
      },
  ],
    GUNS: [
      {
        /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
        POSITION: [3.75, 6.5, 1.4, 8, 0, 35, 0.4],
        PROPERTIES: {
          SHOOT_SETTINGS: combineStats([
            g.drone,
            g.halfDamage,
            g.superReload,
          ]),
          TYPE: exports.sterilePentagonChip,
          AUTOFIRE: true,
          MAX_CHILDREN: 2,
          SYNCS_SKILLS: true,
          STAT_CALCULATOR: gunCalcNames.necro,
        },
      },
    ],
  },
  5,
  ""
);
exports.legionaryNester = makeMulti({
  PARENT: [exports.neutralRangedBoss, exports.Legionary],
  SIZE: 110,
  SHAPE: 5,
  COLOR: 14,
  TURRETS: [
    {
      /*********  SIZE               X       Y     ANGLE    ARC */
      POSITION: [15, 0, 0, 0, 0, 1],
      TYPE: [exports.legionaryNesterHelperBody],
    },
      {//GUARDIAN
        POSITION: [8, 9.5, 0, 72, 110, 0],
        TYPE: [exports.legionaryQuintuplet],
      },
      {
        POSITION: [8, 9.5, 0, 144, 110, 0],
        TYPE: [exports.legionaryQuintuplet],
      },
      {
        POSITION: [8, 9.5, 0, 216, 110, 0],
        TYPE: [exports.legionaryQuintuplet],
      },
      {
        POSITION: [8, 9.5, 0, 288, 110, 0],
        TYPE: [exports.legionaryQuintuplet],
      },
      {
        POSITION: [8, 9.5, 0, 360, 110, 0],
        TYPE: [exports.legionaryQuintuplet],
      },

    
      {//GUARDIAN
        POSITION: [8, 9.5, 0, 36, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [8, 9.5, 0, 108, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [8, 9.5, 0, 180, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [8, 9.5, 0, 252, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
      {
        POSITION: [8, 9.5, 0, 324, 110, 0],
        TYPE: [exports.nesterSwarmerTurret],
      },
  ],  
  GUNS: [
    {
      POSITION: [4.5, 13, 0.6, 7, 0, 180, 2],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.drone, g.minion, g.lesserSize, g.lesserStats,]),
        TYPE: [exports.sterileBetaPentagonChip, { DRAW_HEALTH: true }],
        MAX_CHILDREN: 2,
        AUTOFIRE: true,
        SYNCS_SKILLS: true,
        STAT_CALCULATOR: gunCalcNames.drone,
      },
    },
  ],
},
5,
"LegionaryNester",
);
//TESTBED STUFF
exports.testbed = {
  PARENT: [exports.genericTank],
  LABEL: "Testbed",
  PASSIVE_EFFECT: "testbed",
  SPAWN: "none",
  RESET_UPGRADES: true,
  VALUE: 26258,
  SHAPE: [
    [-1, -0.8],
    [-0.8, -1],
    [0.8, -1],
    [1, -0.8],
    [0.2, 0],
    [1, 0.8],
    [0.8, 1],
    [-0.8, 1],
    [-1, 0.8],
  ],
  BODY: {
    FOV: 3,
  },
  TURRETS: [],
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [18, 10, -1.4, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.minorReload,
          g.uberStats,
          g.superSpeed,
          g.superSpeed,
          g.superSpeed,
        ]),
        TYPE: [exports.arenaBullet, { SHAPE: 5 }],
      },
    },
  ],

  SKILL_CAP: [
    dfltskl,
    dfltskl,
    dfltskl,
    dfltskl,
    dfltskl,
    dfltskl,
    dfltskl,
    dfltskl,
    dfltskl,
    dfltskl,
  ],
};
exports.buildRam = {
  PARENT: [exports.genericTank],
  LABEL: "Rammer-Style",
  LEVEL: 45,
  SKILL: skillSet({
    rld: 0.3, //reload
    dam: 0, //bullet damage
    pen: 0, //bullet penetration
    str: 0, //bullet health
    atk: 1, //body damage
    spd: 0, //bullet speed
    hlt: 1, //max health
    shi: 1, //shield capacity
    rgn: 1, //shield regeneration
    mob: 0.3, //movement speed
  }),
};
exports.buildGlass = {
  PARENT: [exports.genericTank],
  LABEL: "Glass Cannon-Style",
  LEVEL: 45,
  SKILL: skillSet({
    rld: 1, //reload
    dam: 1, //bullet damage
    pen: 1, //bullet penetration
    str: 1, //bullet health
    atk: 0, //body damage
    spd: 0.7, //bullet speed
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
};
exports.buildExpert = {
  PARENT: [exports.genericTank],
  LABEL: "Combat Expert-Style",
  LEVEL: 45,
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 0.8, //bullet damage
    pen: 0.6, //bullet penetration
    str: 0.6, //bullet health
    atk: 0.2, //body damage
    spd: 0.6, //bullet speed
    hlt: 0.2, //max health
    shi: 0.2, //shield capacity
    rgn: 0.2, //shield regeneration
    mob: 0.2, //movement speed
  }),
};
//PAGES
exports.page1 = {
  PARENT: [exports.genericTank],
  LABEL: "Polygons",
  LEVEL: 45,
};
exports.page2 = {
  PARENT: [exports.genericTank],
  LABEL: "Tanks",
  LEVEL: 45,
};
exports.minibois = {
  PARENT: [exports.genericTank],
  LABEL: "Mini Bosses",
  LEVEL: 45,
};
exports.updatedLegendaryClasses = {
  PARENT: [exports.genericTank],
  LABEL: "Updated Legendary Classes",
  LEVEL: 45,
};
exports.legandaryClassesP2 = {
  PARENT: [exports.genericTank],
  LABEL: "Legendary Classes Page 2",
  LEVEL: 45,
};
exports.legandaryClassesP3 = {
  PARENT: [exports.genericTank],
  LABEL: "Legendary Classes Page 3",
  LEVEL: 45,
};
exports.legandaryClassesP4 = {
  PARENT: [exports.genericTank],
  LABEL: "Legendary Classes Page 4",
  LEVEL: 45,
};
exports.gen1LegendaryClasses = {
  PARENT: [exports.genericTank],
  LABEL: "1st Generation Legendary Classes",
  LEVEL: 45,
};
exports.gen2LegendaryClasses = {
  PARENT: [exports.genericTank],
  LABEL: "2nd Generation Legendary Classes",
  LEVEL: 45,
};
exports.legendaryClassList = {
  PARENT: [exports.genericTank],
  LABEL: "Legendary Classes",
  LEVEL: 45,
};
exports.currentLegendaryClasses = {
  PARENT: [exports.genericTank],
  LABEL: "Legendary Node",
};
exports.guardianLegendaryClasses = {
  PARENT: [exports.genericTank],
  LABEL: "Guardian Node",
};
exports.fallenLegendaryClasses = {
  PARENT: [exports.genericTank],
  LABEL: "Undead Node",
};
exports.highlordLegendaryClasses = {
  PARENT: [exports.genericTank],
  LABEL: "Mechanical Node",
  LEVEL: 45,
};
exports.voidlordLegendaryClasses = {
  PARENT: [exports.genericTank],
  LABEL: "Void Node",
};
exports.neutralLegendaryClasses = {
  PARENT: [exports.genericTank],
  LABEL: "Neutral Node",
};
exports.deniedLegendaryClasses = {
  PARENT: [exports.genericTank],
  LABEL: "Node",
};
exports.infestationLegendaryClasses = {
  PARENT: [exports.genericTank],
  LABEL: "Undead Node",
};
exports.TeraClassas = {
  PARENT: [exports.genericTank],
  LABEL: "Tera_Classes",
  LEVEL: 45,
};
exports.pageJunk1 = {
  PARENT: [exports.genericTank],
  LABEL: "Junk Drawer",
  LEVEL: 45,
};
exports.pageJunk2 = {
  PARENT: [exports.genericTank],
  LABEL: "Junk Drawer+",
  LEVEL: 45,
};
exports.pageJunk3 = {
  PARENT: [exports.genericTank],
  LABEL: "Junk Drawer++",
  LEVEL: 45,
};
exports.pageJunk4 = {
  PARENT: [exports.genericTank],
  LABEL: "Junk Drawer+++",
  LEVEL: 45,
};
exports.page4 = {
  PARENT: [exports.genericTank],
  LABEL: "System_Tanks",
  LEVEL: 45,
};
exports.dominators = {
  PARENT: [exports.genericTank],
  LABEL: "Dominators",
  LEVEL: 45,
};
exports.page5 = {
  PARENT: [exports.genericTank],
  LABEL: "Developer Tanks",
  LEVEL: 45,
};
exports.page5_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Mess Around Tanks",
  LEVEL: 45,
};

exports.page5_1 = {
  PARENT: [exports.genericTank],
  LABEL: "Developer Tanks+",
  LEVEL: 45,
};
exports.danger = {
  PARENT: [exports.genericTank],
  LABEL: "Dangerous Tanks",
  LEVEL: 45,
};
exports.  supernova = {
  PARENT: [exports.genericTank],
  LABEL: "Chernobyl nuclear plant 4th reactor",
  COLOR: 19,
  MOTION_TYPE: "grow",
  IGNORE_COLLISION: true,
  INTANGIBLE: true,
  BODY: {
    // def
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED * 3,
    HEALTH: 999999,
    DAMAGE: 999999,
    PENETRATION: 100,
    SHIELD: 999999,
    REGEN: 999999,
    FOV: 5,
    DENSITY: base.DENSITY,
    PUSHABILITY: 0,
  },
};
exports.instakill = {
  PARENT: [exports.genericTank],
  LABEL: "DO NOT RAM THIS TANK",
  COLOR: 36,
  IGNORE_COLLISION: true,
  INTANGIBLE: true,
  BODY: {
    // def
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED * 3,
    HEALTH: 999999,
    DAMAGE: 999999,
    PENETRATION: 100,
    SHIELD: 999999,
    REGEN: 999999,
    FOV: 1.5,
    DENSITY: base.DENSITY,
    PUSHABILITY: 0,
  },
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [21.5, 0, 0, 0, 360, 0],
      TYPE: exports.smasherBody,
    },
  ],
};
exports.page7 = {
  PARENT: [exports.genericTank],
  LABEL: "Normal",
  LEVEL: 45,
};
exports.page8_1 = {
  PARENT: [exports.genericTank],
  LABEL: "Shiny",
  LEVEL: 45,
};
exports.page8_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Albino",
  LEVEL: 45,
};
exports.page8_3 = {
  PARENT: [exports.genericTank],
  LABEL: "Legendary",
  LEVEL: 45,
};
exports.page8_4 = {
  PARENT: [exports.genericTank],
  LABEL: "Shadow",
  LEVEL: 45,
};
exports.page8_5 = {
  PARENT: [exports.genericTank],
  LABEL: "Epileptic",
  LEVEL: 45,
};
exports.page8_6 = {
  PARENT: [exports.genericTank],
  LABEL: "Rainbow",
  LEVEL: 45,
};
exports.page8_7 = {
  PARENT: [exports.genericTank],
  LABEL: "Abyssal",
  LEVEL: 45,
};
exports.page8_8 = {
  PARENT: [exports.genericTank],
  LABEL: "Platonic",
  LEVEL: 45,
};
exports.page9 = {
  PARENT: [exports.genericTank],
  LABEL: "Bosses",
  LEVEL: 45,
};
exports.page10 = {
  PARENT: [exports.genericTank],
  LABEL: "Neutral_Bosses",
  LEVEL: 45,
};
exports.plpage11 = {
  PARENT: [exports.genericTank],
  LABEL: "Playable Tier 1 Neutral Bosses",
  LEVEL: 45,
};
exports.plpage12 = {
  PARENT: [exports.genericTank],
  LABEL: "Elite Crashers",
  LEVEL: 45,
};
exports.page11 = {
  PARENT: [exports.genericTank],
  LABEL: "Neutral_Tier-1",
  LEVEL: 45,
};
exports.page12 = {
  PARENT: [exports.genericTank],
  LABEL: "Elite Crashers",
  LEVEL: 45,
};
exports.page12_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Terrestrials",
  LEVEL: 45,
};
exports.page13 = {
  PARENT: [exports.genericTank],
  LABEL: "Neutral_Tier-2",
  LEVEL: 45,
};
exports.page13_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Descendants",
  LEVEL: 45,
};
exports.page14_3 = {
  PARENT: [exports.genericTank],
  LABEL: "Ascendants",
  LEVEL: 45,
};
exports.page13_3 = {
  PARENT: [exports.genericTank],
  LABEL: "Tier-2 Page-2",
  LEVEL: 45,
};
exports.page14 = {
  PARENT: [exports.genericTank],
  LABEL: "Neutral_Tier-3",
  LEVEL: 45,
};
exports.page14_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Neutral_Tier-4",
  LEVEL: 45,
};
exports.page15 = {
  PARENT: [exports.genericTank],
  LABEL: "Neutral_Tier-5",
  LEVEL: 45,
};
exports.page16 = {
  PARENT: [exports.genericTank],
  LABEL: "Fallen_Bosses",
  LEVEL: 45,
};
exports.page17 = {
  PARENT: [exports.genericTank],
  LABEL: "Fallen_Tier-1",
  LEVEL: 45,
};
exports.page18 = {
  PARENT: [exports.genericTank],
  LABEL: "Tier-1_Page-2",
  LEVEL: 45,
};
exports.page17_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Fallen_Tier-2",
  LEVEL: 45,
};
exports.page19 = {
  PARENT: [exports.genericTank],
  LABEL: "Fallen_Tier-3",
  LEVEL: 45,
};
exports.page20 = {
  PARENT: [exports.genericTank],
  LABEL: "Fallen_Tier-4",
  LEVEL: 45,
};
exports.page21 = {
  PARENT: [exports.genericTank],
  LABEL: "Fallen_Tier-5",
  LEVEL: 45,
};
exports.page22 = {
  PARENT: [exports.genericTank],
  LABEL: "Guardian_Bosses",
  LEVEL: 45,
};
exports.page23 = {
  PARENT: [exports.genericTank],
  LABEL: "Guardian_Tier-1",
  LEVEL: 45,
};
exports.page25 = {
  PARENT: [exports.genericTank],
  LABEL: "Guardian_Tier-2",
  LEVEL: 45,
};
exports.page26 = {
  PARENT: [exports.genericTank],
  LABEL: "Guardian_Tier-3",
  LEVEL: 45,
};
exports.page27 = {
  PARENT: [exports.genericTank],
  LABEL: "Guardian_Tier-4",
  LEVEL: 45,
};
exports.page27_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Guardian_Tier-5",
  LEVEL: 45,
};
exports.page28 = {
  PARENT: [exports.genericTank],
  LABEL: "Highlords_Bosses",
  LEVEL: 45,
};

exports.page29 = {
  PARENT: [exports.genericTank],
  LABEL: "Highlords_Tier-1",
  LEVEL: 45,
};

exports.page30 = {
  PARENT: [exports.genericTank],
  LABEL: "Highlords_Tier-2",
  LEVEL: 45,
};

exports.page31 = {
  PARENT: [exports.genericTank],
  LABEL: "Highlords_Tier-3",
  LEVEL: 45,
};
exports.highlordenemies = {
  PARENT: [exports.genericTank],
  LABEL: "Highlord Enemies",
  LEVEL: 45,
};
exports.page32 = {
  PARENT: [exports.genericTank],
  LABEL: "Highlords_Tier-4",
  LEVEL: 45,
};
exports.page33 = {
  PARENT: [exports.genericTank],
  LABEL: "Highlords_Tier-5",
  LEVEL: 45,
};
exports.page34 = {
  PARENT: [exports.genericTank],
  LABEL: "Voidlords_Bosses",
  LEVEL: 45,
};

exports.page35 = {
  PARENT: [exports.genericTank],
  LABEL: "Voidlords_Tier-1",
  LEVEL: 45,
};

exports.page36 = {
  PARENT: [exports.genericTank],
  LABEL: "Voidlords_Tier-2",
  LEVEL: 45,
};

exports.page37 = {
  PARENT: [exports.genericTank],
  LABEL: "Voidlords_Tier-3",
  LEVEL: 45,
};

exports.page38 = {
  PARENT: [exports.genericTank],
  LABEL: "Voidlords_Tier-4",
  LEVEL: 45,
};

exports.page39 = {
  PARENT: [exports.genericTank],
  LABEL: "Voidlords_Tier-5",
  LEVEL: 45,
};
exports.voidt6trol = {
  PARENT: [exports.genericTank],
  LABEL: "Voidlords_Tier-6",
  LEVEL: 45,
};
exports.page40 = {
  PARENT: [exports.genericTank],
  LABEL: "Enemies",
  LEVEL: 45,
};
exports.page41 = {
  PARENT: [exports.genericTank],
  LABEL: "Neutral",
  LEVEL: 45,
};
exports.page41_1 = {
  PARENT: [exports.genericTank],
  LABEL: "Crashers",
  LEVEL: 45,
};
exports.scrashers = {
  PARENT: [exports.genericTank],
  LABEL: "Shiny Crashers",
  COLOR: 1,
  SHAPE: 3,
  LEVEL: 45,
};
exports.lcrashers = {
  PARENT: [exports.genericTank],
  LABEL: "Legendary Crashers",
  LEVEL: 45,
  SHAPE: 3,
  COLOR: 0,
};
exports.shadcrashers = {
  PARENT: [exports.genericTank],
  LABEL: "Shadow Crashers",
  LEVEL: 45,
  COLOR: 19,
  SHAPE: 3,
};
exports.abyssalcrashers = {
  PARENT: [exports.genericTank],
  LABEL: "Abyssal Crashers",
  LEVEL: 45,
  COLOR: 19,
  SHAPE: 3,
};
exports.raincrashers = {
  PARENT: [exports.genericTank],
  LABEL: "Rainbow Crashers",
  LEVEL: 45,
  COLOR: 36,
  SHAPE: 3,
};
exports.page41_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Sentries",
  LEVEL: 45,
};
exports.page41_3 = {
  PARENT: [exports.genericTank],
  LABEL: "Sentinels",
  LEVEL: 45,
};
exports.page41_4 = {
  PARENT: [exports.genericTank],
  LABEL: "Sentinels+",
  LEVEL: 45,
};
exports.page41_5 = {
  PARENT: [exports.genericTank],
  LABEL: "Sentinels++",
  LEVEL: 45,
};
exports.page42 = {
  PARENT: [exports.genericTank],
  LABEL: "Guardian",
  LEVEL: 45,
};
exports.page42_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Guardian_Page-2",
  LEVEL: 45,
};
exports.page42_3 = {
  PARENT: [exports.genericTank],
  LABEL: "Guardian_Page-3",
  LEVEL: 45,
};

exports.page43 = {
  PARENT: [exports.genericTank],
  LABEL: "Highlord",
  LEVEL: 45,
};
exports.page43_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Highlord_Page-2",
  LEVEL: 45,
};
exports.page43_3 = {
  PARENT: [exports.genericTank],
  LABEL: "Highlord_Page-3",
  LEVEL: 45,
};
exports.page44 = {
  PARENT: [exports.genericTank],
  LABEL: "Voidlord",
  LEVEL: 45,
};
exports.page44_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Voidlord_Page-2",
  LEVEL: 45,
};
exports.page44_3 = {
  PARENT: [exports.genericTank],
  LABEL: "Voidlord_Page-3",
  LEVEL: 45,
};
exports.page45 = {
  PARENT: [exports.genericTank],
  LABEL: "Fallen",
  LEVEL: 45,
};
exports.page45_2 = {
  PARENT: [exports.genericTank],
  LABEL: "Fallen_Page-2",
  LEVEL: 45,
};
exports.page45_3 = {
  PARENT: [exports.genericTank],
  LABEL: "Fallen_Page-3",
  LEVEL: 45,
};
exports.page49 = {
  PARENT: [exports.genericTank],
  LABEL: "Projectiles",
  LEVEL: 45,
};
exports.page50 = {
  PARENT: [exports.genericTank],
  LABEL: "Meme tanks",
  LEVEL: 45,
};
exports.guardianenemies = {
  PARENT: [exports.genericTank],
  LABEL: "Guardian",
  LEVEL: 45,
  SHAPE: 3,
};
exports.playenemies = {
  PARENT: [exports.genericTank],
  LABEL: "Playable Enemies",
  LEVEL: 45,
};
exports.playcrash = {
  PARENT: [exports.genericTank],
  LABEL: "Playable Crashers",
  LEVEL: 45,
};
exports.playsenti = {
  PARENT: [exports.genericTank],
  LABEL: "Playable Sentinels",
  LEVEL: 45,
};
exports.cubedtestpage = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Test Page",
  LEVEL: 45,
  SHAPE: -2,
};
exports.cubedbosspage8 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Bosses Page 8",
  LEVEL: 45,
  SHAPE: 10,
};
exports.cubedbosspage7 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Bosses Page 7",
  LEVEL: 45,
  SHAPE: 9,
};
exports.cubedbosspage6 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Bosses Page 6",
  LEVEL: 45,
  SHAPE: 8,
};
exports.cubedbosspage5 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Bosses Page 5",
  LEVEL: 45,
  SHAPE: 7,
};
exports.cubedbosspage4 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Bosses Page 4",
  LEVEL: 45,
  SHAPE: 6,
};
exports.cubedbosspage3 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Bosses Page 3",
  LEVEL: 45,
  SHAPE: 5,
};
exports.cubedbosspage2 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Bosses Page 2",
  LEVEL: 45,
  SHAPE: 4,
};
exports.cubedbosspage = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Bosses",
  LEVEL: 45,
  SHAPE: 3,
};
exports.ShinyEliteCrashers = {
  PARENT: [exports.genericTank],
  LABEL: "Shiny Elite Crashers",
  LEVEL: 45,
  COLOR: 1,
  SHAPE: 3,
};
exports.LegendaryEliteCrashers = {
  PARENT: [exports.genericTank],
  LABEL: "Legendary Elite Crashers",
  LEVEL: 45,
  COLOR: 0,
  SHAPE: 3,
};
exports.cubedtankpage = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Tanks",
  SHAPE: 3,
  LEVEL: 45,
};
exports.cubedtankpage2 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Tanks Page 2",
  LEVEL: 45,
  SHAPE: 4,
};
exports.cubedtankpage3 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Tanks Page 3",
  LEVEL: 45,
  SHAPE: 5,
};
exports.cubedtankpage4 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Tanks Page 4",
  LEVEL: 45,
  SHAPE: 6,
};
exports.cubedtankpage5 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Tanks Page 5",
  LEVEL: 45,
  SHAPE: 7,
};
exports.cubedtankpage6 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Tanks Page 6",
  LEVEL: 45,
  SHAPE: 4,
};
exports.cubedtankpage7 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Tanks Page 7",
  LEVEL: 45,
  SHAPE: 5,
};
exports.cubedtankpage7 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Tanks Page 7",
  LEVEL: 45,
  SHAPE: 6,
};
exports.cubedtankpage8 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Tanks Page 8",
  LEVEL: 45,
  SHAPE: 7,
};
exports.cubeddompage1 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Domanator Page 8",
  LEVEL: 45,
  SHAPE: 7,
};
exports.cubedassetpage = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Assets Page 1",
  LEVEL: 45,
  SHAPE: 3,
};
exports.cubedassetpage2 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Assets Page 2",
  LEVEL: 45,
  SHAPE: 4,
};
exports.cubedenemypage = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Enemy Page 1",
  LEVEL: 45,
  SHAPE: 3,
};
exports.cubedenemypage2 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Enemy Page 2",
  LEVEL: 45,
  SHAPE: 4,
};
exports.cubedenemypage3 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Enemy Page 3",
  LEVEL: 45,
  SHAPE: 5,
};
exports.cubedenemypage3 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Enemy Page 3",
  LEVEL: 45,
  SHAPE: 5,
};
exports.cubedenemypage5 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Enemy Page 5",
  LEVEL: 45,
  SHAPE: 7,
};
exports.cubedenemypage6 = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Enemy Page 6",
  LEVEL: 45,
  SHAPE: 8,
};
exports.cubedpolypage = {
  PARENT: [exports.genericTank],
  LABEL: "J.J.'s Polygons",
  LEVEL: 45,
  SHAPE: 3,
};
exports.krispage = {
  PARENT: [exports.genericTank],
  LABEL: "Kris' random shit",
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 0.8, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0.4, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0.5, //movement speed
  }),
};
exports.kristanks = {
  PARENT: [exports.genericTank],
  LABEL: "Kristanks page 1",
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 0.8, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0.4, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0.5, //movement speed
  }),
};
exports.krisbranches = {
  PARENT: [exports.genericTank],
  LABEL: "Kris' completed branches",
  VALUE: 10000000,
  SKILL: skillSet({
    rld: 0.8, //reload
    dam: 0.8, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    atk: 0, //bullet speed
    spd: 0.5, //body damage
    hlt: 0.4, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0.5, //movement speed
  }),
};
exports.kriswarks = {
  PARENT: [exports.genericTank],
  LABEL: "Kris' warks",
  LEVEL: 45,
  SHAPE: 0,
};
exports.krispollies = {
  PARENT: [exports.genericTank],
  LABEL: "Kris' pollies",
  LEVEL: 45,
  SHAPE: 0,
};
exports.krisbooms = {
  PARENT: [exports.genericTank],
  LABEL: "Kris' grenadiers",
  LEVEL: 45,
  SHAPE: 0,
};
exports.krisfighters = {
  PARENT: [exports.genericTank],
  LABEL: "Kris' fighters",
  LEVEL: 45,
  SHAPE: 0,
};
exports.krissmashers = {
  PARENT: [exports.genericTank],
  LABEL: "Kris' smashers",
  LEVEL: 45,
  SHAPE: 0,
};
exports.krisento = {
  PARENT: [exports.genericTank],
  LABEL: "Kris' entombers",
  LEVEL: 45,
  SHAPE: 0,
};
exports.krisarch = {
  PARENT: [exports.genericTank],
  LABEL: "Kris' unmade architects",
  LEVEL: 45,
  SHAPE: 0,
};
exports.kriscommanders = {
  PARENT: [exports.genericTank],
  LABEL: "Kris' commanders",
  LEVEL: 45,
  SHAPE: 0,
};
exports.Seraphim = {
  PARENT: [exports.genericTank],
  NAME: "Seraphim",
  LABEL: "Fallen Angel",
  SIZE: 35,
  BROADCAST_MESSAGE: "A fallen angel ascends back to the homeland.",
  TYPE: "voidlordBoss",
  SPECIAL_EFFECT: "dieWall",
  FACING_TYPE: "looseToTarget",
  ALLOW_PLATE: true,
  DANGER: 8,
  COLOR: 19,
  VALUE: 5000000,
  AI: { STRAFE: true },
  CONTROLLERS: ["nearestDifferentMaster", "minion"],
  ORBIT_DISTANCE: 400,
  BODY: {
    DAMAGE: 15,
    FOV: 1.3,
    HEALTH: 2000,
    RESIST: 1 + 1/3,
    REGEN: -1,
  },
  SKILL: skillSet({
    rld: 0.7, //reload
    dam: 0.7, //bullet damage
    pen: 0.75, //bullet penetration
    str: 0.9, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  LEVEL: 45,
  SHAPE: 0,
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [17.5, 0, 0, 0, 0, 1],
      TYPE: [exports.evilEye, { INDEPENDENT: true }],
    },
  ],
  GUNS: [
   {POSITION: [13, 8, 1, 17.5, -1, -145, 0.6],},
    {POSITION: [10, 8, 1, 17.5, -1, -150, 0.6],},
    {
      POSITION: [18, 8, 1, 0, -1, -125, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.NoRecoil, g.doubleDamage, g.greaterRange]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [18, 8, 1, 0, -1, -130, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.NoRecoil, g.doubleDamage]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [18, 8, 1, 0, -1, -135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.NoRecoil, g.doubleDamage, g.bitmoreRange]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
  {
    POSITION: [16, 8, 1, 0, 0, -140, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.NoRecoil, g.doubleDamage, g.greaterRange,]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [16, 8, 1, 0, 0, -145, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.NoRecoil, g.doubleDamage]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [16, 8, 1, 0, 0, -155, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.NoRecoil, g.doubleDamage, g.bitmoreRange]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
    {POSITION: [27, 8, 1, 5, -1, -155, 0.6],},
    {POSITION: [20, 8, 1, 20.5, -1, -150, 0.6],},
    {POSITION: [20, 8, 1, 27.5, -1, -147.5, 0.6],},
    {POSITION: [18, 8, 1, 34.5, -1, -150, 0],      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.mediumReload,
          g.NoRecoil,
          g.doubleSpeed,
          g.mediumDamage,
          g.greaterRange
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },},
    {POSITION: [17, 8, 1, 24.5, -1, -145, 0.6],},
    {POSITION: [17, 8, 1, 14.5, -1, -140, 0.6],},
    {POSITION: [18, 8, 1, 37.5, -1, -147, 0.1],      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.mediumReload,
          g.NoRecoil,
          g.doubleSpeed,
          g.mediumDamage,
          g.greaterRange
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },},
    {POSITION: [17, 8, 1, 27.5, -1, -142, 0.6],},
    {POSITION: [17, 8, 1, 17.5, -1, -137, 0.6],},
    {POSITION: [18, 8, 1, 40.5, -1, -144, 0.2],      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.mediumReload,
          g.NoRecoil,
          g.doubleSpeed,
          g.mediumDamage,
          g.greaterRange
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },},
    {POSITION: [17, 8, 1, 30.5, -1, -139, 0.6],},
    {POSITION: [17, 8, 1, 20.5, -1, -134, 0.6],},
    {POSITION: [18, 8, 1, 43.5, -1, -141, 0.3],      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.mediumReload,
          g.NoRecoil,
          g.doubleSpeed,
          g.mediumDamage,
          g.greaterRange
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },},
    {POSITION: [17, 8, 1, 33.5, -1, -136, 0.6],},
    {POSITION: [17, 8, 1, 23.5, -1, -131, 0.6],},
    {POSITION: [18, 8, 1, 46.5, -1, -138, 0.4],      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.mediumReload,
          g.NoRecoil,
          g.doubleSpeed,
          g.mediumDamage,
          g.greaterRange
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },},
    {POSITION: [17, 8, 1, 36.5, -1, -133, 0.6],},
    {POSITION: [17, 8, 1, 26.5, -1, -128, 0.6],},
    {POSITION: [18, 8, 1, 49.5, -1, -135, 0.5],      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.mediumReload,
          g.NoRecoil,
          g.doubleSpeed,
          g.mediumDamage,
          g.greaterRange
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },},
    {POSITION: [17, 8, 1, 29.5, -1, -125, 0.6],},
    {POSITION: [17, 8, 1, 32.5, -1, -122, 0.6],},
    {POSITION: [17, 8, 1, 42.5, -1, -125, 0.6],},
    {POSITION: [18, 8, 1, 52.5, -1, -128, 0.6],  
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.mediumReload,
          g.NoRecoil,
          g.doubleSpeed,
          g.mediumDamage,
          g.greaterRange
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },
    },



    {POSITION: [13, 8, 1, 17.5, -1, 145, 0.6],},
    {POSITION: [10, 8, 1, 17.5, -1, 150, 0.6],},
    {
      POSITION: [18, 8, 1, 0, -1, 125, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.NoRecoil, g.doubleDamage, g.greaterRange]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [18, 8, 1, 0, -1, 130, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.NoRecoil, g.doubleDamage]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
    {
      POSITION: [18, 8, 1, 0, -1, 135, 0.6],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.NoRecoil, g.doubleDamage, g.bitmoreRange]),
        TYPE: exports.bullet,
        LABEL: gunCalcNames.thruster,
      },
    },
  {
    POSITION: [16, 8, 1, 0, 0, 140, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.NoRecoil, g.doubleDamage, g.greaterRange,]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [16, 8, 1, 0, 0, 145, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.NoRecoil, g.doubleDamage]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
  {
    POSITION: [16, 8, 1, 0, 0, 155, 0.1],
    PROPERTIES: {
      SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster, g.NoRecoil, g.doubleDamage, g.bitmoreRange]),
      TYPE: exports.bullet,
      LABEL: gunCalcNames.thruster,
    },
  },
    {POSITION: [27, 8, 1, 5, -1, 155, 0.6],},
    {POSITION: [20, 8, 1, 20.5, -1, 150, 0.6],},
    {POSITION: [20, 8, 1, 27.5, -1, 147.5, 0.6],},
    {POSITION: [18, 8, 1, 34.5, -1, 150, 0],      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.mediumReload,
          g.NoRecoil,
          g.doubleSpeed,
          g.mediumDamage,
          g.greaterRange
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },},
    {POSITION: [17, 8, 1, 24.5, -1, 145, 0.6],},
    {POSITION: [17, 8, 1, 14.5, -1, 140, 0.6],},
    {POSITION: [18, 8, 1, 37.5, -1, 147, 0.1],      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.mediumReload,
          g.NoRecoil,
          g.doubleSpeed,
          g.mediumDamage,
          g.greaterRange
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },},
    {POSITION: [17, 8, 1, 27.5, -1, 142, 0.6],},
    {POSITION: [17, 8, 1, 17.5, -1, 137, 0.6],},
    {POSITION: [18, 8, 1, 40.5, -1, 144, 0.2],      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.mediumReload,
          g.NoRecoil,
          g.doubleSpeed,
          g.mediumDamage,
          g.greaterRange
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },},
    {POSITION: [17, 8, 1, 30.5, -1, 139, 0.6],},
    {POSITION: [17, 8, 1, 20.5, -1, 134, 0.6],},
    {POSITION: [18, 8, 1, 43.5, -1, 141, 0.3],      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.mediumReload,
          g.NoRecoil,
          g.doubleSpeed,
          g.mediumDamage,
          g.greaterRange
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },},
    {POSITION: [17, 8, 1, 33.5, -1, 136, 0.6],},
    {POSITION: [17, 8, 1, 23.5, -1, 131, 0.6],},
    {POSITION: [18, 8, 1, 46.5, -1, 138, 0.4],      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.mediumReload,
          g.NoRecoil,
          g.doubleSpeed,
          g.mediumDamage,
          g.greaterRange
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },},
    {POSITION: [17, 8, 1, 36.5, -1, 133, 0.6],},
    {POSITION: [17, 8, 1, 26.5, -1, 128, 0.6],},
    {POSITION: [18, 8, 1, 49.5, -1, 135, 0.5],      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.mediumReload,
          g.NoRecoil,
          g.doubleSpeed,
          g.mediumDamage,
          g.greaterRange
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },},
    {POSITION: [17, 8, 1, 29.5, -1, 125, 0.6],},
    {POSITION: [17, 8, 1, 32.5, -1, 122, 0.6],},
    {POSITION: [17, 8, 1, 42.5, -1, 125, 0.6],},
    {POSITION: [18, 8, 1, 52.5, -1, 128, 0.6],      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.pound,
          g.mediumReload,
          g.NoRecoil,
          g.doubleSpeed,
          g.mediumDamage,
          g.greaterRange
        ]),
        TYPE: exports.swarmDrone,
        IGNORE_COLLISION: true,
      },},
    
    {POSITION: [12, 6, 1, 10, -1, 62, 0.6]},
    {POSITION: [18, 6, 1, 10, -1, 55, 0.6]},
    {POSITION: [18, 6, 1, 18, -1, 51, 0.6]},
    {POSITION: [22, 6, 1, 16, -1, 47, 0.6]},
    {POSITION: [24, 6, 1, 14, -1, 43, 0.6]},
    {POSITION: [24, 6, 1, 10, -1, 43, 0.6]},
    {POSITION: [26, 6, 1, 14, -1, 39, 0.6]},
    {POSITION: [26, 6, 1, 14, -1, 35, 0.6]},
    {POSITION: [24, 6, 1, 13, -1, 31, 0.6]},
    {POSITION: [22, 6, 1, 12, -1, 27, 0.6]},
    {POSITION: [16, 6, 1, 16, -1, 23, 0.6]},

    {POSITION: [12, 6, 1, 10, -1, -62, 0.6]},
    {POSITION: [18, 6, 1, 10, -1, -55, 0.6]},
    {POSITION: [18, 6, 1, 18, -1, -51, 0.6]},
    {POSITION: [22, 6, 1, 16, -1, -47, 0.6]},
    {POSITION: [24, 6, 1, 14, -1, -43, 0.6]},
    {POSITION: [24, 6, 1, 10, -1, -43, 0.6]},
    {POSITION: [26, 6, 1, 14, -1, -39, 0.6]},
    {POSITION: [26, 6, 1, 14, -1, -35, 0.6]},
    {POSITION: [24, 6, 1, 13, -1, -31, 0.6]},
    {POSITION: [22, 6, 1, 12, -1, -27, 0.6]},
    {POSITION: [16, 6, 1, 16, -1, -23, 0.6]},

   

            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                  g.superSize,
                  g.greaterSize,
                ]),
                TYPE: exports.SeraphimRing,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                  g.superSize,
                  g.doubleSize,
                ]),
                TYPE: exports.reverseSeraphimRing,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
            {
              /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
              POSITION: [0, 10, 1.2, 5.5, 0, 0, 3],

              PROPERTIES: {
                SHOOT_SETTINGS: combineStats([
                  g.basic,
                  g.superSize,
                  g.bitLessSize,
                  g.bitLessSize,
                  g.minorReload,
                  g.superSize,
                  g.doubleSize,
                  g.bitmoreSize,
                ]),
                TYPE: exports.SeraphimRing,
                AUTOFIRE: true,
                SYNCS_SKILLS: true,
                MAX_CHILDREN: 1,
                STAT_CALCULATOR: gunCalcNames.drone,
              },
            },
    ],
};
exports.krisheals = {
  PARENT: [exports.genericTank],
  LABEL: "Kris's Healer Creations",
  LEVEL: 45,
  SHAPE: [
    [0.3, -0.3],
    [1, -0.3],
    [1, 0.3],
    [0.3, 0.3],
    [0.3, 1],
    [-0.3, 1],
    [-0.3, 0.3],
    [-1, 0.3],
    [-1, -0.3],
    [-0.3, -0.3],
    [-0.3, -1],
    [0.3, -1],
  ],
  COLOR: 23,
};
exports.krisheals2 = {
  PARENT: [exports.genericTank],
  LABEL: "Kris's Healer Creations P2",
  LEVEL: 45,
  SHAPE: [
    [0.3, -0.3],
    [1, -0.3],
    [1, 0.3],
    [0.3, 0.3],
    [0.3, 1],
    [-0.3, 1],
    [-0.3, 0.3],
    [-1, 0.3],
    [-1, -0.3],
    [-0.3, -0.3],
    [-0.3, -1],
    [0.3, -1],
  ],
  COLOR: 23,
};
exports.kristanks2 = {
  PARENT: [exports.genericTank],
  LABEL: "Kristanks Page 2",
  LEVEL: 45,
  SHAPE: 0,
};
exports.kristanks3 = {
  PARENT: [exports.genericTank],
  LABEL: "Kristanks Page 3",
  LEVEL: 45,
  SHAPE: 0,
};
exports.krisbosses1 = {
  PARENT: [exports.genericTank],
  LABEL: "Krisbosses Page 1",
  LEVEL: 45,
  SHAPE: 0,
};
exports.krisbosses2 = {
  PARENT: [exports.genericTank],
  LABEL: "Krisbosses Page 2",
  LEVEL: 45,
  SHAPE: 0,
};
exports.kristanks4 = {
  PARENT: [exports.genericTank],
  LABEL: "Kristanks Page 4",
  LEVEL: 45,
  SHAPE: 0,
};
exports.drive = {
  PARENT: [exports.genericTank],
  LABEL: "Drive",
  BODY: {
    SPEED: 1000,
  },
  TURRETS: [
    {
      /*********  SIZE     X       Y     ANGLE    ARC */
      POSITION: [9, 0, 0, 0, 360, 1],
      TYPE: [exports.driveSymbol, { INDEPENDENT: true, COLOR: 16 }],
    },
  ],
};
exports.twilight = {
  PARENT: [exports.guardianRangedBoss],
  LABEL: "Defier",
  SIZE: 12,
  COLOR: 10,
  NAME: "Twilight <3",
  VALUE: 1000000,
  BODY: {
    ACCELERATION: base.ACCEL,
    SPEED: base.SPEED * 2,
    HEALTH: 1000,
    REGEN: 0.1,
  },
  GUNS: [
    ...pounderGun,
    {
      POSITION: [20, 12, 0, 0, 0, 0, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.superHealth,
          g.greaterDamage,
        ]),
        TYPE: [exports.bullet, { LABEL: "Flare", MOTION_TYPE: "grow" }],
      },
    },
    {
      POSITION: [16, 6, -2, 0, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.mach]),
        TYPE: exports.swarmDrone,
        MAX_CHILDREN: 15,
      },
    },
    {
      POSITION: [16, 6, -2, 0, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.mach]),
        TYPE: exports.swarmDrone,
        MAX_CHILDREN: 15,
      },
    },
    ...birdGuns,
    ...builderGun,
  ],
};
exports.zephilen = {
  PARENT: [exports.guardianRangedBoss],
  COLOR: 21,
  LABEL: "The Uprising",
  SIZE: 20.5,
  NAME: "Zephilen",
  BODY: {
    DAMAGE: base.DAMAGE * 7.83225,
    FOV: 3.25,
    HEALTH: 1000,
    PENETRATION: 5,
    REGEN: 0,
    RESIST: 1.4,
  },
  SPECIAL_EFFECT: "dieWall",
  FACING_TYPE: "looseToTarget",
  DANGER: 10,
  SIZE: 17.5,
  VALUE: 2000000,
  AI: { STRAFE: true },
  SKILL: skillSet({
    rld: 0.25, //reload
    dam: 0.8, //bullet damage
    pen: 0.8, //bullet penetration
    str: 0.8, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  GUNS: [
    {
      POSITION: [14, 3, 1, 0, 7, 8, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.greaterDamage,
          g.greaterSpeed,
          g.doubleSize,
        ]),
        TYPE: exports.uncontrolledBeeDrone,
        LABEL: "Secondary",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 3, 1, 0, -7, -8, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.greaterDamage,
          g.greaterSpeed,
          g.doubleSize,
        ]),
        TYPE: exports.uncontrolledBeeDrone,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [16, 3, 1, 0, 6, 7, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.greaterDamage,
          g.greaterSpeed,
          g.doubleSize,
        ]),
        TYPE: exports.uncontrolledBeeDrone,
        LABEL: "Secondary",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 3, 1, 0, -6, -7, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.greaterDamage,
          g.greaterSpeed,
          g.doubleSize,
        ]),
        TYPE: exports.uncontrolledBeeDrone,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 4, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 90, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 4, 270, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 270, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },
    {
      POSITION: [20, 13, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound, g.greaterPenetration]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 12, 1, 0, 0, -157.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.greaterRecoil,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 12, 1, 0, 0, 157.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.greaterRecoil,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, -4, 152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 4, -152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
  ],
};
exports.zephilenRevolutionaryForm = {
  PARENT: [exports.zephilen],
  NAME: "Zephilen",
  COLOR: 21,
  LABEL: "The Revolutionary",
  SIZE: 20.5,
  BODY: {
    FOV: 3.25,
    HEALTH: 5000,
    REGEN: -1,
    SPEED: 1.5,
    RESIST: 1.39,
  },
  DANGER: 11,
  SIZE: 30,
  VALUE: 5000000,
  SKILL: skillSet({
    rld: 0.05, //reload
    dam: 0.7, //bullet damage
    pen: 0.7, //bullet penetration
    str: 0.7, //bullet health
    spd: 0.5, //bullet speed
    atk: 0, //body damage
    hlt: 0, //max health
    shi: 0, //shield capacity
    rgn: 0, //shield regeneration
    mob: 0, //movement speed
  }),
  GUNS: [
    {
      POSITION: [17, 3, 1, 0, 5, 6, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.greaterDamage,
          g.greaterSpeed,
          g.doubleSize,
        ]),
        TYPE: exports.beeDrone,
        LABEL: "Secondary",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [17, 3, 1, 0, -5, -6, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.greaterDamage,
          g.greaterSpeed,
          g.doubleSize,
        ]),
        TYPE: exports.beeDrone,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [14, 3, 1, 0, 7, 8, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.greaterDamage,
          g.greaterSpeed,
          g.doubleSize,
        ]),
        TYPE: exports.uncontrolledBeeDrone,
        LABEL: "Secondary",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [14, 3, 1, 0, -7, -8, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.greaterDamage,
          g.greaterSpeed,
          g.doubleSize,
        ]),
        TYPE: exports.uncontrolledBeeDrone,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [16, 3, 1, 0, 6, 7, 0.25],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.greaterDamage,
          g.greaterSpeed,
          g.doubleSize,
        ]),
        TYPE: exports.uncontrolledBeeDrone,
        LABEL: "Secondary",
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [16, 3, 1, 0, -6, -7, 0.75],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.swarm,
          g.bee,
          g.greaterDamage,
          g.greaterSpeed,
          g.doubleSize,
        ]),
        TYPE: exports.uncontrolledBeeDrone,
        LABEL: "Secondary",
      },
    },
    {
      POSITION: [8, 7.5, 0.6, 7, 0, -90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },
    {
      POSITION: [8, 7.5, 0.6, 7, 0, 90, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 4, 90, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 90, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, 4, 270, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: [exports.uncontrolledSwarmDrone],
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Autonomous",
      },
    },
    {
      POSITION: [7, 7.5, 0.6, 7, -4, 270, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.swarm, g.pound]),
        TYPE: exports.swarmDrone,
        STAT_CALCULATOR: gunCalcNames.swarm,
        LABEL: "Guided",
      },
    },
    {
      POSITION: [20, 15, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.anni,
          g.greaterStats,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 4, 1, 0, -5, 10, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [20, 4, 1, 0, 5, -10, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 4, 1, 0, 0, 0, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.pound]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [24, 13, 1, 0, 0, -147.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.greaterRecoil,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [24, 13, 1, 0, 0, 147.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.greaterRecoil,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 12, 1, 0, 0, -157.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.greaterRecoil,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 12, 1, 0, 0, 157.5, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.greaterRecoil,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, -4, 152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 4, -152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 157.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [18, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 90, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [18, 0, 0, 180, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [18, 0, 0, 270, 360, 0],
      TYPE: exports.spikeBody,
    },
  ],
};
exports.teraRebel = {
  PARENT: [exports.mortarDisciple],
  NAME: "Klayton",
  COLOR: 12,
  //SHAPE: [[1,-0.5],[-0.5,-1],[-1,-0.5],[-1,0.5],[-0.5,1],[1,0.5]],
  SKILL_CAP: [9, 9, 9, 9, 9, 9, 9, 9, 9, 9],
  SPECIAL_EFFECT: "Legend",
  RESET_UPGRADES: true,
  BODY: {
    FOV: 3.25,
    HEALTH: 900,
    REGEN: -1,
    SPEED: base.SPEED / 2,
    RESIST: 1,
  },
  GUNS: [
    ...extraSideGuns,
    ...sideGuns,
    //...beeGuns,
    //...cruiserGuns,
    ...pounderGun,
    {
      POSITION: [22, 9, 1, 0, -4, 150, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [22, 9, 1, 0, 4, -150, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.pound,
          g.destroy,
          g.flank,
          g.tri,
          g.thruster,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, -4, 152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 4, -152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, -152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 152.5, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
    {
      POSITION: [19, 8, 1, 0, 0, 180, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([g.basic, g.flank, g.tri, g.thruster]),
        TYPE: exports.bullet,
      },
    },
  ],
  TURRETS: [
    {
      /** SIZE     X       Y     ANGLE    ARC */
      POSITION: [14, 0, 0, 0, 360, 1],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [16, 0, 0, 90, 360, 1],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [14, 0, 0, 60, 360, 1],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [14, 0, 0, -60, 360, 1],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [20, 0, 0, 0, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [23, 0, 0, 90, 360, 0],
      TYPE: exports.smasherBody,
    },
    {
      POSITION: [20, 0, 0, 60, 360, 0],
      TYPE: exports.spikeBody,
    },
    {
      POSITION: [20, 0, 0, -60, 360, 0],
      TYPE: exports.spikeBody,
    },
  ],
};
exports.hexturret = {
  PARENT: [exports.autoTurret],
  INDEPENDENT: true,
  FACING_TYPE: "autospin",
  CONTROLLERS: ["alwaysFire"],
  SPIN_RATE: -0.02,
  GUNS: [
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 10, 1, 0, 0, 6/6*360, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.power,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 10, 1, 0, 0, 1/6*360, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.power,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 10, 1, 0, 0, 2/6*360, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.power,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 10, 1, 0, 0, 3/6*360, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.power,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 10, 1, 0, 0, 4/6*360, 0.5],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.power,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
    {
      /*** LENGTH  WIDTH   ASPECT    X       Y     ANGLE   DELAY */
      POSITION: [21, 10, 1, 0, 0, 5/6*360, 0],
      PROPERTIES: {
        SHOOT_SETTINGS: combineStats([
          g.basic,
          g.gunner,
          g.power,
          g.greaterStats,
          g.superReload,
          g.doubleReload,
        ]),
        TYPE: exports.bullet,
      },
    },
  ],
};
exports.randombullshit = {
  PARENT: [exports.hexa],
  RESET_UPGRADES: true,
  LABEL: "hexaception",
  DANGER: 7,
  TURRETS: [
      {
        POSITION: [8.5, 0, 0, 0, 360, 1],
        TYPE: exports.hexturret,
      },
  ],
};
// UPGRADE PATHS

exports.swarmhexa.UPGRADES_TIER_0 = [
  exports.swarmhexagonsenti1,
  exports.swarmhexagonsenti2,
  exports.swarmhexagonsenti3,
];
exports.swarmhexagonsenti3.UPGRADES_TIER_1 = [exports.swarmhexagonsenti32];
exports.swarmhexagonsenti2.UPGRADES_TIER_1 = [exports.swarmhexagonsenti22];
exports.swarmhexagonsenti1.UPGRADES_TIER_1 = [exports.swarmhexagonsenti12];
exports.swarmSentinel.UPGRADES_TIER_0 = [
  exports.eliteAutoSwarmSentinel,
  exports.eliteTrapperSwarmSentinel,
  exports.eliteGunnerSwarmSentinel,
  exports.eliteSkimmerSwarmSentinel,
];
exports.eliteAutoSwarmSentinel.UPGRADES_TIER_6 = [
  exports.omegaAutoSwarmSentinel,
];
exports.eliteTrapperSwarmSentinel.UPGRADES_TIER_6 = [
  exports.omegaTrapperSwarmSentinel,
];
exports.eliteGunnerSwarmSentinel.UPGRADES_TIER_6 = [
  exports.omegaGunnerSwarmSentinel,
];
exports.eliteSkimmerSwarmSentinel.UPGRADES_TIER_6 = [
  exports.omegaSkimmerSwarmSentinel,
];
exports.swarmKeeper.UPGRADES_TIER_0 = [
  exports.eliteBoosterSwarmKeeper,
  exports.eliteRammerSwarmKeeper,
  exports.eliteOverseerSwarmKeeper,
];
exports.eliteBoosterSwarmKeeper.UPGRADES_TIER_0 = [
  exports.omegaBoosterSwarmKeeper,
];
exports.eliteOverseerSwarmKeeper.UPGRADES_TIER_0 = [
  exports.omegaOverlordSwarmKeeper,
  exports.omegaSwarmerSwarmKeeper,
];
exports.eliteRammerSwarmKeeper.UPGRADES_TIER_0 = [
  exports.omegaRammerSwarmKeeper,
];
exports.swarmProtector.UPGRADES_TIER_0 = [
  exports.elitePropellerSwarmProtector,
  exports.eliteTrapperSwarmProtector,
  exports.eliteHiveSwarmProtector,
];
exports.eliteHiveSwarmProtector.UPGRADES_TIER_1 = [
  exports.omegaHiveSwarmProtector,
];
exports.elitePropellerSwarmProtector.UPGRADES_TIER_1 = [
  exports.omegaBoosterSwarmProtector,
];
exports.eliteTrapperSwarmProtector.UPGRADES_TIER_1 = [
  exports.omegaTrapperSwarmProtector,
];
exports.swarmegg.UPGRADES_TIER_0 = [
  exports.swarmeggsenti1,
  exports.swarmeggsenti2,
  exports.swarmeggsenti3,
];
exports.swarmeggsenti1.UPGRADES_TIER_0 = [exports.swarmeggsenti12];
exports.swarmeggsenti2.UPGRADES_TIER_0 = [exports.swarmeggsenti22];
exports.swarmeggsenti3.UPGRADES_TIER_0 = [exports.swarmeggsenti32];
exports.testbed.UPGRADES_TIER_1 = [
  exports.page9,
  exports.page2,
  exports.page1,
  exports.page40,
  exports.krispage,
  exports.cubedtestpage,
];
exports.krispage.UPGRADES_TIER_1 = [
  exports.kristanks,
  exports.krisbosses1,
  exports.krisbranches,
];
exports.krisbranches.UPGRADES_TIER_1 = [
  exports.krisheals,
  exports.kriswarks,
  exports.krispollies,
  exports.krisbooms,
  exports.krisfighters,
  exports.krissmashers,
  exports.pen,
  exports.undertrapper,
  exports.kriscommanders,
  exports.autobasic,
  exports.krisarch,
];
exports.kriscommanders.UPGRADES_TIER_4 = [
  exports.regulator,
  exports.autoCommander,
  exports.general,
  exports.governer,
  exports.alloy,
]
exports.kriscommanders.UPGRADES_TIER_5 = [
  exports.overclocker,
]
exports.krisarch.UPGRADES_TIER_1 = [
  exports.city
]
exports.autobasic.UPGRADES_TIER_2 = [
  exports.sentry,
  exports.bauto,
];
exports.undertrapper.UPGRADES_TIER_5 = [
  exports.eggento,
  exports.entomber,
  exports.triento,
  exports.pentaento,
  exports.hexaento,
  exports.underpen,
];
exports.eggento.UPGRADES_TIER_6 = [exports.eggpen]
exports.entomber.UPGRADES_TIER_6 = [exports.quadpen]
exports.triento.UPGRADES_TIER_6 = [exports.tripen]
exports.pentaento.UPGRADES_TIER_6 = [exports.pentapen]
exports.hexaento.UPGRADES_TIER_6 = [exports.hexapen]

exports.pen.UPGRADES_TIER_4 = [
  exports.quill,
  exports.breeze,
  exports.inker,
  exports.printer,
  exports.anvil,
  exports.penception,
  exports.outpost,
  exports.overpen,
  exports.underpen,
];
exports.underpen.UPGRADES_TIER_6 = [exports.eggpen, exports.quadpen, exports.tripen, exports.pentapen, exports.hexapen,]
exports.outpost.UPGRADES_TIER_5 = [exports.watchtower, exports.rampart]
exports.watchtower.UPGRADES_TIER_6 = [exports.beacon]
exports.beacon.UPGRADES_TIER_7 = [exports.lighthouse]
exports.rampart.UPGRADES_TIER_7 = [exports.lighthouse]
exports.quill.UPGRADES_TIER_5 = [
  exports.trident,
  exports.inkfountain,
  exports.plume,
]
exports.anvil.UPGRADES_TIER_5 = [exports.monolith]
exports.anvil.UPGRADES_TIER_6 = [exports.demolitionist]
exports.overpen.UPGRADES_TIER_6 = [exports.lordpen]
exports.breeze.UPGRADES_TIER_5 = [
  exports.boosttrap,
];
exports.breeze.UPGRADES_TIER_6 = [exports.tyrant, exports.tritri,];
exports.boosttrap.UPGRADES_TIER_6 = [exports.resister];
exports.kriswarks.UPGRADES_TIER_1 = [
  exports.hewnwark,
  exports.autoBulwark,
  exports.bentBulwark,
  exports.triwark,
  exports.hewnBulwark,
];
exports.krispollies.UPGRADES_TIER_1 = [
  exports.polyTerror,
  exports.polyTyrant,
  exports.polyLord,
  exports.mutant,
  exports.autoPolyFear,
];
exports.krisbooms.UPGRADES_TIER_1 = [
  exports.neutron,
  exports.beenader,
];
exports.krisfighters.UPGRADES_TIER_1 = [
  exports.splatterer,
  exports.cloner,
  exports.woodpecker,
  exports.lobber,
  exports.spitter,
];
exports.krissmashers.UPGRADES_TIER_1 = [
  exports.whirlpool,
  exports.truesmashatmo,
  exports.truehealersphere,
  exports.truerepairsphere,
  exports.ringofdeath,
  exports.autosmashdupe,
  exports.smashdupedrive,

];
exports.kristanks.UPGRADES_TIER_1 = [
  //add tanks here (dont go over 12 tanks(the 12th tank should be the tank leading to the next page))
  exports.Dad,
  exports.shulker,
  exports.wilder,
  
  exports.Seraphim,
  exports.hollow,
  exports.manipulator,
  
  exports.auraDirector,
  exports.tritri,
  exports.breeze,
  
  exports.boosttrap,
  exports.tyrant,
  exports.resister,
  
  exports.kristanks2,
];
exports.krisheals.UPGRADES_TIER_1 = [
  
  exports.mediforge,
  exports.sustainer,
  exports.Parmesan,
  
  exports.healomizer,
  exports.caretaker,
  exports.lifeshot,

  exports.surgeon,
  exports.vital,
  exports.medigun,
  
  exports.ambulance,
  exports.heal3,
  exports.rejuvenator,
  
  exports.krisheals2,
];
exports.krisheals2.UPGRADES_TIER_1 = [
  
  exports.vanguard,
  exports.vitalis,
  exports.aderaline,
  
  exports.aegis,
  exports.pulsecaster,
  exports.needle,
  
  exports.cleanser,
  exports.purifier,
  exports.doctor,
  
];
exports.kristanks2.UPGRADES_TIER_1 = [
  exports.helpme,
  exports.Palisade,
  exports.dronetest,
  
  exports.mechanister,
  exports.turretParagon,
  exports.ogburster,
  
  exports.ognecrotyrant,
  exports.hexaswarm,
  exports.hivemind,
  
  exports.creation,
  exports.miniselene,
  exports.warship,
  
  exports.kristanks3,  

];
exports.hexaswarm.UPGRADES_TIER_5 = [exports.hivemind]
exports.hivemind.UPGRADES_TIER_6 = [exports.hivelord]
exports.kristanks3.UPGRADES_TIER_1 = [
  exports.landminelayer,
  exports.hyperSkimmer,
  exports.testerSkimmer,
  exports.testersphere,
  exports.randombullshit,
  exports.kristanks4,
];
exports.krisbosses1.UPGRADES_TIER_1 = [
  exports.erebus,
  exports.cultist,
  exports.trimalgam,
  exports.barracuda,
  exports.zennith,
  exports.primordialnester,
  exports.Eggship,
  exports.squaredpelleter,
  exports.hellwark,
  exports.fallentyrant,
  exports.roguecitadel,
  exports.rogueflagship,
  exports.krisbosses2,
];
exports.krisbosses2.UPGRADES_TIER_1 = [
  exports.oblivion,
  exports.Napoleon,
  exports.julius,
  
  exports.celestialCrasher,
  exports.legionaryNester,
  exports.hera,
  
  exports.bacteria,
  exports.voidCaller,
  exports.rogue_skimmer,
  
  exports.elite_warship,
  exports.elite_streamliner,
  exports.krispage,
];
exports.kristanks4.UPGRADES_TIER_1 = [
  exports.condor,
  exports.tanker,
  exports.smashdupev2,
  exports.smashdupev3,
  exports.growdupe,
  exports.krispage,
];
exports.cubedtestpage.UPGRADES_TIER_1 = [
  exports.cubedpolypage,
  exports.cubedtankpage,
  exports.cubedbosspage,
  exports.cubedassetpage,
  exports.cubedenemypage,
];
exports.cubedenemypage.UPGRADES_TIER_1 = [
  exports.autoSwarmSentinel,
  exports.trapperSwarmSentinel,
  exports.gunnerSwarmSentinel,
  exports.skimmerSwarmSentinel,
  exports.Crusher,
  exports.Leaper,
  exports.Lasher,
  exports.Lunger,
  exports.acoa,
  exports.peliser,
  exports.cubedenemypage2,
];
exports.cubedenemypage2.UPGRADES_TIER_1 = [
  exports.campfire,
  exports.campfire2,
  exports.spark,
  exports.flame,
  exports.cursedflame,
  exports.torch,
  exports.torch2,
  exports.torch3,
  exports.Unawakened1,
  exports.Unawakened2,
  exports.Unawakened3,
  exports.highlordenemies,
];
exports.cubedenemypage3.UPGRADES_TIER_1 = [
  exports.minionegg,
  exports.minionegg2,
  exports.minionegg3,
  exports.minionegg4,
  exports.minionegg5,
  exports.minionegg6,
  exports.spawn,
];
exports.cubedassetpage.UPGRADES_TIER_1 = [
  exports.stfellasHandBlade1,
  exports.stfellasHandBlade2,
  exports.stfellasHandBlade4,
  exports.stfellasHandBlade5,
  exports.abyssobstacle,
  exports.Workbench,
  exports.sardonyxPower0,
  exports.sardonyxPower1,
  exports.sardonyxPower2,
  exports.sardonyxPower3,
  exports.sardonyxPower4,
  exports.cubedassetpage2,
];
exports.cubedassetpage2.UPGRADES_TIER_1 = [
  exports.constructionistTower,
  exports.magicmissiletest,
  exports.ring,
];
exports.cubedbosspage.UPGRADES_TIER_1 = [
  exports.legnestkeep,
  exports.splitsummoner,
  exports.abyssthrasher,
  exports.raresorcerer,
  exports.epilepticdefender,
  exports.elite_Shadowgunner,
  exports.Omega_skimmer,
  exports.shinydefender,
  exports.trapLordCenturion,
  exports.autoLordCenturion,
  exports.legionaryCrasher,
  exports.cubedbosspage2,
];
exports.cubedbosspage2.UPGRADES_TIER_1 = [
  exports.spawnerLordCenturion,
  exports.ShinyEliteCrashers,
  exports.ragnarok,
  exports.kronos,
  exports.rogueEternal,
  exports.ranarVoidForm,
  exports.Vbaltyla,
  exports.zephilen,
  exports.sardonyxGrimForm,
  exports.lesserAetherAspect,
  exports.plpage11,
  exports.cubedbosspage3,
];
exports.cubedbosspage3.UPGRADES_TIER_1 = [
  exports.zephilenRevolutionaryForm,
  exports.teraRebel,
  exports.abysst2bossbelike,
  exports.fallenCX,
  exports.stfellas,
  exports.pendekot,
  exports.tryi,
  exports.cubed,
  exports.baltyla,
  exports.AutomatedAlphaPentagon,
  exports.AutomatedBetaPentagon,
  exports.cubedbosspage4,
];
exports.cubedbosspage4.UPGRADES_TIER_1 = [
  exports.TeraPentagonCloser,
  exports.GreaterPentagonCloser,
  exports.PentagonCloser,
  exports.LesserPentagonCloser,
  exports.lesserlightFinder,
  exports.lesserCaster,
  exports.lesserSterizer,
  exports.lesserCreed,
  exports.kristapsEggLegionCommander,
  exports.celestialSmasher,
  exports.voidslayer,
  exports.cubedbosspage5,
];
exports.cubedbosspage5.UPGRADES_TIER_1 = [
  exports.Doomwark,
  exports.JJ,
  exports.JJT1,
  exports.elite_skimmerbutL,
  exports.elite_slider,
  exports.nestcorrupter,
  exports.zomblordLayer,
  exports.nestOracle,
  exports.Legionsummoner,
  exports.cubedbosspage6,
];
exports.cubedbosspage6.UPGRADES_TIER_1 = [exports.cubedbosspage7];
exports.cubedbosspage7.UPGRADES_TIER_1 = [exports.cubedbosspage8];
exports.cubedbosspage8.UPGRADES_TIER_1 = [];
exports.ShinyEliteCrashers.UPGRADES_TIER_2 = [
  exports.Selite_destroyer,
  exports.Selite_gunner,
  exports.Selite_machine,
  exports.Selite_battleship,
  exports.Selite_spawner,
  exports.Selite_spinner,
  exports.Selite_fortress,
  exports.shinylegionarysprayer,
  exports.Selite_sprayer,
  exports.Selite_swarmer,
  exports.LegendaryEliteCrashers,
];
exports.LegendaryEliteCrashers.UPGRADES_TIER_2 = [
  exports.Lelite_destroyer,
  exports.Lelite_gunner,
  exports.Lelite_machine,
  exports.Lelite_battleship,
  exports.Lelite_spawner,
  exports.Lelite_spinner,
  exports.Lelite_fortress,
  exports.Lelite_sprayer,
  exports.Lelite_swarmer,
];
exports.cubedtankpage.UPGRADES_TIER_1 = [
  exports.swarmegg,
  exports.swarmProtector,
  exports.swarmKeeper,
  exports.swarmSentinel,
  exports.trinet,
  exports.autoaetherMGun,
  exports.starcrush,
  exports.Fleet,
  exports.chaperzone,
  exports.tripwire,
  exports.mechanicalMortar,
  exports.cubedtankpage2,
];
exports.cubedtankpage2.UPGRADES_TIER_1 = [
  exports.ultimas,
  exports.teramas,
  exports.IDAT,
  exports.beeLord,
  exports.Shard,
  exports.Crystal,
  exports.Gemstone,
  exports.omegaReaper,
  exports.grimReaper,
  exports.mechanist,
  exports.armorPiercer,
  exports.cubedtankpage3,
];
exports.cubedtankpage3.UPGRADES_TIER_1 = [
  exports.swarmProtector2,
  exports.swarmKeeper2,
  exports.swarmSentinel2,
  exports.smasherv2,
  exports.colortest,
  exports.arenaguardpl,
  exports.nuhuh,
  exports.yes,
  exports.mortarRebel,
  exports.swarmRebel,
  exports.annihilatorRebel,
  exports.cubedtankpage4,
];
exports.cubedtankpage4.UPGRADES_TIER_1 = [
  exports.racer,
  exports.swarmhexa,
  exports.syphon,
  exports.dualshotgun,
  exports.blunder,
  exports.repsanct_trap,
  exports.magicminigun,
  exports.flesh,
  exports.hardshellspawner,
  exports.hexaSeer,
  exports.auto3body1,
  exports.cubedtankpage5,
];
exports.cubedtankpage5.UPGRADES_TIER_1 = [
  exports.nuclearReactor,
  exports.parade,
  exports.worker,
  exports.weed,
  exports.chosen,
  exports.damagedArenaCloserpl,
  exports.anti_tankdestroy,
  exports.hiveminder,
  exports.sheller,
  exports.whirlwind,
  exports.trailtest,
  exports.cubedtankpage6,
];
exports.cubedtankpage6.UPGRADES_TIER_1 = [
  exports.bombarder,
  exports.TOT,
  exports.autoArchitect,
  exports.constructionist,
  exports.Originator,
  exports.warzone,
  exports.Castle,
  exports.Mastertect,
  exports.Fragmentor,
  exports.rebounder,
  exports.EOA,
  exports.cubedtankpage7,
];
exports.cubedtankpage7.UPGRADES_TIER_1 = [
  exports.MassProducer,
  exports.betaeggavenge,
  exports.betasquarespawner,
  exports.betapentagonspawner,
  exports.betahexaSpawner,
  exports.betahexaSeer,
  exports.real,
  exports.reassembler,
  exports.pyritenought,
  exports.barrier,
  exports.cubeddompage1,
  exports.cubedtankpage8,
];
exports.cubeddompage1.UPGRADES_TIER_1 = [
  exports.dominator_penta,
  exports.dominator_flesh,
  exports.dominator_barrac,
  exports.dominator_animator,
  //4
];
exports.cubedtankpage8.UPGRADES_TIER_1 = [
  exports.Stationaryexperimenter,
  exports.fearTheHive,
  exports.Mechwark,
  exports.Mechwark2,
  exports.Mechwark3,
  exports.basicT1,
  exports.twinT1,
  exports.FlankT1,
  exports.Onset,
  exports.heli,
  //10
]

exports.Stationaryexperimenter.UPGRADES_TIER_1 = [
  exports.Stronghold,
];
exports.racer.UPGRADES_TIER_4 = [
  exports.bolter,
  // exports.zipper,
];
exports.zipper.UPGRADES_TIER_3 = [exports.Accelerator];
exports.bolter.UPGRADES_TIER_5 = [exports.speedDemon];
exports.speedDemon.UPGRADES_TIER_6 = [exports.speedGod];
exports.damagedArenaCloserpl.UPGRADES_TIER_6 = [
  exports.flankdamagedArenaCloser,
  exports.duodamagedArenaCloser,
  exports.trapdamagedArenaCloser,
  exports.dronedamagedArenaCloserpl,
  exports.smashdamagedArenaCloser,
];
exports.trapdamagedArenaCloser.UPGRADES_TIER_6 = [
  exports.builddamagedArenaCloser,
];
exports.damagedArenaCloserpl.UPGRADES_TIER_8 = [exports.arenaslayerpl];
exports.arenaslayerpl.UPGRADES_TIER_9 = [
  exports.sniperarenaslayer,
  exports.twinarenaslayer,
  exports.flankarenaslayer,
  exports.macharenaslayer,
];
exports.duodamagedArenaCloser.UPGRADES_TIER_6 = [
  exports.triodamagedArenaCloser,
];
exports.flankdamagedArenaCloser.UPGRADES_TIER_7 = [
  exports.triangledamagedArenaCloser,
  exports.autodamagedarena,
];
exports.dronedamagedArenaCloserpl.UPGRADES_TIER_7 = [
  exports.OverseerdamagedArenaCloser,
  exports.FactorydamagedArenaCloser,
];
exports.arenaguardpl.UPGRADES_TIER_6 = [exports.damagedArenaCloserpl];
exports.arenaguardpl.UPGRADES_TIER_1 = [
  exports.flandaguard,
  exports.twinguard,
  exports.directorguard,
  exports.trapperguard,
];
exports.directorguard.UPGRADES_TIER_5 = [
  exports.overguard,
  exports.spawnerguard,
];
exports.spawnerguard.UPGRADES_TIER_6 = [exports.duospawnerguard];
exports.overguard.UPGRADES_TIER_6 = [
  exports.duospawnerguard,
  exports.lordguard,
];
exports.trapperguard.UPGRADES_TIER_5 = [
  exports.blockadeguard,
  exports.builderguard,
];
exports.builderguard.UPGRADES_TIER_6 = [exports.engiguard];
exports.flandaguard.UPGRADES_TIER_5 = [
  exports.autoguard,
  exports.twinflankguard,
  exports.hexaguard,
];
exports.autoguard.UPGRADES_TIER_5 = [exports.auto6guard];
exports.twinguard.UPGRADES_TIER_5 = [
  exports.twinflankguard,
  exports.triguard,
  exports.hexaguard,
];
exports.triguard.UPGRADES_TIER_6 = [exports.pentashotguard, exports.tripguard];
exports.hexaguard.UPGRADES_TIER_6 = [exports.octoguard];
exports.Gemstone.UPGRADES_TIER_6 = [exports.geode];
exports.Crystal.UPGRADES_TIER_6 = [exports.CrystalFormation];
exports.CrystalFormation.UPGRADES_TIER_9 = [exports.CrystalHarvester];
exports.Shard.UPGRADES_TIER_6 = [exports.crystalline];
exports.crystalline.UPGRADES_TIER_9 = [exports.omnigem];
exports.geode.UPGRADES_TIER_9 = [exports.geodecluster];
exports.cubedpolypage.UPGRADES_TIER_1 = [];
exports.page2.UPGRADES_TIER_2 = [
  exports.basic,
  exports.page5,
  exports.legendaryClassList,
  exports.updatedLegendaryClasses,
  exports.TeraClassas,
  exports.minibois,
  exports.pageJunk1,
  exports.playenemies,
];
const guardianLegendaryClasses = [
exports.rebel,
exports.destructionist,
],
  fallenLegendaryClasses = [
    exports.necrotyrant,
    exports.flesh,
    exports.MechanicalPentagonSpawner,
  ],
  highlordLegendaryClasses = [
    exports.operator,
    exports.mechanist,
    exports.technologist,
    exports.conductor,
    exports.MassProducer,
  ],
  voidlordLegendaryClasses = [exports.reaper, exports.soulSnatcher],
  neutralLegendaryClasses = [exports.arenaguardpl],
  gen1LegendaryClasses = [
    exports.rebel,
    exports.necrotyrant,
    exports.operator,
    exports.reaper,
    exports.arenaguardpl,
  ],
  gen2LegendaryClasses = [exports.flesh, exports.MassProducer];
exports.updatedLegendaryClasses.UPGRADES_TIER_2 = [
  ...guardianLegendaryClasses,
  ...fallenLegendaryClasses,
  ...highlordLegendaryClasses,
  ...voidlordLegendaryClasses,
  ...neutralLegendaryClasses,
  exports.basic,
];
exports.currentLegendaryClasses.UPGRADES_TIER_2 = [
  ...gen1LegendaryClasses,
  ...gen2LegendaryClasses,
  exports.basic,
];
exports.guardianLegendaryClasses.UPGRADES_TIER_2 = [
  ...guardianLegendaryClasses,
  exports.basic,
];
exports.fallenLegendaryClasses.UPGRADES_TIER_2 = [
  ...fallenLegendaryClasses,
  exports.basic,
];
exports.highlordLegendaryClasses.UPGRADES_TIER_2 = [
  ...highlordLegendaryClasses,
  exports.basic,
];
exports.voidlordLegendaryClasses.UPGRADES_TIER_2 = [
  ...voidlordLegendaryClasses,
  exports.basic,
];
exports.neutralLegendaryClasses.UPGRADES_TIER_2 = [
  ...neutralLegendaryClasses,
  exports.basic,
];
exports.deniedLegendaryClasses.UPGRADES_TIER_2 = [
  exports.rebel,
  exports.necrotyrant,
  exports.operator,
  exports.reaper,
  exports.basic,
];
exports.infestationLegendaryClasses.UPGRADES_TIER_2 = [
  exports.necrotyrant,
  exports.flesh,
  exports.basic,
];
exports.legendaryClassList.UPGRADES_TIER_2 = [];
exports.legendaryClassList.UPGRADES_TIER_2.push(
  exports.currentLegendaryClasses,
  exports.updatedLegendaryClasses,
  exports.guardianLegendaryClasses,
  exports.fallenLegendaryClasses,
  exports.highlordLegendaryClasses,
  exports.voidlordLegendaryClasses,
  exports.neutralLegendaryClasses
);
exports.TeraClassas.UPGRADES_TIER_2 = [
  exports.teraReaper,
  exports.teranecrotyrant,
  exports.teraOperator,
];
exports.minibois.UPGRADES_TIER_2 = [
  exports.miniguardian,
  exports.minidefender,
  exports.minielite_destroyer,
  exports.mininestward,
  exports.minielite_skimmer,
  exports.minielite_gunner,
  exports.minidamagedArenaCloser,
  exports.basic,
];
exports.page5.UPGRADES_TIER_2 = [
  exports.page5_1,
  exports.danger,
  exports.page4,
  exports.dronetest,
];
exports.danger.UPGRADES_TIER_2 = [
  exports.instakill,
  exports.anniop,
  exports.gunnerop,
  exports.opultratrap,
  exports.supernova,
  exports.inffactory,
  exports.wtf,
  exports.killIssue,
];
exports.pageJunk1.UPGRADES_TIER_2 = [
  exports.switch1,
  exports.switch2,
  exports.switch3,
  exports.switch4,
  exports.switch5,
  exports.switch6,
  exports.switch7,
  exports.switch8,
  exports.pageJunk2,
];
exports.pageJunk2.UPGRADES_TIER_2 = [
  exports.boosttrap,
  exports.wilder,
  exports.popsquare,
  exports.poptri,
  exports.stab,
  exports.pageJunk3,
];
exports.pageJunk3.UPGRADES_TIER_2 = [
  exports.drive,
  exports.baddreadnought,
  exports.roadblock,
  exports.shotguh,
  exports.assort,
  exports.megafling,
  exports.pageJunk4,
];
exports.pageJunk4.UPGRADES_TIER_2 = [
  exports.ball,
  exports.shrapshot,
  exports.spitter,
  exports.swarmshot,
  exports.assembler,
  exports.ranarPower4,
];
exports.page4.UPGRADES_TIER_2 = [
  exports.arenaCloser,
  exports.mechagod,
  exports.mechagodOld,
  exports.anti_tank,
  exports.baseProtector,
  exports.basedroneSpawn,
  exports.repairMan,
  exports.livingApocalypse,
  exports.dominators,
];
exports.dominators.UPGRADES_TIER_2 = [
  exports.dominator,
  exports.sanct,
  exports.dominator_single,
  exports.sanct_single,
  exports.dominator_nail,
  exports.sanct_nail,
  exports.dominator_trap,
  exports.sanct_trap,
];

exports.page1.UPGRADES_TIER_2 = [
  exports.page7,
  exports.page8_1,
  exports.page8_2,
  exports.page8_3,
  exports.page8_4,
  exports.page8_5,
  exports.page8_6,
  exports.page8_7,
];
exports.page7.UPGRADES_TIER_2 = [
  exports.egg,
  exports.square,
  exports.triangle,
  exports.pentagon,
  exports.hexagon,
  exports.septagon,
  exports.octagon,
  exports.nonagon,
];
exports.page8_1.UPGRADES_TIER_2 = [
  exports.gem,
  exports.shinyEgg,
  exports.shinySquare,
  exports.shinyTriangle,
  exports.shinyPentagon,
  exports.shinyHexagon,
  exports.shinySeptagon,
  exports.shinyOctagon,
  exports.shinyNonagon,
];
exports.page8_2.UPGRADES_TIER_2 = [
  exports.albinoSquare,
  exports.albinoTriangle,
  exports.albinoPentagon,
  exports.albinoHexagon,
  exports.albinoSeptagon,
  exports.albinoOctagon,
  exports.albinoNonagon,
];
exports.page8_3.UPGRADES_TIER_2 = [
  exports.jewel,
  exports.legendaryEgg,
  exports.legendarySquare,
  exports.legendaryTriangle,
  exports.legendaryPentagon,
  exports.legendaryHexagon,
  exports.legendarySeptagon,
  exports.legendaryOctagon,
  exports.legendaryNonagon,
];
exports.page8_4.UPGRADES_TIER_2 = [
  exports.shadowEgg,
  exports.shadowSquare,
  exports.shadowTriangle,
  exports.shadowPentagon,
  exports.shadowHexagon,
  exports.shadowSeptagon,
  exports.shadowOctagon,
  exports.shadowNonagon,
];
exports.page8_5.UPGRADES_TIER_2 = [
  exports.epilepticEgg,
  exports.epilepticSquare,
  exports.epilepticTriangle,
  exports.epilepticPentagon,
  exports.epilepticHexagon,
  exports.epilepticSeptagon,
  exports.epilepticOctagon,
  exports.epilepticNonagon,
];
exports.page8_6.UPGRADES_TIER_2 = [
  exports.rainbowEgg,
  exports.rainbowSquare,
  exports.rainbowTriangle,
  exports.rainbowPentagon,
  exports.rainbowHexagon,
  exports.rainbowSeptagon,
  exports.rainbowOctagon,
  exports.rainbowNonagon,
];
exports.page8_7.UPGRADES_TIER_2 = [
  exports.abyssalEgg2,
  exports.abyssalSquare,
  exports.abyssalTriangle,
  exports.abyssalPentagon,
  exports.abyssalHexagon,
  exports.abyssalSeptagon,
  exports.abyssalOctagon,
  exports.abyssalNonagon,
];
exports.page9.UPGRADES_TIER_2 = [
  exports.page10,
  exports.page16,
  exports.page22,
  exports.page28,
  exports.page34,
];
exports.page10.UPGRADES_TIER_2 = [
  exports.page11,
  exports.page13,
  exports.page14,
  exports.page14_2,
  exports.page15,
];
exports.page11.UPGRADES_TIER_2 = [
  exports.sorcerer,
  exports.summoner,
  exports.enchantress,
  exports.elite_skimmer,
  exports.Pawn,
  exports.page12,
];
exports.page12.UPGRADES_TIER_2 = [
  exports.elite_destroyer,
  exports.elite_gunner,
  exports.elite_machine,
  exports.elite_battleship,
  exports.elite_spawner,
];
exports.plpage11.UPGRADES_TIER_2 = [
  exports.plsorcerer,
  exports.plsummoner,
  exports.plenchantress,
  exports.plelite_skimmer,
  exports.plPawn,
  exports.plpage12,
];
exports.plpage12.UPGRADES_TIER_2 = [
  exports.plelite_destroyer,
  exports.plelite_gunner,
  exports.plelite_machine,
  exports.plelite_battleship,
  exports.plelite_spawner,
];
exports.page13.UPGRADES_TIER_2 = [
  exports.defender,
  exports.elite_swarmer,
  exports.elite_fortress,
  exports.elite_spinner,
  exports.elite_sprayer,
  exports.nestkeep,
  exports.nestward,
  exports.page13_2,
  exports.page13_3,
];
exports.page13_3.UPGRADES_TIER_2 = [
  exports.exorcistor,
  exports.arenaguard,
  exports.Delta_skimmer,
  exports.defector,
  exports.mortarLordCenturion,
  exports.hiveLordCenturion,
  exports.splitsummoner,
  exports.raresorcerer,
  exports.witch,
];
exports.page13_2.UPGRADES_TIER_2 = [
  exports.annoyingDog,
  exports.kristaps,
  exports.duodeci,
  exports.alexTheDemonical,
  exports.pop64,
  exports.johnathon,
  exports.powernoob,
  exports.xxtrianguli,
  exports.chaser,
  exports.excaliber,
  exports.possessor,
  exports.icecream,
  exports.rainOfAcid,
];
exports.page14.UPGRADES_TIER_2 = [
  exports.damagedArenaCloser,
  exports.nestguard,
  exports.raresorcerer,
  exports.Rook,
  exports.splitsummoner,
  exports.page12_2,
];
exports.page12_2.UPGRADES_TIER_2 = [
  exports.ares,
  exports.ezekiel,
  exports.selene,
  exports.eris,
  exports.gersemi,
];
exports.page14_2.UPGRADES_TIER_2 = [
  exports.bishop,
  exports.arenaslayer,
  exports.ranarDiscipleForm,
  exports.paladin,
  exports.freyja,
  exports.nyx,
  exports.zaphkiel,
  exports.theia,
  exports.legnestkeep,
  exports.page14_3,
];
exports.page15.UPGRADES_TIER_2 = [
  exports.CX,
  exports.valrayvn,
  exports.ranarAscendantForm,
  exports.kristapsAscendant,
  exports.annoyingDogAscendant,
];
exports.page14_3.UPGRADES_TIER_2 = [
  exports.powernoobAscendant,
  exports.johnathonAscendant,
  exports.duodeciAscendant,
  exports.possessorAscendant,
  exports.icecreamAscendant,
];
exports.page16.UPGRADES_TIER_2 = [
  exports.page17,
  exports.page17_2,
  exports.page19,
  exports.page21,
];
exports.page19.UPGRADES_TIER_2 = [
  exports.fallentyrant,
];
exports.page17.UPGRADES_TIER_2 = [
  exports.fallenhybrid,
  exports.fallenanni,
  exports.fallenflankguard,
  exports.fallenfalcon,
];

exports.page17_2.UPGRADES_TIER_2 = [
  exports.fallenoverlord,
  exports.fallenbooster,
  exports.enslaver,
  exports.plaguedoc,
  exports.fallenautodouble,
];
exports.page21.UPGRADES_TIER_2 = [exports.zomblord2];
exports.page22.UPGRADES_TIER_2 = [
  exports.page25,
  exports.page26,
  exports.page27,
];

exports.page25.UPGRADES_TIER_2 = [exports.roguepalisade, exports.roguarmada];
exports.page26.UPGRADES_TIER_2 = [
  exports.castaway,
  exports.twilight,
  exports.roguecitadel,
  exports.rogueflagship,
];
exports.page27.UPGRADES_TIER_2 = [
  exports.guardian_Prometheus,
  exports.RogueLibor,
  exports.roguemothership,
];
exports.page28.UPGRADES_TIER_2 = [
  exports.page30,
  exports.page31,
  exports.page32,
];
exports.page30.UPGRADES_TIER_2 = [
  exports.elite_warkspawner,
  exports.contraption,
];
exports.page31.UPGRADES_TIER_2 = [
  exports.exterminator,
  exports.enabler,
  exports.megaengineerprototype,
];
exports.page32.UPGRADES_TIER_2 = [
  exports.highlordAidra,
  exports.highlordKairo,
  exports.highlordAkavir,
  exports.weakHighlordAlbatar,
  exports.Protalist,
];
exports.page34.UPGRADES_TIER_2 = [
  exports.page35,
  exports.page36,
  exports.page37,
  exports.page38,
  exports.page39,
 // exports.voidt6trol,
];
exports.page35.UPGRADES_TIER_2 = [
  exports.elder,
  exports.lessereldurk,
  exports.abundul,
  exports.abudun,
  exports.eldun,
];
exports.page36.UPGRADES_TIER_2 = [
  exports.nulltype,
  exports.eldurk,
  exports.alphaRifleAnomaly,
  exports.alphaBoosterAnomaly,
  exports.hiveMind,
];
exports.page37.UPGRADES_TIER_2 = [
  exports.amalgam,
  exports.elderHiveMind,
  exports.elite_Shadowgunner,
  exports.abyssthrasher,
  exports.bossnulltype,
 exports.lurkerBelow,
  exports.voidCaller,
];
exports.page38.UPGRADES_TIER_2 = [
  exports.sardonyx,
  exports.trimalgam,
  exports.pop64VoidHarvester,
  exports.rainOfVoid,
  exports.xxtrianguliVAspect,
];
exports.page39.UPGRADES_TIER_2 = [
  exports.Seraphim
]
exports.voidt6trol.UPGRADES_TIER_2 = [exports.celestialSmasher];
exports.page40.UPGRADES_TIER_2 = [
  exports.page41,
  exports.highlordenemies,
  exports.page44,
  exports.guardianenemies,
];
exports.guardianenemies.UPGRADES_TIER_2 = [
  exports.revolutionist,
  exports.demonstrator,
];
exports.page41.UPGRADES_TIER_2 = [
  exports.page41_1,
  exports.page41_2,
  exports.page41_3,
];
exports.highlordenemies.UPGRADES_TIER_2 = [
  exports.construct,
  exports.constructon,
  exports.spawn,
];
exports.page41_1.UPGRADES_TIER_2 = [
  exports.eggCrasher,
  exports.squareCrasher,
  exports.triangleCrasher,
  exports.pentagonCrasher,
  exports.hexagonCrasher,
  exports.scrashers,
];
exports.scrashers.UPGRADES_TIER_2 = [
  exports.shinyEggCrasher,
  exports.shinySquareCrasher,
  exports.shinyTriangleCrasher,
  exports.shinyPentagonCrasher,
  exports.shinyHexagonCrasher,
  exports.lcrashers,
];
exports.lcrashers.UPGRADES_TIER_2 = [
  exports.legendaryEggCrasher,
  exports.legendarySquareCrasher,
  exports.legendaryTriangleCrasher,
  exports.legendaryPentagonCrasher,
  exports.legendaryHexagonCrasher,
  exports.shadcrashers,
];
exports.shadcrashers.UPGRADES_TIER_2 = [
  exports.shadowEggCrasher,
  exports.shadowSquareCrasher,
  exports.shadowTriangleCrasher,
  exports.shadowPentagonCrasher,
  exports.shadowHexagonCrasher,
  exports.raincrashers,
];
exports.raincrashers.UPGRADES_TIER_2 = [
  exports.rainbowEggCrasher,
  exports.rainbowSquareCrasher,
  exports.rainbowTriangleCrasher,
  exports.rainbowPentagonCrasher,
  exports.rainbowHexagonCrasher,
  exports.abyssalcrashers,
];
exports.abyssalcrashers.UPGRADES_TIER_2 = [
  exports.abyssalSphereCrasher,
  exports.abyssalCubeCrasher,
  exports.abyssalTetraCrasher,
  exports.abyssalDodecaCrasher,
  exports.abyssalHexaCrasher,
];
exports.page41_2.UPGRADES_TIER_2 = [
  exports.triangleSentry,
  exports.triangleSwarmSentry,
  exports.trianglePounderSentry,
  exports.triangleTrapperSentry,
  exports.shinyTriangleSentry,
  exports.shinyTriangleSwarmSentry,
  exports.shinyTriangleArtillerySentry,
  exports.shinyTriangleBarricadeSentry,
];
exports.page41_3.UPGRADES_TIER_2 = [
  exports.guard,
  exports.protector,
  exports.keeper,
  exports.sentinel,
];
exports.guard.UPGRADES_TIER_2 = [
  exports.auto3Guard,
  exports.bansheeGuard,
  exports.spawnerGuard,
];
exports.protector.UPGRADES_TIER_2 = [
  exports.swarmerProtector,
  exports.cruiserProtector,
  exports.beekeeperProtector,
  exports.betaProtectorMinion,
];
exports.keeper.UPGRADES_TIER_2 = [
  exports.commanderKeeper,
  exports.overKeeper,
  exports.directorKeeper,
];
exports.shinyTriangleSentry.UPGRADES_TIER_2 = [
  exports.shinyTriangleSwarmSentry,
  exports.shinyTriangleArtillerySentry,
  exports.shinyTriangleBarricadeSentry,
];
exports.sentinel.UPGRADES_TIER_2 = [
  exports.crossbowSentinel,
  exports.skimmerSentinel,
  exports.minigunSentinel,
  exports.pentagonsenti4,
];

exports.page44.UPGRADES_TIER_2 = [
  exports.thrasher,
  exports.aoc,
  exports.glitch,
  exports.anomaly,
  exports.aokaol,
  exports.gunnerMechab,
  exports.machinegunMechab,
  exports.buildMechab,
  exports.trapMechabarab,
  exports.trapMechab,
  exports.beeMechab,
  exports.swarmMechab,
  exports.hardshellanomaly,
];
exports.swarmKeeper2.UPGRADES_TIER_1 = [exports.triBeat, exports.helicopter];
exports.helicopter.UPGRADES_TIER_2 = [exports.airship, exports.lightShip];
exports.lightShip.UPGRADES_TIER_3 = [exports.Fleet, exports.heavyShip];
exports.triBeat.UPGRADES_TIER_2 = [exports.airship];
exports.airship.UPGRADES_TIER_3 = [
  exports.Fleet,
  exports.carriership,
  exports.swarmship,
];
exports.swarmSentinel2.UPGRADES_TIER_1 = [exports.machinery];
exports.machinery.UPGRADES_TIER_1 = [
  exports.heavyMachinery,
  exports.dualMachinery,
];
exports.dualMachinery.UPGRADES_TIER_2 = [exports.tripleMachinery];
exports.swarmProtector2.UPGRADES_TIER_1 = [
  exports.theif,
  exports.cruncher,
  exports.duoNode,
];
exports.duoNode.UPGRADES_TIER_2 = [exports.quadNode, exports.flankCruncher];
exports.quadNode.UPGRADES_TIER_3 = [
  exports.quadCruncher,
  exports.octoNode,
  exports.quadAutoNode,
];
exports.cruncher.UPGRADES_TIER_2 = [
  exports.destructor,
  exports.doomCruncher,
  exports.flankCruncher,
];
exports.flankCruncher.UPGRADES_TIER_3 = [
  exports.quadCruncher,
  exports.flankDoomCruncher,
];
exports.doomCruncher.UPGRADES_TIER_2 = [
  exports.doomDestructor,
  exports.cruncher5000,
  exports.flankDoomCruncher,
];
exports.destructor.UPGRADES_TIER_2 = [
  exports.deconstructor,
  exports.dualDestructor,
  exports.doomDestructor,
];
exports.theif.UPGRADES_TIER_2 = [
  exports.outlaw,
  exports.fugitive,
  exports.runaway,
];
exports.outlaw.UPGRADES_TIER_3 = [
  exports.scavenger,
  exports.bandit,
  exports.desperado,
  exports.blackhat,
];
exports.runaway.UPGRADES_TIER_3 = [exports.exiled, exports.villain];
exports.fugitive.UPGRADES_TIER_3 = [exports.villain, exports.blackhat];
exports.smasherv2.UPGRADES_TIER_1 = [
  exports.battery,
  exports.blockade,
  exports.saver,
  exports.defend,
];
exports.blockade.UPGRADES_TIER_2 = [exports.knight];
exports.defend.UPGRADES_TIER_2 = [exports.squire];
exports.squire.UPGRADES_TIER_3 = [exports.gateGuardian, exports.noble];
exports.saver.UPGRADES_TIER_2 = [exports.preserver];
exports.preserver.UPGRADES_TIER_3 = [exports.Savior];
exports.knight.UPGRADES_TIER_3 = [exports.warrior];
exports.battery.UPGRADES_TIER_2 = [exports.generator];
exports.generator.UPGRADES_TIER_3 = [exports.reactor];
exports.overtrap.UPGRADES_TIER_5 = [exports.lordtrap];
exports.quadbuilder.UPGRADES_TIER_5 = [exports.hexabuilder];
exports.hexabuilder.UPGRADES_TIER_7 = [exports.octobuilder];
exports.basic.UPGRADES_TIER_1 = [
  exports.twin,
  exports.sniper,
  exports.machine,
  exports.flank,
  exports.director,
  exports.pound,
  exports.trapper,
  exports.novice,
];
exports.basic.UPGRADES_TIER_0 = [exports.spectator];
exports.novice.UPGRADES_TIER_2 = [
  exports.adept,
  exports.buzzer,
  exports.healer,
  exports.smash,
  exports.noviceDominationTurret,
];
exports.adept.UPGRADES_TIER_3 = [
exports.advanced, 
exports.racer,
exports.adeptDominationTurret,
];
exports.noviceDominationTurret.UPGRADES_TIER_3 = [
exports.nailerDominationTurret,
exports.destroyerDominationTurret,
exports.trapperDominationDefense,
exports.triNoviceDominationTurret,
exports.droneDominationTurret,
exports.adeptDominationTurret,

];
exports.adeptDominationTurret.UPGRADES_TIER_4 = [
exports.nailerSanctuaryTurret,
exports.destroyerSanctuaryTurret,
exports.trapperSanctuaryDefense,
];
exports.destroyerDominationTurret.UPGRADES_TIER_4 = [exports.destroyerSanctuaryTurret,];
exports.nailerDominationTurret.UPGRADES_TIER_4 = [exports.nailerSanctuaryTurret,];
exports.trapperDominationDefense.UPGRADES_TIER_4 = [exports.trapperSanctuaryDefense,];
exports.destroyerSanctuaryTurret.UPGRADES_TIER_5 = [exports.destroyerAntiBossTurret,];
exports.nailerSanctuaryTurret.UPGRADES_TIER_5 = [exports.nailerAntiBossTurret,];
exports.trapperSanctuaryDefense.UPGRADES_TIER_5 = [exports.trapperAntiBossDefense,];
exports.droneDominationTurret.UPGRADES_TIER_5 = [exports.droneCommanderTurret,];
exports.droneCommanderTurret.UPGRADES_TIER_7 = [exports.droneBossCrusherTurret,];
exports.advanced.UPGRADES_TIER_4 = [
  exports.expert,
  exports.skimmerMech,
  exports.armata,
  exports.dualdestroy,
];
exports.expert.UPGRADES_TIER_5 = [
  exports.eliteTank,
  exports.stackedMegaTrapper,
  exports.lordtrap,
  exports.octobuilder,
];
exports.eliteTank.UPGRADES_TIER_6 = [
  exports.master,
  exports.armoredauto3,
  exports.enhanced,
  exports.blunder,
];
//exports.master.UPGRADES_TIER_7 = [exports.mechanicalMortar, exports.chosen];
exports.chosen.UPGRADES_TIER_9 = [
  exports.MechaNailgun,
  exports.fulgareon,
  exports.worthyOfTheGods,
];
exports.worthyOfTheGods.UPGRADES_TIER_11 = [exports.turretParagon, exports.basic];

exports.smash.UPGRADES_TIER_3 = [
  exports.megaSmasher,
  exports.spike,
  exports.autosmash,
  exports.landmine,
  exports.bouncer,
  exports.protect,
  exports.banger,
  exports.polter,
  exports.smashdupe,
  exports.smashatmo,
];
exports.spike.UPGRADES_TIER_4 = [exports.weirdspike];
exports.anni.UPGRADES_TIER_4 = [exports.dualdestroy];
/*/
exports.carrier.UPGRADES_TIER_7 = [exports.miniguardian];
exports.skimmer.UPGRADES_TIER_7 = [exports.minielite_skimmer];
exports.heavy3.UPGRADES_TIER_7 = [exports.minielite_skimmer];
exports.guntrap.UPGRADES_TIER_7 = [exports.minielite_gunner];
exports.engineer.UPGRADES_TIER_7 = [exports.minielite_gunner];
exports.deflect.UPGRADES_TIER_7 = [exports.minidefender];
exports.engineer.UPGRADES_TIER_7 = [exports.minielite_gunner];
exports.neutronStar.UPGRADES_TIER_7 = [exports.minielite_destroyer];
exports.autodestroy.UPGRADES_TIER_7 = [exports.minielite_destroyer];
exports.anni.UPGRADES_TIER_7 = [exports.minielite_destroyer];
exports.septatrap.UPGRADES_TIER_7 = [exports.mininestward];
exports.fortress.UPGRADES_TIER_7 = [exports.mininestward];
exports.intercepter.UPGRADES_TIER_7 = [exports.mininestward];
/*/
exports.buzzer.UPGRADES_TIER_3 = [
  exports.beekeeper,
  exports.swarmer,
  exports.guncruiser,
  exports.overaccel,
  exports.beeNest,
];
exports.beeNest.UPGRADES_TIER_4 = [exports.beeTyrant, exports.beehive];
exports.beeTyrant.UPGRADES_TIER_5 = [exports.beeLord];
exports.mortar.UPGRADES_TIER_5 = [exports.armorPiercer];
exports.beehive.UPGRADES_TIER_5 = [exports.beequeen];
exports.battleship.UPGRADES_TIER_5 = [exports.beequeen];
exports.auto4.UPGRADES_TIER_5 = [exports.armoredauto3, exports.enhanced];
exports.protect.UPGRADES_TIER_5 = [exports.armoredauto3];
exports.hybrid.UPGRADES_TIER_4 = [exports.syphon, exports.mutant];
exports.overlord.UPGRADES_TIER_5 = [exports.corrupter, exports.lordtrap];
exports.barricade.UPGRADES_TIER_4 = [exports.stackedMegaTrapper];
exports.megatrap.UPGRADES_TIER_4 = [exports.stackedMegaTrapper];
exports.twister.UPGRADES_TIER_4 = [exports.armata];
exports.skimmer.UPGRADES_TIER_4 = [exports.hyperSkimmer, exports.skimmerMech];
exports.launcherMech.UPGRADES_TIER_4 = [exports.skimmerMech];
exports.twin.UPGRADES_TIER_2 = [
  exports.double,
  exports.bent,
  exports.gunner,
  exports.hexa,
];
exports.twin.UPGRADES_TIER_3 = [
  exports.dual,
  exports.bulwark,
  exports.musket,
  exports.gunrshot,
];
exports.double.UPGRADES_TIER_3 = [
  exports.tripletwin,
  exports.hewn,
  exports.autodouble,
  exports.bentdouble,
];
exports.bulwark.UPGRADES_TIER_4 = [
  exports.triwark,
  exports.hewnwark,
  exports.autoBulwark,
  exports.bentBulwark,
  exports.hewnBulwark,
  exports.frontier,
];
exports.bent.UPGRADES_TIER_3 = [
  exports.penta,
  exports.spread,
  exports.crackShot,
  exports.benthybrid,
  exports.bentdouble,
  exports.bentBulwark,
  exports.triple,
];
exports.gunner.UPGRADES_TIER_3 = [
  exports.autogunner,
  exports.nailgun,
  exports.auto4,
  exports.machinegunner,
  exports.guntrap,
  exports.cyclone,
  exports.overgunner,
  exports.assaulter,
];
exports.sniper.UPGRADES_TIER_2 = [
  exports.assassin,
  exports.hunter,
  exports.mini,
  exports.rifle,
  exports.creeper,
  exports.shooter,
  exports.gatling,
];
exports.sniper.UPGRADES_TIER_3 = [exports.bushwhack];
exports.assassin.UPGRADES_TIER_3 = [
  exports.ranger,
  exports.falcon,
  exports.stalker,
  exports.autoass,
  exports.single,
  exports.slayer,
  exports.sniper3,
];
exports.hunter.UPGRADES_TIER_3 = [
  exports.preda,
  exports.xhunter,
  exports.poach,
  exports.ordnance,
  exports.dual,
  exports.decimate,
  exports.skulker,
];
exports.rifle.UPGRADES_TIER_3 = [
  exports.musket,
  exports.crossbow,
  exports.armsman,
  exports.attack,
];
exports.musket.UPGRADES_TIER_5 = [
exports.woodpecker,
  ];
exports.creeper.UPGRADES_TIER_3 = [
  exports.stalker,
  exports.cloaker,
  exports.infiltrate,
  exports.shade,
  exports.skulker,
];
exports.shooter.UPGRADES_TIER_3 = [
  exports.attack,
  exports.megagun,
  exports.infiltrate,
  exports.decimate,
];
exports.machine.UPGRADES_TIER_2 = [
  exports.artillery,
  exports.mini,
  exports.gunner,
  exports.spray,
  exports.blaster,
  exports.gatling,
];
exports.spray.UPGRADES_TIER_3 = [
  exports.redistributor,
  exports.phoenix,
  exports.atomizer,
  exports.focal,
  exports.blazer,
];
exports.phoenix.UPGRADES_TIER_4 = [
exports.spitter,
  ];
exports.machine.UPGRADES_TIER_3 = [exports.blizzard, exports.gunrshot];
exports.blaster.UPGRADES_TIER_3 = [exports.megagun, exports.blazer];
exports.gatling.UPGRADES_TIER_3 = [
  exports.focal,
  exports.autogatling,
  exports.megagun,
];
exports.artillery.UPGRADES_TIER_3 = [
  exports.mortar,
  exports.ordnance,
  exports.beekeeper,
  exports.fieldgun,
  exports.eviscerate,
];
exports.mini.UPGRADES_TIER_3 = [
  exports.stream,
  exports.nailgun,
  exports.cropduster,
  exports.barricade,
  exports.vulture,
  exports.gust,
  exports.megagun,
  exports.automini,
];
exports.flank.UPGRADES_TIER_2 = [
  exports.hexa,
  exports.tri,
  exports.auto3,
  exports.flanktrap,
  exports.tritrapper,
  exports.autoflank,
  exports.star,
];
exports.autoflank.UPGRADES_TIER_2 = [
  exports.hexanomaly,
  exports.hexatrap,
  exports.autoauto3,
  exports.autoflanktrap,
  exports.autotri,
  exports.autohexa,
  exports.autoStar,
];
exports.flank.UPGRADES_TIER_3 = [exports.tripletwin];
exports.tri.UPGRADES_TIER_3 = [
  exports.fighter,
  exports.booster,
  exports.falcon,
  exports.bomber,
  exports.autotri,
  exports.surfer,
  exports.eagle,
  exports.phoenix,
  exports.vulture,
  exports.spectre,
];
exports.bomber.UPGRADES_TIER_4 = [
  exports.breeze
];
exports.automini.UPGRADES_TIER_4 = [
  exports.autovulture,
];
exports.vulture.UPGRADES_TIER_4 = [
  exports.autovulture,
];
exports.vulture.UPGRADES_TIER_5 = [
exports.condor,
];
exports.fighter.UPGRADES_TIER_4 = [
exports.cloner,
exports.lobber,
exports.splatterer,
];
exports.fighter.UPGRADES_TIER_5 = [
exports.woodpecker,
];
exports.booster.UPGRADES_TIER_4 = [
exports.replicator,
];
exports.falcon.UPGRADES_TIER_5 = [
exports.woodpecker,
];
exports.hexa.UPGRADES_TIER_3 = [
  exports.octo,
  exports.cyclone,
  exports.hexatrap,
  exports.deathstar,
  exports.autohexa,
  exports.hexanomaly,
  exports.blizzard,
  exports.combine,
  exports.randombullshit,
];
exports.octo.UPGRADES_TIER_4 = [exports.semiauto];
exports.auto3.UPGRADES_TIER_3 = [
  exports.auto5,
  exports.heavy3,
  exports.auto4,
  exports.banshee,
  exports.sniper3,
  exports.autoauto3,
];
exports.autoauto3.UPGRADES_TIER_4 = [exports.auto3body1];
exports.auto5.UPGRADES_TIER_4 = [exports.semiauto];
exports.flanktrap.UPGRADES_TIER_3 = [
  exports.bushwhack,
  exports.guntrap,
  exports.bomber,
  exports.conq,
  exports.bulwark,
  exports.autoflanktrap,
];
exports.tritrapper.UPGRADES_TIER_3 = [
  exports.fortress,
  exports.hexatrap,
  exports.septatrap,
  exports.architect,
  exports.barricade,
  exports.hexanomaly,
  exports.demolish,
  exports.deflect,
  exports.combine,
  exports.SteamPunk,
];

exports.pound.UPGRADES_TIER_2 = [
  exports.destroy,
  exports.builder,
  exports.artillery,
  exports.launcher,
  exports.shooter,
  exports.blaster,
  exports.star,
];
exports.pound.UPGRADES_TIER_3 = [exports.shotgun, exports.eagle];
exports.shotgun.UPGRADES_TIER_4 = [
exports.splatterer,
  ];
exports.star.UPGRADES_TIER_3 = [
  exports.heavy3,
  exports.autoStar,
  exports.neutronStar,
  exports.pulsar,
  exports.deathstar,
];
exports.destroy.UPGRADES_TIER_3 = [
  exports.conq,
  exports.anni,
  exports.hybrid,
  exports.constructer,
  exports.ultratrap,
  exports.autodestroy,
  exports.terminate,
  exports.eviscerate,
  exports.decimate,
  exports.neutronStar,
];
exports.launcher.UPGRADES_TIER_3 = [
  exports.launcherMech,
  exports.skimmer,
  exports.twister,
  exports.swarmer,
  exports.sidewind,
  exports.rocketeer,
  exports.fieldgun,
  exports.grenadier,
];
exports.swarmer.UPGRADES_TIER_4 = [exports.hexaswarm]
exports.grenadier.UPGRADES_TIER_4 = [exports.beenader, exports.neutron];
exports.fieldgun.UPGRADES_TIER_4 = [
exports.lobber,
  ];
  
exports.director.UPGRADES_TIER_2 = [
  exports.overseer,
  exports.cruiser,
  exports.underseer,
  exports.spawner,
  exports.polyseer,
  exports.experimenter,
];
exports.experimenter.UPGRADES_TIER_3 = [
  exports.scientist,
  exports.researcher,
  exports.inventor,
  exports.physicist,
];
/*/exports.physicist.UPGRADES_TIER_5 = [
  exports.betaphysicist,
];
exports.inventor.UPGRADES_TIER_5 = [
  exports.betainventor,
];
exports.researcher.UPGRADES_TIER_5 = [
  exports.betaresearcher,
];
exports.scientist.UPGRADES_TIER_5 = [
  exports.betascientist,
];/*/
exports.director.UPGRADES_TIER_3 = [
  exports.manager,
  exports.cheese,
  exports.revenant,
];
exports.cheese.UPGRADES_TIER_5 = [
exports.polyTyrant,
];
exports.overseer.UPGRADES_TIER_3 = [
  exports.overlord,
  exports.overtrap,
  exports.overgunner,
  exports.banshee,
  exports.autoover,
  exports.overdrive,
  exports.commander,
  exports.overaccel,
  exports.sentryseer,
];

exports.underseer.UPGRADES_TIER_3 = [
  exports.necromancer,
  exports.maleficitor,
  exports.infestor,
  exports.enchanter,
  exports.exorcist,
  exports.occultist,
  exports.underdrive,
  exports.undertrapper,
];
exports.occultist.UPGRADES_TIER_5 = [exports.hexaSeer];
(exports.polyseer.UPGRADES_TIER_3 = [
  exports.polymancer,
  exports.polyFear,
  exports.shadowShaper,
]),
exports.polyFear.UPGRADES_TIER_4 = [
  exports.mutant,
exports.autoPolyFear,
exports.polyTerror,
];
exports.polymancer.UPGRADES_TIER_5 = [
exports.polyTyrant,
exports.polyLord,
];
exports.polyFear.UPGRADES_TIER_5 = [
exports.polyLord,
];
  (exports.cruiser.UPGRADES_TIER_3 = [
    exports.carrier,
    exports.battleship,
    exports.fortress,
    exports.autocruiser,
    exports.commander,
    exports.lurker,
    exports.homer,
    exports.cruiserdrive,
    exports.guncruiser,
    exports.assaulter,
  ]);
exports.spawner.UPGRADES_TIER_3 = [
  exports.factory,
  exports.autospawner,
  exports.animator,
  exports.eggavenge,
  //exports.reanimator,//???
  exports.squarespawner,
  exports.trianglespawner,
  exports.pentagonspawner,
  exports.hexaSpawner,
  exports.hardshellspawner,
];
exports.spawner.UPGRADES_TIER_4 = [
exports.replicator,
exports.cloner,
];
exports.eggavenge.UPGRADES_TIER_4 = [
  exports.squarespawner,
  ];
exports.squarespawner.UPGRADES_TIER_5 = [
  exports.trianglespawner,
  ];
exports.trianglespawner.UPGRADES_TIER_6 = [
  exports.pentagonspawner,
  exports.hexaSpawner,
  ];
exports.trapper.UPGRADES_TIER_2 = [
  exports.builder,
  exports.tritrapper,
  exports.flanktrap,
  exports.autotrapper,
  exports.mech,
  exports.breaker,
  exports.flinger,
  exports.megatrap,
];
exports.flinger.UPGRADES_TIER_3 = [exports.stinger, exports.slinger];

exports.megatrap.UPGRADES_TIER_3 = [
  exports.deflect,
  exports.automegatrap,
  exports.Clockwork,
  exports.ultratrap,
];

exports.breaker.UPGRADES_TIER_3 = [
  exports.autobreaker,
  exports.shatterer,
  exports.wrecker,
  exports.demolish,
  exports.cracker,
  exports.burster,
];
exports.heli.UPGRADES_TIER_2 = [
  exports.autoheli,
];
exports.trapper.UPGRADES_TIER_3 = [
  exports.overtrap,
  exports.undertrapper,
];
exports.autotrapper.UPGRADES_TIER_3 = [
  exports.intercepter,
  exports.autobuilder,
  exports.autoMech,
  exports.hexanomaly,
  exports.hexatrap,
  exports.automegatrap,
  exports.autoflanktrap,
  exports.autobreaker,
];
exports.mech.UPGRADES_TIER_3 = [ 
  exports.engineer,
  exports.Clockwork,
  exports.mechanizer,
  exports.mechanism,
  exports.SteamPunk,
  exports.autoMech,
];
exports.builder.UPGRADES_TIER_3 = [
  exports.constructer,
  exports.autobuilder,
  exports.engineer,
  exports.boomer,
  exports.architect,
  exports.conq,
  exports.quadbuilder,
  exports.slinger,
];
exports.autobuilder.UPGRADES_TIER_4 = [exports.autoconstructer];
exports.constructer.UPGRADES_TIER_4 = [exports.autoconstructer];
exports.autoconstructer.UPGRADES_TIER_5 = [exports.roadblock];
exports.boomer.UPGRADES_TIER_5 = [exports.rebounder];
exports.engineer.UPGRADES_TIER_5 = [exports.Originator];
exports.constructer.UPGRADES_TIER_5 = [exports.constructionist];
exports.architect.UPGRADES_TIER_4 = [
  exports.autoArchitect,
  exports.constructionist,
  exports.Castle,
  exports.Mastertect,
  exports.sheller,
];
exports.architect.UPGRADES_TIER_5 = [exports.Originator, exports.rebounder];
exports.sheller.UPGRADES_TIER_5 = [
  exports.warzone,
  exports.Fragmentor,
  exports.bombarder,
];
exports.sheller.UPGRADES_TIER_6 = [exports.TOT];
exports.Castle.UPGRADES_TIER_5 = [exports.warzone];
exports.healer.UPGRADES_TIER_2 = [
  exports.medic,//sniper
  exports.restorer,//flank guard
  exports.mender,//sprayer
  exports.reviver,//pounder
  exports.curer,//twin
  exports.practitioner,//trapper
  exports.nurse,//director
  exports.mechanic,
  exports.repairer,
  exports.physician,
];
exports.mechanic.UPGRADES_TIER_3 = [
exports.repairManClass,
];
exports.repairer.UPGRADES_TIER_3 = [
exports.repairsphere,
exports.repairManClass,
];
exports.physician.UPGRADES_TIER_3 = [
exports.warHealer,
exports.healersphere,
];

exports.medic.UPGRADES_TIER_3 = [
  exports.surgeon,
  exports.vital,
  exports.medigun,
];
exports.restorer.UPGRADES_TIER_3 = [
  exports.ambulance,
  exports.heal3,
  exports.rejuvenator,
];
exports.mender.UPGRADES_TIER_3 = [
  exports.healomizer,
  exports.caretaker,
  exports.lifeshot,
];
exports.reviver.UPGRADES_TIER_3 = [
  exports.vanguard,
  exports.vitalis,
  exports.aderaline,
];
exports.curer.UPGRADES_TIER_3 = [
  exports.cleanser,
  exports.purifier,
  exports.doctor,
];
exports.practitioner.UPGRADES_TIER_3 = [
  exports.aegis,
  exports.pulsecaster,
  exports.needle,
];
exports.nurse.UPGRADES_TIER_3 = [
  exports.mediforge,
  exports.sustainer,
  exports.Parmesan,
];
exports.smashatmo.UPGRADES_TIER_4 = [exports.dualist, exports.irradiator, exports.truesmashatmo];
exports.healersphere.UPGRADES_TIER_4 = [exports.dualist, exports.supportsphere, exports.truehealersphere];
exports.repairsphere.UPGRADES_TIER_4 = [exports.irradiator, exports.supportsphere, exports.truerepairsphere];
exports.supportsphere.UPGRADES_TIER_5 = [exports.mettasphere];
exports.irradiator.UPGRADES_TIER_6 = [exports.mettasphere];
exports.dualist.UPGRADES_TIER_6 = [exports.mettasphere];
exports.autosmashdupe.UPGRADES_TIER_7 = [exports.smashdupedrive];
//Onset Classes
exports.Onset.UPGRADES_TIER_1 = [
  exports.Tent,
  exports.Veil,
  exports.Duo,
  exports.medical,
  exports.Quake,
  exports.repeater,
  //7
]
exports.Onset.UPGRADES_TIER_2 = [
  exports.Grinder,
  //1
]
exports.Quake.UPGRADES_TIER_2 = [
  exports.Rumble
  //1
]
exports.Grinder.UPGRADES_TIER_3 = [
  exports.demolisher,
  exports.Comet,
  exports.interloper,
  exports.aurora,
  exports.Orbit,
  exports.TurretedGrinder,
  //4
]
exports.Duo.UPGRADES_TIER_3 = [
  exports.Trio,
  //1
]
exports.repeater.UPGRADES_TIER_2 = [
  exports.Counter,
  //1
]
exports.Veil.UPGRADES_TIER_2 = [
  exports.Containment,
  exports.Capsule,
  //2
]
exports.Tent.UPGRADES_TIER_2 = [
  exports.Post,
  exports.Caltrop,
  //2
]
exports.Caltrop.UPGRADES_TIER_3 = [
  exports.Deviser,
  //2
]
exports.Post.UPGRADES_TIER_3 = [
  exports.citadel,
  //1
]
